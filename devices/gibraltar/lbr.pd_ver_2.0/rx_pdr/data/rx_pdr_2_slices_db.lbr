$block{rx_pdr_2_slices} = {
  Defines_db => "Z:\\leaba_reg_db_example\\defines.v",
  ProjectName => "Gibraltar",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    SliceInterruptRegister0Summary => { #Structure Type: RegField;
      Name => "SliceInterruptRegister0Summary",
      RegMem => "RegField",
      Description => "When this bit is set, SliceInterruptRegister0 has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
    SliceInterruptRegister1Summary => { #Structure Type: RegField;
      Name => "SliceInterruptRegister1Summary",
      RegMem => "RegField",
      Description => "When this bit is set, SliceInterruptRegister1 has asserted interrupt",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt test register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "17",
    Type => "Config",
    MulticastBitmapDb0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "MulticastBitmapDb0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    MulticastBitmapDb1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "MulticastBitmapDb1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DspLookupTableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DspLookupTableEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PdMemory0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "PdMemory0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PdMemory1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "PdMemory1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    FeBroadcastBmpEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "FeBroadcastBmpEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    FeRepResReqFifo0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "FeRepResReqFifo0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    FeRepResReqFifo1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "FeRepResReqFifo1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RxRepQueues0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RxRepQueues0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RxRepQueues1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RxRepQueues1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    FrtTableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "FrtTableEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    FeUcLinkBundleDescTable0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "FeUcLinkBundleDescTable0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    FeUcLinkBundleDescTable1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "FeUcLinkBundleDescTable1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    UcPipeOutFifo0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "UcPipeOutFifo0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    UcPipeOutFifo1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "UcPipeOutFifo1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    McPipeOutFifo0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "McPipeOutFifo0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    McPipeOutFifo1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "McPipeOutFifo1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "17",
    Type => "Config",
    MulticastBitmapDb0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "MulticastBitmapDb0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    MulticastBitmapDb1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "MulticastBitmapDb1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DspLookupTableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DspLookupTableEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PdMemory0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "PdMemory0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PdMemory1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "PdMemory1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    FeBroadcastBmpEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "FeBroadcastBmpEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    FeRepResReqFifo0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "FeRepResReqFifo0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    FeRepResReqFifo1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "FeRepResReqFifo1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RxRepQueues0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RxRepQueues0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RxRepQueues1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RxRepQueues1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    FrtTableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "FrtTableEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    FeUcLinkBundleDescTable0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "FeUcLinkBundleDescTable0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    FeUcLinkBundleDescTable1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "FeUcLinkBundleDescTable1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    UcPipeOutFifo0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "UcPipeOutFifo0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    UcPipeOutFifo1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "UcPipeOutFifo1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    McPipeOutFifo0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "McPipeOutFifo0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    McPipeOutFifo1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "McPipeOutFifo1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInitiateRegister",
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "17",
    Type => "Config",
    MulticastBitmapDb0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "MulticastBitmapDb0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    MulticastBitmapDb1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "MulticastBitmapDb1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DspLookupTableEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DspLookupTableEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PdMemory0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "PdMemory0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PdMemory1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "PdMemory1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    FeBroadcastBmpEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "FeBroadcastBmpEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    FeRepResReqFifo0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "FeRepResReqFifo0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    FeRepResReqFifo1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "FeRepResReqFifo1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RxRepQueues0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RxRepQueues0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RxRepQueues1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RxRepQueues1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    FrtTableEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "FrtTableEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    FeUcLinkBundleDescTable0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "FeUcLinkBundleDescTable0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    FeUcLinkBundleDescTable1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "FeUcLinkBundleDescTable1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    UcPipeOutFifo0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "UcPipeOutFifo0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    UcPipeOutFifo1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "UcPipeOutFifo1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    McPipeOutFifo0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "McPipeOutFifo0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    McPipeOutFifo1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "McPipeOutFifo1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInitiateRegister",
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "17",
    Type => "Config",
    MulticastBitmapDb0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "MulticastBitmapDb0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    MulticastBitmapDb1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "MulticastBitmapDb1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DspLookupTableEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DspLookupTableEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PdMemory0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "PdMemory0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PdMemory1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "PdMemory1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    FeBroadcastBmpEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "FeBroadcastBmpEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    FeRepResReqFifo0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "FeRepResReqFifo0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    FeRepResReqFifo1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "FeRepResReqFifo1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RxRepQueues0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RxRepQueues0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RxRepQueues1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RxRepQueues1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    FrtTableEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "FrtTableEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    FeUcLinkBundleDescTable0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "FeUcLinkBundleDescTable0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    FeUcLinkBundleDescTable1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "FeUcLinkBundleDescTable1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    UcPipeOutFifo0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "UcPipeOutFifo0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    UcPipeOutFifo1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "UcPipeOutFifo1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    McPipeOutFifo0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "McPipeOutFifo0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    McPipeOutFifo1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "McPipeOutFifo1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "17",
    Type => "ReadOnly",
    MulticastBitmapDb0ErrInt => { #Structure Type: RegField;
      Name => "MulticastBitmapDb0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    MulticastBitmapDb1ErrInt => { #Structure Type: RegField;
      Name => "MulticastBitmapDb1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    DspLookupTableErrInt => { #Structure Type: RegField;
      Name => "DspLookupTableErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    PdMemory0ErrInt => { #Structure Type: RegField;
      Name => "PdMemory0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    PdMemory1ErrInt => { #Structure Type: RegField;
      Name => "PdMemory1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    FeBroadcastBmpErrInt => { #Structure Type: RegField;
      Name => "FeBroadcastBmpErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    FeRepResReqFifo0ErrInt => { #Structure Type: RegField;
      Name => "FeRepResReqFifo0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    FeRepResReqFifo1ErrInt => { #Structure Type: RegField;
      Name => "FeRepResReqFifo1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    RxRepQueues0ErrInt => { #Structure Type: RegField;
      Name => "RxRepQueues0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    RxRepQueues1ErrInt => { #Structure Type: RegField;
      Name => "RxRepQueues1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    FrtTableErrInt => { #Structure Type: RegField;
      Name => "FrtTableErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    FeUcLinkBundleDescTable0ErrInt => { #Structure Type: RegField;
      Name => "FeUcLinkBundleDescTable0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
    FeUcLinkBundleDescTable1ErrInt => { #Structure Type: RegField;
      Name => "FeUcLinkBundleDescTable1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "12",
      Type => "Status",
      UsedBy => "SER",
    },
    UcPipeOutFifo0ErrInt => { #Structure Type: RegField;
      Name => "UcPipeOutFifo0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "13",
      Type => "Status",
      UsedBy => "SER",
    },
    UcPipeOutFifo1ErrInt => { #Structure Type: RegField;
      Name => "UcPipeOutFifo1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "14",
      Type => "Status",
      UsedBy => "SER",
    },
    McPipeOutFifo0ErrInt => { #Structure Type: RegField;
      Name => "McPipeOutFifo0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "15",
      Type => "Status",
      UsedBy => "SER",
    },
    McPipeOutFifo1ErrInt => { #Structure Type: RegField;
      Name => "McPipeOutFifo1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "16",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "15",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "13",
      Position => "12:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "14:13",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "6",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "5",
      Position => "4:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrDebug",
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_1bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrDebug",
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_2bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "73", # Excel Formula: =calc_reg_width(E25:E53,F53)
    Type => "Config",
    SACR1P_RME => { #Structure Type: RegField;
      Name => "SACR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACR1P_RM => { #Structure Type: RegField;
      Name => "SACR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "4:1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RME => { #Structure Type: RegField;
      Name => "SACU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RM => { #Structure Type: RegField;
      Name => "SACU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "9:6", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RME => { #Structure Type: RegField;
      Name => "SADC1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RM => { #Structure Type: RegField;
      Name => "SADC1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEA => { #Structure Type: RegField;
      Name => "SADR2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMA => { #Structure Type: RegField;
      Name => "SADR2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "19:16", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEB => { #Structure Type: RegField;
      Name => "SADR2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMB => { #Structure Type: RegField;
      Name => "SADR2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "24:21", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEA => { #Structure Type: RegField;
      Name => "SADS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "25", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMA => { #Structure Type: RegField;
      Name => "SADS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "29:26", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEB => { #Structure Type: RegField;
      Name => "SADS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMB => { #Structure Type: RegField;
      Name => "SADS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "34:31", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RME => { #Structure Type: RegField;
      Name => "SASR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "35", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RM => { #Structure Type: RegField;
      Name => "SASR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "39:36", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RME => { #Structure Type: RegField;
      Name => "SASS1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RM => { #Structure Type: RegField;
      Name => "SASS1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "44:41", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEA => { #Structure Type: RegField;
      Name => "SASS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "45", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMA => { #Structure Type: RegField;
      Name => "SASS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "49:46", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEB => { #Structure Type: RegField;
      Name => "SASS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "50", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMB => { #Structure Type: RegField;
      Name => "SASS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "54:51", # Excel Formula: =calc_position(F45,E46)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RME => { #Structure Type: RegField;
      Name => "SASU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F46,E47)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RM => { #Structure Type: RegField;
      Name => "SASU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "59:56", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RME => { #Structure Type: RegField;
      Name => "SADU1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RM => { #Structure Type: RegField;
      Name => "SADU1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "64:61", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RA => { #Structure Type: RegField;
      Name => "SADS2P_RA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Assist for Dual port",
      Width => "2",
      Position => "66:65", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_WA => { #Structure Type: RegField;
      Name => "SADU1P_WA",
      RegMem => "RegField",
      Description => "Write-Assist configuration for the SP SADU compiler",
      Width => "3",
      Position => "69:67", # Excel Formula: =calc_position(F51,E52)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "d5",
    },
    SADU1P_WPULSE => { #Structure Type: RegField;
      Name => "SADU1P_WPULSE",
      RegMem => "RegField",
      Description => "Write-Assist-Pulse configuration for the SP SADU compiler",
      Width => "3",
      Position => "72:70", # Excel Formula: =calc_position(F52,E53)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E55:E55,F55)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F54,E55,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C54,A54,G54)
    Description => "Spare register",
    Width => "128", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "Spare register ",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C56,A56,G56)
    Description => "PMRO controller configuration",
    Width => "32", # Excel Formula: =calc_reg_width(E59:E63,F63)
    Type => "Config",
    PmroRstn => { #Structure Type: RegField;
      Name => "PmroRstn",
      RegMem => "RegField",
      Description => "PMRO reset, active low",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F58,E59,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroConfigEn => { #Structure Type: RegField;
      Name => "PmroConfigEn",
      RegMem => "RegField",
      Description => "Enable pmro configuration, when equals to 0 configurations are locked",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroStart => { #Structure Type: RegField;
      Name => "PmroStart",
      RegMem => "RegField",
      Description => "Start the pmro operation",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F60,E61)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroRingEn => { #Structure Type: RegField;
      Name => "PmroRingEn",
      RegMem => "RegField",
      Description => "Determines which PMRO ring to activate, should be configured as one hot",
      Width => "7",
      Position => "9:3", # Excel Formula: =calc_position(F61,E62)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroCntPeriod => { #Structure Type: RegField;
      Name => "PmroCntPeriod",
      RegMem => "RegField",
      Description => "Number of core clock cycles on which PMRO is measured",
      Width => "22",
      Position => "31:10", # Excel Formula: =calc_position(F62,E63)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "h3FFFFF",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C58,A58,G58)
    Description => "PMRO status configuration",
    Width => "23", # Excel Formula: =calc_reg_width(E65:E66,F66)
    Type => "ReadOnly",
    PmroCountOut => { #Structure Type: RegField;
      Name => "PmroCountOut",
      RegMem => "RegField",
      Description => "The ring oscilator counter value.",
      Width => "22",
      Position => "21:0", # Excel Formula: =calc_position(F64,E65,TRUE)
      Type => "Status",
      UsedBy => "pmro",
    },
    PmroDone => { #Structure Type: RegField;
      Name => "PmroDone",
      RegMem => "RegField",
      Description => "Pmro operation done, PmroCountOut is valid.",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F65,E66)
      Type => "Status",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C64,A64,G64)
    Description => "Mirror Bus configurations",
    Width => "11", # Excel Formula: =calc_reg_width(E68:E69,F69)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "Enable Mirror Bus",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "Mirror Bus selector",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C67,A67,G67)
    Description => "Mirror Bus status result",
    Width => "32", # Excel Formula: =calc_reg_width(E71:E71,F71)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "Mirror Bus status result",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F70,E71,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C70,A70,G70)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E73:E73,F73)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F72,E73,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  StatusRegister => { #Structure Type: Reg;
    Name => "StatusRegister",
    RegMem => "Reg",
    Address => "100",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "ReadOnly",
    InitDone => { #Structure Type: RegField;
      Name => "InitDone",
      RegMem => "RegField",
      Description => "Indication that the rx_pdr 2 slices completed the initialization process.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  SliceInterruptRegister0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 23;
    Name => "SliceInterruptRegister[2]",
    RegMem => "Reg",
    Address => "101", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0TrLcSaMcPipeEmdbEntryNotFound => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]TrLcSaMcPipeEmdbEntryNotFound",
      RegMem => "RegField",
      Description => "Indicates that when accessing the EMDB - received not-found from the exact match.
This interrupt indicates a miss configuration of the EMDB.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
  },
  SliceInterruptRegister1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 23;
    Name => "SliceInterruptRegister[2]",
    RegMem => "Reg",
    Address => "102",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1TrLcSaMcPipeEmdbEntryNotFound => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]TrLcSaMcPipeEmdbEntryNotFound",
      RegMem => "RegField",
      Description => "Indicates that when accessing the EMDB - received not-found from the exact match.
This interrupt indicates a miss configuration of the EMDB.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
  },
  SliceInterruptRegister0Mask => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 23; Skip Register;
    Name => "SliceInterruptRegister[2]Mask",
    RegMem => "Reg",
    Address => "103",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0TrLcSaMcPipeEmdbEntryNotFoundMask => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]TrLcSaMcPipeEmdbEntryNotFoundMask",
      RegMem => "RegField",
      Description => "This field masks Slice[n]TrLcSaMcPipeEmdbEntryNotFound interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  SliceInterruptRegister1Mask => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 23; Skip Register;
    Name => "SliceInterruptRegister[2]Mask",
    RegMem => "Reg",
    Address => "104",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1TrLcSaMcPipeEmdbEntryNotFoundMask => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]TrLcSaMcPipeEmdbEntryNotFoundMask",
      RegMem => "RegField",
      Description => "This field masks Slice[n]TrLcSaMcPipeEmdbEntryNotFound interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  SliceInterruptRegister0Test => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 23; Skip Register;
    Name => "SliceInterruptRegister[2]Test",
    RegMem => "Reg",
    Address => "105",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0TrLcSaMcPipeEmdbEntryNotFoundTest => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]TrLcSaMcPipeEmdbEntryNotFoundTest",
      RegMem => "RegField",
      Description => "This field tests Slice[n]TrLcSaMcPipeEmdbEntryNotFound interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  SliceInterruptRegister1Test => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 23; Skip Register;
    Name => "SliceInterruptRegister[2]Test",
    RegMem => "Reg",
    Address => "106",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1TrLcSaMcPipeEmdbEntryNotFoundTest => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]TrLcSaMcPipeEmdbEntryNotFoundTest",
      RegMem => "RegField",
      Description => "This field tests Slice[n]TrLcSaMcPipeEmdbEntryNotFound interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  RxrqsConfigurations0 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 20;
    Name => "RxrqsConfigurations[4]",
    RegMem => "Reg",
    Address => "107", # Excel Formula: =calc_reg_address(C9,A9,G9)
    Description => "The RXRQs are 4 FIFOs that hold PDs before the replication process.
See Slice[n]RxrqSelectionMode configuration for more details.
All used RXRQs should have at least 2 entries. (since RxrqAlmFullTh equals 1)",
    Width => "38", # Excel Formula: =calc_reg_width(E12:E15,F15)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "4",
    ArrayIndex => "0",
    Slice0Rxrq0FifoSize => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 11;
      Name => "Slice0Rxrq[n]FifoSize",
      RegMem => "RegField",
      Description => "The size of RXRQ FIFOs",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F11,E12,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h80",
    },
    Slice0Rxrq0StartAddr => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 11;
      Name => "Slice0Rxrq[n]StartAddr",
      RegMem => "RegField",
      Description => "The start address of Rxrq FIFOs",
      Width => "9",
      Position => "18:10", # Excel Formula: =calc_position(F12,E13)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "(instance == 0) ? 0 :
(instance == 1) ? 128 :
(instance == 2) ? 256 : 384",
      DefaultValueArray => "h0,h80,h100,h180",
    },
    Slice1Rxrq0FifoSize => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 11;
      Name => "Slice1Rxrq[n]FifoSize",
      RegMem => "RegField",
      Description => "The size of RXRQ FIFOs",
      Width => "10",
      Position => "28:19", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h80",
    },
    Slice1Rxrq0StartAddr => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 11;
      Name => "Slice1Rxrq[n]StartAddr",
      RegMem => "RegField",
      Description => "The start address of Rxrq FIFOs",
      Width => "9",
      Position => "37:29", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "(instance == 0) ? 0 :
(instance == 1) ? 128 :
(instance == 2) ? 256 : 384",
      DefaultValueArray => "h0,h80,h100,h180",
    },
  },
  RxrqsConfigurations1 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 20;
    Name => "RxrqsConfigurations[4]",
    RegMem => "Reg",
    Address => "108",
    Description => "The RXRQs are 4 FIFOs that hold PDs before the replication process.
See Slice[n]RxrqSelectionMode configuration for more details.
All used RXRQs should have at least 2 entries. (since RxrqAlmFullTh equals 1)",
    Width => "38", # Excel Formula: =calc_reg_width(E12:E15,F15)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "4",
    ArrayIndex => "1",
    Slice0Rxrq1FifoSize => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 11;
      Name => "Slice0Rxrq[n]FifoSize",
      RegMem => "RegField",
      Description => "The size of RXRQ FIFOs",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F11,E12,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h80",
    },
    Slice0Rxrq1StartAddr => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 11;
      Name => "Slice0Rxrq[n]StartAddr",
      RegMem => "RegField",
      Description => "The start address of Rxrq FIFOs",
      Width => "9",
      Position => "18:10", # Excel Formula: =calc_position(F12,E13)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h80",
      InitValueAllModes => "(instance == 0) ? 0 :
(instance == 1) ? 128 :
(instance == 2) ? 256 : 384",
      DefaultValueArray => "h0,h80,h100,h180",
    },
    Slice1Rxrq1FifoSize => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 11;
      Name => "Slice1Rxrq[n]FifoSize",
      RegMem => "RegField",
      Description => "The size of RXRQ FIFOs",
      Width => "10",
      Position => "28:19", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h80",
    },
    Slice1Rxrq1StartAddr => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 11;
      Name => "Slice1Rxrq[n]StartAddr",
      RegMem => "RegField",
      Description => "The start address of Rxrq FIFOs",
      Width => "9",
      Position => "37:29", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h80",
      InitValueAllModes => "(instance == 0) ? 0 :
(instance == 1) ? 128 :
(instance == 2) ? 256 : 384",
      DefaultValueArray => "h0,h80,h100,h180",
    },
  },
  RxrqsConfigurations2 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 20;
    Name => "RxrqsConfigurations[4]",
    RegMem => "Reg",
    Address => "109",
    Description => "The RXRQs are 4 FIFOs that hold PDs before the replication process.
See Slice[n]RxrqSelectionMode configuration for more details.
All used RXRQs should have at least 2 entries. (since RxrqAlmFullTh equals 1)",
    Width => "38", # Excel Formula: =calc_reg_width(E12:E15,F15)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "4",
    ArrayIndex => "2",
    Slice0Rxrq2FifoSize => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 11;
      Name => "Slice0Rxrq[n]FifoSize",
      RegMem => "RegField",
      Description => "The size of RXRQ FIFOs",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F11,E12,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h80",
    },
    Slice0Rxrq2StartAddr => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 11;
      Name => "Slice0Rxrq[n]StartAddr",
      RegMem => "RegField",
      Description => "The start address of Rxrq FIFOs",
      Width => "9",
      Position => "18:10", # Excel Formula: =calc_position(F12,E13)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h100",
      InitValueAllModes => "(instance == 0) ? 0 :
(instance == 1) ? 128 :
(instance == 2) ? 256 : 384",
      DefaultValueArray => "h0,h80,h100,h180",
    },
    Slice1Rxrq2FifoSize => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 11;
      Name => "Slice1Rxrq[n]FifoSize",
      RegMem => "RegField",
      Description => "The size of RXRQ FIFOs",
      Width => "10",
      Position => "28:19", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h80",
    },
    Slice1Rxrq2StartAddr => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 11;
      Name => "Slice1Rxrq[n]StartAddr",
      RegMem => "RegField",
      Description => "The start address of Rxrq FIFOs",
      Width => "9",
      Position => "37:29", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h100",
      InitValueAllModes => "(instance == 0) ? 0 :
(instance == 1) ? 128 :
(instance == 2) ? 256 : 384",
      DefaultValueArray => "h0,h80,h100,h180",
    },
  },
  RxrqsConfigurations3 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 20;
    Name => "RxrqsConfigurations[4]",
    RegMem => "Reg",
    Address => "10A",
    Description => "The RXRQs are 4 FIFOs that hold PDs before the replication process.
See Slice[n]RxrqSelectionMode configuration for more details.
All used RXRQs should have at least 2 entries. (since RxrqAlmFullTh equals 1)",
    Width => "38", # Excel Formula: =calc_reg_width(E12:E15,F15)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "4",
    ArrayIndex => "3",
    Slice0Rxrq3FifoSize => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 11;
      Name => "Slice0Rxrq[n]FifoSize",
      RegMem => "RegField",
      Description => "The size of RXRQ FIFOs",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F11,E12,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h80",
    },
    Slice0Rxrq3StartAddr => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 11;
      Name => "Slice0Rxrq[n]StartAddr",
      RegMem => "RegField",
      Description => "The start address of Rxrq FIFOs",
      Width => "9",
      Position => "18:10", # Excel Formula: =calc_position(F12,E13)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h180",
      InitValueAllModes => "(instance == 0) ? 0 :
(instance == 1) ? 128 :
(instance == 2) ? 256 : 384",
      DefaultValueArray => "h0,h80,h100,h180",
    },
    Slice1Rxrq3FifoSize => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 11;
      Name => "Slice1Rxrq[n]FifoSize",
      RegMem => "RegField",
      Description => "The size of RXRQ FIFOs",
      Width => "10",
      Position => "28:19", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h80",
    },
    Slice1Rxrq3StartAddr => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 11;
      Name => "Slice1Rxrq[n]StartAddr",
      RegMem => "RegField",
      Description => "The start address of Rxrq FIFOs",
      Width => "9",
      Position => "37:29", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h180",
      InitValueAllModes => "(instance == 0) ? 0 :
(instance == 1) ? 128 :
(instance == 2) ? 256 : 384",
      DefaultValueArray => "h0,h80,h100,h180",
    },
  },
  RxrqsAlmFullConfigurations0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 27;
    Name => "RxrqsAlmFullConfigurations[2]",
    RegMem => "Reg",
    Address => "10B", # Excel Formula: =calc_reg_address(C11,A11,G11)
    Width => "10", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0RxrqAlmFullTh => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RxrqAlmFullTh",
      RegMem => "RegField",
      Description => "Almost full threshold to stop input to RXRQs - when an RXRQ has this many entries left it indicates that it is not ready to receive new data.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d1",
    },
  },
  RxrqsAlmFullConfigurations1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 27;
    Name => "RxrqsAlmFullConfigurations[2]",
    RegMem => "Reg",
    Address => "10C",
    Width => "10", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1RxrqAlmFullTh => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RxrqAlmFullTh",
      RegMem => "RegField",
      Description => "Almost full threshold to stop input to RXRQs - when an RXRQ has this many entries left it indicates that it is not ready to receive new data.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d1",
    },
  },
  IbMirrorConfigurations0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 23;
    Name => "IbMirrorConfigurations[2]",
    RegMem => "Reg",
    Address => "10D", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Width => "42", # Excel Formula: =calc_reg_width(E19:E26,F26)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0IbMirrorMcUcdvValue => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]IbMirrorMcUcdvValue",
      RegMem => "RegField",
      Description => "Configures the UCDV that will be set for IB mirror MC copies",
      Width => "14",
      Position => "13:0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d50",
    },
    Slice0MirrorToSourceCmd0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToSourceCmd0",
      RegMem => "RegField",
      Description => "Defines one of the the IB mirror commands that will be defined as mirror to source",
      Width => "5",
      Position => "18:14", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice0MirrorToSourceCmd0Enable => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToSourceCmd0Enable",
      RegMem => "RegField",
      Description => "If set - the IB mirror to source command 0 is enabled for source mirroring. If disabled - the command will be treated as regular mirroring",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice0MirrorToSourceCmd1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToSourceCmd1",
      RegMem => "RegField",
      Description => "Defines one of the the IB mirror commands that will be defined as mirror to source",
      Width => "5",
      Position => "24:20", # Excel Formula: =calc_position(F21,E22)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
    },
    Slice0MirrorToSourceCmd1Enable => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToSourceCmd1Enable",
      RegMem => "RegField",
      Description => "If set - the IB mirror to source command 1 is enabled for source mirroring. If disabled - the command will be treated as regular mirroring",
      Width => "1",
      Position => "25", # Excel Formula: =calc_position(F22,E23)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice0MirrorToSourceCmd2 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToSourceCmd2",
      RegMem => "RegField",
      Description => "Defines one of the the IB mirror commands that will be defined as mirror to source",
      Width => "5",
      Position => "30:26", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2",
    },
    Slice0MirrorToSourceCmd2Enable => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToSourceCmd2Enable",
      RegMem => "RegField",
      Description => "If set - the IB mirror to source command 2 is enabled for source mirroring. If disabled - the command will be treated as regular mirroring",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F24,E25)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice0Rxrq0ThrForIbmCmdCancellation => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Rxrq0ThrForIbmCmdCancellation",
      RegMem => "RegField",
      Description => "Define the threshold that when rxrq0 fill level crosses  - the IBM commands in the FIFO are cancelled.
This configuration is relevant for IB mirror commands that are marked as IgnoreInRxrqSel.",
      Width => "10",
      Position => "41:32", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h70",
    },
  },
  IbMirrorConfigurations1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 23;
    Name => "IbMirrorConfigurations[2]",
    RegMem => "Reg",
    Address => "10E",
    Width => "42", # Excel Formula: =calc_reg_width(E19:E26,F26)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1IbMirrorMcUcdvValue => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]IbMirrorMcUcdvValue",
      RegMem => "RegField",
      Description => "Configures the UCDV that will be set for IB mirror MC copies",
      Width => "14",
      Position => "13:0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d50",
    },
    Slice1MirrorToSourceCmd0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToSourceCmd0",
      RegMem => "RegField",
      Description => "Defines one of the the IB mirror commands that will be defined as mirror to source",
      Width => "5",
      Position => "18:14", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice1MirrorToSourceCmd0Enable => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToSourceCmd0Enable",
      RegMem => "RegField",
      Description => "If set - the IB mirror to source command 0 is enabled for source mirroring. If disabled - the command will be treated as regular mirroring",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice1MirrorToSourceCmd1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToSourceCmd1",
      RegMem => "RegField",
      Description => "Defines one of the the IB mirror commands that will be defined as mirror to source",
      Width => "5",
      Position => "24:20", # Excel Formula: =calc_position(F21,E22)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
    },
    Slice1MirrorToSourceCmd1Enable => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToSourceCmd1Enable",
      RegMem => "RegField",
      Description => "If set - the IB mirror to source command 1 is enabled for source mirroring. If disabled - the command will be treated as regular mirroring",
      Width => "1",
      Position => "25", # Excel Formula: =calc_position(F22,E23)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice1MirrorToSourceCmd2 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToSourceCmd2",
      RegMem => "RegField",
      Description => "Defines one of the the IB mirror commands that will be defined as mirror to source",
      Width => "5",
      Position => "30:26", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2",
    },
    Slice1MirrorToSourceCmd2Enable => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToSourceCmd2Enable",
      RegMem => "RegField",
      Description => "If set - the IB mirror to source command 2 is enabled for source mirroring. If disabled - the command will be treated as regular mirroring",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F24,E25)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice1Rxrq0ThrForIbmCmdCancellation => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Rxrq0ThrForIbmCmdCancellation",
      RegMem => "RegField",
      Description => "Define the threshold that when rxrq0 fill level crosses  - the IBM commands in the FIFO are cancelled.
This configuration is relevant for IB mirror commands that are marked as IgnoreInRxrqSel.",
      Width => "10",
      Position => "41:32", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h70",
    },
  },
  McBmpConfigurations0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 20;
    Name => "McBmpConfigurations[2]",
    RegMem => "Reg",
    Address => "10F", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Width => "20", # Excel Formula: =calc_reg_width(E28:E29,F29)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0McBmpMaskBitmap => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McBmpMaskBitmap",
      RegMem => "RegField",
      Description => "This vector is used to mask the results of the MC BMP table bitmap. When a bit is set to 0 the corrosponding TX slice is masked.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F27,E28,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h3F",
    },
    Slice0BmpUcdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BmpUcdv",
      RegMem => "RegField",
      Description => "The UCDV set to the BMP copies sent to the NW slices
A value of 0 is illegal configuration",
      Width => "14",
      Position => "19:6", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d2000",
    },
  },
  McBmpConfigurations1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 20;
    Name => "McBmpConfigurations[2]",
    RegMem => "Reg",
    Address => "110",
    Width => "20", # Excel Formula: =calc_reg_width(E28:E29,F29)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1McBmpMaskBitmap => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McBmpMaskBitmap",
      RegMem => "RegField",
      Description => "This vector is used to mask the results of the MC BMP table bitmap. When a bit is set to 0 the corrosponding TX slice is masked.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F27,E28,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h3F",
    },
    Slice1BmpUcdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BmpUcdv",
      RegMem => "RegField",
      Description => "The UCDV set to the BMP copies sent to the NW slices
A value of 0 is illegal configuration",
      Width => "14",
      Position => "19:6", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d2000",
    },
  },
  SliceGlobalConfiguration0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 25;
    Name => "SliceGlobalConfiguration[2]",
    RegMem => "Reg",
    Address => "111", # Excel Formula: =calc_reg_address(C27,A27,G27)
    Width => "122", # Excel Formula: =calc_reg_width(E31:E56,F56)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0DropVoqNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DropVoqNumber",
      RegMem => "RegField",
      Description => "Indicates the VOQ number used for dropped packets",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hffff",
    },
    Slice0CounterEDropVoqNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CounterEDropVoqNumber",
      RegMem => "RegField",
      Description => "When packet should be dropped due to counter E in the RXPDR, the VOQ number will be set to this configuration - this will enable the TS mon to distinguish between dropped packets that its TS should not be used (due to out of order in the RXPDR) to dropped packets that its TS should be used.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hfffe",
    },
    Slice0DisableTrap => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DisableTrap",
      RegMem => "RegField",
      Description => "0 - Trap enabled - Stamp trap code on CUD in case of relevant drop
1 - Trap disabled - use invalid CUD for drops - should be used in fabric slices",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice0PlbMode => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]PlbMode",
      RegMem => "RegField",
      Description => "0 - SN PLB
1 - TS PLB",
      Width => "1",
      Position => "33", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
    },
    Slice0DeviceType => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DeviceType",
      RegMem => "RegField",
      Description => "Indicates the mode of the device:
2'h0 - LC
2'h1 - TR
2'h2 - SA
2'h3 - FE",
      Width => "2",
      Position => "35:34", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "REP_RES,RXRQ,CACHE,UC_PIPE,MC_PIPE,REQ_FIFO,SHR_TBL",
      DefaultValue => "h0",
      Comments => "This configuration was dulicated beause it oushes many cells",
      InitValueSa => "2",
      InitValueLcNwk => "0",
      InitValueLcFab => "0",
      InitValueFe => "3",
    },
    Slice0DisableCache => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DisableCache",
      RegMem => "RegField",
      Description => "The RXPDR manages an 8 entries cache to the MC EMDB/FE bmp tables.
When setting this configuration to 1 - the cache access is disabled.",
      Width => "1",
      Position => "36", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice0RxrqsArbMode => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RxrqsArbMode",
      RegMem => "RegField",
      Description => "Configures the RXRQs arbitration scheme:
0 - SP(Q1, WRR(Q2,Q3), Q4)
Relevant to NW slice and TOR FB slice.
1 - WRR(Q1, Q2,SP(Q3,Q4)))
Relevant to LC FB slice + FE",
      Width => "1",
      Position => "37", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice0RxrqsArbWrr0Cl0Weight => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RxrqsArbWrr0Cl0Weight",
      RegMem => "RegField",
      Description => "Configures the weight of client 0 in the WRR arbiter.
In mode 0 - No client is connected
In Mode 1 - SP(Q2,Q3)
High weight means large portion of the BW
Minimal configured weight should be 1",
      Width => "5",
      Position => "42:38", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1f",
    },
    Slice0RxrqsArbWrr0Cl1Weight => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RxrqsArbWrr0Cl1Weight",
      RegMem => "RegField",
      Description => "Configures the weight of client 0 in the WRR arbiter.
In mode 0 - Q1
In Mode 1 - Q1
High weight means large portion of the BW
Minimal configured weight should be 1",
      Width => "5",
      Position => "47:43", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1f",
      InitValueSa => "31",
      InitValueLcNwk => "31",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice0RxrqsArbWrr0Cl2Weight => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RxrqsArbWrr0Cl2Weight",
      RegMem => "RegField",
      Description => "Configures the weight of client 0 in the WRR arbiter.
In mode 0 - Q2
In Mode 1 - Q0
High weight means large portion of the BW
Minimal configured weight should be 1",
      Width => "5",
      Position => "52:48", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1f",
    },
    Slice0Mode => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Mode",
      RegMem => "RegField",
      Description => "0  // Linecard mode CRF TS network slice
1  // Linecard mode CRF SN network slice
2  // Linecard mode CRF TS fabric slice
3  // Linecard mode CRF SN fabric slice
4  // TOR mode network slice with SLB
5  // TOR mode network slice with PLB --> not supported
6  // TOR mode fabric slice with SLB
7  // TOR mode fabric slice with PLB --> not supported
8  // FE mode with TS
9  // FE mode with SN
10 // DRAM slice ",
      Width => "4",
      Position => "56:53", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
      InitValueSa => "`SLICE_MODE_SA",
      InitValueLcNwk => "`SLICE_MODE_CRF_NWK_TS",
      InitValueLcFab => "`SLICE_MODE_CRF_FAB_TS",
      InitValueFe => "`SLICE_MODE_FE_TS",
    },
    Slice0RxrqSelectionMode => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RxrqSelectionMode",
      RegMem => "RegField",
      Description => "Indicates rxrq selection mode of the slice:
2'h0 - UC/MC mode:
             Q0 - UC with no IBM cmd
             Q1 - UC with IBM cmd
             Q2 - High Prio MC
             Q3 - Low Prio MC
2'h1 - PLB/FLB mode
             Q0 - No Replication required
             Q1 - PLB MC
             Q2 - FLB HP MC
             Q3 - FLB LP MC",
      Width => "1",
      Position => "57", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice0McCacheResetCounterVal => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McCacheResetCounterVal",
      RegMem => "RegField",
      Description => "Sets the counter value that will trigger rseseting the cache that is manged for the MC EMDB and FE MC BMP tables.
Required for data integrity.
If set to 0 - reset is disabled",
      Width => "13",
      Position => "70:58", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1FFF",
    },
    Slice0McCacheResetTrig => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McCacheResetTrig",
      RegMem => "RegField",
      Description => "When set from 0 to 1 - will trigger reseting the cache that is managed for the MC EMDB and FE MC BMP tables.
After the SW peforms changes on the data base it is recommended to trigger reset of the cache.",
      Width => "1",
      Position => "71", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice0UcPipeOutFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]UcPipeOutFifoAlmFullThr",
      RegMem => "RegField",
      Description => "The UC pipes don't support backpressure thus the FIFO should issue almost full when it has amount of entries left that is equal to the pipe latency.
This should be configured to 29 in SA/LC/TOR modes and to 31 in FE mode",
      Width => "6",
      Position => "77:72", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d31",
    },
    Slice0UcPipeOutFifoMaskThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]UcPipeOutFifoMaskThr",
      RegMem => "RegField",
      Description => "When the UC out FIFO reaches this fill level - RXRQs that are targeting the UC pipe are masked in the RXRQs arbitration. Relevnat for FE mode only.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "83:78", # Excel Formula: =calc_position(F45,E46)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d31",
    },
    Slice0McPipeOutFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McPipeOutFifoAlmFullThr",
      RegMem => "RegField",
      Description => "The thr for the MC pipe out FIFO to halt the pipes.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "89:84", # Excel Formula: =calc_position(F46,E47)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d30",
    },
    Slice0McPipeOutFifoMaskThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McPipeOutFifoMaskThr",
      RegMem => "RegField",
      Description => "When the MC out FIFO reaches this fill level - RXRQs that are targeting the MC pipe are masked in the RXRQs arbitration.",
      Width => "6",
      Position => "95:90", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d30",
    },
    Slice056FabricLinksEn => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]56FabricLinksEn",
      RegMem => "RegField",
      Description => "If set to 1 - there are 56 fabric links (2 are taken from the NW slices)",
      Width => "1",
      Position => "96", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice0OutArbMode => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]OutArbMode",
      RegMem => "RegField",
      Description => "Configures the arbitration type in the out arb between UC and MC:
0 - SP to UC traffic
1 - WFQ between UC and MC",
      Width => "1",
      Position => "97", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice0OutArbWrrUcWeight => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]OutArbWrrUcWeight",
      RegMem => "RegField",
      Description => "Configures the weight of the UC traffic in the WRR out arbiter.
High weight means large portion of the BW
Minimal configured weight should be 1",
      Width => "5",
      Position => "102:98", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1f",
    },
    Slice0OutArbWrrMcWeight => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]OutArbWrrMcWeight",
      RegMem => "RegField",
      Description => "Configures the weight of the MC traffic in the WRR out arbiter.
High weight means large portion of the BW
Minimal configured weight should be 1",
      Width => "5",
      Position => "107:103", # Excel Formula: =calc_position(F51,E52)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1f",
    },
    Slice0ReqFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ReqFifoAlmFullThr",
      RegMem => "RegField",
      Description => "The almost full thr used in the tr_lc_sa_mc pipe for the request FIFO.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "7",
      Position => "114:108", # Excel Formula: =calc_position(F52,E53)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h4",
    },
    Slice0Rxpdr2RxcgmCbtAlmFullThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2RxcgmCbtAlmFullThr",
      RegMem => "RegField",
      Description => "The almost full thr used in the rxpdr to txpdr answers.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "5",
      Position => "119:115", # Excel Formula: =calc_position(F53,E54)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h5",
    },
    Slice0RecycleMcBitmapMcidMsbOn => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RecycleMcBitmapMcidMsbOn",
      RegMem => "RegField",
      Description => "Turn the MCID's MSB on when accessing MulticastBitmapDb from recycle port
0 - Access the DB with the original MCID
1 - Access the DB with MSB of the MCID turned on",
      Width => "1",
      Position => "120", # Excel Formula: =calc_position(F54,E55)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice0MakeOneCopyWhenRxrqCrossThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MakeOneCopyWhenRxrqCrossThr",
      RegMem => "RegField",
      Description => "Whether to make one copy for packets that are evicted from RXRQ due to crossing threshold, or drop them completely
0 - Drop packet completely
1 - Make one copy and ignore the rest of the copies",
      Width => "1",
      Position => "121", # Excel Formula: =calc_position(F55,E56)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
  },
  SliceGlobalConfiguration1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 25;
    Name => "SliceGlobalConfiguration[2]",
    RegMem => "Reg",
    Address => "112",
    Width => "122", # Excel Formula: =calc_reg_width(E31:E56,F56)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1DropVoqNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DropVoqNumber",
      RegMem => "RegField",
      Description => "Indicates the VOQ number used for dropped packets",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hffff",
    },
    Slice1CounterEDropVoqNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CounterEDropVoqNumber",
      RegMem => "RegField",
      Description => "When packet should be dropped due to counter E in the RXPDR, the VOQ number will be set to this configuration - this will enable the TS mon to distinguish between dropped packets that its TS should not be used (due to out of order in the RXPDR) to dropped packets that its TS should be used.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hfffe",
    },
    Slice1DisableTrap => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DisableTrap",
      RegMem => "RegField",
      Description => "0 - Trap enabled - Stamp trap code on CUD in case of relevant drop
1 - Trap disabled - use invalid CUD for drops - should be used in fabric slices",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice1PlbMode => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]PlbMode",
      RegMem => "RegField",
      Description => "0 - SN PLB
1 - TS PLB",
      Width => "1",
      Position => "33", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
    },
    Slice1DeviceType => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DeviceType",
      RegMem => "RegField",
      Description => "Indicates the mode of the device:
2'h0 - LC
2'h1 - TR
2'h2 - SA
2'h3 - FE",
      Width => "2",
      Position => "35:34", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "REP_RES,RXRQ,CACHE,UC_PIPE,MC_PIPE,REQ_FIFO,SHR_TBL",
      DefaultValue => "h0",
      Comments => "This configuration was dulicated beause it oushes many cells",
      InitValueSa => "2",
      InitValueLcNwk => "0",
      InitValueLcFab => "0",
      InitValueFe => "3",
    },
    Slice1DisableCache => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DisableCache",
      RegMem => "RegField",
      Description => "The RXPDR manages an 8 entries cache to the MC EMDB/FE bmp tables.
When setting this configuration to 1 - the cache access is disabled.",
      Width => "1",
      Position => "36", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice1RxrqsArbMode => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RxrqsArbMode",
      RegMem => "RegField",
      Description => "Configures the RXRQs arbitration scheme:
0 - SP(Q1, WRR(Q2,Q3), Q4)
Relevant to NW slice and TOR FB slice.
1 - WRR(Q1, Q2,SP(Q3,Q4)))
Relevant to LC FB slice + FE",
      Width => "1",
      Position => "37", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice1RxrqsArbWrr0Cl0Weight => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RxrqsArbWrr0Cl0Weight",
      RegMem => "RegField",
      Description => "Configures the weight of client 0 in the WRR arbiter.
In mode 0 - No client is connected
In Mode 1 - SP(Q2,Q3)
High weight means large portion of the BW
Minimal configured weight should be 1",
      Width => "5",
      Position => "42:38", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1f",
    },
    Slice1RxrqsArbWrr0Cl1Weight => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RxrqsArbWrr0Cl1Weight",
      RegMem => "RegField",
      Description => "Configures the weight of client 0 in the WRR arbiter.
In mode 0 - Q1
In Mode 1 - Q1
High weight means large portion of the BW
Minimal configured weight should be 1",
      Width => "5",
      Position => "47:43", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1f",
      InitValueSa => "31",
      InitValueLcNwk => "31",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice1RxrqsArbWrr0Cl2Weight => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RxrqsArbWrr0Cl2Weight",
      RegMem => "RegField",
      Description => "Configures the weight of client 0 in the WRR arbiter.
In mode 0 - Q2
In Mode 1 - Q0
High weight means large portion of the BW
Minimal configured weight should be 1",
      Width => "5",
      Position => "52:48", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1f",
    },
    Slice1Mode => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Mode",
      RegMem => "RegField",
      Description => "0  // Linecard mode CRF TS network slice
1  // Linecard mode CRF SN network slice
2  // Linecard mode CRF TS fabric slice
3  // Linecard mode CRF SN fabric slice
4  // TOR mode network slice with SLB
5  // TOR mode network slice with PLB --> not supported
6  // TOR mode fabric slice with SLB
7  // TOR mode fabric slice with PLB --> not supported
8  // FE mode with TS
9  // FE mode with SN
10 // DRAM slice ",
      Width => "4",
      Position => "56:53", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
      InitValueSa => "`SLICE_MODE_SA",
      InitValueLcNwk => "`SLICE_MODE_CRF_NWK_TS",
      InitValueLcFab => "`SLICE_MODE_CRF_FAB_TS",
      InitValueFe => "`SLICE_MODE_FE_TS",
    },
    Slice1RxrqSelectionMode => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RxrqSelectionMode",
      RegMem => "RegField",
      Description => "Indicates rxrq selection mode of the slice:
2'h0 - UC/MC mode:
             Q0 - UC with no IBM cmd
             Q1 - UC with IBM cmd
             Q2 - High Prio MC
             Q3 - Low Prio MC
2'h1 - PLB/FLB mode
             Q0 - No Replication required
             Q1 - PLB MC
             Q2 - FLB HP MC
             Q3 - FLB LP MC",
      Width => "1",
      Position => "57", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice1McCacheResetCounterVal => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McCacheResetCounterVal",
      RegMem => "RegField",
      Description => "Sets the counter value that will trigger rseseting the cache that is manged for the MC EMDB and FE MC BMP tables.
Required for data integrity.
If set to 0 - reset is disabled",
      Width => "13",
      Position => "70:58", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1FFF",
    },
    Slice1McCacheResetTrig => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McCacheResetTrig",
      RegMem => "RegField",
      Description => "When set from 0 to 1 - will trigger reseting the cache that is managed for the MC EMDB and FE MC BMP tables.
After the SW peforms changes on the data base it is recommended to trigger reset of the cache.",
      Width => "1",
      Position => "71", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice1UcPipeOutFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]UcPipeOutFifoAlmFullThr",
      RegMem => "RegField",
      Description => "The UC pipes don't support backpressure thus the FIFO should issue almost full when it has amount of entries left that is equal to the pipe latency.
This should be configured to 29 in SA/LC/TOR modes and to 31 in FE mode",
      Width => "6",
      Position => "77:72", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d31",
    },
    Slice1UcPipeOutFifoMaskThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]UcPipeOutFifoMaskThr",
      RegMem => "RegField",
      Description => "When the UC out FIFO reaches this fill level - RXRQs that are targeting the UC pipe are masked in the RXRQs arbitration. Relevnat for FE mode only.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "83:78", # Excel Formula: =calc_position(F45,E46)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d31",
    },
    Slice1McPipeOutFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McPipeOutFifoAlmFullThr",
      RegMem => "RegField",
      Description => "The thr for the MC pipe out FIFO to halt the pipes.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "89:84", # Excel Formula: =calc_position(F46,E47)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d30",
    },
    Slice1McPipeOutFifoMaskThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McPipeOutFifoMaskThr",
      RegMem => "RegField",
      Description => "When the MC out FIFO reaches this fill level - RXRQs that are targeting the MC pipe are masked in the RXRQs arbitration.",
      Width => "6",
      Position => "95:90", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d30",
    },
    Slice156FabricLinksEn => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]56FabricLinksEn",
      RegMem => "RegField",
      Description => "If set to 1 - there are 56 fabric links (2 are taken from the NW slices)",
      Width => "1",
      Position => "96", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice1OutArbMode => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]OutArbMode",
      RegMem => "RegField",
      Description => "Configures the arbitration type in the out arb between UC and MC:
0 - SP to UC traffic
1 - WFQ between UC and MC",
      Width => "1",
      Position => "97", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice1OutArbWrrUcWeight => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]OutArbWrrUcWeight",
      RegMem => "RegField",
      Description => "Configures the weight of the UC traffic in the WRR out arbiter.
High weight means large portion of the BW
Minimal configured weight should be 1",
      Width => "5",
      Position => "102:98", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1f",
    },
    Slice1OutArbWrrMcWeight => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]OutArbWrrMcWeight",
      RegMem => "RegField",
      Description => "Configures the weight of the MC traffic in the WRR out arbiter.
High weight means large portion of the BW
Minimal configured weight should be 1",
      Width => "5",
      Position => "107:103", # Excel Formula: =calc_position(F51,E52)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1f",
    },
    Slice1ReqFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ReqFifoAlmFullThr",
      RegMem => "RegField",
      Description => "The almost full thr used in the tr_lc_sa_mc pipe for the request FIFO.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "7",
      Position => "114:108", # Excel Formula: =calc_position(F52,E53)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h4",
    },
    Slice1Rxpdr2RxcgmCbtAlmFullThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2RxcgmCbtAlmFullThr",
      RegMem => "RegField",
      Description => "The almost full thr used in the rxpdr to txpdr answers.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "5",
      Position => "119:115", # Excel Formula: =calc_position(F53,E54)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h5",
    },
    Slice1RecycleMcBitmapMcidMsbOn => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RecycleMcBitmapMcidMsbOn",
      RegMem => "RegField",
      Description => "Turn the MCID's MSB on when accessing MulticastBitmapDb from recycle port
0 - Access the DB with the original MCID
1 - Access the DB with MSB of the MCID turned on",
      Width => "1",
      Position => "120", # Excel Formula: =calc_position(F54,E55)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice1MakeOneCopyWhenRxrqCrossThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MakeOneCopyWhenRxrqCrossThr",
      RegMem => "RegField",
      Description => "Whether to make one copy for packets that are evicted from RXRQ due to crossing threshold, or drop them completely
0 - Drop packet completely
1 - Make one copy and ignore the rest of the copies",
      Width => "1",
      Position => "121", # Excel Formula: =calc_position(F55,E56)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
  },
  LfsrConfiguration0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "LfsrConfiguration[2]",
    RegMem => "Reg",
    Address => "113", # Excel Formula: =calc_reg_address(C30,A30,G30)
    Width => "72", # Excel Formula: =calc_reg_width(E58:E61,F61)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0TapMode1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]TapMode1",
      RegMem => "RegField",
      Description => "Initial tap mode for the first LFSR generator",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
      InitValueAllModes => "slice_pair*2+instance",
    },
    Slice0TapMode2 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]TapMode2",
      RegMem => "RegField",
      Description => "Initial tap mode for the second LFSR generator",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F58,E59)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d1",
      InitValueAllModes => "slice_pair*2+instance+2",
    },
    Slice0Seed1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Seed1",
      RegMem => "RegField",
      Description => "Seed for the first LFSR generator",
      Width => "32",
      Position => "39:8", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hffffffff",
      InitValueAllModes => "(slice_pair*2+instance+1)*3567",
    },
    Slice0Seed2 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Seed2",
      RegMem => "RegField",
      Description => "Seed for the second LFSR generator",
      Width => "32",
      Position => "71:40", # Excel Formula: =calc_position(F60,E61)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h50505050",
      InitValueAllModes => "(slice_pair*2+instance+1)*7654",
    },
  },
  LfsrConfiguration1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "LfsrConfiguration[2]",
    RegMem => "Reg",
    Address => "114",
    Width => "72", # Excel Formula: =calc_reg_width(E58:E61,F61)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1TapMode1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]TapMode1",
      RegMem => "RegField",
      Description => "Initial tap mode for the first LFSR generator",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
      InitValueAllModes => "slice_pair*2+instance",
    },
    Slice1TapMode2 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]TapMode2",
      RegMem => "RegField",
      Description => "Initial tap mode for the second LFSR generator",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F58,E59)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d1",
      InitValueAllModes => "slice_pair*2+instance+2",
    },
    Slice1Seed1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Seed1",
      RegMem => "RegField",
      Description => "Seed for the first LFSR generator",
      Width => "32",
      Position => "39:8", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hffffffff",
      InitValueAllModes => "(slice_pair*2+instance+1)*3567",
    },
    Slice1Seed2 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Seed2",
      RegMem => "RegField",
      Description => "Seed for the second LFSR generator",
      Width => "32",
      Position => "71:40", # Excel Formula: =calc_position(F60,E61)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h50505050",
      InitValueAllModes => "(slice_pair*2+instance+1)*7654",
    },
  },
  SliceGlobalConfiguration20 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 26;
    Name => "SliceGlobalConfiguration2[2]",
    RegMem => "Reg",
    Address => "115", # Excel Formula: =calc_reg_address(C57,A57,G57)
    Width => "108", # Excel Formula: =calc_reg_width(E63:E63,F63)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0AllReachable => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]AllReachable",
      RegMem => "RegField",
      Description => "Bitmap of links that are identified as having all the devices reachable through them 
In FE - all 108 bits are relevant
In LC - the 57 LSBs are the relvant bits (since each slice has 18 links + 1 when in 56 fabric links mode).",
      Width => "108",
      Position => "107:0", # Excel Formula: =calc_position(F62,E63,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hfffffffffffffffffffffffffff",
    },
  },
  SliceGlobalConfiguration21 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 26;
    Name => "SliceGlobalConfiguration2[2]",
    RegMem => "Reg",
    Address => "116",
    Width => "108", # Excel Formula: =calc_reg_width(E63:E63,F63)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1AllReachable => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]AllReachable",
      RegMem => "RegField",
      Description => "Bitmap of links that are identified as having all the devices reachable through them 
In FE - all 108 bits are relevant
In LC - the 57 LSBs are the relvant bits (since each slice has 18 links + 1 when in 56 fabric links mode).",
      Width => "108",
      Position => "107:0", # Excel Formula: =calc_position(F62,E63,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hfffffffffffffffffffffffffff",
    },
  },
  FeConfigurationsReg10 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
    Name => "FeConfigurationsReg1[2]",
    RegMem => "Reg",
    Address => "117", # Excel Formula: =calc_reg_address(C62,A62,G62)
    Width => "132", # Excel Formula: =calc_reg_width(E65:E66,F66)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0FeValidBroadcastBmpVector => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]FeValidBroadcastBmpVector",
      RegMem => "RegField",
      Description => "Each bit indicates if the corresponding broadcast bitmap table entry is valid for selection when processing MCID in FE2 or FE3 devices",
      Width => "108",
      Position => "107:0", # Excel Formula: =calc_position(F64,E65,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice0SrcLinkIsFe1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SrcLinkIsFe1",
      RegMem => "RegField",
      Description => "A bitmap per source link that indicates if it is FE1 link",
      Width => "24",
      Position => "131:108", # Excel Formula: =calc_position(F65,E66)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  FeConfigurationsReg11 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
    Name => "FeConfigurationsReg1[2]",
    RegMem => "Reg",
    Address => "118",
    Width => "132", # Excel Formula: =calc_reg_width(E65:E66,F66)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1FeValidBroadcastBmpVector => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]FeValidBroadcastBmpVector",
      RegMem => "RegField",
      Description => "Each bit indicates if the corresponding broadcast bitmap table entry is valid for selection when processing MCID in FE2 or FE3 devices",
      Width => "108",
      Position => "107:0", # Excel Formula: =calc_position(F64,E65,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice1SrcLinkIsFe1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SrcLinkIsFe1",
      RegMem => "RegField",
      Description => "A bitmap per source link that indicates if it is FE1 link",
      Width => "24",
      Position => "131:108", # Excel Formula: =calc_position(F65,E66)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  FeConfigurationsReg20 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
    Name => "FeConfigurationsReg2[2]",
    RegMem => "Reg",
    Address => "119", # Excel Formula: =calc_reg_address(C64,A64,G64)
    Width => "62", # Excel Formula: =calc_reg_width(E68:E80,F80)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0RepResMcBackpressureEn => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RepResMcBackpressureEn",
      RegMem => "RegField",
      Description => "If set to 1 - when the MC is backpressuring (FE BMP is not ready) - the RXPDR will backpressure the CBR.
If set to 0 - when the MC is backpressuring (FE BMP is not ready) - the RXPDR will drop MC packets and pass it in the UC path.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice0Slice0MaxLinkNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Slice0MaxLinkNumber",
      RegMem => "RegField",
      Description => "If link number is below or equal to this configuration - the transmit slice is slice 0.
Used for identifying the destination slice according to the destination link number.",
      Width => "7",
      Position => "7:1", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d17",
    },
    Slice0Slice1MaxLinkNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Slice1MaxLinkNumber",
      RegMem => "RegField",
      Description => "See description in Slice[n]Slice0MaxLinkNumber",
      Width => "7",
      Position => "14:8", # Excel Formula: =calc_position(F69,E70)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d35",
    },
    Slice0Slice2MaxLinkNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Slice2MaxLinkNumber",
      RegMem => "RegField",
      Description => "See description in Slice[n]Slice0MaxLinkNumber",
      Width => "7",
      Position => "21:15", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d53",
    },
    Slice0Slice3MaxLinkNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Slice3MaxLinkNumber",
      RegMem => "RegField",
      Description => "See description in Slice[n]Slice0MaxLinkNumber",
      Width => "7",
      Position => "28:22", # Excel Formula: =calc_position(F71,E72)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d71",
    },
    Slice0Slice4MaxLinkNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Slice4MaxLinkNumber",
      RegMem => "RegField",
      Description => "See description in Slice[n]Slice0MaxLinkNumber",
      Width => "7",
      Position => "35:29", # Excel Formula: =calc_position(F72,E73)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d89",
    },
    Slice0Slice5MaxLinkNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Slice5MaxLinkNumber",
      RegMem => "RegField",
      Description => "See description in Slice[n]Slice0MaxLinkNumber",
      Width => "7",
      Position => "42:36", # Excel Formula: =calc_position(F73,E74)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d107",
    },
    Slice0TxpdrBmpUcdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]TxpdrBmpUcdv",
      RegMem => "RegField",
      Description => "The UCDV used in PDs that are passed to the TXPDR with bitmap (MC). The TXPDR will create maximal number of copies that is equesl to the number of links (18).",
      Width => "14",
      Position => "56:43", # Excel Formula: =calc_position(F74,E75)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d18",
    },
    Slice0FeUcLbEnable => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]FeUcLbEnable",
      RegMem => "RegField",
      Description => "Whether to enable fabric load balancing for UC traffic
0 - Load balancing disabled (random link selected)
1 - Load balancing enabled",
      Width => "1",
      Position => "57", # Excel Formula: =calc_position(F75,E76)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice0FeMcLbEnable => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]FeMcLbEnable",
      RegMem => "RegField",
      Description => "Whether to enable fabric load balancing for MC traffic
0 - Load balancing disabled (random link selected)
1 - Load balancing enabled",
      Width => "1",
      Position => "58", # Excel Formula: =calc_position(F76,E77)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice0EnableFlbtFlowControlForMc => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]EnableFlbtFlowControlForMc",
      RegMem => "RegField",
      Description => "Whether to mask eligible all-reachable links for MC in FE1 based on flow control from the FLBT
0 - Ignore flow control from FLBT
1 - Mask links based on flow control from FLBT",
      Width => "1",
      Position => "59", # Excel Formula: =calc_position(F77,E78)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice0DropMcDueToFlbtFlowControl => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DropMcDueToFlbtFlowControl",
      RegMem => "RegField",
      Description => "Whether to drop MC packets when all eligible links are indicated as not ready by FLBT
0 - Ignore FLBT masking if it results in no eligible links
1 - Drop packet if there are no eligible links due to FLBT masking",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F78,E79)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice0DisableMcFeLinksBmpTableAccess => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DisableMcFeLinksBmpTableAccess",
      RegMem => "RegField",
      Description => "Whether to disable access to the MC-FE-Link-Bitmap table
Should be disabled for FE1 slice, where access to this table is not necessary, while disabling it improves maximum MC packet rate
0 - Access is enabled
1 - Access is disabled",
      Width => "1",
      Position => "61", # Excel Formula: =calc_position(F79,E80)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  FeConfigurationsReg21 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
    Name => "FeConfigurationsReg2[2]",
    RegMem => "Reg",
    Address => "11A",
    Width => "62", # Excel Formula: =calc_reg_width(E68:E80,F80)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1RepResMcBackpressureEn => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RepResMcBackpressureEn",
      RegMem => "RegField",
      Description => "If set to 1 - when the MC is backpressuring (FE BMP is not ready) - the RXPDR will backpressure the CBR.
If set to 0 - when the MC is backpressuring (FE BMP is not ready) - the RXPDR will drop MC packets and pass it in the UC path.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice1Slice0MaxLinkNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Slice0MaxLinkNumber",
      RegMem => "RegField",
      Description => "If link number is below or equal to this configuration - the transmit slice is slice 0.
Used for identifying the destination slice according to the destination link number.",
      Width => "7",
      Position => "7:1", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d17",
    },
    Slice1Slice1MaxLinkNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Slice1MaxLinkNumber",
      RegMem => "RegField",
      Description => "See description in Slice[n]Slice0MaxLinkNumber",
      Width => "7",
      Position => "14:8", # Excel Formula: =calc_position(F69,E70)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d35",
    },
    Slice1Slice2MaxLinkNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Slice2MaxLinkNumber",
      RegMem => "RegField",
      Description => "See description in Slice[n]Slice0MaxLinkNumber",
      Width => "7",
      Position => "21:15", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d53",
    },
    Slice1Slice3MaxLinkNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Slice3MaxLinkNumber",
      RegMem => "RegField",
      Description => "See description in Slice[n]Slice0MaxLinkNumber",
      Width => "7",
      Position => "28:22", # Excel Formula: =calc_position(F71,E72)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d71",
    },
    Slice1Slice4MaxLinkNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Slice4MaxLinkNumber",
      RegMem => "RegField",
      Description => "See description in Slice[n]Slice0MaxLinkNumber",
      Width => "7",
      Position => "35:29", # Excel Formula: =calc_position(F72,E73)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d89",
    },
    Slice1Slice5MaxLinkNumber => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Slice5MaxLinkNumber",
      RegMem => "RegField",
      Description => "See description in Slice[n]Slice0MaxLinkNumber",
      Width => "7",
      Position => "42:36", # Excel Formula: =calc_position(F73,E74)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d107",
    },
    Slice1TxpdrBmpUcdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]TxpdrBmpUcdv",
      RegMem => "RegField",
      Description => "The UCDV used in PDs that are passed to the TXPDR with bitmap (MC). The TXPDR will create maximal number of copies that is equesl to the number of links (18).",
      Width => "14",
      Position => "56:43", # Excel Formula: =calc_position(F74,E75)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d18",
    },
    Slice1FeUcLbEnable => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]FeUcLbEnable",
      RegMem => "RegField",
      Description => "Whether to enable fabric load balancing for UC traffic
0 - Load balancing disabled (random link selected)
1 - Load balancing enabled",
      Width => "1",
      Position => "57", # Excel Formula: =calc_position(F75,E76)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice1FeMcLbEnable => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]FeMcLbEnable",
      RegMem => "RegField",
      Description => "Whether to enable fabric load balancing for MC traffic
0 - Load balancing disabled (random link selected)
1 - Load balancing enabled",
      Width => "1",
      Position => "58", # Excel Formula: =calc_position(F76,E77)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice1EnableFlbtFlowControlForMc => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]EnableFlbtFlowControlForMc",
      RegMem => "RegField",
      Description => "Whether to mask eligible all-reachable links for MC in FE1 based on flow control from the FLBT
0 - Ignore flow control from FLBT
1 - Mask links based on flow control from FLBT",
      Width => "1",
      Position => "59", # Excel Formula: =calc_position(F77,E78)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice1DropMcDueToFlbtFlowControl => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DropMcDueToFlbtFlowControl",
      RegMem => "RegField",
      Description => "Whether to drop MC packets when all eligible links are indicated as not ready by FLBT
0 - Ignore FLBT masking if it results in no eligible links
1 - Drop packet if there are no eligible links due to FLBT masking",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F78,E79)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice1DisableMcFeLinksBmpTableAccess => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DisableMcFeLinksBmpTableAccess",
      RegMem => "RegField",
      Description => "Whether to disable access to the MC-FE-Link-Bitmap table
Should be disabled for FE1 slice, where access to this table is not necessary, while disabling it improves maximum MC packet rate
0 - Access is enabled
1 - Access is disabled",
      Width => "1",
      Position => "61", # Excel Formula: =calc_position(F79,E80)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  FeConfigurationsReg30 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
    Name => "FeConfigurationsReg3[2]",
    RegMem => "Reg",
    Address => "11B", # Excel Formula: =calc_reg_address(C67,A67,G67)
    Width => "108", # Excel Formula: =calc_reg_width(E82:E82,F82)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0FeEligibleFabricLinks => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]FeEligibleFabricLinks",
      RegMem => "RegField",
      Description => "Each bit indicates if the corresponding link is eligible for selection when processing UC packets in FE devices
Should be configured to:
FE1 Slice - active only in links to FE2
FE2 Slice - all active links
FE3 Slice - active only in links to the LCs",
      Width => "108",
      Position => "107:0", # Excel Formula: =calc_position(F81,E82,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hfffffffffffffffffffffffffff",
    },
  },
  FeConfigurationsReg31 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
    Name => "FeConfigurationsReg3[2]",
    RegMem => "Reg",
    Address => "11C",
    Width => "108", # Excel Formula: =calc_reg_width(E82:E82,F82)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1FeEligibleFabricLinks => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]FeEligibleFabricLinks",
      RegMem => "RegField",
      Description => "Each bit indicates if the corresponding link is eligible for selection when processing UC packets in FE devices
Should be configured to:
FE1 Slice - active only in links to FE2
FE2 Slice - all active links
FE3 Slice - active only in links to the LCs",
      Width => "108",
      Position => "107:0", # Excel Formula: =calc_position(F81,E82,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hfffffffffffffffffffffffffff",
    },
  },
  SliceToMinLinkMap0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "SliceToMinLinkMap[2]",
    RegMem => "Reg",
    Address => "11D", # Excel Formula: =calc_reg_address(C81,A81,G81)
    Description => "Map each slice to its first link",
    Width => "42", # Excel Formula: =calc_reg_width(E84:E84,F84)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0SliceMinLink => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SliceMinLink",
      RegMem => "RegField",
      Description => "First link of each slice (7b value per slice).
Default value is for 18 links per slice.
For FE13 mode this should be configured to [84, 64, 44, 30, 16, 0]",
      Width => "42",
      Position => "41:0", # Excel Formula: =calc_position(F83,E84,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2d486c90900",
    },
  },
  SliceToMinLinkMap1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "SliceToMinLinkMap[2]",
    RegMem => "Reg",
    Address => "11E",
    Description => "Map each slice to its first link",
    Width => "42", # Excel Formula: =calc_reg_width(E84:E84,F84)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1SliceMinLink => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SliceMinLink",
      RegMem => "RegField",
      Description => "First link of each slice (7b value per slice).
Default value is for 18 links per slice.
For FE13 mode this should be configured to [84, 64, 44, 30, 16, 0]",
      Width => "42",
      Position => "41:0", # Excel Formula: =calc_position(F83,E84,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2d486c90900",
    },
  },
  TrLcSaConfigurationsReg10 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 25;
    Name => "TrLcSaConfigurationsReg1[2]",
    RegMem => "Reg",
    Address => "11F", # Excel Formula: =calc_reg_address(C83,A83,G83)
    Width => "92", # Excel Formula: =calc_reg_width(E86:E91,F91)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0McEmdbRange0MinVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange0MinVoq",
      RegMem => "RegField",
      Description => "Sets the minimal voq number for range 0. 
Range 0 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "0",
    },
    Slice0McEmdbRange0MaxVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange0MaxVoq",
      RegMem => "RegField",
      Description => "Sets the maximal voq number for range 0. 
Range 0 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F86,E87)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hBFFF",
      InitValueAllModes => "0+7",
    },
    Slice0McEmdbRange1MinVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange1MinVoq",
      RegMem => "RegField",
      Description => "Sets the minimal voq number for range 1. 
Range 1 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F87,E88)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "16",
    },
    Slice0McEmdbRange1MaxVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange1MaxVoq",
      RegMem => "RegField",
      Description => "Sets the maximal voq number for range 1. 
Range 1 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "63:48", # Excel Formula: =calc_position(F88,E89)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "16+7",
    },
    Slice0McEmdbRange0Ucdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange0Ucdv",
      RegMem => "RegField",
      Description => "The UCDV associated with MC EMDB entries that are sent to VOQs in range 0.",
      Width => "14",
      Position => "77:64", # Excel Formula: =calc_position(F89,E90)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      InitValueAllModes => "1000",
    },
    Slice0McEmdbRange1Ucdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange1Ucdv",
      RegMem => "RegField",
      Description => "The UCDV associated with MC EMDB entries that are sent to VOQs in range 1.",
      Width => "14",
      Position => "91:78", # Excel Formula: =calc_position(F90,E91)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      InitValueAllModes => "1000",
    },
  },
  TrLcSaConfigurationsReg11 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 25;
    Name => "TrLcSaConfigurationsReg1[2]",
    RegMem => "Reg",
    Address => "120",
    Width => "92", # Excel Formula: =calc_reg_width(E86:E91,F91)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1McEmdbRange0MinVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange0MinVoq",
      RegMem => "RegField",
      Description => "Sets the minimal voq number for range 0. 
Range 0 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "0",
    },
    Slice1McEmdbRange0MaxVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange0MaxVoq",
      RegMem => "RegField",
      Description => "Sets the maximal voq number for range 0. 
Range 0 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F86,E87)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hBFFF",
      InitValueAllModes => "0+7",
    },
    Slice1McEmdbRange1MinVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange1MinVoq",
      RegMem => "RegField",
      Description => "Sets the minimal voq number for range 1. 
Range 1 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F87,E88)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "16",
    },
    Slice1McEmdbRange1MaxVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange1MaxVoq",
      RegMem => "RegField",
      Description => "Sets the maximal voq number for range 1. 
Range 1 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "63:48", # Excel Formula: =calc_position(F88,E89)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "16+7",
    },
    Slice1McEmdbRange0Ucdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange0Ucdv",
      RegMem => "RegField",
      Description => "The UCDV associated with MC EMDB entries that are sent to VOQs in range 0.",
      Width => "14",
      Position => "77:64", # Excel Formula: =calc_position(F89,E90)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      InitValueAllModes => "1000",
    },
    Slice1McEmdbRange1Ucdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange1Ucdv",
      RegMem => "RegField",
      Description => "The UCDV associated with MC EMDB entries that are sent to VOQs in range 1.",
      Width => "14",
      Position => "91:78", # Excel Formula: =calc_position(F90,E91)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      InitValueAllModes => "1000",
    },
  },
  TrLcSaConfigurationsReg20 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 25;
    Name => "TrLcSaConfigurationsReg2[2]",
    RegMem => "Reg",
    Address => "121", # Excel Formula: =calc_reg_address(C85,A85,G85)
    Width => "92", # Excel Formula: =calc_reg_width(E93:E98,F98)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0McEmdbRange2MinVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange2MinVoq",
      RegMem => "RegField",
      Description => "Sets the minimal voq number for range 2. 
Range 2 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F92,E93,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "32",
    },
    Slice0McEmdbRange2MaxVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange2MaxVoq",
      RegMem => "RegField",
      Description => "Sets the maximal voq number for range 2. 
Range 2 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F93,E94)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "32+7",
    },
    Slice0McEmdbRange3MinVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange3MinVoq",
      RegMem => "RegField",
      Description => "Sets the minimal voq number for range 3. 
Range 3 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F94,E95)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "48",
    },
    Slice0McEmdbRange3MaxVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange3MaxVoq",
      RegMem => "RegField",
      Description => "Sets the maximal voq number for range 3. 
Range 3 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "63:48", # Excel Formula: =calc_position(F95,E96)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "48+7",
    },
    Slice0McEmdbRange2Ucdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange2Ucdv",
      RegMem => "RegField",
      Description => "The UCDV associated with MC EMDB entries that are sent to VOQs in range 2.",
      Width => "14",
      Position => "77:64", # Excel Formula: =calc_position(F96,E97)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      InitValueAllModes => "1000",
    },
    Slice0McEmdbRange3Ucdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange3Ucdv",
      RegMem => "RegField",
      Description => "The UCDV associated with MC EMDB entries that are sent to VOQs in range 3.",
      Width => "14",
      Position => "91:78", # Excel Formula: =calc_position(F97,E98)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      InitValueAllModes => "1000",
    },
  },
  TrLcSaConfigurationsReg21 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 25;
    Name => "TrLcSaConfigurationsReg2[2]",
    RegMem => "Reg",
    Address => "122",
    Width => "92", # Excel Formula: =calc_reg_width(E93:E98,F98)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1McEmdbRange2MinVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange2MinVoq",
      RegMem => "RegField",
      Description => "Sets the minimal voq number for range 2. 
Range 2 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F92,E93,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "32",
    },
    Slice1McEmdbRange2MaxVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange2MaxVoq",
      RegMem => "RegField",
      Description => "Sets the maximal voq number for range 2. 
Range 2 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F93,E94)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "32+7",
    },
    Slice1McEmdbRange3MinVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange3MinVoq",
      RegMem => "RegField",
      Description => "Sets the minimal voq number for range 3. 
Range 3 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F94,E95)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "48",
    },
    Slice1McEmdbRange3MaxVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange3MaxVoq",
      RegMem => "RegField",
      Description => "Sets the maximal voq number for range 3. 
Range 3 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "63:48", # Excel Formula: =calc_position(F95,E96)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "48+7",
    },
    Slice1McEmdbRange2Ucdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange2Ucdv",
      RegMem => "RegField",
      Description => "The UCDV associated with MC EMDB entries that are sent to VOQs in range 2.",
      Width => "14",
      Position => "77:64", # Excel Formula: =calc_position(F96,E97)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      InitValueAllModes => "1000",
    },
    Slice1McEmdbRange3Ucdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange3Ucdv",
      RegMem => "RegField",
      Description => "The UCDV associated with MC EMDB entries that are sent to VOQs in range 3.",
      Width => "14",
      Position => "91:78", # Excel Formula: =calc_position(F97,E98)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      InitValueAllModes => "1000",
    },
  },
  TrLcSaConfigurationsReg30 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 25;
    Name => "TrLcSaConfigurationsReg3[2]",
    RegMem => "Reg",
    Address => "123", # Excel Formula: =calc_reg_address(C92,A92,G92)
    Width => "92", # Excel Formula: =calc_reg_width(E100:E105,F105)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0McEmdbRange4MinVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange4MinVoq",
      RegMem => "RegField",
      Description => "Sets the minimal voq number for range 4 .
Range 4 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F99,E100,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "64",
    },
    Slice0McEmdbRange4MaxVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange4MaxVoq",
      RegMem => "RegField",
      Description => "Sets the maximal voq number for range 4. 
Range 4 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F100,E101)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "64+7",
    },
    Slice0McEmdbRange5MinVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange5MinVoq",
      RegMem => "RegField",
      Description => "Sets the minimal voq number for range 5. 
Range 5 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F101,E102)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "80",
    },
    Slice0McEmdbRange5MaxVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange5MaxVoq",
      RegMem => "RegField",
      Description => "Sets the maximal voq number for range 5. 
Range 5 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "63:48", # Excel Formula: =calc_position(F102,E103)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "80+7",
    },
    Slice0McEmdbRange4Ucdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange4Ucdv",
      RegMem => "RegField",
      Description => "The UCDV associated with MC EMDB entries that are sent to VOQs in range 4.",
      Width => "14",
      Position => "77:64", # Excel Formula: =calc_position(F103,E104)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      InitValueAllModes => "1000",
    },
    Slice0McEmdbRange5Ucdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange5Ucdv",
      RegMem => "RegField",
      Description => "The UCDV associated with MC EMDB entries that are sent to VOQs in range 5.",
      Width => "14",
      Position => "91:78", # Excel Formula: =calc_position(F104,E105)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      InitValueAllModes => "1000",
    },
  },
  TrLcSaConfigurationsReg31 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 25;
    Name => "TrLcSaConfigurationsReg3[2]",
    RegMem => "Reg",
    Address => "124",
    Width => "92", # Excel Formula: =calc_reg_width(E100:E105,F105)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1McEmdbRange4MinVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange4MinVoq",
      RegMem => "RegField",
      Description => "Sets the minimal voq number for range 4 .
Range 4 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F99,E100,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "64",
    },
    Slice1McEmdbRange4MaxVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange4MaxVoq",
      RegMem => "RegField",
      Description => "Sets the maximal voq number for range 4. 
Range 4 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F100,E101)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "64+7",
    },
    Slice1McEmdbRange5MinVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange5MinVoq",
      RegMem => "RegField",
      Description => "Sets the minimal voq number for range 5. 
Range 5 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F101,E102)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "80",
    },
    Slice1McEmdbRange5MaxVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange5MaxVoq",
      RegMem => "RegField",
      Description => "Sets the maximal voq number for range 5. 
Range 5 is is associated with a UCDV configuration.",
      Width => "16",
      Position => "63:48", # Excel Formula: =calc_position(F102,E103)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueAllModes => "80+7",
    },
    Slice1McEmdbRange4Ucdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange4Ucdv",
      RegMem => "RegField",
      Description => "The UCDV associated with MC EMDB entries that are sent to VOQs in range 4.",
      Width => "14",
      Position => "77:64", # Excel Formula: =calc_position(F103,E104)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      InitValueAllModes => "1000",
    },
    Slice1McEmdbRange5Ucdv => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbRange5Ucdv",
      RegMem => "RegField",
      Description => "The UCDV associated with MC EMDB entries that are sent to VOQs in range 5.",
      Width => "14",
      Position => "91:78", # Excel Formula: =calc_position(F104,E105)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      InitValueAllModes => "1000",
    },
  },
  TrLcSaConfigurationsReg40 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 25;
    Name => "TrLcSaConfigurationsReg4[2]",
    RegMem => "Reg",
    Address => "125", # Excel Formula: =calc_reg_address(C99,A99,G99)
    Width => "18", # Excel Formula: =calc_reg_width(E107:E107,F107)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0McEmdbTxpdrMcidThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbTxpdrMcidThr",
      RegMem => "RegField",
      Description => "When the MC EMDB<MC Copy ID> is below this threshold - the PD will be sent with MCID taken from the MC-EMDB.",
      Width => "18",
      Position => "17:0", # Excel Formula: =calc_position(F106,E107,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  TrLcSaConfigurationsReg41 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 25;
    Name => "TrLcSaConfigurationsReg4[2]",
    RegMem => "Reg",
    Address => "126",
    Width => "18", # Excel Formula: =calc_reg_width(E107:E107,F107)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1McEmdbTxpdrMcidThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McEmdbTxpdrMcidThr",
      RegMem => "RegField",
      Description => "When the MC EMDB<MC Copy ID> is below this threshold - the PD will be sent with MCID taken from the MC-EMDB.",
      Width => "18",
      Position => "17:0", # Excel Formula: =calc_position(F106,E107,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  RxPdrLastInPd => { #Structure Type: Reg;
    Name => "RxPdrLastInPd",
    RegMem => "Reg",
    Address => "127", # Excel Formula: =calc_reg_address(C106,A106,G106)
    Width => "32", # Excel Formula: =calc_reg_width(E109:E109,F109)
    Type => "ReadOnly",
    RxPdrLastIncomingPd => { #Structure Type: RegField;
      Name => "RxPdrLastIncomingPd",
      RegMem => "RegField",
      Description => "Holds the 16 bits of the PD muxed by LastIncomingPdMuxSel",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F108,E109,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  RxPdrDebugConf => { #Structure Type: Reg;
    Name => "RxPdrDebugConf",
    RegMem => "Reg",
    Address => "128", # Excel Formula: =calc_reg_address(C108,A108,G108)
    Width => "4", # Excel Formula: =calc_reg_width(E111:E111,F111)
    Type => "Config",
    LastIncomingPdMuxSel => { #Structure Type: RegField;
      Name => "LastIncomingPdMuxSel",
      RegMem => "RegField",
      Description => "Selector for the debug mux of RxPdrLastIncomingPd",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F110,E111,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  RxrqsDebugReg0 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 14;
    Name => "RxrqsDebugReg[8]",
    RegMem => "Reg",
    Address => "129", # Excel Formula: =calc_reg_address(C110,A110,G110)
    Width => "43", # Excel Formula: =calc_reg_width(E113:E115,F115)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "0",
    Rxrq0MaxFillLevel => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 5;
      Name => "Rxrq[n]MaxFillLevel",
      RegMem => "RegField",
      Description => "Holds the maximal fill level that the RXRQ FIFO reached.",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F112,E113,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Rxrq0CancelIbMirrorCmd => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 5;
      Name => "Rxrq[n]CancelIbMirrorCmd",
      RegMem => "RegField",
      Description => "Indicates that the RXRQ meets the conditions to cancel IB mirror commands. Relevnat to RXRQ0 only.",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F113,E114)
      Type => "Event",
      UsedBy => "DSN",
    },
    Rxrq0DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 5;
      Name => "Rxrq[n]DropCounter",
      RegMem => "RegField",
      Description => "A counter per RXRQ that counts the number of PDs that were dropped due to congestion (i.e. RXRQ was full).",
      Width => "32",
      Position => "42:11", # Excel Formula: =calc_position(F114,E115)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxrqsDebugReg1 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 14;
    Name => "RxrqsDebugReg[8]",
    RegMem => "Reg",
    Address => "12A",
    Width => "43", # Excel Formula: =calc_reg_width(E113:E115,F115)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "1",
    Rxrq1MaxFillLevel => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 5;
      Name => "Rxrq[n]MaxFillLevel",
      RegMem => "RegField",
      Description => "Holds the maximal fill level that the RXRQ FIFO reached.",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F112,E113,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Rxrq1CancelIbMirrorCmd => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 5;
      Name => "Rxrq[n]CancelIbMirrorCmd",
      RegMem => "RegField",
      Description => "Indicates that the RXRQ meets the conditions to cancel IB mirror commands. Relevnat to RXRQ0 only.",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F113,E114)
      Type => "Event",
      UsedBy => "DSN",
    },
    Rxrq1DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 5;
      Name => "Rxrq[n]DropCounter",
      RegMem => "RegField",
      Description => "A counter per RXRQ that counts the number of PDs that were dropped due to congestion (i.e. RXRQ was full).",
      Width => "32",
      Position => "42:11", # Excel Formula: =calc_position(F114,E115)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxrqsDebugReg2 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 14;
    Name => "RxrqsDebugReg[8]",
    RegMem => "Reg",
    Address => "12B",
    Width => "43", # Excel Formula: =calc_reg_width(E113:E115,F115)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "2",
    Rxrq2MaxFillLevel => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 5;
      Name => "Rxrq[n]MaxFillLevel",
      RegMem => "RegField",
      Description => "Holds the maximal fill level that the RXRQ FIFO reached.",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F112,E113,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Rxrq2CancelIbMirrorCmd => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 5;
      Name => "Rxrq[n]CancelIbMirrorCmd",
      RegMem => "RegField",
      Description => "Indicates that the RXRQ meets the conditions to cancel IB mirror commands. Relevnat to RXRQ0 only.",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F113,E114)
      Type => "Event",
      UsedBy => "DSN",
    },
    Rxrq2DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 5;
      Name => "Rxrq[n]DropCounter",
      RegMem => "RegField",
      Description => "A counter per RXRQ that counts the number of PDs that were dropped due to congestion (i.e. RXRQ was full).",
      Width => "32",
      Position => "42:11", # Excel Formula: =calc_position(F114,E115)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxrqsDebugReg3 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 14;
    Name => "RxrqsDebugReg[8]",
    RegMem => "Reg",
    Address => "12C",
    Width => "43", # Excel Formula: =calc_reg_width(E113:E115,F115)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "3",
    Rxrq3MaxFillLevel => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 5;
      Name => "Rxrq[n]MaxFillLevel",
      RegMem => "RegField",
      Description => "Holds the maximal fill level that the RXRQ FIFO reached.",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F112,E113,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Rxrq3CancelIbMirrorCmd => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 5;
      Name => "Rxrq[n]CancelIbMirrorCmd",
      RegMem => "RegField",
      Description => "Indicates that the RXRQ meets the conditions to cancel IB mirror commands. Relevnat to RXRQ0 only.",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F113,E114)
      Type => "Event",
      UsedBy => "DSN",
    },
    Rxrq3DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 5;
      Name => "Rxrq[n]DropCounter",
      RegMem => "RegField",
      Description => "A counter per RXRQ that counts the number of PDs that were dropped due to congestion (i.e. RXRQ was full).",
      Width => "32",
      Position => "42:11", # Excel Formula: =calc_position(F114,E115)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxrqsDebugReg4 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 14;
    Name => "RxrqsDebugReg[8]",
    RegMem => "Reg",
    Address => "12D",
    Width => "43", # Excel Formula: =calc_reg_width(E113:E115,F115)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "4",
    Rxrq4MaxFillLevel => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 5;
      Name => "Rxrq[n]MaxFillLevel",
      RegMem => "RegField",
      Description => "Holds the maximal fill level that the RXRQ FIFO reached.",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F112,E113,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Rxrq4CancelIbMirrorCmd => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 5;
      Name => "Rxrq[n]CancelIbMirrorCmd",
      RegMem => "RegField",
      Description => "Indicates that the RXRQ meets the conditions to cancel IB mirror commands. Relevnat to RXRQ0 only.",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F113,E114)
      Type => "Event",
      UsedBy => "DSN",
    },
    Rxrq4DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 5;
      Name => "Rxrq[n]DropCounter",
      RegMem => "RegField",
      Description => "A counter per RXRQ that counts the number of PDs that were dropped due to congestion (i.e. RXRQ was full).",
      Width => "32",
      Position => "42:11", # Excel Formula: =calc_position(F114,E115)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxrqsDebugReg5 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 14;
    Name => "RxrqsDebugReg[8]",
    RegMem => "Reg",
    Address => "12E",
    Width => "43", # Excel Formula: =calc_reg_width(E113:E115,F115)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "5",
    Rxrq5MaxFillLevel => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 5;
      Name => "Rxrq[n]MaxFillLevel",
      RegMem => "RegField",
      Description => "Holds the maximal fill level that the RXRQ FIFO reached.",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F112,E113,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Rxrq5CancelIbMirrorCmd => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 5;
      Name => "Rxrq[n]CancelIbMirrorCmd",
      RegMem => "RegField",
      Description => "Indicates that the RXRQ meets the conditions to cancel IB mirror commands. Relevnat to RXRQ0 only.",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F113,E114)
      Type => "Event",
      UsedBy => "DSN",
    },
    Rxrq5DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 5;
      Name => "Rxrq[n]DropCounter",
      RegMem => "RegField",
      Description => "A counter per RXRQ that counts the number of PDs that were dropped due to congestion (i.e. RXRQ was full).",
      Width => "32",
      Position => "42:11", # Excel Formula: =calc_position(F114,E115)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxrqsDebugReg6 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 14;
    Name => "RxrqsDebugReg[8]",
    RegMem => "Reg",
    Address => "12F",
    Width => "43", # Excel Formula: =calc_reg_width(E113:E115,F115)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "6",
    Rxrq6MaxFillLevel => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 5;
      Name => "Rxrq[n]MaxFillLevel",
      RegMem => "RegField",
      Description => "Holds the maximal fill level that the RXRQ FIFO reached.",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F112,E113,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Rxrq6CancelIbMirrorCmd => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 5;
      Name => "Rxrq[n]CancelIbMirrorCmd",
      RegMem => "RegField",
      Description => "Indicates that the RXRQ meets the conditions to cancel IB mirror commands. Relevnat to RXRQ0 only.",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F113,E114)
      Type => "Event",
      UsedBy => "DSN",
    },
    Rxrq6DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 5;
      Name => "Rxrq[n]DropCounter",
      RegMem => "RegField",
      Description => "A counter per RXRQ that counts the number of PDs that were dropped due to congestion (i.e. RXRQ was full).",
      Width => "32",
      Position => "42:11", # Excel Formula: =calc_position(F114,E115)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxrqsDebugReg7 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 14;
    Name => "RxrqsDebugReg[8]",
    RegMem => "Reg",
    Address => "130",
    Width => "43", # Excel Formula: =calc_reg_width(E113:E115,F115)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "7",
    Rxrq7MaxFillLevel => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 5;
      Name => "Rxrq[n]MaxFillLevel",
      RegMem => "RegField",
      Description => "Holds the maximal fill level that the RXRQ FIFO reached.",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F112,E113,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Rxrq7CancelIbMirrorCmd => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 5;
      Name => "Rxrq[n]CancelIbMirrorCmd",
      RegMem => "RegField",
      Description => "Indicates that the RXRQ meets the conditions to cancel IB mirror commands. Relevnat to RXRQ0 only.",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F113,E114)
      Type => "Event",
      UsedBy => "DSN",
    },
    Rxrq7DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 5;
      Name => "Rxrq[n]DropCounter",
      RegMem => "RegField",
      Description => "A counter per RXRQ that counts the number of PDs that were dropped due to congestion (i.e. RXRQ was full).",
      Width => "32",
      Position => "42:11", # Excel Formula: =calc_position(F114,E115)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxpdrCgmDropCounterReg0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 23;
    Name => "RxpdrCgmDropCounterReg[2]",
    RegMem => "Reg",
    Address => "131", # Excel Formula: =calc_reg_address(C112,A112,G112)
    Width => "128", # Excel Formula: =calc_reg_width(E117:E120,F120)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0CounterADropCounter => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CounterADropCounter",
      RegMem => "RegField",
      Description => "Number of packets dropped due to CGM counter A",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F116,E117,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice0CounterBDropCounter => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CounterBDropCounter",
      RegMem => "RegField",
      Description => "Number of packets dropped due to CGM counter B",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F117,E118)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice0CounterEDropCounter => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CounterEDropCounter",
      RegMem => "RegField",
      Description => "Number of packets dropped due to CGM counter E",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F118,E119)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice0CounterGDropCounter => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CounterGDropCounter",
      RegMem => "RegField",
      Description => "Number of packets whose mirror copies were dropped due to CGM counter G",
      Width => "32",
      Position => "127:96", # Excel Formula: =calc_position(F119,E120)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxpdrCgmDropCounterReg1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 23;
    Name => "RxpdrCgmDropCounterReg[2]",
    RegMem => "Reg",
    Address => "132",
    Width => "128", # Excel Formula: =calc_reg_width(E117:E120,F120)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1CounterADropCounter => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CounterADropCounter",
      RegMem => "RegField",
      Description => "Number of packets dropped due to CGM counter A",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F116,E117,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice1CounterBDropCounter => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CounterBDropCounter",
      RegMem => "RegField",
      Description => "Number of packets dropped due to CGM counter B",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F117,E118)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice1CounterEDropCounter => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CounterEDropCounter",
      RegMem => "RegField",
      Description => "Number of packets dropped due to CGM counter E",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F118,E119)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice1CounterGDropCounter => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CounterGDropCounter",
      RegMem => "RegField",
      Description => "Number of packets whose mirror copies were dropped due to CGM counter G",
      Width => "32",
      Position => "127:96", # Excel Formula: =calc_position(F119,E120)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxpdrDebugReg0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
    Name => "RxpdrDebugReg[2]",
    RegMem => "Reg",
    Address => "133", # Excel Formula: =calc_reg_address(C116,A116,G116)
    Description => "Debug register",
    Width => "77", # Excel Formula: =calc_reg_width(E122:E129,F129)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0DropPacketDueToFullRxrq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DropPacketDueToFullRxrq",
      RegMem => "RegField",
      Description => "Indicates a packet was dropped because it's required RXRQ was full",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F121,E122,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
    Slice0DropPacketDueToGroupSizeZero => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DropPacketDueToGroupSizeZero",
      RegMem => "RegField",
      Description => "Indicates a MC packet was dropped because it's group size was equal zero (no copies)",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F122,E123)
      Type => "Event",
      UsedBy => "DSN",
    },
    Slice0BmpWithoutValidBitsDrop => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BmpWithoutValidBitsDrop",
      RegMem => "RegField",
      Description => "Indicates a packet was dropped due to having a MC bitmap with no active bits",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F123,E124)
      Type => "Event",
      UsedBy => "DSN",
    },
    Slice0DropDueToMcFeLinksBmpNotReady => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DropDueToMcFeLinksBmpNotReady",
      RegMem => "RegField",
      Description => "Indicates a packet was dropped due to MC FE Links Bitmap table not being ready for read",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F124,E125)
      Type => "Event",
      UsedBy => "DSN",
    },
    Slice0LastPdVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]LastPdVoq",
      RegMem => "RegField",
      Description => "Holds the last VOQ a PD was sent to",
      Width => "16",
      Position => "19:4", # Excel Formula: =calc_position(F125,E126)
      Type => "Capture",
      UsedBy => "DSN",
    },
    Slice0LastPdCud => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]LastPdCud",
      RegMem => "RegField",
      Description => "Holds the last CUD of a PD",
      Width => "22",
      Position => "41:20", # Excel Formula: =calc_position(F126,E127)
      Type => "Capture",
      UsedBy => "DSN",
    },
    Slice0LastPdCgmCounterType => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]LastPdCgmCounterType",
      RegMem => "RegField",
      Description => "Holds the last CGM counter type set to the PD",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F127,E128)
      Type => "Capture",
      UsedBy => "DSN",
    },
    Slice0RxCgmCbtNotReady => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RxCgmCbtNotReady",
      RegMem => "RegField",
      Description => "Number of clock cycles RX-CGM was not ready to receive PDs from RX-PDR",
      Width => "32",
      Position => "76:45", # Excel Formula: =calc_position(F128,E129)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxpdrDebugReg1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
    Name => "RxpdrDebugReg[2]",
    RegMem => "Reg",
    Address => "134",
    Description => "Debug register",
    Width => "77", # Excel Formula: =calc_reg_width(E122:E129,F129)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1DropPacketDueToFullRxrq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DropPacketDueToFullRxrq",
      RegMem => "RegField",
      Description => "Indicates a packet was dropped because it's required RXRQ was full",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F121,E122,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
    Slice1DropPacketDueToGroupSizeZero => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DropPacketDueToGroupSizeZero",
      RegMem => "RegField",
      Description => "Indicates a MC packet was dropped because it's group size was equal zero (no copies)",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F122,E123)
      Type => "Event",
      UsedBy => "DSN",
    },
    Slice1BmpWithoutValidBitsDrop => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BmpWithoutValidBitsDrop",
      RegMem => "RegField",
      Description => "Indicates a packet was dropped due to having a MC bitmap with no active bits",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F123,E124)
      Type => "Event",
      UsedBy => "DSN",
    },
    Slice1DropDueToMcFeLinksBmpNotReady => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DropDueToMcFeLinksBmpNotReady",
      RegMem => "RegField",
      Description => "Indicates a packet was dropped due to MC FE Links Bitmap table not being ready for read",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F124,E125)
      Type => "Event",
      UsedBy => "DSN",
    },
    Slice1LastPdVoq => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]LastPdVoq",
      RegMem => "RegField",
      Description => "Holds the last VOQ a PD was sent to",
      Width => "16",
      Position => "19:4", # Excel Formula: =calc_position(F125,E126)
      Type => "Capture",
      UsedBy => "DSN",
    },
    Slice1LastPdCud => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]LastPdCud",
      RegMem => "RegField",
      Description => "Holds the last CUD of a PD",
      Width => "22",
      Position => "41:20", # Excel Formula: =calc_position(F126,E127)
      Type => "Capture",
      UsedBy => "DSN",
    },
    Slice1LastPdCgmCounterType => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]LastPdCgmCounterType",
      RegMem => "RegField",
      Description => "Holds the last CGM counter type set to the PD",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F127,E128)
      Type => "Capture",
      UsedBy => "DSN",
    },
    Slice1RxCgmCbtNotReady => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RxCgmCbtNotReady",
      RegMem => "RegField",
      Description => "Number of clock cycles RX-CGM was not ready to receive PDs from RX-PDR",
      Width => "32",
      Position => "76:45", # Excel Formula: =calc_position(F128,E129)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxPdrPktRateConf0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 17;
    Name => "RxPdrPktRateConf[2]",
    RegMem => "Reg",
    Address => "135", # Excel Formula: =calc_reg_address(C121,A121,G121)
    Width => "24", # Excel Formula: =calc_reg_width(E131:E132,F132)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0PktRateWindow => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]PktRateWindow",
      RegMem => "RegField",
      Description => "Defines the window in clock cycles where the rx pdr may pass up to PktRateNumOfPkts PDs to the rx cgm",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F130,E131,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hFFF",
    },
    Slice0PktRateNumOfPkts => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]PktRateNumOfPkts",
      RegMem => "RegField",
      Description => "Defines the number of packets allowed within a time window",
      Width => "12",
      Position => "23:12", # Excel Formula: =calc_position(F131,E132)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hFFF",
    },
  },
  RxPdrPktRateConf1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 17;
    Name => "RxPdrPktRateConf[2]",
    RegMem => "Reg",
    Address => "136",
    Width => "24", # Excel Formula: =calc_reg_width(E131:E132,F132)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1PktRateWindow => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]PktRateWindow",
      RegMem => "RegField",
      Description => "Defines the window in clock cycles where the rx pdr may pass up to PktRateNumOfPkts PDs to the rx cgm",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F130,E131,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hFFF",
    },
    Slice1PktRateNumOfPkts => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]PktRateNumOfPkts",
      RegMem => "RegField",
      Description => "Defines the number of packets allowed within a time window",
      Width => "12",
      Position => "23:12", # Excel Formula: =calc_position(F131,E132)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hFFF",
    },
  },
  RxPdrDebugConfReg0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "RxPdrDebugConfReg[2]",
    RegMem => "Reg",
    Address => "137", # Excel Formula: =calc_reg_address(C130,A130,G130)
    Width => "10", # Excel Formula: =calc_reg_width(E134:E134,F134)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Slice0LimitPds => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]LimitPds",
      RegMem => "RegField",
      Description => "Defines the amount of free buffers in the PD FBM that will not be used.
Will be used for debug purposes",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F133,E134,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  RxPdrDebugConfReg1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "RxPdrDebugConfReg[2]",
    RegMem => "Reg",
    Address => "138",
    Width => "10", # Excel Formula: =calc_reg_width(E134:E134,F134)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Slice1LimitPds => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]LimitPds",
      RegMem => "RegField",
      Description => "Defines the amount of free buffers in the PD FBM that will not be used.
Will be used for debug purposes",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F133,E134,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  MulticastBitmapDb0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "MulticastBitmapDb[2]",
    RegMem => "Mem",
    Address => "100000",
    Description => "Parsing when entry is bitmap
To create a MCID that creates no copies - configure the entry to bitmap with all SliceBitmaps set to 0.",
    Width => "104", # Excel Formula: =calc_mem_width(E136:E159,M135,F159,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8192",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=50,PortErrPropagate=Disabled",
    Comments => "Used in flows:
1. NW --> NW - Native multicast packet, replication to OQ level (Mu)
2. NW --> NW - Native multicast packet, replication to TXRQ level (Mm)
3. NW --> FB (PLB) - Native multicast packet, replication to OQ level (MUUu)
4. NW --> FB (PLB) - Native multicast packet, replication to TXRQ level  (MUUm)
5. NW --> FB (TS PLB + FLB) - Native multicast packet, with fabric replication (MMMm)
6. FB --> NW (TS PLB + FLB) - Multicast packet (MMMm)",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "96",
    Entry0McBmp0SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry0McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "Each bit that is set in this bitmap indicates that the corresponding mapping to a base-VOQ# is valid.
Thus each bit that is set potentially results in a copy. It is expected that the configuration would be such that each bit corresponds to a transmit slice.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F135,E136,TRUE)
    },
    Entry0McBmp0BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry0McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "Value of all 1s indicates that this is a bitmap entry",
      Width => "5",
      Position => "10:6", # Excel Formula: =calc_position(F136,E137)
    },
    Entry0McBmp0CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry0McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "Indicates that this MCID copies should increment counter  A",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F137,E138)
    },
    Entry1McBmp0SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry1McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "17:12", # Excel Formula: =calc_position(F138,E139)
    },
    Entry1McBmp0BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry1McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "22:18", # Excel Formula: =calc_position(F139,E140)
    },
    Entry1McBmp0CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry1McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "23", # Excel Formula: =calc_position(F140,E141)
    },
    Entry2McBmp0SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry2McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "29:24", # Excel Formula: =calc_position(F141,E142)
    },
    Entry2McBmp0BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry2McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "34:30", # Excel Formula: =calc_position(F142,E143)
    },
    Entry2McBmp0CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry2McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "35", # Excel Formula: =calc_position(F143,E144)
    },
    Entry3McBmp0SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry3McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "41:36", # Excel Formula: =calc_position(F144,E145)
    },
    Entry3McBmp0BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry3McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "46:42", # Excel Formula: =calc_position(F145,E146)
    },
    Entry3McBmp0CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry3McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "47", # Excel Formula: =calc_position(F146,E147)
    },
    Entry4McBmp0SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry4McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "53:48", # Excel Formula: =calc_position(F147,E148)
    },
    Entry4McBmp0BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry4McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "58:54", # Excel Formula: =calc_position(F148,E149)
    },
    Entry4McBmp0CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry4McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "59", # Excel Formula: =calc_position(F149,E150)
    },
    Entry5McBmp0SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry5McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "65:60", # Excel Formula: =calc_position(F150,E151)
    },
    Entry5McBmp0BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry5McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "70:66", # Excel Formula: =calc_position(F151,E152)
    },
    Entry5McBmp0CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry5McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "71", # Excel Formula: =calc_position(F152,E153)
    },
    Entry6McBmp0SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry6McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "77:72", # Excel Formula: =calc_position(F153,E154)
    },
    Entry6McBmp0BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry6McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "82:78", # Excel Formula: =calc_position(F154,E155)
    },
    Entry6McBmp0CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry6McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "83", # Excel Formula: =calc_position(F155,E156)
    },
    Entry7McBmp0SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry7McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "89:84", # Excel Formula: =calc_position(F156,E157)
    },
    Entry7McBmp0BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry7McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "94:90", # Excel Formula: =calc_position(F157,E158)
    },
    Entry7McBmp0CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Entry7McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "95", # Excel Formula: =calc_position(F158,E159)
    },
  },
  MulticastBitmapDb1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "MulticastBitmapDb[2]",
    RegMem => "Mem",
    Address => "200000",
    Description => "Parsing when entry is bitmap
To create a MCID that creates no copies - configure the entry to bitmap with all SliceBitmaps set to 0.",
    Width => "104", # Excel Formula: =calc_mem_width(E136:E159,M135,F159,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8192",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=50,PortErrPropagate=Disabled",
    Comments => "Used in flows:
1. NW --> NW - Native multicast packet, replication to OQ level (Mu)
2. NW --> NW - Native multicast packet, replication to TXRQ level (Mm)
3. NW --> FB (PLB) - Native multicast packet, replication to OQ level (MUUu)
4. NW --> FB (PLB) - Native multicast packet, replication to TXRQ level  (MUUm)
5. NW --> FB (TS PLB + FLB) - Native multicast packet, with fabric replication (MMMm)
6. FB --> NW (TS PLB + FLB) - Multicast packet (MMMm)",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "96",
    Entry0McBmp1SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry0McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "Each bit that is set in this bitmap indicates that the corresponding mapping to a base-VOQ# is valid.
Thus each bit that is set potentially results in a copy. It is expected that the configuration would be such that each bit corresponds to a transmit slice.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F135,E136,TRUE)
    },
    Entry0McBmp1BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry0McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "Value of all 1s indicates that this is a bitmap entry",
      Width => "5",
      Position => "10:6", # Excel Formula: =calc_position(F136,E137)
    },
    Entry0McBmp1CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry0McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "Indicates that this MCID copies should increment counter  A",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F137,E138)
    },
    Entry1McBmp1SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry1McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "17:12", # Excel Formula: =calc_position(F138,E139)
    },
    Entry1McBmp1BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry1McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "22:18", # Excel Formula: =calc_position(F139,E140)
    },
    Entry1McBmp1CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry1McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "23", # Excel Formula: =calc_position(F140,E141)
    },
    Entry2McBmp1SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry2McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "29:24", # Excel Formula: =calc_position(F141,E142)
    },
    Entry2McBmp1BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry2McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "34:30", # Excel Formula: =calc_position(F142,E143)
    },
    Entry2McBmp1CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry2McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "35", # Excel Formula: =calc_position(F143,E144)
    },
    Entry3McBmp1SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry3McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "41:36", # Excel Formula: =calc_position(F144,E145)
    },
    Entry3McBmp1BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry3McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "46:42", # Excel Formula: =calc_position(F145,E146)
    },
    Entry3McBmp1CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry3McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "47", # Excel Formula: =calc_position(F146,E147)
    },
    Entry4McBmp1SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry4McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "53:48", # Excel Formula: =calc_position(F147,E148)
    },
    Entry4McBmp1BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry4McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "58:54", # Excel Formula: =calc_position(F148,E149)
    },
    Entry4McBmp1CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry4McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "59", # Excel Formula: =calc_position(F149,E150)
    },
    Entry5McBmp1SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry5McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "65:60", # Excel Formula: =calc_position(F150,E151)
    },
    Entry5McBmp1BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry5McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "70:66", # Excel Formula: =calc_position(F151,E152)
    },
    Entry5McBmp1CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry5McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "71", # Excel Formula: =calc_position(F152,E153)
    },
    Entry6McBmp1SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry6McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "77:72", # Excel Formula: =calc_position(F153,E154)
    },
    Entry6McBmp1BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry6McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "82:78", # Excel Formula: =calc_position(F154,E155)
    },
    Entry6McBmp1CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry6McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "83", # Excel Formula: =calc_position(F155,E156)
    },
    Entry7McBmp1SliceBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry7McBmp[n]SliceBitmap",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "6",
      Position => "89:84", # Excel Formula: =calc_position(F156,E157)
    },
    Entry7McBmp1BitmapIndicator => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry7McBmp[n]BitmapIndicator",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "5",
      Position => "94:90", # Excel Formula: =calc_position(F157,E158)
    },
    Entry7McBmp1CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Entry7McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "See description in Entry0",
      Width => "1",
      Position => "95", # Excel Formula: =calc_position(F158,E159)
    },
  },
  MulticastBitmap0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 16;
    Name => "MulticastBitmap[2]",
    RegMem => "Mem",
    Address => "100000", # Excel Formula: =calc_mem_address(C135,A135,G160,L160)
    Description => "Parsing when entry is bitmap",
    Width => "18", # Excel Formula: =calc_mem_width(E161:E162,M160,F162,-1)
    Type => "DocOnly",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "65536",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "This memory is sampled 1 more over the MulticastBitmapDb2R because the XOR memory holds a hidden extra sample so that way I allign them both to the same latency",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "12",
    McBmp0GroupSize => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "McBmp[n]GroupSize",
      RegMem => "MemField",
      Description => "This field is valid when the bitmap indicator bits differ from 0.
The group size defines the number of times the MC EMDB should be accessed for creating the copies for the MCID group.",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F160,E161,TRUE)
    },
    McBmp0CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "Indicates that this MCID copies should increment counter  A",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F161,E162)
    },
  },
  MulticastBitmap1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 16;
    Name => "MulticastBitmap[2]",
    RegMem => "Mem",
    Address => "200000",
    Description => "Parsing when entry is bitmap",
    Width => "18", # Excel Formula: =calc_mem_width(E161:E162,M160,F162,-1)
    Type => "DocOnly",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "65536",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "This memory is sampled 1 more over the MulticastBitmapDb2R because the XOR memory holds a hidden extra sample so that way I allign them both to the same latency",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "12",
    McBmp1GroupSize => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "McBmp[n]GroupSize",
      RegMem => "MemField",
      Description => "This field is valid when the bitmap indicator bits differ from 0.
The group size defines the number of times the MC EMDB should be accessed for creating the copies for the MCID group.",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F160,E161,TRUE)
    },
    McBmp1CounterAIncEn => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "McBmp[n]CounterAIncEn",
      RegMem => "MemField",
      Description => "Indicates that this MCID copies should increment counter  A",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F161,E162)
    },
  },
  DspLookupTable => { #Structure Type: Mem;
    Name => "DspLookupTable",
    RegMem => "Mem",
    Address => "300000", # Excel Formula: =calc_mem_address(C135,A135,G163,L163)
    Description => "Serves 2 slices. Holds 4 entries in line",
    Width => "120", # Excel Formula: =calc_mem_width(E164:E175,M163,F175,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "2048",
    MemWrapper => "2R1W Slow Write",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=50,PortErrPropagate=Disabled",
    Comments => "Used In Flows:
1. NW --> NW - Native unicast packet, forwarding based on DSP (Diffsrv model)
2. NW --> FB (PLB + FLB) - Native unicast packet, forwarding based on DSP (Diffsrv model)
3. FE (FLB) - FLB Unicast (MUUx,UUUu), forwarding based DSP",
    MemLogicalWidth => "112",
    Entry0DspTableDestDev => { #Structure Type: MemField;
      Name => "Entry0DspTableDestDev",
      RegMem => "MemField",
      Description => "Destination device",
      Width => "9",
      Position => "8:0", # Excel Formula: =calc_position(F163,E164,TRUE)
      InitValueAllModes => "511",
    },
    Entry0DspTableBaseVoqNum => { #Structure Type: MemField;
      Name => "Entry0DspTableBaseVoqNum",
      RegMem => "MemField",
      Description => "The base VOQ number",
      Width => "16",
      Position => "24:9", # Excel Formula: =calc_position(F164,E165)
      InitValueAllModes => "65535",
    },
    Entry0DspTableTcMapProfile => { #Structure Type: MemField;
      Name => "Entry0DspTableTcMapProfile",
      RegMem => "MemField",
      Description => "The TC map profile",
      Width => "3",
      Position => "27:25", # Excel Formula: =calc_position(F165,E166)
      InitValueAllModes => "0",
    },
    Entry1DspTableDestDev => { #Structure Type: MemField;
      Name => "Entry1DspTableDestDev",
      RegMem => "MemField",
      Description => "Destination device",
      Width => "9",
      Position => "36:28", # Excel Formula: =calc_position(F166,E167)
      InitValueAllModes => "511",
    },
    Entry1DspTableBaseVoqNum => { #Structure Type: MemField;
      Name => "Entry1DspTableBaseVoqNum",
      RegMem => "MemField",
      Description => "The base VOQ number",
      Width => "16",
      Position => "52:37", # Excel Formula: =calc_position(F167,E168)
      InitValueAllModes => "65535",
    },
    Entry1DspTableTcMapProfile => { #Structure Type: MemField;
      Name => "Entry1DspTableTcMapProfile",
      RegMem => "MemField",
      Description => "The TC map profile",
      Width => "3",
      Position => "55:53", # Excel Formula: =calc_position(F168,E169)
      InitValueAllModes => "0",
    },
    Entry2DspTableDestDev => { #Structure Type: MemField;
      Name => "Entry2DspTableDestDev",
      RegMem => "MemField",
      Description => "Destination device",
      Width => "9",
      Position => "64:56", # Excel Formula: =calc_position(F169,E170)
      InitValueAllModes => "511",
    },
    Entry2DspTableBaseVoqNum => { #Structure Type: MemField;
      Name => "Entry2DspTableBaseVoqNum",
      RegMem => "MemField",
      Description => "The base VOQ number",
      Width => "16",
      Position => "80:65", # Excel Formula: =calc_position(F170,E171)
      InitValueAllModes => "65535",
    },
    Entry2DspTableTcMapProfile => { #Structure Type: MemField;
      Name => "Entry2DspTableTcMapProfile",
      RegMem => "MemField",
      Description => "The TC map profile",
      Width => "3",
      Position => "83:81", # Excel Formula: =calc_position(F171,E172)
      InitValueAllModes => "0",
    },
    Entry3DspTableDestDev => { #Structure Type: MemField;
      Name => "Entry3DspTableDestDev",
      RegMem => "MemField",
      Description => "Destination device",
      Width => "9",
      Position => "92:84", # Excel Formula: =calc_position(F172,E173)
      InitValueAllModes => "511",
    },
    Entry3DspTableBaseVoqNum => { #Structure Type: MemField;
      Name => "Entry3DspTableBaseVoqNum",
      RegMem => "MemField",
      Description => "The base VOQ number",
      Width => "16",
      Position => "108:93", # Excel Formula: =calc_position(F173,E174)
      InitValueAllModes => "65535",
    },
    Entry3DspTableTcMapProfile => { #Structure Type: MemField;
      Name => "Entry3DspTableTcMapProfile",
      RegMem => "MemField",
      Description => "The TC map profile",
      Width => "3",
      Position => "111:109", # Excel Formula: =calc_position(F174,E175)
      InitValueAllModes => "0",
    },
  },
  IbMirrorCmdTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 17;
    Name => "IbMirrorCmdTable[2]",
    RegMem => "Mem",
    Address => "400000", # Excel Formula: =calc_mem_address(C163,A163,G176,L176)
    Description => "Table per slice",
    Width => "49", # Excel Formula: =calc_mem_width(E177:E183,M176,F183,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "31",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "49",
    Slice0BaseVoq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BaseVoq",
      RegMem => "MemField",
      Description => "For UC IB mirror -the Base VOQ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F176,E177,TRUE)
      InitValueSa => "0",
    },
    Slice0DestDev => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DestDev",
      RegMem => "MemField",
      Description => "For UC IB mirror -the DestDev",
      Width => "9",
      Position => "24:16", # Excel Formula: =calc_position(F177,E178)
      InitValueSa => "0",
    },
    Slice0TcMapProfile => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]TcMapProfile",
      RegMem => "MemField",
      Description => "For UC IB mirror -the TC Map profile",
      Width => "3",
      Position => "27:25", # Excel Formula: =calc_position(F178,E179)
      InitValueSa => "0",
    },
    Slice0MirrorToDest => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToDest",
      RegMem => "MemField",
      Description => "For UC IB mirror -indicates to send the mirror copy to the destination of the orig packet.
Relevant to UC packets only.",
      Width => "1",
      Position => "28", # Excel Formula: =calc_position(F179,E180)
      InitValueSa => "0",
    },
    Slice0IgnoreInRxrqSel => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]IgnoreInRxrqSel",
      RegMem => "MemField",
      Description => "For UC IB mirror -indicates that when RXRQ0 consist of  UC without IB mirror commands - disregard this mirror command in the selection of RXRQ.",
      Width => "1",
      Position => "29", # Excel Formula: =calc_position(F180,E181)
      InitValueSa => "0",
    },
    Slice0IsMc => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]IsMc",
      RegMem => "MemField",
      Description => "Indicates if this is a MC or UC IB mirror command",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F181,E182)
      InitValueSa => "0",
    },
    Slice0SamplingProb => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SamplingProb",
      RegMem => "MemField",
      Description => "The probability for sampling the packets that arrive with the corresponding IB mirror command.
If set to 0x3FFFF - all packets will be sampled.
If set to 0x1 - one of 0x3FFFF packets will be sampled",
      Width => "18",
      Position => "48:31", # Excel Formula: =calc_position(F182,E183)
      InitValueSa => "0",
    },
  },
  IbMirrorCmdTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 17;
    Name => "IbMirrorCmdTable[2]",
    RegMem => "Mem",
    Address => "500000",
    Description => "Table per slice",
    Width => "49", # Excel Formula: =calc_mem_width(E177:E183,M176,F183,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "31",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "49",
    Slice1BaseVoq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BaseVoq",
      RegMem => "MemField",
      Description => "For UC IB mirror -the Base VOQ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F176,E177,TRUE)
      InitValueSa => "0",
    },
    Slice1DestDev => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DestDev",
      RegMem => "MemField",
      Description => "For UC IB mirror -the DestDev",
      Width => "9",
      Position => "24:16", # Excel Formula: =calc_position(F177,E178)
      InitValueSa => "0",
    },
    Slice1TcMapProfile => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]TcMapProfile",
      RegMem => "MemField",
      Description => "For UC IB mirror -the TC Map profile",
      Width => "3",
      Position => "27:25", # Excel Formula: =calc_position(F178,E179)
      InitValueSa => "0",
    },
    Slice1MirrorToDest => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorToDest",
      RegMem => "MemField",
      Description => "For UC IB mirror -indicates to send the mirror copy to the destination of the orig packet.
Relevant to UC packets only.",
      Width => "1",
      Position => "28", # Excel Formula: =calc_position(F179,E180)
      InitValueSa => "0",
    },
    Slice1IgnoreInRxrqSel => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]IgnoreInRxrqSel",
      RegMem => "MemField",
      Description => "For UC IB mirror -indicates that when RXRQ0 consist of  UC without IB mirror commands - disregard this mirror command in the selection of RXRQ.",
      Width => "1",
      Position => "29", # Excel Formula: =calc_position(F180,E181)
      InitValueSa => "0",
    },
    Slice1IsMc => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]IsMc",
      RegMem => "MemField",
      Description => "Indicates if this is a MC or UC IB mirror command",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F181,E182)
      InitValueSa => "0",
    },
    Slice1SamplingProb => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SamplingProb",
      RegMem => "MemField",
      Description => "The probability for sampling the packets that arrive with the corresponding IB mirror command.
If set to 0x3FFFF - all packets will be sampled.
If set to 0x1 - one of 0x3FFFF packets will be sampled",
      Width => "18",
      Position => "48:31", # Excel Formula: =calc_position(F182,E183)
      InitValueSa => "0",
    },
  },
  IbMirrorCmdTableDocOnly0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 24;
    Name => "IbMirrorCmdTableDocOnly[2]",
    RegMem => "Mem",
    Address => "400000", # Excel Formula: =calc_mem_address(C176,A176,G184,L184)
    Description => "Table per slice",
    Width => "6", # Excel Formula: =calc_mem_width(E185:E185,M184,F185,-1)
    Type => "DocOnly",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "31",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "6",
    Slice0McBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McBitmap",
      RegMem => "MemField",
      Description => "The bitmap for MC IB mirror.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F184,E185,TRUE)
    },
  },
  IbMirrorCmdTableDocOnly1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 24;
    Name => "IbMirrorCmdTableDocOnly[2]",
    RegMem => "Mem",
    Address => "500000",
    Description => "Table per slice",
    Width => "6", # Excel Formula: =calc_mem_width(E185:E185,M184,F185,-1)
    Type => "DocOnly",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "31",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "6",
    Slice1McBitmap => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McBitmap",
      RegMem => "MemField",
      Description => "The bitmap for MC IB mirror.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F184,E185,TRUE)
    },
  },
  TcToPrioMap0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
    Name => "TcToPrioMap[2]",
    RegMem => "Mem",
    Address => "600000", # Excel Formula: =calc_mem_address(C176,A176,G186,L186)
    Description => "Table per slice",
    Width => "1", # Excel Formula: =calc_mem_width(E187:E187,M186,F187,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "1",
    Slice0TcToPrio => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]TcToPrio",
      RegMem => "MemField",
      Description => "Maps the TC to high/low priority.
0 - LP
1 - HP
Used in the logic for selecting the RXRQ the PD will be inserted to.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F186,E187,TRUE)
      InitValueAllModes => "line > 5 ? 1 : 0",
    },
  },
  TcToPrioMap1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
    Name => "TcToPrioMap[2]",
    RegMem => "Mem",
    Address => "700000",
    Description => "Table per slice",
    Width => "1", # Excel Formula: =calc_mem_width(E187:E187,M186,F187,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "1",
    Slice1TcToPrio => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]TcToPrio",
      RegMem => "MemField",
      Description => "Maps the TC to high/low priority.
0 - LP
1 - HP
Used in the logic for selecting the RXRQ the PD will be inserted to.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F186,E187,TRUE)
      InitValueAllModes => "line > 5 ? 1 : 0",
    },
  },
  PdMemory0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 9;
    Name => "PdMemory[2]",
    RegMem => "Mem",
    Address => "800000", # Excel Formula: =calc_mem_address(C186,A186,G188,L188)
    Width => "169", # Excel Formula: =calc_mem_width(E189:E189,M188,F189,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "640",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "160",
    Slice0Pd => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Pd",
      RegMem => "MemField",
      Description => "Width is the incoming PD width
Depth should be in the size of the RxRQs + the maximal latency of the pipes",
      Width => "160",
      Position => "159:0", # Excel Formula: =calc_position(F188,E189,TRUE)
    },
  },
  PdMemory1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 9;
    Name => "PdMemory[2]",
    RegMem => "Mem",
    Address => "900000",
    Width => "169", # Excel Formula: =calc_mem_width(E189:E189,M188,F189,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "640",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "160",
    Slice1Pd => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Pd",
      RegMem => "MemField",
      Description => "Width is the incoming PD width
Depth should be in the size of the RxRQs + the maximal latency of the pipes",
      Width => "160",
      Position => "159:0", # Excel Formula: =calc_position(F188,E189,TRUE)
    },
  },
  FeBroadcastBmp => { #Structure Type: Mem;
    Name => "FeBroadcastBmp",
    RegMem => "Mem",
    Address => "A00000", # Excel Formula: =calc_mem_address(C188,A188,G190,L190)
    Description => "Serves 2 slices",
    Width => "116", # Excel Formula: =calc_mem_width(E191:E191,M190,F191,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "108",
    MemWrapper => "2R1W Slow Write",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=50,PortErrPropagate=Disabled",
    MemLogicalWidth => "108",
    TableLinksBmp => { #Structure Type: MemField;
      Name => "TableLinksBmp",
      RegMem => "MemField",
      Description => "Used in FE2-3.
The entry is selected randomly (in PLB) or according to the LB-Key (FLB).
Each entry in the table represents one possible permutation of a full broadcast.",
      Width => "108",
      Position => "107:0", # Excel Formula: =calc_position(F190,E191,TRUE)
    },
  },
  FeRepResReqFifo0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 16;
    Name => "FeRepResReqFifo[2]",
    RegMem => "Mem",
    Address => "B00000", # Excel Formula: =calc_mem_address(C190,A190,G192,L192)
    Description => "Acts as Fe RepRes req FIFO in FE and as MC EMDB req FIFO in TR/LC/SA modes",
    Width => "108", # Excel Formula: =calc_mem_width(E193:E193,M192,F193,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "70",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "100",
    FeRepResReqFifo0Data => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 16;
      Name => "FeRepResReqFifo[n]Data",
      RegMem => "MemField",
      Description => "Width should be the max from FeRepResReqFifo ans McEMDBReqFifo",
      Width => "100",
      Position => "99:0", # Excel Formula: =calc_position(F192,E193,TRUE)
    },
  },
  FeRepResReqFifo1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 16;
    Name => "FeRepResReqFifo[2]",
    RegMem => "Mem",
    Address => "C00000",
    Description => "Acts as Fe RepRes req FIFO in FE and as MC EMDB req FIFO in TR/LC/SA modes",
    Width => "108", # Excel Formula: =calc_mem_width(E193:E193,M192,F193,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "70",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "100",
    FeRepResReqFifo1Data => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 16;
      Name => "FeRepResReqFifo[n]Data",
      RegMem => "MemField",
      Description => "Width should be the max from FeRepResReqFifo ans McEMDBReqFifo",
      Width => "100",
      Position => "99:0", # Excel Formula: =calc_position(F192,E193,TRUE)
    },
  },
  RxRepQueues0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
    Name => "RxRepQueues[2]",
    RegMem => "Mem",
    Address => "D00000", # Excel Formula: =calc_mem_address(C192,A192,G194,L194)
    Description => "4 rep queues - implemented with one memory shared ",
    Width => "194", # Excel Formula: =calc_mem_width(E195:E195,M194,F195,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "512",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "185",
    Slice0RxRepQueueData => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RxRepQueueData",
      RegMem => "MemField",
      Description => "Rx Replication Queues data",
      Width => "185",
      Position => "184:0", # Excel Formula: =calc_position(F194,E195,TRUE)
    },
  },
  RxRepQueues1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
    Name => "RxRepQueues[2]",
    RegMem => "Mem",
    Address => "E00000",
    Description => "4 rep queues - implemented with one memory shared ",
    Width => "194", # Excel Formula: =calc_mem_width(E195:E195,M194,F195,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "512",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "185",
    Slice1RxRepQueueData => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RxRepQueueData",
      RegMem => "MemField",
      Description => "Rx Replication Queues data",
      Width => "185",
      Position => "184:0", # Excel Formula: =calc_position(F194,E195,TRUE)
    },
  },
  RxRepQueuesExtraBits0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
    Name => "RxRepQueuesExtraBits[2]",
    RegMem => "Mem",
    Address => "F00000", # Excel Formula: =calc_mem_address(C194,A194,G196,L196)
    Description => "Continuation of RxRepQueues memory",
    Width => "2", # Excel Formula: =calc_mem_width(E197:E197,M196,F197,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "512",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "2",
    Slice0RxRepQueueDataExtraBits => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RxRepQueueDataExtraBits",
      RegMem => "MemField",
      Description => "Extra 2 bits to the RxRepQueues 185 bits",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F196,E197,TRUE)
    },
  },
  RxRepQueuesExtraBits1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
    Name => "RxRepQueuesExtraBits[2]",
    RegMem => "Mem",
    Address => "1000000",
    Description => "Continuation of RxRepQueues memory",
    Width => "2", # Excel Formula: =calc_mem_width(E197:E197,M196,F197,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "512",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "2",
    Slice1RxRepQueueDataExtraBits => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RxRepQueueDataExtraBits",
      RegMem => "MemField",
      Description => "Extra 2 bits to the RxRepQueues 185 bits",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F196,E197,TRUE)
    },
  },
  RxRepQueuesThresholds0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 22;
    Name => "RxRepQueuesThresholds[2]",
    RegMem => "Mem",
    Address => "1100000", # Excel Formula: =calc_mem_address(C196,A196,G198,L198)
    Description => "Thresholds for dropping PDs based on RXRQ fill level",
    Width => "20", # Excel Formula: =calc_mem_width(E199:E200,M198,F200,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "20",
    Slice0RxRepQueueThreshold0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RxRepQueueThreshold0",
      RegMem => "MemField",
      Description => "When the RXRQ fill level crosses this threshold Low-Priority PDs are dropped",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F198,E199,TRUE)
      InitValueAllModes => "512",
    },
    Slice0RxRepQueueThreshold1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]RxRepQueueThreshold1",
      RegMem => "MemField",
      Description => "When the RXRQ fill level crosses this threshold Low-Priority & Medium-Priority PDs are dropped",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F199,E200)
      InitValueAllModes => "512",
    },
  },
  RxRepQueuesThresholds1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 22;
    Name => "RxRepQueuesThresholds[2]",
    RegMem => "Mem",
    Address => "1200000",
    Description => "Thresholds for dropping PDs based on RXRQ fill level",
    Width => "20", # Excel Formula: =calc_mem_width(E199:E200,M198,F200,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "20",
    Slice1RxRepQueueThreshold0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RxRepQueueThreshold0",
      RegMem => "MemField",
      Description => "When the RXRQ fill level crosses this threshold Low-Priority PDs are dropped",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F198,E199,TRUE)
      InitValueAllModes => "512",
    },
    Slice1RxRepQueueThreshold1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]RxRepQueueThreshold1",
      RegMem => "MemField",
      Description => "When the RXRQ fill level crosses this threshold Low-Priority & Medium-Priority PDs are dropped",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F199,E200)
      InitValueAllModes => "512",
    },
  },
  PacketDropPriorityMapTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 27;
    Name => "PacketDropPriorityMapTable[2]",
    RegMem => "Mem",
    Address => "1300000", # Excel Formula: =calc_mem_address(C198,A198,G201,L201)
    Description => "Table per slice",
    Width => "2", # Excel Formula: =calc_mem_width(E202:E202,M201,F202,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "32",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "2",
    Slice0PacketDropPriority => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]PacketDropPriority",
      RegMem => "MemField",
      Description => "Maps the {OutColor,TC} of the packet to drop priority
0 - Low Priority
1 - Medium Priority
2 - High Priority (drop only if RXRQ is full)",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F201,E202,TRUE)
      InitValueAllModes => "(line % 8 < 3) ? 0: (line % 8 < 6) ? 1: 2",
    },
  },
  PacketDropPriorityMapTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 27;
    Name => "PacketDropPriorityMapTable[2]",
    RegMem => "Mem",
    Address => "1400000",
    Description => "Table per slice",
    Width => "2", # Excel Formula: =calc_mem_width(E202:E202,M201,F202,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "32",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "2",
    Slice1PacketDropPriority => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]PacketDropPriority",
      RegMem => "MemField",
      Description => "Maps the {OutColor,TC} of the packet to drop priority
0 - Low Priority
1 - Medium Priority
2 - High Priority (drop only if RXRQ is full)",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F201,E202,TRUE)
      InitValueAllModes => "(line % 8 < 3) ? 0: (line % 8 < 6) ? 1: 2",
    },
  },
  FrtTable => { #Structure Type: Mem;
    Name => "FrtTable",
    RegMem => "Mem",
    Address => "1500000", # Excel Formula: =calc_mem_address(C201,A201,G203,L203)
    Description => "3 tables each with 2R ports that will serve 2 slices
Serves the TR/SA/LC UC pipe (54 bits) and the FE UC pipe as FRT table (108 bits)",
    Width => "116", # Excel Formula: =calc_mem_width(E204:E204,M203,F204,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "512",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=50,PortErrPropagate=Disabled",
    MemLogicalWidth => "108",
    FrtTableFabricLinks => { #Structure Type: MemField;
      Name => "FrtTableFabricLinks",
      RegMem => "MemField",
      Description => "These bits represent the fabric links through which the destination device is reachable.",
      Width => "108",
      Position => "107:0", # Excel Formula: =calc_position(F203,E204,TRUE)
    },
  },
  DspTcMapTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
    Name => "DspTcMapTable[2]",
    RegMem => "Mem",
    Address => "1600000", # Excel Formula: =calc_mem_address(C203,A203,G205,L205)
    Description => "Table per slice
Table is accesses with {TC Map Profile[2:0], TC[2:0]}",
    Width => "4", # Excel Formula: =calc_mem_width(E206:E207,M205,F207,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "4",
    DspTcMap0TcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 9;
      Name => "DspTcMap[n]TcOffset",
      RegMem => "MemField",
      Description => "Defines the offset to be added to the VOQ number.",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F205,E206,TRUE)
      InitValueAllModes => "line % 8",
    },
    DspTcMap0IsFlb => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 9;
      Name => "DspTcMap[n]IsFlb",
      RegMem => "MemField",
      Description => "Determines the load balancing of the packet:
0 - PLB or local
1 - FLB",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F206,E207)
      InitValueAllModes => "0",
    },
  },
  DspTcMapTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
    Name => "DspTcMapTable[2]",
    RegMem => "Mem",
    Address => "1700000",
    Description => "Table per slice
Table is accesses with {TC Map Profile[2:0], TC[2:0]}",
    Width => "4", # Excel Formula: =calc_mem_width(E206:E207,M205,F207,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "4",
    DspTcMap1TcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 9;
      Name => "DspTcMap[n]TcOffset",
      RegMem => "MemField",
      Description => "Defines the offset to be added to the VOQ number.",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F205,E206,TRUE)
      InitValueAllModes => "line % 8",
    },
    DspTcMap1IsFlb => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 9;
      Name => "DspTcMap[n]IsFlb",
      RegMem => "MemField",
      Description => "Determines the load balancing of the packet:
0 - PLB or local
1 - FLB",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F206,E207)
      InitValueAllModes => "0",
    },
  },
  FlbLinkToVoqMapTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
    Name => "FlbLinkToVoqMapTable[2]",
    RegMem => "Mem",
    Address => "1800000", # Excel Formula: =calc_mem_address(C205,A205,G208,L208)
    Description => "Table per slice - used by the FE and TR/LC/SA pipes",
    Width => "16", # Excel Formula: =calc_mem_width(E209:E209,M208,F209,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "108",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "16",
    FlbLink0BaseVoq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 8;
      Name => "FlbLink[n]BaseVoq",
      RegMem => "MemField",
      Description => "Maps the selected fabric link to a VOQ base number.
In FE all 108 links are relevant.
In LC - only the 57 LSBs are relevant (represent the fabric links). There are 57 and not 54 bits for the purpose of 56 links fabric mode where each slice has 19 links instead of 18.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F208,E209,TRUE)
    },
  },
  FlbLinkToVoqMapTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
    Name => "FlbLinkToVoqMapTable[2]",
    RegMem => "Mem",
    Address => "1900000",
    Description => "Table per slice - used by the FE and TR/LC/SA pipes",
    Width => "16", # Excel Formula: =calc_mem_width(E209:E209,M208,F209,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "108",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "16",
    FlbLink1BaseVoq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 8;
      Name => "FlbLink[n]BaseVoq",
      RegMem => "MemField",
      Description => "Maps the selected fabric link to a VOQ base number.
In FE all 108 links are relevant.
In LC - only the 57 LSBs are relevant (represent the fabric links). There are 57 and not 54 bits for the purpose of 56 links fabric mode where each slice has 19 links instead of 18.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F208,E209,TRUE)
    },
  },
  FbLinkToLinkBundleTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 24;
    Name => "FbLinkToLinkBundleTable[2]",
    RegMem => "Mem",
    Address => "1A00000", # Excel Formula: =calc_mem_address(C208,A208,G210,L210)
    Description => "Table per slice",
    Width => "6", # Excel Formula: =calc_mem_width(E211:E211,M210,F211,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "108",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "6",
    Table0BundleNum => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Table[n]BundleNum",
      RegMem => "MemField",
      Description => "The bundle number associated with the link.
If the link is not associated with a bundle - set to -1",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F210,E211,TRUE)
      InitValueAllModes => "63",
    },
  },
  FbLinkToLinkBundleTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 24;
    Name => "FbLinkToLinkBundleTable[2]",
    RegMem => "Mem",
    Address => "1B00000",
    Description => "Table per slice",
    Width => "6", # Excel Formula: =calc_mem_width(E211:E211,M210,F211,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "108",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "6",
    Table1BundleNum => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Table[n]BundleNum",
      RegMem => "MemField",
      Description => "The bundle number associated with the link.
If the link is not associated with a bundle - set to -1",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F210,E211,TRUE)
      InitValueAllModes => "63",
    },
  },
  UcIbMirrorTcMapTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
    Name => "UcIbMirrorTcMapTable[2]",
    RegMem => "Mem",
    Address => "1C00000", # Excel Formula: =calc_mem_address(C210,A210,G212,L212)
    Description => "Table per slice
Table is accesses with {TC Map Profile[2:0], TC[2:0]}",
    Width => "4", # Excel Formula: =calc_mem_width(E213:E214,M212,F214,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "4",
    UcIbMirrorMap0TcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "UcIbMirrorMap[n]TcOffset",
      RegMem => "MemField",
      Description => "Determines the offset to be added to the VOQ number",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F212,E213,TRUE)
      InitValueAllModes => "0",
    },
    UcIbMirrorMap0IsFlb => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "UcIbMirrorMap[n]IsFlb",
      RegMem => "MemField",
      Description => "Determines the load balancing of the packet:
0 - PLB or local
1 - FLB",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F213,E214)
      InitValueAllModes => "0",
    },
  },
  UcIbMirrorTcMapTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
    Name => "UcIbMirrorTcMapTable[2]",
    RegMem => "Mem",
    Address => "1D00000",
    Description => "Table per slice
Table is accesses with {TC Map Profile[2:0], TC[2:0]}",
    Width => "4", # Excel Formula: =calc_mem_width(E213:E214,M212,F214,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "4",
    UcIbMirrorMap1TcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "UcIbMirrorMap[n]TcOffset",
      RegMem => "MemField",
      Description => "Determines the offset to be added to the VOQ number",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F212,E213,TRUE)
      InitValueAllModes => "0",
    },
    UcIbMirrorMap1IsFlb => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "UcIbMirrorMap[n]IsFlb",
      RegMem => "MemField",
      Description => "Determines the load balancing of the packet:
0 - PLB or local
1 - FLB",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F213,E214)
      InitValueAllModes => "0",
    },
  },
  McEmdbTcMapTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 17;
    Name => "McEmdbTcMapTable[2]",
    RegMem => "Mem",
    Address => "1E00000", # Excel Formula: =calc_mem_address(C212,A212,G215,L215)
    Description => "Table per slice
Accessed with {TC Map Profile[1:0],TC[2:0]}",
    Width => "3", # Excel Formula: =calc_mem_width(E216:E216,M215,F216,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "32",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "3",
    McEmdbTcMap0TcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "McEmdbTcMap[n]TcOffset",
      RegMem => "MemField",
      Description => "Determines the offset to be added to the VOQ number",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F215,E216,TRUE)
      InitValueAllModes => "0",
    },
  },
  McEmdbTcMapTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 17;
    Name => "McEmdbTcMapTable[2]",
    RegMem => "Mem",
    Address => "1F00000",
    Description => "Table per slice
Accessed with {TC Map Profile[1:0],TC[2:0]}",
    Width => "3", # Excel Formula: =calc_mem_width(E216:E216,M215,F216,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "32",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "3",
    McEmdbTcMap1TcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "McEmdbTcMap[n]TcOffset",
      RegMem => "MemField",
      Description => "Determines the offset to be added to the VOQ number",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F215,E216,TRUE)
      InitValueAllModes => "0",
    },
  },
  McBitmapTcMapTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "McBitmapTcMapTable[2]",
    RegMem => "Mem",
    Address => "2000000", # Excel Formula: =calc_mem_address(C215,A215,G217,L217)
    Description => "Table per slice
Accessed with {TC Map Profile[1:0],TC[2:0]}",
    Width => "3", # Excel Formula: =calc_mem_width(E218:E218,M217,F218,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "32",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "3",
    McBitmapTcMap0TcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "McBitmapTcMap[n]TcOffset",
      RegMem => "MemField",
      Description => "Determines the offset to be added to the VOQ number",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F217,E218,TRUE)
      InitValueAllModes => "line % 8",
    },
  },
  McBitmapTcMapTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "McBitmapTcMapTable[2]",
    RegMem => "Mem",
    Address => "2100000",
    Description => "Table per slice
Accessed with {TC Map Profile[1:0],TC[2:0]}",
    Width => "3", # Excel Formula: =calc_mem_width(E218:E218,M217,F218,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "32",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "3",
    McBitmapTcMap1TcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "McBitmapTcMap[n]TcOffset",
      RegMem => "MemField",
      Description => "Determines the offset to be added to the VOQ number",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F217,E218,TRUE)
      InitValueAllModes => "line % 8",
    },
  },
  McTcIsFlbMap0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 13;
    Name => "McTcIsFlbMap[2]",
    RegMem => "Mem",
    Address => "2200000", # Excel Formula: =calc_mem_address(C217,A217,G219,L219)
    Description => "Table per slice",
    Width => "1", # Excel Formula: =calc_mem_width(E220:E220,M219,F220,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "1",
    Slice0McTcIsFlb => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McTcIsFlb",
      RegMem => "MemField",
      Description => "0 - PLB
1 - FLB",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F219,E220,TRUE)
      InitValueAllModes => "0",
    },
  },
  McTcIsFlbMap1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 13;
    Name => "McTcIsFlbMap[2]",
    RegMem => "Mem",
    Address => "2300000",
    Description => "Table per slice",
    Width => "1", # Excel Formula: =calc_mem_width(E220:E220,M219,F220,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "1",
    Slice1McTcIsFlb => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McTcIsFlb",
      RegMem => "MemField",
      Description => "0 - PLB
1 - FLB",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F219,E220,TRUE)
      InitValueAllModes => "0",
    },
  },
  FeUcLinkBundleDescTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 24;
    Name => "FeUcLinkBundleDescTable[2]",
    RegMem => "Mem",
    Address => "2400000", # Excel Formula: =calc_mem_address(C219,A219,G221,L221)
    Width => "96", # Excel Formula: =calc_mem_width(E222:E229,M221,F229,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "54",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "88",
    Slice0BundleLink0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink0",
      RegMem => "MemField",
      Description => "When set to (-1) the link is not valid",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F221,E222,TRUE)
      InitValueFe => "127",
    },
    Slice0BundleLink0Bc => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink0Bc",
      RegMem => "MemField",
      Description => "Add Description",
      Width => "15",
      Position => "21:7", # Excel Formula: =calc_position(F222,E223)
      InitValueFe => "0",
    },
    Slice0BundleLink1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink1",
      RegMem => "MemField",
      Description => "When set to (-1) the link is not valid",
      Width => "7",
      Position => "28:22", # Excel Formula: =calc_position(F223,E224)
      InitValueFe => "127",
    },
    Slice0BundleLink1Bc => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink1Bc",
      RegMem => "MemField",
      Description => "Add Description",
      Width => "15",
      Position => "43:29", # Excel Formula: =calc_position(F224,E225)
      InitValueFe => "0",
    },
    Slice0BundleLink2 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink2",
      RegMem => "MemField",
      Description => "When set to (-1) the link is not valid",
      Width => "7",
      Position => "50:44", # Excel Formula: =calc_position(F225,E226)
      InitValueFe => "127",
    },
    Slice0BundleLink2Bc => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink2Bc",
      RegMem => "MemField",
      Description => "Add Description",
      Width => "15",
      Position => "65:51", # Excel Formula: =calc_position(F226,E227)
      InitValueFe => "0",
    },
    Slice0BundleLink3 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink3",
      RegMem => "MemField",
      Description => "When set to (-1) the link is not valid",
      Width => "7",
      Position => "72:66", # Excel Formula: =calc_position(F227,E228)
      InitValueFe => "127",
    },
    Slice0BundleLink3Bc => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink3Bc",
      RegMem => "MemField",
      Description => "Add Description",
      Width => "15",
      Position => "87:73", # Excel Formula: =calc_position(F228,E229)
      InitValueFe => "0",
    },
  },
  FeUcLinkBundleDescTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 24;
    Name => "FeUcLinkBundleDescTable[2]",
    RegMem => "Mem",
    Address => "2500000",
    Width => "96", # Excel Formula: =calc_mem_width(E222:E229,M221,F229,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "54",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "88",
    Slice1BundleLink0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink0",
      RegMem => "MemField",
      Description => "When set to (-1) the link is not valid",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F221,E222,TRUE)
      InitValueFe => "127",
    },
    Slice1BundleLink0Bc => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink0Bc",
      RegMem => "MemField",
      Description => "Add Description",
      Width => "15",
      Position => "21:7", # Excel Formula: =calc_position(F222,E223)
      InitValueFe => "0",
    },
    Slice1BundleLink1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink1",
      RegMem => "MemField",
      Description => "When set to (-1) the link is not valid",
      Width => "7",
      Position => "28:22", # Excel Formula: =calc_position(F223,E224)
      InitValueFe => "127",
    },
    Slice1BundleLink1Bc => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink1Bc",
      RegMem => "MemField",
      Description => "Add Description",
      Width => "15",
      Position => "43:29", # Excel Formula: =calc_position(F224,E225)
      InitValueFe => "0",
    },
    Slice1BundleLink2 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink2",
      RegMem => "MemField",
      Description => "When set to (-1) the link is not valid",
      Width => "7",
      Position => "50:44", # Excel Formula: =calc_position(F225,E226)
      InitValueFe => "127",
    },
    Slice1BundleLink2Bc => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink2Bc",
      RegMem => "MemField",
      Description => "Add Description",
      Width => "15",
      Position => "65:51", # Excel Formula: =calc_position(F226,E227)
      InitValueFe => "0",
    },
    Slice1BundleLink3 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink3",
      RegMem => "MemField",
      Description => "When set to (-1) the link is not valid",
      Width => "7",
      Position => "72:66", # Excel Formula: =calc_position(F227,E228)
      InitValueFe => "127",
    },
    Slice1BundleLink3Bc => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BundleLink3Bc",
      RegMem => "MemField",
      Description => "Add Description",
      Width => "15",
      Position => "87:73", # Excel Formula: =calc_position(F228,E229)
      InitValueFe => "0",
    },
  },
  FeRlbUcTxFbLinkToOqMap0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 23;
    Name => "FeRlbUcTxFbLinkToOqMap[2]",
    RegMem => "Mem",
    Address => "2600000", # Excel Formula: =calc_mem_address(C221,A221,G230,L230)
    Description => "Mapping from Tx fabric link to OQ in RLB UC",
    Width => "9", # Excel Formula: =calc_mem_width(E231:E231,M230,F231,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "108",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "9",
    Table0BaseOq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Table[n]BaseOq",
      RegMem => "MemField",
      Description => "In FE PLB UC - maps the  selected link to an OQ number",
      Width => "9",
      Position => "8:0", # Excel Formula: =calc_position(F230,E231,TRUE)
      InitValueFe => "((round_down(line/18) == 0 || round_down(line/18) == 1 || round_down(line/18) == 3) && line%18 < 10) ? (line%18)*8 :
((round_down(line/18) == 0 || round_down(line/18) == 1 || round_down(line/18) == 3) && line%18 >= 10) ? 208 + ((line%18) - 10)*8 :
((round_down(line/18) == 2 || round_down(line/18) == 4 || round_down(line/18) == 5) && line%18 < 8) ? (line%18)*8 :
((round_down(line/18) == 2 || round_down(line/18) == 4 || round_down(line/18) == 5) && line%18 >= 8) ? 208 + ((line%18) - 8)*8 : 0",
    },
  },
  FeRlbUcTxFbLinkToOqMap1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 23;
    Name => "FeRlbUcTxFbLinkToOqMap[2]",
    RegMem => "Mem",
    Address => "2700000",
    Description => "Mapping from Tx fabric link to OQ in RLB UC",
    Width => "9", # Excel Formula: =calc_mem_width(E231:E231,M230,F231,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "108",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "9",
    Table1BaseOq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Table[n]BaseOq",
      RegMem => "MemField",
      Description => "In FE PLB UC - maps the  selected link to an OQ number",
      Width => "9",
      Position => "8:0", # Excel Formula: =calc_position(F230,E231,TRUE)
      InitValueFe => "((round_down(line/18) == 0 || round_down(line/18) == 1 || round_down(line/18) == 3) && line%18 < 10) ? (line%18)*8 :
((round_down(line/18) == 0 || round_down(line/18) == 1 || round_down(line/18) == 3) && line%18 >= 10) ? 208 + ((line%18) - 10)*8 :
((round_down(line/18) == 2 || round_down(line/18) == 4 || round_down(line/18) == 5) && line%18 < 8) ? (line%18)*8 :
((round_down(line/18) == 2 || round_down(line/18) == 4 || round_down(line/18) == 5) && line%18 >= 8) ? 208 + ((line%18) - 8)*8 : 0",
    },
  },
  PdMemFreeBuffManager0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
    Name => "PdMemFreeBuffManager[2]",
    RegMem => "Mem",
    Address => "2800000", # Excel Formula: =calc_mem_address(C230,A230,G232,L232)
    Description => "PD-Memory Free-Buffer-Manager",
    Width => "32", # Excel Formula: =calc_mem_width(E233:E233,M232,F233,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "20",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "32",
    Slice0PdBuffer => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]PdBuffer",
      RegMem => "MemField",
      Description => "Buffers allocation line for the PD-Mem FBM",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F232,E233,TRUE)
    },
  },
  PdMemFreeBuffManager1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
    Name => "PdMemFreeBuffManager[2]",
    RegMem => "Mem",
    Address => "2900000",
    Description => "PD-Memory Free-Buffer-Manager",
    Width => "32", # Excel Formula: =calc_mem_width(E233:E233,M232,F233,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "20",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "32",
    Slice1PdBuffer => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]PdBuffer",
      RegMem => "MemField",
      Description => "Buffers allocation line for the PD-Mem FBM",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F232,E233,TRUE)
    },
  },
  MsVoqFabricContextOffset0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 25;
    Name => "MsVoqFabricContextOffset[2]",
    RegMem => "Mem",
    Address => "2A00000", # Excel Formula: =calc_mem_address(C232,A232,G234,L234)
    Description => "Table per slice",
    Width => "16", # Excel Formula: =calc_mem_width(E235:E235,M234,F235,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "16",
    Slice0MsVoqFabricContextOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MsVoqFabricContextOffset",
      RegMem => "MemField",
      Description => "Defines the Merge Sort VOQ offset according to the fabric context.
Used in both FE and Tr/LC/SA.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F234,E235,TRUE)
      InitValueAllModes => "line*144",
    },
  },
  MsVoqFabricContextOffset1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 25;
    Name => "MsVoqFabricContextOffset[2]",
    RegMem => "Mem",
    Address => "2B00000",
    Description => "Table per slice",
    Width => "16", # Excel Formula: =calc_mem_width(E235:E235,M234,F235,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "16",
    Slice1MsVoqFabricContextOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MsVoqFabricContextOffset",
      RegMem => "MemField",
      Description => "Defines the Merge Sort VOQ offset according to the fabric context.
Used in both FE and Tr/LC/SA.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F234,E235,TRUE)
      InitValueAllModes => "line*144",
    },
  },
  DestSliceVoqMapTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
    Name => "DestSliceVoqMapTable[2]",
    RegMem => "Mem",
    Address => "2C00000", # Excel Formula: =calc_mem_address(C234,A234,G236,L236)
    Description => "Table per slice",
    Width => "16", # Excel Formula: =calc_mem_width(E237:E237,M236,F237,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "6",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "16",
    Table0DestSliceVoq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Table[n]DestSliceVoq",
      RegMem => "MemField",
      Description => "The base VOQ number according to the target slice number.
In SN PLB - The VOQ number (VOQ per transmit slice)
In TS PLB - Offset for the MS VOQs. Should be set to transmit-slice * 24
Used in both FE and Tr/LC/SA.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F236,E237,TRUE)
      InitValueAllModes => "line*24",
    },
  },
  DestSliceVoqMapTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
    Name => "DestSliceVoqMapTable[2]",
    RegMem => "Mem",
    Address => "2D00000",
    Description => "Table per slice",
    Width => "16", # Excel Formula: =calc_mem_width(E237:E237,M236,F237,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "6",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "16",
    Table1DestSliceVoq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Table[n]DestSliceVoq",
      RegMem => "MemField",
      Description => "The base VOQ number according to the target slice number.
In SN PLB - The VOQ number (VOQ per transmit slice)
In TS PLB - Offset for the MS VOQs. Should be set to transmit-slice * 24
Used in both FE and Tr/LC/SA.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F236,E237,TRUE)
      InitValueAllModes => "line*24",
    },
  },
  MirrorMcTcIsFlb0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 16;
    Name => "MirrorMcTcIsFlb[2]",
    RegMem => "Mem",
    Address => "2E00000", # Excel Formula: =calc_mem_address(C236,A236,G238,L238)
    Description => "Table per slice",
    Width => "1", # Excel Formula: =calc_mem_width(E239:E239,M238,F239,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "1",
    Table0MirrorMcTcIsFlb => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Table[n]MirrorMcTcIsFlb",
      RegMem => "MemField",
      Description => "Indicates according to the TC of the packet which load balancing is performed on MC mirror packets.
0 - PLB
1 - FLB",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F238,E239,TRUE)
      InitValueAllModes => "0",
    },
  },
  MirrorMcTcIsFlb1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 16;
    Name => "MirrorMcTcIsFlb[2]",
    RegMem => "Mem",
    Address => "2F00000",
    Description => "Table per slice",
    Width => "1", # Excel Formula: =calc_mem_width(E239:E239,M238,F239,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "1",
    Table1MirrorMcTcIsFlb => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Table[n]MirrorMcTcIsFlb",
      RegMem => "MemField",
      Description => "Indicates according to the TC of the packet which load balancing is performed on MC mirror packets.
0 - PLB
1 - FLB",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F238,E239,TRUE)
      InitValueAllModes => "0",
    },
  },
  SourcePortMirrorLUT0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 20;
    Name => "SourcePortMirrorLUT[2]",
    RegMem => "Mem",
    Address => "3000000", # Excel Formula: =calc_mem_address(C238,A238,G240,L240)
    Description => "Table per slice",
    Width => "16", # Excel Formula: =calc_mem_width(E241:E241,M240,F241,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "16",
    Table0SrcPortMirrorVoq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Table[n]SrcPortMirrorVoq",
      RegMem => "MemField",
      Description => "The table is accessed according to SourceIf[7:2] and the table contains the VOQ number that the mirror to source packets will be inserted to.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F240,E241,TRUE)
      InitValueAllModes => "0",
    },
  },
  SourcePortMirrorLUT1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 20;
    Name => "SourcePortMirrorLUT[2]",
    RegMem => "Mem",
    Address => "3100000",
    Description => "Table per slice",
    Width => "16", # Excel Formula: =calc_mem_width(E241:E241,M240,F241,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "16",
    Table1SrcPortMirrorVoq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Table[n]SrcPortMirrorVoq",
      RegMem => "MemField",
      Description => "The table is accessed according to SourceIf[7:2] and the table contains the VOQ number that the mirror to source packets will be inserted to.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F240,E241,TRUE)
      InitValueAllModes => "0",
    },
  },
  MirrorMcBitmapBaseVoqLut0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 25;
    Name => "MirrorMcBitmapBaseVoqLut[2]",
    RegMem => "Mem",
    Address => "3200000", # Excel Formula: =calc_mem_address(C240,A240,G242,L242)
    Description => "Table per slice",
    Width => "19", # Excel Formula: =calc_mem_width(E243:E244,M242,F244,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "6",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "19",
    Slice0MirrorMcBitmapBaseVoq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorMcBitmapBaseVoq",
      RegMem => "MemField",
      Description => "The Base VOQ that corresponds to the bitmap in MC mirror packets.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F242,E243,TRUE)
      InitValueAllModes => "0",
    },
    Slice0MirrorMcBitmapTcMapProfile => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorMcBitmapTcMapProfile",
      RegMem => "MemField",
      Description => "The TC map profile",
      Width => "3",
      Position => "18:16", # Excel Formula: =calc_position(F243,E244)
      InitValueAllModes => "0",
    },
  },
  MirrorMcBitmapBaseVoqLut1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 25;
    Name => "MirrorMcBitmapBaseVoqLut[2]",
    RegMem => "Mem",
    Address => "3300000",
    Description => "Table per slice",
    Width => "19", # Excel Formula: =calc_mem_width(E243:E244,M242,F244,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "6",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "19",
    Slice1MirrorMcBitmapBaseVoq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorMcBitmapBaseVoq",
      RegMem => "MemField",
      Description => "The Base VOQ that corresponds to the bitmap in MC mirror packets.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F242,E243,TRUE)
      InitValueAllModes => "0",
    },
    Slice1MirrorMcBitmapTcMapProfile => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorMcBitmapTcMapProfile",
      RegMem => "MemField",
      Description => "The TC map profile",
      Width => "3",
      Position => "18:16", # Excel Formula: =calc_position(F243,E244)
      InitValueAllModes => "0",
    },
  },
  McIbMirrorTcMapTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
    Name => "McIbMirrorTcMapTable[2]",
    RegMem => "Mem",
    Address => "3400000", # Excel Formula: =calc_mem_address(C242,A242,G245,L245)
    Description => "Table per slice",
    Width => "3", # Excel Formula: =calc_mem_width(E246:E246,M245,F246,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "3",
    McIbMirrorMap0TcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "McIbMirrorMap[n]TcOffset",
      RegMem => "MemField",
      Description => "Add Description",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F245,E246,TRUE)
      InitValueAllModes => "0",
    },
  },
  McIbMirrorTcMapTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
    Name => "McIbMirrorTcMapTable[2]",
    RegMem => "Mem",
    Address => "3500000",
    Description => "Table per slice",
    Width => "3", # Excel Formula: =calc_mem_width(E246:E246,M245,F246,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "3",
    McIbMirrorMap1TcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "McIbMirrorMap[n]TcOffset",
      RegMem => "MemField",
      Description => "Add Description",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F245,E246,TRUE)
      InitValueAllModes => "0",
    },
  },
  SourceIf2PortMapTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 22;
    Name => "SourceIf2PortMapTable[2]",
    RegMem => "Mem",
    Address => "3600000", # Excel Formula: =calc_mem_address(C245,A245,G247,L247)
    Description => "Table per slice",
    Width => "5", # Excel Formula: =calc_mem_width(E248:E248,M247,F248,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "5",
    SourceIfTable0Port => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "SourceIfTable[n]Port",
      RegMem => "MemField",
      Description => "Maps the SourceIf[7:2] from the PD to a local port number",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F247,E248,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
      InitValueLcFab => "(slice_pair == 1) && (instance == 1) && (line < 12*2) ? round_down(line/2) :
(slice_pair == 1) && (instance == 1) && (line > 25) && (line < 26+8*2) ? 12 + round_down((line-26)/2) :
(slice_pair == 2) && (instance == 0) && (line < 8*2) ? round_down(line/2) :
(slice_pair == 2) && (instance == 0) && (line > 25) && (line < 26+12*2) ? 8 + round_down((line-26)/2) :
(slice_pair == 2) && (instance == 1) && (line < 12*2) ? round_down(line/2) :
(slice_pair == 2) && (instance == 1) && (line > 25) && (line < 26+12*2) ? 12 + round_down((line-26)/2) : 0",
      InitValueFe => "(slice_pair == 0) && (instance == 0) && (line < 10*2) ? round_down(line/2) :
(slice_pair == 0) && (instance == 0) && (line > 25) && (line < 26+8*2) ? 10 + round_down((line-26)/2) :
(slice_pair == 0) && (instance == 1) && (line < 10*2) ? round_down(line/2) :
(slice_pair == 0) && (instance == 1) && (line > 25) && (line < 26+8*2) ? 10 + round_down((line-26)/2) :
(slice_pair == 1) && (instance == 0) && (line < 8*2) ? round_down(line/2) :
(slice_pair == 1) && (instance == 0) && (line > 25) && (line < 26+10*2) ? 8 + round_down((line-26)/2) :
(slice_pair == 1) && (instance == 1) && (line < 10*2) ? round_down(line/2) :
(slice_pair == 1) && (instance == 1) && (line > 25) && (line < 26+8*2) ? 10 + round_down((line-26)/2) :
(slice_pair == 2) && (instance == 0) && (line < 8*2) ? round_down(line/2) :
(slice_pair == 2) && (instance == 0) && (line > 25) && (line < 26+10*2) ? 8 + round_down((line-26)/2) :
(slice_pair == 2) && (instance == 1) && (line < 8*2) ? round_down(line/2) :
(slice_pair == 2) && (instance == 1) && (line > 25) && (line < 26+10*2) ? 8 + round_down((line-26)/2) : 0",
    },
  },
  SourceIf2PortMapTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 22;
    Name => "SourceIf2PortMapTable[2]",
    RegMem => "Mem",
    Address => "3700000",
    Description => "Table per slice",
    Width => "5", # Excel Formula: =calc_mem_width(E248:E248,M247,F248,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "5",
    SourceIfTable1Port => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "SourceIfTable[n]Port",
      RegMem => "MemField",
      Description => "Maps the SourceIf[7:2] from the PD to a local port number",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F247,E248,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
      InitValueLcFab => "(slice_pair == 1) && (instance == 1) && (line < 12*2) ? round_down(line/2) :
(slice_pair == 1) && (instance == 1) && (line > 25) && (line < 26+8*2) ? 12 + round_down((line-26)/2) :
(slice_pair == 2) && (instance == 0) && (line < 8*2) ? round_down(line/2) :
(slice_pair == 2) && (instance == 0) && (line > 25) && (line < 26+12*2) ? 8 + round_down((line-26)/2) :
(slice_pair == 2) && (instance == 1) && (line < 12*2) ? round_down(line/2) :
(slice_pair == 2) && (instance == 1) && (line > 25) && (line < 26+12*2) ? 12 + round_down((line-26)/2) : 0",
      InitValueFe => "(slice_pair == 0) && (instance == 0) && (line < 10*2) ? round_down(line/2) :
(slice_pair == 0) && (instance == 0) && (line > 25) && (line < 26+8*2) ? 10 + round_down((line-26)/2) :
(slice_pair == 0) && (instance == 1) && (line < 10*2) ? round_down(line/2) :
(slice_pair == 0) && (instance == 1) && (line > 25) && (line < 26+8*2) ? 10 + round_down((line-26)/2) :
(slice_pair == 1) && (instance == 0) && (line < 8*2) ? round_down(line/2) :
(slice_pair == 1) && (instance == 0) && (line > 25) && (line < 26+10*2) ? 8 + round_down((line-26)/2) :
(slice_pair == 1) && (instance == 1) && (line < 10*2) ? round_down(line/2) :
(slice_pair == 1) && (instance == 1) && (line > 25) && (line < 26+8*2) ? 10 + round_down((line-26)/2) :
(slice_pair == 2) && (instance == 0) && (line < 8*2) ? round_down(line/2) :
(slice_pair == 2) && (instance == 0) && (line > 25) && (line < 26+10*2) ? 8 + round_down((line-26)/2) :
(slice_pair == 2) && (instance == 1) && (line < 8*2) ? round_down(line/2) :
(slice_pair == 2) && (instance == 1) && (line > 25) && (line < 26+10*2) ? 8 + round_down((line-26)/2) : 0",
    },
  },
  McBitmapBaseVoqLut0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "McBitmapBaseVoqLut[2]",
    RegMem => "Mem",
    Address => "3800000", # Excel Formula: =calc_mem_address(C247,A247,G249,L249)
    Description => "Table per slice
Used in TR/LC/SA MC pipe, used in PLB MC-BMP processing.",
    Width => "18", # Excel Formula: =calc_mem_width(E250:E251,M249,F251,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "6",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "18",
    Slice0McBitmapBaseVoq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McBitmapBaseVoq",
      RegMem => "MemField",
      Description => "The Base VOQ that corresponds to the bitmap in MC packets.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F249,E250,TRUE)
      InitValueSa => "line * 16 ",
      InitValueLcNwk => "line < 3 ? line*16 : 48",
      InitValueLcFab => "line * 16 ",
      InitValueFe => "line * 16 ",
    },
    Slice0McBitmapTcMapProfile => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McBitmapTcMapProfile",
      RegMem => "MemField",
      Description => "The TC map profile",
      Width => "2",
      Position => "17:16", # Excel Formula: =calc_position(F250,E251)
      InitValueSa => "0",
      InitValueLcNwk => "line < 3 ? 0 : 2",
      InitValueLcFab => "0",
      InitValueFe => "0",
    },
  },
  McBitmapBaseVoqLut1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "McBitmapBaseVoqLut[2]",
    RegMem => "Mem",
    Address => "3900000",
    Description => "Table per slice
Used in TR/LC/SA MC pipe, used in PLB MC-BMP processing.",
    Width => "18", # Excel Formula: =calc_mem_width(E250:E251,M249,F251,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "6",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "18",
    Slice1McBitmapBaseVoq => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McBitmapBaseVoq",
      RegMem => "MemField",
      Description => "The Base VOQ that corresponds to the bitmap in MC packets.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F249,E250,TRUE)
      InitValueSa => "line * 16 ",
      InitValueLcNwk => "line < 3 ? line*16 : 48",
      InitValueLcFab => "line * 16 ",
      InitValueFe => "line * 16 ",
    },
    Slice1McBitmapTcMapProfile => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McBitmapTcMapProfile",
      RegMem => "MemField",
      Description => "The TC map profile",
      Width => "2",
      Position => "17:16", # Excel Formula: =calc_position(F250,E251)
      InitValueSa => "0",
      InitValueLcNwk => "line < 3 ? 0 : 2",
      InitValueLcFab => "0",
      InitValueFe => "0",
    },
  },
  FlbMcBitmapTcMap0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 17;
    Name => "FlbMcBitmapTcMap[2]",
    RegMem => "Mem",
    Address => "3A00000", # Excel Formula: =calc_mem_address(C249,A249,G252,L252)
    Description => "Table per slice",
    Width => "3", # Excel Formula: =calc_mem_width(E253:E253,M252,F253,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "3",
    Slice0FlbMcBitmapTcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]FlbMcBitmapTcOffset",
      RegMem => "MemField",
      Description => "Defines the TC offset for FLB MC packets that are replicated using the BMP.",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F252,E253,TRUE)
    },
  },
  FlbMcBitmapTcMap1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 17;
    Name => "FlbMcBitmapTcMap[2]",
    RegMem => "Mem",
    Address => "3B00000",
    Description => "Table per slice",
    Width => "3", # Excel Formula: =calc_mem_width(E253:E253,M252,F253,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "3",
    Slice1FlbMcBitmapTcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]FlbMcBitmapTcOffset",
      RegMem => "MemField",
      Description => "Defines the TC offset for FLB MC packets that are replicated using the BMP.",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F252,E253,TRUE)
    },
  },
  OqFabricContextOffset0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 22;
    Name => "OqFabricContextOffset[2]",
    RegMem => "Mem",
    Address => "3C00000", # Excel Formula: =calc_mem_address(C252,A252,G254,L254)
    Description => "Table per slice",
    Width => "9", # Excel Formula: =calc_mem_width(E255:E255,M254,F255,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "9",
    Slice0OqFabricContextOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]OqFabricContextOffset",
      RegMem => "MemField",
      Description => "Defines the OQ offset according to the fabric context.
Used in FE UC PLB traffic (arrives with either DD or DSP)",
      Width => "9",
      Position => "8:0", # Excel Formula: =calc_position(F254,E255,TRUE)
      InitValueAllModes => "(line == `RLB_UCH_CONTEXT) ? 6 : (line == `RLB_UCL_CONTEXT)  ? 5 : 0 ",
    },
  },
  OqFabricContextOffset1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 22;
    Name => "OqFabricContextOffset[2]",
    RegMem => "Mem",
    Address => "3D00000",
    Description => "Table per slice",
    Width => "9", # Excel Formula: =calc_mem_width(E255:E255,M254,F255,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "9",
    Slice1OqFabricContextOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]OqFabricContextOffset",
      RegMem => "MemField",
      Description => "Defines the OQ offset according to the fabric context.
Used in FE UC PLB traffic (arrives with either DD or DSP)",
      Width => "9",
      Position => "8:0", # Excel Formula: =calc_position(F254,E255,TRUE)
      InitValueAllModes => "(line == `RLB_UCH_CONTEXT) ? 6 : (line == `RLB_UCL_CONTEXT)  ? 5 : 0 ",
    },
  },
  FeTxrqTcMap0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
    Name => "FeTxrqTcMap[2]",
    RegMem => "Mem",
    Address => "3E00000", # Excel Formula: =calc_mem_address(C254,A254,G256,L256)
    Description => "Table per slice",
    Width => "3", # Excel Formula: =calc_mem_width(E257:E257,M256,F257,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "3",
    Slice0FeTxrqTcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]FeTxrqTcOffset",
      RegMem => "MemField",
      Description => "Defines the TC offset for FE FLB MC packets.",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F256,E257,TRUE)
    },
  },
  FeTxrqTcMap1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
    Name => "FeTxrqTcMap[2]",
    RegMem => "Mem",
    Address => "3F00000",
    Description => "Table per slice",
    Width => "3", # Excel Formula: =calc_mem_width(E257:E257,M256,F257,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "3",
    Slice1FeTxrqTcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]FeTxrqTcOffset",
      RegMem => "MemField",
      Description => "Defines the TC offset for FE FLB MC packets.",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F256,E257,TRUE)
    },
  },
  McFlbTxSliceVoqMap0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "McFlbTxSliceVoqMap[2]",
    RegMem => "Mem",
    Address => "4000000", # Excel Formula: =calc_mem_address(C256,A256,G258,L258)
    Description => "Table per slice",
    Width => "16", # Excel Formula: =calc_mem_width(E259:E259,M258,F259,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "6",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "16",
    Slice0McFlbTxSliceVoqOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]McFlbTxSliceVoqOffset",
      RegMem => "MemField",
      Description => "Defines the VOQ offset according to the target slice for MC FLB packets in FE.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F258,E259,TRUE)
    },
  },
  McFlbTxSliceVoqMap1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "McFlbTxSliceVoqMap[2]",
    RegMem => "Mem",
    Address => "4100000",
    Description => "Table per slice",
    Width => "16", # Excel Formula: =calc_mem_width(E259:E259,M258,F259,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "6",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "16",
    Slice1McFlbTxSliceVoqOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]McFlbTxSliceVoqOffset",
      RegMem => "MemField",
      Description => "Defines the VOQ offset according to the target slice for MC FLB packets in FE.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F258,E259,TRUE)
    },
  },
  OutColorAndTcToThrMapTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 27;
    Name => "OutColorAndTcToThrMapTable[2]",
    RegMem => "Mem",
    Address => "4200000", # Excel Formula: =calc_mem_address(C258,A258,G260,L260)
    Description => "Table per slice",
    Width => "3", # Excel Formula: =calc_mem_width(E261:E263,M260,F263,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "32",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "3",
    Slice0CounterA_Threshold => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CounterA_Threshold",
      RegMem => "MemField",
      Description => "Maps the {OutColor,TC} of the packet to one of two counter thresholds.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F260,E261,TRUE)
      InitValueAllModes => "(line % 8 >= 6) ? 1 : 0 ",
    },
    Slice0CounterB_Threshold => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CounterB_Threshold",
      RegMem => "MemField",
      Description => "Maps the {OutColor,TC} of the packet to one of two counter thresholds.",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F261,E262)
      InitValueAllModes => "(line % 8 >= 6) ? 1 : 0 ",
    },
    Slice0CounterE_Threshold => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CounterE_Threshold",
      RegMem => "MemField",
      Description => "Maps the {OutColor,TC} of the packet to one of two counter thresholds.",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F262,E263)
      InitValueAllModes => "(line % 8 >= 6) ? 1 : 0 ",
    },
  },
  OutColorAndTcToThrMapTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 27;
    Name => "OutColorAndTcToThrMapTable[2]",
    RegMem => "Mem",
    Address => "4300000",
    Description => "Table per slice",
    Width => "3", # Excel Formula: =calc_mem_width(E261:E263,M260,F263,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "32",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "3",
    Slice1CounterA_Threshold => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CounterA_Threshold",
      RegMem => "MemField",
      Description => "Maps the {OutColor,TC} of the packet to one of two counter thresholds.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F260,E261,TRUE)
      InitValueAllModes => "(line % 8 >= 6) ? 1 : 0 ",
    },
    Slice1CounterB_Threshold => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CounterB_Threshold",
      RegMem => "MemField",
      Description => "Maps the {OutColor,TC} of the packet to one of two counter thresholds.",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F261,E262)
      InitValueAllModes => "(line % 8 >= 6) ? 1 : 0 ",
    },
    Slice1CounterE_Threshold => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CounterE_Threshold",
      RegMem => "MemField",
      Description => "Maps the {OutColor,TC} of the packet to one of two counter thresholds.",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F262,E263)
      InitValueAllModes => "(line % 8 >= 6) ? 1 : 0 ",
    },
  },
  SourceIfIsRecycleMapTable0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 26;
    Name => "SourceIfIsRecycleMapTable[2]",
    RegMem => "Mem",
    Address => "4400000", # Excel Formula: =calc_mem_address(C260,A260,G264,L264)
    Description => "Table per slice",
    Width => "1", # Excel Formula: =calc_mem_width(E265:E265,M264,F265,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "1",
    SourceIfTable0IsRecycle => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "SourceIfTable[n]IsRecycle",
      RegMem => "MemField",
      Description => "Maps the SourceIf[7:2] to 1 bt that indicates if it is recyle port or not",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F264,E265,TRUE)
      InitValueAllModes => "0",
    },
  },
  SourceIfIsRecycleMapTable1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 26;
    Name => "SourceIfIsRecycleMapTable[2]",
    RegMem => "Mem",
    Address => "4500000",
    Description => "Table per slice",
    Width => "1", # Excel Formula: =calc_mem_width(E265:E265,M264,F265,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "1",
    SourceIfTable1IsRecycle => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "SourceIfTable[n]IsRecycle",
      RegMem => "MemField",
      Description => "Maps the SourceIf[7:2] to 1 bt that indicates if it is recyle port or not",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F264,E265,TRUE)
      InitValueAllModes => "0",
    },
  },
  MirrorFlbMulticastTcMap0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 24;
    Name => "MirrorFlbMulticastTcMap[2]",
    RegMem => "Mem",
    Address => "4600000", # Excel Formula: =calc_mem_address(C264,A264,G266,L266)
    Description => "Table per slice",
    Width => "3", # Excel Formula: =calc_mem_width(E267:E267,M266,F267,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "3",
    Slice0MirrorFlbMulticastTcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorFlbMulticastTcOffset",
      RegMem => "MemField",
      Description => "Maps the TC to TC offset for FLB mirror MC packets",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F266,E267,TRUE)
    },
  },
  MirrorFlbMulticastTcMap1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 24;
    Name => "MirrorFlbMulticastTcMap[2]",
    RegMem => "Mem",
    Address => "4700000",
    Description => "Table per slice",
    Width => "3", # Excel Formula: =calc_mem_width(E267:E267,M266,F267,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "3",
    Slice1MirrorFlbMulticastTcOffset => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MirrorFlbMulticastTcOffset",
      RegMem => "MemField",
      Description => "Maps the TC to TC offset for FLB mirror MC packets",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F266,E267,TRUE)
    },
  },
  UcPipeOutFifo0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
    Name => "UcPipeOutFifo[2]",
    RegMem => "Mem",
    Address => "4800000", # Excel Formula: =calc_mem_address(C266,A266,G268,L268)
    Width => "79", # Excel Formula: =calc_mem_width(E269:E269,M268,F269,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "52",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "71",
    UcPipeOutFifo0Data => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "UcPipeOutFifo[n]Data",
      RegMem => "MemField",
      Description => "Holds the pipe data required to build the out PD.",
      Width => "71",
      Position => "70:0", # Excel Formula: =calc_position(F268,E269,TRUE)
    },
  },
  UcPipeOutFifo1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
    Name => "UcPipeOutFifo[2]",
    RegMem => "Mem",
    Address => "4900000",
    Width => "79", # Excel Formula: =calc_mem_width(E269:E269,M268,F269,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "52",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "71",
    UcPipeOutFifo1Data => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "UcPipeOutFifo[n]Data",
      RegMem => "MemField",
      Description => "Holds the pipe data required to build the out PD.",
      Width => "71",
      Position => "70:0", # Excel Formula: =calc_position(F268,E269,TRUE)
    },
  },
  McPipeOutFifo0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
    Name => "McPipeOutFifo[2]",
    RegMem => "Mem",
    Address => "4A00000", # Excel Formula: =calc_mem_address(C268,A268,G270,L270)
    Width => "79", # Excel Formula: =calc_mem_width(E271:E271,M270,F271,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "42",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "71",
    McPipeOutFifo0Data => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "McPipeOutFifo[n]Data",
      RegMem => "MemField",
      Description => "Holds the pipe data required to build the out PD.",
      Width => "71",
      Position => "70:0", # Excel Formula: =calc_position(F270,E271,TRUE)
    },
  },
  McPipeOutFifo1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
    Name => "McPipeOutFifo[2]",
    RegMem => "Mem",
    Address => "4B00000",
    Width => "79", # Excel Formula: =calc_mem_width(E271:E271,M270,F271,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "42",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "71",
    McPipeOutFifo1Data => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "McPipeOutFifo[n]Data",
      RegMem => "MemField",
      Description => "Holds the pipe data required to build the out PD.",
      Width => "71",
      Position => "70:0", # Excel Formula: =calc_position(F270,E271,TRUE)
    },
  },
  DspLookupTableBubbleReqCfg => { #Structure Type: Reg; Skip Register;
    Name => "DspLookupTableBubbleReqCfg",
    RegMem => "Reg",
    Address => "139", # Excel Formula: =calc_reg_address(C133,A133,G133)
    Description => "Bubble request configurations for DspLookupTable memory",
    Width => "16", # Excel Formula: =calc_reg_width(E273:E273,F273)
    Type => "Config",
    Comments => "EM Skip Reg",
    DspLookupTableBubbleTimerCfg => { #Structure Type: RegField;
      Name => "DspLookupTableBubbleTimerCfg",
      RegMem => "RegField",
      Description => "Number of consecutive pipe accesses before generating CPU bubble request",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F272,E273,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "d1",
    },
  },
  FeBroadcastBmpBubbleReqCfg => { #Structure Type: Reg; Skip Register;
    Name => "FeBroadcastBmpBubbleReqCfg",
    RegMem => "Reg",
    Address => "13A", # Excel Formula: =calc_reg_address(C272,A272,G272)
    Description => "Bubble request configurations for FeBroadcastBmp memory",
    Width => "16", # Excel Formula: =calc_reg_width(E275:E275,F275)
    Type => "Config",
    Comments => "EM Skip Reg",
    FeBroadcastBmpBubbleTimerCfg => { #Structure Type: RegField;
      Name => "FeBroadcastBmpBubbleTimerCfg",
      RegMem => "RegField",
      Description => "Number of consecutive pipe accesses before generating CPU bubble request",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F274,E275,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "d1",
    },
  },
};
