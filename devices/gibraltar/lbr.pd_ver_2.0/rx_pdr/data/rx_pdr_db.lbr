$block{rx_pdr} = {
  Defines_db => "Z:\\leaba_reg_db_example\\defines.v",
  ProjectName => "Gibraltar",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "2",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    RxpdrGlobalInterruptRegSummary => { #Structure Type: RegField;
      Name => "RxpdrGlobalInterruptRegSummary",
      RegMem => "RegField",
      Description => "When this bit is set, RxpdrGlobalInterruptReg has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt test register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "12",
    Type => "Config",
    SharedMemRdResultFifo0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo6Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo6Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo7Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo7Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo8Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo8Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo9Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo9Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo10Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo10Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo11Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo11Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "12",
    Type => "Config",
    SharedMemRdResultFifo0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo6Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo6Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo7Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo7Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo8Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo8Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo9Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo9Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo10Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo10Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedMemRdResultFifo11Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo11Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInitiateRegister",
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "12",
    Type => "Config",
    SharedMemRdResultFifo0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo6Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo6Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo7Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo7Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo8Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo8Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo9Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo9Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo10Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo10Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo11Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo11Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInitiateRegister",
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "12",
    Type => "Config",
    SharedMemRdResultFifo0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo6Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo6Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo7Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo7Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo8Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo8Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo9Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo9Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo10Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo10Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedMemRdResultFifo11Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo11Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "12",
    Type => "ReadOnly",
    SharedMemRdResultFifo0ErrInt => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedMemRdResultFifo1ErrInt => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedMemRdResultFifo2ErrInt => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedMemRdResultFifo3ErrInt => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedMemRdResultFifo4ErrInt => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedMemRdResultFifo5ErrInt => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedMemRdResultFifo6ErrInt => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo6ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedMemRdResultFifo7ErrInt => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo7ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedMemRdResultFifo8ErrInt => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo8ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedMemRdResultFifo9ErrInt => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo9ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedMemRdResultFifo10ErrInt => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo10ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedMemRdResultFifo11ErrInt => { #Structure Type: RegField;
      Name => "SharedMemRdResultFifo11ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "8",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "6",
      Position => "5:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "7:6",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "5",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "4",
      Position => "3:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrDebug",
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_1bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrDebug",
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_2bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "73", # Excel Formula: =calc_reg_width(E25:E53,F53)
    Type => "Config",
    SACR1P_RME => { #Structure Type: RegField;
      Name => "SACR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACR1P_RM => { #Structure Type: RegField;
      Name => "SACR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "4:1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RME => { #Structure Type: RegField;
      Name => "SACU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RM => { #Structure Type: RegField;
      Name => "SACU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "9:6", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RME => { #Structure Type: RegField;
      Name => "SADC1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RM => { #Structure Type: RegField;
      Name => "SADC1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEA => { #Structure Type: RegField;
      Name => "SADR2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMA => { #Structure Type: RegField;
      Name => "SADR2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "19:16", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEB => { #Structure Type: RegField;
      Name => "SADR2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMB => { #Structure Type: RegField;
      Name => "SADR2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "24:21", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEA => { #Structure Type: RegField;
      Name => "SADS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "25", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMA => { #Structure Type: RegField;
      Name => "SADS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "29:26", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEB => { #Structure Type: RegField;
      Name => "SADS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMB => { #Structure Type: RegField;
      Name => "SADS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "34:31", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RME => { #Structure Type: RegField;
      Name => "SASR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "35", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RM => { #Structure Type: RegField;
      Name => "SASR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "39:36", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RME => { #Structure Type: RegField;
      Name => "SASS1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RM => { #Structure Type: RegField;
      Name => "SASS1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "44:41", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEA => { #Structure Type: RegField;
      Name => "SASS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "45", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMA => { #Structure Type: RegField;
      Name => "SASS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "49:46", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEB => { #Structure Type: RegField;
      Name => "SASS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "50", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMB => { #Structure Type: RegField;
      Name => "SASS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "54:51", # Excel Formula: =calc_position(F45,E46)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RME => { #Structure Type: RegField;
      Name => "SASU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F46,E47)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RM => { #Structure Type: RegField;
      Name => "SASU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "59:56", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RME => { #Structure Type: RegField;
      Name => "SADU1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RM => { #Structure Type: RegField;
      Name => "SADU1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "64:61", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RA => { #Structure Type: RegField;
      Name => "SADS2P_RA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Assist for Dual port",
      Width => "2",
      Position => "66:65", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_WA => { #Structure Type: RegField;
      Name => "SADU1P_WA",
      RegMem => "RegField",
      Description => "Write-Assist configuration for the SP SADU compiler",
      Width => "3",
      Position => "69:67", # Excel Formula: =calc_position(F51,E52)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "d5",
    },
    SADU1P_WPULSE => { #Structure Type: RegField;
      Name => "SADU1P_WPULSE",
      RegMem => "RegField",
      Description => "Write-Assist-Pulse configuration for the SP SADU compiler",
      Width => "3",
      Position => "72:70", # Excel Formula: =calc_position(F52,E53)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E55:E55,F55)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F54,E55,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C54,A54,G54)
    Description => "Spare register",
    Width => "128", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "Spare register ",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C56,A56,G56)
    Description => "PMRO controller configuration",
    Width => "32", # Excel Formula: =calc_reg_width(E59:E63,F63)
    Type => "Config",
    PmroRstn => { #Structure Type: RegField;
      Name => "PmroRstn",
      RegMem => "RegField",
      Description => "PMRO reset, active low",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F58,E59,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroConfigEn => { #Structure Type: RegField;
      Name => "PmroConfigEn",
      RegMem => "RegField",
      Description => "Enable pmro configuration, when equals to 0 configurations are locked",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroStart => { #Structure Type: RegField;
      Name => "PmroStart",
      RegMem => "RegField",
      Description => "Start the pmro operation",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F60,E61)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroRingEn => { #Structure Type: RegField;
      Name => "PmroRingEn",
      RegMem => "RegField",
      Description => "Determines which PMRO ring to activate, should be configured as one hot",
      Width => "7",
      Position => "9:3", # Excel Formula: =calc_position(F61,E62)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroCntPeriod => { #Structure Type: RegField;
      Name => "PmroCntPeriod",
      RegMem => "RegField",
      Description => "Number of core clock cycles on which PMRO is measured",
      Width => "22",
      Position => "31:10", # Excel Formula: =calc_position(F62,E63)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "h3FFFFF",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C58,A58,G58)
    Description => "PMRO status configuration",
    Width => "23", # Excel Formula: =calc_reg_width(E65:E66,F66)
    Type => "ReadOnly",
    PmroCountOut => { #Structure Type: RegField;
      Name => "PmroCountOut",
      RegMem => "RegField",
      Description => "The ring oscilator counter value.",
      Width => "22",
      Position => "21:0", # Excel Formula: =calc_position(F64,E65,TRUE)
      Type => "Status",
      UsedBy => "pmro",
    },
    PmroDone => { #Structure Type: RegField;
      Name => "PmroDone",
      RegMem => "RegField",
      Description => "Pmro operation done, PmroCountOut is valid.",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F65,E66)
      Type => "Status",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C64,A64,G64)
    Description => "Mirror Bus configurations",
    Width => "11", # Excel Formula: =calc_reg_width(E68:E69,F69)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "Enable Mirror Bus",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "Mirror Bus selector",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C67,A67,G67)
    Description => "Mirror Bus status result",
    Width => "32", # Excel Formula: =calc_reg_width(E71:E71,F71)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "Mirror Bus status result",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F70,E71,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C70,A70,G70)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E73:E73,F73)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F72,E73,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  StatusRegister => { #Structure Type: Reg;
    Name => "StatusRegister",
    RegMem => "Reg",
    Address => "100",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "ReadOnly",
    InitDone => { #Structure Type: RegField;
      Name => "InitDone",
      RegMem => "RegField",
      Description => "Indication that the rx_pdr completed the initialization process.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  RxpdrGlobalInterruptReg => { #Structure Type: Reg;
    Name => "RxpdrGlobalInterruptReg",
    RegMem => "Reg",
    Address => "101", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Width => "5", # Excel Formula: =calc_reg_width(E10:E14,F14)
    Type => "Interrupt",
    SharedDb0InetrruptSummary => { #Structure Type: RegField;
      Name => "SharedDb0InetrruptSummary",
      RegMem => "RegField",
      Description => "The interrupt summary bit of shared DB 0",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
    SharedDb1InetrruptSummary => { #Structure Type: RegField;
      Name => "SharedDb1InetrruptSummary",
      RegMem => "RegField",
      Description => "The interrupt summary bit of shared DB 1",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F10,E11)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
    Slices01InetrruptSummary => { #Structure Type: RegField;
      Name => "Slices01InetrruptSummary",
      RegMem => "RegField",
      Description => "The interrupt summary bit of slices 0 & 1",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F11,E12)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
    Slices23InetrruptSummary => { #Structure Type: RegField;
      Name => "Slices23InetrruptSummary",
      RegMem => "RegField",
      Description => "The interrupt summary bit of slices 2 & 3",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F12,E13)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
    Slices45InetrruptSummary => { #Structure Type: RegField;
      Name => "Slices45InetrruptSummary",
      RegMem => "RegField",
      Description => "The interrupt summary bit of slices 4 & 5",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F13,E14)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
  },
  RxpdrGlobalInterruptRegMask => { #Structure Type: Reg; Skip Register;
    Name => "RxpdrGlobalInterruptRegMask",
    RegMem => "Reg",
    Address => "102",
    Width => "5", # Excel Formula: =calc_reg_width(E10:E14,F14)
    Type => "InterruptMask",
    SharedDb0InetrruptSummaryMask => { #Structure Type: RegField;
      Name => "SharedDb0InetrruptSummaryMask",
      RegMem => "RegField",
      Description => "This field masks SharedDb0InetrruptSummary interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    SharedDb1InetrruptSummaryMask => { #Structure Type: RegField;
      Name => "SharedDb1InetrruptSummaryMask",
      RegMem => "RegField",
      Description => "This field masks SharedDb1InetrruptSummary interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F10,E11)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    Slices01InetrruptSummaryMask => { #Structure Type: RegField;
      Name => "Slices01InetrruptSummaryMask",
      RegMem => "RegField",
      Description => "This field masks Slices01InetrruptSummary interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F11,E12)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    Slices23InetrruptSummaryMask => { #Structure Type: RegField;
      Name => "Slices23InetrruptSummaryMask",
      RegMem => "RegField",
      Description => "This field masks Slices23InetrruptSummary interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F12,E13)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    Slices45InetrruptSummaryMask => { #Structure Type: RegField;
      Name => "Slices45InetrruptSummaryMask",
      RegMem => "RegField",
      Description => "This field masks Slices45InetrruptSummary interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F13,E14)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  RxpdrGlobalInterruptRegTest => { #Structure Type: Reg; Skip Register;
    Name => "RxpdrGlobalInterruptRegTest",
    RegMem => "Reg",
    Address => "103",
    Width => "5", # Excel Formula: =calc_reg_width(E10:E14,F14)
    Type => "InterruptTest",
    SharedDb0InetrruptSummaryTest => { #Structure Type: RegField;
      Name => "SharedDb0InetrruptSummaryTest",
      RegMem => "RegField",
      Description => "This field tests SharedDb0InetrruptSummary interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    SharedDb1InetrruptSummaryTest => { #Structure Type: RegField;
      Name => "SharedDb1InetrruptSummaryTest",
      RegMem => "RegField",
      Description => "This field tests SharedDb1InetrruptSummary interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F10,E11)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slices01InetrruptSummaryTest => { #Structure Type: RegField;
      Name => "Slices01InetrruptSummaryTest",
      RegMem => "RegField",
      Description => "This field tests Slices01InetrruptSummary interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F11,E12)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slices23InetrruptSummaryTest => { #Structure Type: RegField;
      Name => "Slices23InetrruptSummaryTest",
      RegMem => "RegField",
      Description => "This field tests Slices23InetrruptSummary interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F12,E13)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slices45InetrruptSummaryTest => { #Structure Type: RegField;
      Name => "Slices45InetrruptSummaryTest",
      RegMem => "RegField",
      Description => "This field tests Slices45InetrruptSummary interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F13,E14)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  GlobalConfiguration => { #Structure Type: Reg;
    Name => "GlobalConfiguration",
    RegMem => "Reg",
    Address => "104", # Excel Formula: =calc_reg_address(C9,A9,G9)
    Width => "3", # Excel Formula: =calc_reg_width(E16:E17,F17)
    Type => "Config",
    DeviceType => { #Structure Type: RegField;
      Name => "DeviceType",
      RegMem => "RegField",
      Description => "Indicates the mode of the device:
2'h0 - LC
2'h1 - TR
2'h2 - SA
2'h3 - FE",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F15,E16,TRUE)
      Type => "Config",
      UsedBy => "rx0_req,rx1_req,rx2_req,rx3_req,rx4_req,rx5_req,tx0_req,tx1_req,tx2_req,tx3_req,tx4_req,tx5_req,rx0_ans,rx1_ans,rx2_ans,rx3_ans,rx4_ans,rx5_ans,tx0_ans,tx1_ans,tx2_ans,tx3_ans,tx4_ans,tx5_ans",
      DefaultValue => "h2",
      InitValueSa => "2",
      InitValueLcNwk => "0",
      InitValueLcFab => "0",
      InitValueFe => "3",
    },
    McDbInterfaceSelectionMode => { #Structure Type: RegField;
      Name => "McDbInterfaceSelectionMode",
      RegMem => "RegField",
      Description => "Interface selection mode for the MC DB (MC-EMDB or MC-FE-Links-Bitmap)
0 - Alternate between both interface
1 - Select the interface with less pending requests",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F16,E17)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
  },
  CountersThresholdsReg1 => { #Structure Type: Reg;
    Name => "CountersThresholdsReg1",
    RegMem => "Reg",
    Address => "105", # Excel Formula: =calc_reg_address(C15,A15,G15)
    Description => "Counter A counts Ingress Unicast Buffers.
Buffers consumed by packets in the ingress pipe before they were scheduled by the credit scheduler to the egress Oqs.",
    Width => "114", # Excel Formula: =calc_reg_width(E19:E24,F24)
    Type => "Config",
    VoqCgmCounterAThr0 => { #Structure Type: RegField;
      Name => "VoqCgmCounterAThr0",
      RegMem => "RegField",
      Description => "When counter A is below this threshold - the rxpdr will indicate region = 0 to the VOQ CGM",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h4000",
      InitValueSa => "(is_MAT_6_4T || is_MAT_3_2T_A || is_MAT_3_2T_B) ? 108*1024 : 108*1024",
      InitValueLcNwk => "108*1024",
      InitValueLcFab => "108*1024",
    },
    VoqCgmCounterAThr1 => { #Structure Type: RegField;
      Name => "VoqCgmCounterAThr1",
      RegMem => "RegField",
      Description => "When counter A is below this threshold and above Thr0 - the rxpdr will indicate region = 1 to the VOQ CGM",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h8000",
      InitValueSa => "(is_MAT_6_4T || is_MAT_3_2T_A || is_MAT_3_2T_B) ? 132*1024 : 140*1024",
      InitValueLcNwk => "140*1024",
      InitValueLcFab => "140*1024",
    },
    VoqCgmCounterAThr2 => { #Structure Type: RegField;
      Name => "VoqCgmCounterAThr2",
      RegMem => "RegField",
      Description => "When counter A is below this threshold and above Thr1 - the rxpdr will indicate region = 2 to the VOQ CGM
When counter a is abobe this threshold - the rxpdr will indicate region = 3 to the VOQ CGM",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hc000",
      InitValueSa => "(is_MAT_6_4T || is_MAT_3_2T_A || is_MAT_3_2T_B) ? 142*1024 : 150*1024",
      InitValueLcNwk => "150*1024",
      InitValueLcFab => "150*1024",
    },
    RxCgmCounterAThr0 => { #Structure Type: RegField;
      Name => "RxCgmCounterAThr0",
      RegMem => "RegField",
      Description => "When counter A is below this threshold - the rxpdr will indicate status = 0 to the RX CGM",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F21,E22)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h4000",
    },
    RxCgmCounterAThr1 => { #Structure Type: RegField;
      Name => "RxCgmCounterAThr1",
      RegMem => "RegField",
      Description => "When counter A is below this threshold and above Thr0 - the rxpdr will indicate status = 1 to the RX CGM",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F22,E23)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h8000",
    },
    RxCgmCounterAThr2 => { #Structure Type: RegField;
      Name => "RxCgmCounterAThr2",
      RegMem => "RegField",
      Description => "When counter A is below this threshold and above Thr1 - the rxpdr will indicate status = 2 to the RX CGM
When counter a is abobe this threshold - the rxpdr will indicate status = 3 to the RX CGM",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hc000",
    },
  },
  CountersThresholdsReg2 => { #Structure Type: Reg;
    Name => "CountersThresholdsReg2",
    RegMem => "Reg",
    Address => "106", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Counter B counts buffers consumed by multicast packets, with replication not to OQ level.
Counter G - counts buffers consumed by mirror copies of packets which there forwarding copies is counted in counter A.
Counter B - counts buffers consumed by multicast packets, with replication not to OQ level",
    Width => "114", # Excel Formula: =calc_reg_width(E26:E31,F31)
    Type => "Config",
    CounterA_DropThr0 => { #Structure Type: RegField;
      Name => "CounterA_DropThr0",
      RegMem => "RegField",
      Description => "Defines the threshold of counter A from which counters that are associated with threshold 0 are dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F25,E26,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h10000",
      InitValueSa => "(is_MAT_6_4T || is_MAT_3_2T_A || is_MAT_3_2T_B) ? 152*1024 : 160*1024",
      InitValueLcNwk => "160*1024",
      InitValueLcFab => "160*1024",
    },
    CounterA_DropThr1 => { #Structure Type: RegField;
      Name => "CounterA_DropThr1",
      RegMem => "RegField",
      Description => "Defines the threshold of counter A from which counters that are associated with threshold 1 are dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h11000",
      InitValueSa => "(is_MAT_6_4T || is_MAT_3_2T_A || is_MAT_3_2T_B) ? 162*1024 : 170*1024",
      InitValueLcNwk => "170*1024",
      InitValueLcFab => "170*1024",
    },
    CounterSum_B_E_G_A_IngressUcDropThr => { #Structure Type: RegField;
      Name => "CounterSum_B_E_G_A_IngressUcDropThr",
      RegMem => "RegField",
      Description => "Defines the drop threshold of counter A+B+E+G - if the sum crosses this threshold Ingress UC packets will be dropped",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h13000",
      InitValueAllModes => "19'h7FFFF",
    },
    CounterG_IBMDropThr => { #Structure Type: RegField;
      Name => "CounterG_IBMDropThr",
      RegMem => "RegField",
      Description => "Defines the drop threshold of counter G - if the counter crosses this threshold no IBM will be performed on packets associated with counter A",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1400",
      InitValueAllModes => "19'h7FFFF",
    },
    CounterSum_B_E_G_IBMDropThr => { #Structure Type: RegField;
      Name => "CounterSum_B_E_G_IBMDropThr",
      RegMem => "RegField",
      Description => "Defines the drop threshold of counter B+E+G - if the sum crosses this threshold no IBM will be performed on packets associated with counter A",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h5000",
      InitValueAllModes => "19'h7FFFF",
    },
    CounterSum_B_E_G_A_IBMDropThr => { #Structure Type: RegField;
      Name => "CounterSum_B_E_G_A_IBMDropThr",
      RegMem => "RegField",
      Description => "Defines the drop threshold of counter A+B+E+G - if the sum crosses this threshold no IBM will be performed on packets associated with counter A",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h13000",
      InitValueAllModes => "19'h7FFFF",
    },
  },
  CountersThresholdsReg3 => { #Structure Type: Reg;
    Name => "CountersThresholdsReg3",
    RegMem => "Reg",
    Address => "107", # Excel Formula: =calc_reg_address(C25,A25,G25)
    Width => "76", # Excel Formula: =calc_reg_width(E33:E36,F36)
    Type => "Config",
    CounterB_DropThr0 => { #Structure Type: RegField;
      Name => "CounterB_DropThr0",
      RegMem => "RegField",
      Description => "Defines the threshold of counter B from which counters that are associated with threshold 0 are dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2800",
      InitValueSa => "20*1024",
      InitValueLcNwk => "10*1024",
      InitValueLcFab => "10*1024",
    },
    CounterB_DropThr1 => { #Structure Type: RegField;
      Name => "CounterB_DropThr1",
      RegMem => "RegField",
      Description => "Defines the threshold of counter B from which counters that are associated with threshold 1 are dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2c00",
      InitValueSa => "25*1024",
      InitValueLcNwk => "11*1024",
      InitValueLcFab => "11*1024",
    },
    CounterSum_B_E_G_IngressMcDropThr => { #Structure Type: RegField;
      Name => "CounterSum_B_E_G_IngressMcDropThr",
      RegMem => "RegField",
      Description => "Defines the drop threshold of counter B+E+G - if the sum crosses this threshold ingress MC packets will be dropped",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h5000",
      InitValueAllModes => "19'h7FFFF",
    },
    CounterSum_B_E_G_A_IngressMcDropThr => { #Structure Type: RegField;
      Name => "CounterSum_B_E_G_A_IngressMcDropThr",
      RegMem => "RegField",
      Description => "Defines the drop threshold of counter B+E+G+A - if the sum crosses this threshold ingress MC packets will be dropped",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h13000",
      InitValueAllModes => "19'h7FFFF",
    },
  },
  CountersThresholdsReg4 => { #Structure Type: Reg;
    Name => "CountersThresholdsReg4",
    RegMem => "Reg",
    Address => "108", # Excel Formula: =calc_reg_address(C32,A32,G32)
    Width => "133", # Excel Formula: =calc_reg_width(E38:E44,F44)
    Type => "Config",
    CounterE_DropThr0 => { #Structure Type: RegField;
      Name => "CounterE_DropThr0",
      RegMem => "RegField",
      Description => "Defines the threshold of counter E from which counters that are associated with threshold 0 are dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F37,E38,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2800",
      InitValueAllModes => "19'h7FFFF",
    },
    CounterE_DropThr1 => { #Structure Type: RegField;
      Name => "CounterE_DropThr1",
      RegMem => "RegField",
      Description => "Defines the threshold of counter E from which counters that are associated with threshold 1 are dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2c00",
      InitValueAllModes => "19'h7FFFF",
    },
    CounterSum_B_E_G_PlbMcDropThr => { #Structure Type: RegField;
      Name => "CounterSum_B_E_G_PlbMcDropThr",
      RegMem => "RegField",
      Description => "Defines the drop threshold of counter B+E+G - if the sum crosses this threshold PLB MC packets will be dropped",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h5000",
      InitValueAllModes => "19'h7FFFF",
    },
    CounterSum_B_E_G_A_PlbMcDropThr => { #Structure Type: RegField;
      Name => "CounterSum_B_E_G_A_PlbMcDropThr",
      RegMem => "RegField",
      Description => "Defines the drop threshold of counter B+E+G+A - if the sum crosses this threshold PLB MC packets will be dropped",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h13000",
      InitValueAllModes => "19'h7FFFF",
    },
    CounterSum_B_E_TxcgmDropThr0 => { #Structure Type: RegField;
      Name => "CounterSum_B_E_TxcgmDropThr0",
      RegMem => "RegField",
      Description => "When counters B+E is below this threshold - the rxpdr will indicate status = 0 to the TX CGM",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1400",
      InitValueSa => "10*1024",
      InitValueLcNwk => "16*1024",
      InitValueLcFab => "16*1024",
      InitValueFe => "1",
    },
    CounterSum_B_E_TxcgmDropThr1 => { #Structure Type: RegField;
      Name => "CounterSum_B_E_TxcgmDropThr1",
      RegMem => "RegField",
      Description => "When counters B+E is below this threshold and above Thr0 - the rxpdr will indicate status = 1 to the TX CGM",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2800",
      InitValueSa => "15*1024",
      InitValueLcNwk => "24*1024",
      InitValueLcFab => "24*1024",
      InitValueFe => "40*1024",
    },
    CounterSum_B_E_TxcgmDropThr2 => { #Structure Type: RegField;
      Name => "CounterSum_B_E_TxcgmDropThr2",
      RegMem => "RegField",
      Description => "When counters B+E is below this threshold and above Thr1 - the rxpdr will indicate status = 2 to the TX CGM
When counters B+E are above this threshold - the rxpdr will indicate status = 3 to the TX CGM",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h3c00",
      InitValueSa => "18*1024",
      InitValueLcNwk => "32*1024",
      InitValueLcFab => "32*1024",
      InitValueFe => "50*1024",
    },
  },
  CgmCountersStatus => { #Structure Type: Reg;
    Name => "CgmCountersStatus",
    RegMem => "Reg",
    Address => "109", # Excel Formula: =calc_reg_address(C37,A37,G37)
    Width => "76", # Excel Formula: =calc_reg_width(E46:E49,F49)
    Type => "ReadOnly",
    CounterA => { #Structure Type: RegField;
      Name => "CounterA",
      RegMem => "RegField",
      Description => "Reflects the current value of counter A",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F45,E46,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
    CounterB => { #Structure Type: RegField;
      Name => "CounterB",
      RegMem => "RegField",
      Description => "Reflects the current value of counter B",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F46,E47)
      Type => "Status",
      UsedBy => "DSN",
    },
    CounterE => { #Structure Type: RegField;
      Name => "CounterE",
      RegMem => "RegField",
      Description => "Reflects the current value of counter E",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F47,E48)
      Type => "Status",
      UsedBy => "DSN",
    },
    CounterG => { #Structure Type: RegField;
      Name => "CounterG",
      RegMem => "RegField",
      Description => "Reflects the current value of counter G",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F48,E49)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  CounterAHistogram => { #Structure Type: Reg;
    Name => "CounterAHistogram",
    RegMem => "Reg",
    Address => "10A", # Excel Formula: =calc_reg_address(C45,A45,G45)
    Width => "1", # Excel Formula: =calc_reg_width(E51:E51,F51)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    CounterAHist => { #Structure Type: RegField;
      Name => "CounterAHist",
      RegMem => "RegField",
      Description => "A histogram of counter A.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F50,E51,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CounterBHistogram => { #Structure Type: Reg;
    Name => "CounterBHistogram",
    RegMem => "Reg",
    Address => "10B", # Excel Formula: =calc_reg_address(C50,A50,G50)
    Width => "1", # Excel Formula: =calc_reg_width(E53:E53,F53)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    CounterBHist => { #Structure Type: RegField;
      Name => "CounterBHist",
      RegMem => "RegField",
      Description => "A histogram of counter B.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F52,E53,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CounterGHistogram => { #Structure Type: Reg;
    Name => "CounterGHistogram",
    RegMem => "Reg",
    Address => "10C", # Excel Formula: =calc_reg_address(C52,A52,G52)
    Width => "1", # Excel Formula: =calc_reg_width(E55:E55,F55)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    CounterGHist => { #Structure Type: RegField;
      Name => "CounterGHist",
      RegMem => "RegField",
      Description => "A histogram of counter G.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F54,E55,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CounterEHistogram => { #Structure Type: Reg;
    Name => "CounterEHistogram",
    RegMem => "Reg",
    Address => "10D", # Excel Formula: =calc_reg_address(C54,A54,G54)
    Width => "1", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    CounterEHist => { #Structure Type: RegField;
      Name => "CounterEHist",
      RegMem => "RegField",
      Description => "A histogram of counter E.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  McEmdbOverrideConfReg0 => { #Structure Type: Reg;
    Name => "McEmdbOverrideConfReg0",
    RegMem => "Reg",
    Address => "10E", # Excel Formula: =calc_reg_address(C56,A56,G56)
    Description => " ",
    Width => "2", # Excel Formula: =calc_reg_width(E59:E59,F59)
    Type => "Config",
    SetMcEmdbOverrideValid => { #Structure Type: RegField;
      Name => "SetMcEmdbOverrideValid",
      RegMem => "RegField",
      Description => "Valid bit for the sets defined in McEmdbOverrideConfReg1
This register exist for MC EMDB atomic member removal.
To enable making modification on the EMDB without harming the data integrity the SW has 2 sets of registers with data and key.
When enabled - if a client performs lookup with the configured key - the data will be returned from the corresponding configuration.
There are 2 sets of registers because it is assumed that when compressing the group - need to update the last entry where a member is removed and another entry where the member should be inserted instead of the removed member.
Both valid bits are in one register so it is possible to activate the override for both entries at once.
Note: should be used only when DB is MC EMDB (not when it is MC FE links BMP.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F58,E59,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  McEmdbOverrideConfReg10 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 23;
    Name => "McEmdbOverrideConfReg1[2]",
    RegMem => "Reg",
    Address => "10F", # Excel Formula: =calc_reg_address(C58,A58,G58)
    Description => " ",
    Width => "104", # Excel Formula: =calc_reg_width(E61:E62,F62)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Set0McEmdbOverrideData => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Set[n]McEmdbOverrideData",
      RegMem => "RegField",
      Description => "The data that will be used when clients access the McEmdbOverrideKey",
      Width => "72",
      Position => "71:0", # Excel Formula: =calc_position(F60,E61,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Set0McEmdbOverrideKey => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Set[n]McEmdbOverrideKey",
      RegMem => "RegField",
      Description => "The key whose data will be overriden by the McEmdbOverrideData",
      Width => "32",
      Position => "103:72", # Excel Formula: =calc_position(F61,E62)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  McEmdbOverrideConfReg11 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 23;
    Name => "McEmdbOverrideConfReg1[2]",
    RegMem => "Reg",
    Address => "110",
    Description => " ",
    Width => "104", # Excel Formula: =calc_reg_width(E61:E62,F62)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Set1McEmdbOverrideData => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Set[n]McEmdbOverrideData",
      RegMem => "RegField",
      Description => "The data that will be used when clients access the McEmdbOverrideKey",
      Width => "72",
      Position => "71:0", # Excel Formula: =calc_position(F60,E61,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Set1McEmdbOverrideKey => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Set[n]McEmdbOverrideKey",
      RegMem => "RegField",
      Description => "The key whose data will be overriden by the McEmdbOverrideData",
      Width => "32",
      Position => "103:72", # Excel Formula: =calc_position(F61,E62)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  SliceConfigReg0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 15;
    Name => "SliceConfigReg[6]",
    RegMem => "Reg",
    Address => "111", # Excel Formula: =calc_reg_address(C60,A60,G60)
    Description => " ",
    Width => "7", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Slice0Rxpdr2TxpdrCbtAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2TxpdrCbtAlmFullThr",
      RegMem => "RegField",
      Description => "The almost full thr used in the rxpdr to txpdr answers.
This field was used for tuning parameters during the design phase. 
The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h7",
    },
  },
  SliceConfigReg1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 15;
    Name => "SliceConfigReg[6]",
    RegMem => "Reg",
    Address => "112",
    Description => " ",
    Width => "7", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Slice1Rxpdr2TxpdrCbtAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2TxpdrCbtAlmFullThr",
      RegMem => "RegField",
      Description => "The almost full thr used in the rxpdr to txpdr answers.
This field was used for tuning parameters during the design phase. 
The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h7",
    },
  },
  SliceConfigReg2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 15;
    Name => "SliceConfigReg[6]",
    RegMem => "Reg",
    Address => "113",
    Description => " ",
    Width => "7", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Slice2Rxpdr2TxpdrCbtAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2TxpdrCbtAlmFullThr",
      RegMem => "RegField",
      Description => "The almost full thr used in the rxpdr to txpdr answers.
This field was used for tuning parameters during the design phase. 
The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h7",
    },
  },
  SliceConfigReg3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 15;
    Name => "SliceConfigReg[6]",
    RegMem => "Reg",
    Address => "114",
    Description => " ",
    Width => "7", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Slice3Rxpdr2TxpdrCbtAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2TxpdrCbtAlmFullThr",
      RegMem => "RegField",
      Description => "The almost full thr used in the rxpdr to txpdr answers.
This field was used for tuning parameters during the design phase. 
The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h7",
    },
  },
  SliceConfigReg4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 15;
    Name => "SliceConfigReg[6]",
    RegMem => "Reg",
    Address => "115",
    Description => " ",
    Width => "7", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Slice4Rxpdr2TxpdrCbtAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2TxpdrCbtAlmFullThr",
      RegMem => "RegField",
      Description => "The almost full thr used in the rxpdr to txpdr answers.
This field was used for tuning parameters during the design phase. 
The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h7",
    },
  },
  SliceConfigReg5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 15;
    Name => "SliceConfigReg[6]",
    RegMem => "Reg",
    Address => "116",
    Description => " ",
    Width => "7", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Slice5Rxpdr2TxpdrCbtAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2TxpdrCbtAlmFullThr",
      RegMem => "RegField",
      Description => "The almost full thr used in the rxpdr to txpdr answers.
This field was used for tuning parameters during the design phase. 
The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h7",
    },
  },
  SliceDebugReg0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 14;
    Name => "SliceDebugReg[6]",
    RegMem => "Reg",
    Address => "117", # Excel Formula: =calc_reg_address(C63,A63,G63)
    Description => "Debug register",
    Width => "32", # Excel Formula: =calc_reg_width(E66:E66,F66)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Slice0Rxpdr2TxpdrCbtNotReady => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2TxpdrCbtNotReady",
      RegMem => "RegField",
      Description => "Number of clock cycles TX-PDR was not ready to receive reply from RX-PDR EMDB",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  SliceDebugReg1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 14;
    Name => "SliceDebugReg[6]",
    RegMem => "Reg",
    Address => "118",
    Description => "Debug register",
    Width => "32", # Excel Formula: =calc_reg_width(E66:E66,F66)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Slice1Rxpdr2TxpdrCbtNotReady => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2TxpdrCbtNotReady",
      RegMem => "RegField",
      Description => "Number of clock cycles TX-PDR was not ready to receive reply from RX-PDR EMDB",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  SliceDebugReg2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 14;
    Name => "SliceDebugReg[6]",
    RegMem => "Reg",
    Address => "119",
    Description => "Debug register",
    Width => "32", # Excel Formula: =calc_reg_width(E66:E66,F66)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Slice2Rxpdr2TxpdrCbtNotReady => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2TxpdrCbtNotReady",
      RegMem => "RegField",
      Description => "Number of clock cycles TX-PDR was not ready to receive reply from RX-PDR EMDB",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  SliceDebugReg3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 14;
    Name => "SliceDebugReg[6]",
    RegMem => "Reg",
    Address => "11A",
    Description => "Debug register",
    Width => "32", # Excel Formula: =calc_reg_width(E66:E66,F66)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Slice3Rxpdr2TxpdrCbtNotReady => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2TxpdrCbtNotReady",
      RegMem => "RegField",
      Description => "Number of clock cycles TX-PDR was not ready to receive reply from RX-PDR EMDB",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  SliceDebugReg4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 14;
    Name => "SliceDebugReg[6]",
    RegMem => "Reg",
    Address => "11B",
    Description => "Debug register",
    Width => "32", # Excel Formula: =calc_reg_width(E66:E66,F66)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Slice4Rxpdr2TxpdrCbtNotReady => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2TxpdrCbtNotReady",
      RegMem => "RegField",
      Description => "Number of clock cycles TX-PDR was not ready to receive reply from RX-PDR EMDB",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  SliceDebugReg5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 14;
    Name => "SliceDebugReg[6]",
    RegMem => "Reg",
    Address => "11C",
    Description => "Debug register",
    Width => "32", # Excel Formula: =calc_reg_width(E66:E66,F66)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Slice5Rxpdr2TxpdrCbtNotReady => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Rxpdr2TxpdrCbtNotReady",
      RegMem => "RegField",
      Description => "Number of clock cycles TX-PDR was not ready to receive reply from RX-PDR EMDB",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LinkToSmsIfMap => { #Structure Type: Reg;
    Name => "LinkToSmsIfMap",
    RegMem => "Reg",
    Address => "11D", # Excel Formula: =calc_reg_address(C65,A65,G65)
    Description => "Map link to fabric SMS interface",
    Width => "84", # Excel Formula: =calc_reg_width(E68:E68,F68)
    Type => "Config",
    SmsIfMaxLink => { #Structure Type: RegField;
      Name => "SmsIfMaxLink",
      RegMem => "RegField",
      Description => "Last link of each of the 12 IFGs (7b value per IFG).
default value is [107, 98, 89, 79, 71, 63, 53, 43, 35, 27, 17, 8]
For FE13 mode this should be configured to [107, 95, 83, 71, 63, 55, 43, 34, 29, 20, 15, 5] = 84'hd77e9c77edd5a23a50785",
      Width => "84", # Excel Formula: =7*12
      Position => "83:0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "hd78accf8efdaab466c888",
    },
  },
  SmsLoadBalancingMeterCfg0 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[12]",
    RegMem => "Reg",
    Address => "11E", # Excel Formula: =calc_reg_address(C67,A67,G67)
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E70:E71,F71)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "0",
    Sms0LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d1024",
      InitValueFe => "1024",
    },
    Sms0LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d278",
      InitValueFe => "257",
    },
  },
  SmsLoadBalancingMeterCfg1 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[12]",
    RegMem => "Reg",
    Address => "11F",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E70:E71,F71)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "1",
    Sms1LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d1024",
      InitValueFe => "1024",
    },
    Sms1LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d278",
      InitValueFe => "257",
    },
  },
  SmsLoadBalancingMeterCfg2 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[12]",
    RegMem => "Reg",
    Address => "120",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E70:E71,F71)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "2",
    Sms2LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d1024",
      InitValueFe => "1024",
    },
    Sms2LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d278",
      InitValueFe => "257",
    },
  },
  SmsLoadBalancingMeterCfg3 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[12]",
    RegMem => "Reg",
    Address => "121",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E70:E71,F71)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "3",
    Sms3LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d1024",
      InitValueFe => "1024",
    },
    Sms3LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d278",
      InitValueFe => "257",
    },
  },
  SmsLoadBalancingMeterCfg4 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[12]",
    RegMem => "Reg",
    Address => "122",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E70:E71,F71)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "4",
    Sms4LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d1024",
      InitValueFe => "1024",
    },
    Sms4LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d278",
      InitValueFe => "257",
    },
  },
  SmsLoadBalancingMeterCfg5 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[12]",
    RegMem => "Reg",
    Address => "123",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E70:E71,F71)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "5",
    Sms5LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d1024",
      InitValueFe => "1024",
    },
    Sms5LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d278",
      InitValueFe => "257",
    },
  },
  SmsLoadBalancingMeterCfg6 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[12]",
    RegMem => "Reg",
    Address => "124",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E70:E71,F71)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "6",
    Sms6LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d1024",
      InitValueFe => "1024",
    },
    Sms6LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d278",
      InitValueFe => "257",
    },
  },
  SmsLoadBalancingMeterCfg7 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[12]",
    RegMem => "Reg",
    Address => "125",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E70:E71,F71)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "7",
    Sms7LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d1024",
      InitValueFe => "1024",
    },
    Sms7LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d278",
      InitValueFe => "257",
    },
  },
  SmsLoadBalancingMeterCfg8 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[12]",
    RegMem => "Reg",
    Address => "126",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E70:E71,F71)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "8",
    Sms8LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d1024",
      InitValueFe => "1024",
    },
    Sms8LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d278",
      InitValueFe => "257",
    },
  },
  SmsLoadBalancingMeterCfg9 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[12]",
    RegMem => "Reg",
    Address => "127",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E70:E71,F71)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "9",
    Sms9LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d1024",
      InitValueFe => "1024",
    },
    Sms9LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d278",
      InitValueFe => "257",
    },
  },
  SmsLoadBalancingMeterCfg10 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[12]",
    RegMem => "Reg",
    Address => "128",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E70:E71,F71)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "10",
    Sms10LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d1024",
      InitValueFe => "1024",
    },
    Sms10LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d278",
      InitValueFe => "257",
    },
  },
  SmsLoadBalancingMeterCfg11 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[12]",
    RegMem => "Reg",
    Address => "129",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E70:E71,F71)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "11",
    Sms11LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d1024",
      InitValueFe => "1024",
    },
    Sms11LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d278",
      InitValueFe => "257",
    },
  },
  LinkLoadBalancingMeterCfg0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 26;
    Name => "LinkLoadBalancingMeterCfg[2]",
    RegMem => "Reg",
    Address => "12A", # Excel Formula: =calc_reg_address(C69,A69,G69)
    Description => "LLBM configuration, intended to rate limit each fabric link to 100G or 200G.
Lower register is for lower 44 links (200G) and upper register is for upper 64 links (100G)",
    Width => "50", # Excel Formula: =calc_reg_width(E73:E75,F75)
    Type => "Config",
    ArrayLength => "2",
    ArrayIndex => "0",
    LinkLoadBalancingMeter0MaxThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 23;
      Name => "LinkLoadBalancingMeter[n]MaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in bytes",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F72,E73,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d16384",
      InitValueFe => "9216",
    },
    LinkLoadBalancingMeter0Rate => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 23;
      Name => "LinkLoadBalancingMeter[n]Rate",
      RegMem => "RegField",
      Description => "LLBM shaper total rate, creates token each LinkLoadBalancingMeterRate/16 clocks",
      Width => "24",
      Position => "39:16", # Excel Formula: =calc_position(F73,E74)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d33",
      InitValueFe => "instance == 0 ? (128 * frequency * 16 * 8 / (97*2*1000)) : (128 * frequency * 16 * 8 / (97*1000))",
    },
    LinkLoadBalancingMeter0IncValue => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 23;
      Name => "LinkLoadBalancingMeter[n]IncValue",
      RegMem => "RegField",
      Description => "LLBM increment value in bytes",
      Width => "10",
      Position => "49:40", # Excel Formula: =calc_position(F74,E75)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d16",
      InitValueFe => "128",
    },
  },
  LinkLoadBalancingMeterCfg1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 26;
    Name => "LinkLoadBalancingMeterCfg[2]",
    RegMem => "Reg",
    Address => "12B",
    Description => "LLBM configuration, intended to rate limit each fabric link to 100G or 200G.
Lower register is for lower 44 links (200G) and upper register is for upper 64 links (100G)",
    Width => "50", # Excel Formula: =calc_reg_width(E73:E75,F75)
    Type => "Config",
    ArrayLength => "2",
    ArrayIndex => "1",
    LinkLoadBalancingMeter1MaxThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 23;
      Name => "LinkLoadBalancingMeter[n]MaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in bytes",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F72,E73,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d16384",
      InitValueFe => "9216",
    },
    LinkLoadBalancingMeter1Rate => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 23;
      Name => "LinkLoadBalancingMeter[n]Rate",
      RegMem => "RegField",
      Description => "LLBM shaper total rate, creates token each LinkLoadBalancingMeterRate/16 clocks",
      Width => "24",
      Position => "39:16", # Excel Formula: =calc_position(F73,E74)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d33",
      InitValueFe => "instance == 0 ? (128 * frequency * 16 * 8 / (97*2*1000)) : (128 * frequency * 16 * 8 / (97*1000))",
    },
    LinkLoadBalancingMeter1IncValue => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 23;
      Name => "LinkLoadBalancingMeter[n]IncValue",
      RegMem => "RegField",
      Description => "LLBM increment value in bytes",
      Width => "10",
      Position => "49:40", # Excel Formula: =calc_position(F74,E75)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d16",
      InitValueFe => "128",
    },
  },
  LinkLoadBalancingCounterCfg0 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 28;
    Name => "LinkLoadBalancingCounterCfg[4]",
    RegMem => "Reg",
    Address => "12C", # Excel Formula: =calc_reg_address(C72,A72,G72)
    Description => "LLBC configuration, counts amount of traffic per link & context (UC/MC).
Lower two registers are for lower 44 links (200G) and upper two registers are for upper 64 links (100G)
Among each two - lower register is for UC LLBC and upper register is for MC LLBC
i.e. order is {MC1, UC1, MC0, UC0}",
    Width => "66", # Excel Formula: =calc_reg_width(E77:E80,F80)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "4",
    ArrayIndex => "0",
    LinkLoadBalancingCounter0MaxThr => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]MaxThr",
      RegMem => "RegField",
      Description => "When a LLBC passes this threshold, all the LLBCs will be decremented by LinkLoadBalancingCounterDecValue.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F76,E77,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d51200",
    },
    LinkLoadBalancingCounter0DecValue => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecValue",
      RegMem => "RegField",
      Description => "Decrement value for passing LLBC max threshold.
DevValue must be lower than MaxThr.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F77,E78)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d10240",
    },
    LinkLoadBalancingCounter0DecayRate => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecayRate",
      RegMem => "RegField",
      Description => "LLBC decay feature - create decay event each LinkLoadBalancingCounter[n]DecayRate/16 clocks",
      Width => "24",
      Position => "55:32", # Excel Formula: =calc_position(F78,E79)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d33",
      InitValueFe => "(16 * frequency * 1 * 8)/(0.5*1000)",
    },
    LinkLoadBalancingCounter0DecayValue => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecayValue",
      RegMem => "RegField",
      Description => "Decay value in bytes. 0 disables the decay feature.",
      Width => "10",
      Position => "65:56", # Excel Formula: =calc_position(F79,E80)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d0",
      InitValueFe => "1",
    },
  },
  LinkLoadBalancingCounterCfg1 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 28;
    Name => "LinkLoadBalancingCounterCfg[4]",
    RegMem => "Reg",
    Address => "12D",
    Description => "LLBC configuration, counts amount of traffic per link & context (UC/MC).
Lower two registers are for lower 44 links (200G) and upper two registers are for upper 64 links (100G)
Among each two - lower register is for UC LLBC and upper register is for MC LLBC
i.e. order is {MC1, UC1, MC0, UC0}",
    Width => "66", # Excel Formula: =calc_reg_width(E77:E80,F80)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "4",
    ArrayIndex => "1",
    LinkLoadBalancingCounter1MaxThr => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]MaxThr",
      RegMem => "RegField",
      Description => "When a LLBC passes this threshold, all the LLBCs will be decremented by LinkLoadBalancingCounterDecValue.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F76,E77,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d51200",
    },
    LinkLoadBalancingCounter1DecValue => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecValue",
      RegMem => "RegField",
      Description => "Decrement value for passing LLBC max threshold.
DevValue must be lower than MaxThr.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F77,E78)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d10240",
    },
    LinkLoadBalancingCounter1DecayRate => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecayRate",
      RegMem => "RegField",
      Description => "LLBC decay feature - create decay event each LinkLoadBalancingCounter[n]DecayRate/16 clocks",
      Width => "24",
      Position => "55:32", # Excel Formula: =calc_position(F78,E79)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d33",
      InitValueFe => "(16 * frequency * 1 * 8)/(0.5*1000)",
    },
    LinkLoadBalancingCounter1DecayValue => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecayValue",
      RegMem => "RegField",
      Description => "Decay value in bytes. 0 disables the decay feature.",
      Width => "10",
      Position => "65:56", # Excel Formula: =calc_position(F79,E80)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d0",
      InitValueFe => "1",
    },
  },
  LinkLoadBalancingCounterCfg2 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 28;
    Name => "LinkLoadBalancingCounterCfg[4]",
    RegMem => "Reg",
    Address => "12E",
    Description => "LLBC configuration, counts amount of traffic per link & context (UC/MC).
Lower two registers are for lower 44 links (200G) and upper two registers are for upper 64 links (100G)
Among each two - lower register is for UC LLBC and upper register is for MC LLBC
i.e. order is {MC1, UC1, MC0, UC0}",
    Width => "66", # Excel Formula: =calc_reg_width(E77:E80,F80)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "4",
    ArrayIndex => "2",
    LinkLoadBalancingCounter2MaxThr => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]MaxThr",
      RegMem => "RegField",
      Description => "When a LLBC passes this threshold, all the LLBCs will be decremented by LinkLoadBalancingCounterDecValue.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F76,E77,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d51200",
    },
    LinkLoadBalancingCounter2DecValue => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecValue",
      RegMem => "RegField",
      Description => "Decrement value for passing LLBC max threshold.
DevValue must be lower than MaxThr.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F77,E78)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d10240",
    },
    LinkLoadBalancingCounter2DecayRate => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecayRate",
      RegMem => "RegField",
      Description => "LLBC decay feature - create decay event each LinkLoadBalancingCounter[n]DecayRate/16 clocks",
      Width => "24",
      Position => "55:32", # Excel Formula: =calc_position(F78,E79)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d33",
      InitValueFe => "(16 * frequency * 1 * 8)/(0.5*1000)",
    },
    LinkLoadBalancingCounter2DecayValue => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecayValue",
      RegMem => "RegField",
      Description => "Decay value in bytes. 0 disables the decay feature.",
      Width => "10",
      Position => "65:56", # Excel Formula: =calc_position(F79,E80)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d0",
      InitValueFe => "1",
    },
  },
  LinkLoadBalancingCounterCfg3 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 28;
    Name => "LinkLoadBalancingCounterCfg[4]",
    RegMem => "Reg",
    Address => "12F",
    Description => "LLBC configuration, counts amount of traffic per link & context (UC/MC).
Lower two registers are for lower 44 links (200G) and upper two registers are for upper 64 links (100G)
Among each two - lower register is for UC LLBC and upper register is for MC LLBC
i.e. order is {MC1, UC1, MC0, UC0}",
    Width => "66", # Excel Formula: =calc_reg_width(E77:E80,F80)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "4",
    ArrayIndex => "3",
    LinkLoadBalancingCounter3MaxThr => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]MaxThr",
      RegMem => "RegField",
      Description => "When a LLBC passes this threshold, all the LLBCs will be decremented by LinkLoadBalancingCounterDecValue.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F76,E77,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d51200",
    },
    LinkLoadBalancingCounter3DecValue => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecValue",
      RegMem => "RegField",
      Description => "Decrement value for passing LLBC max threshold.
DevValue must be lower than MaxThr.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F77,E78)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d10240",
    },
    LinkLoadBalancingCounter3DecayRate => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecayRate",
      RegMem => "RegField",
      Description => "LLBC decay feature - create decay event each LinkLoadBalancingCounter[n]DecayRate/16 clocks",
      Width => "24",
      Position => "55:32", # Excel Formula: =calc_position(F78,E79)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d33",
      InitValueFe => "(16 * frequency * 1 * 8)/(0.5*1000)",
    },
    LinkLoadBalancingCounter3DecayValue => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecayValue",
      RegMem => "RegField",
      Description => "Decay value in bytes. 0 disables the decay feature.",
      Width => "10",
      Position => "65:56", # Excel Formula: =calc_position(F79,E80)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "d0",
      InitValueFe => "1",
    },
  },
  LoadBalancingGeneralCfg => { #Structure Type: Reg;
    Name => "LoadBalancingGeneralCfg",
    RegMem => "Reg",
    Address => "130", # Excel Formula: =calc_reg_address(C76,A76,G76)
    Description => "Load balancing scheme general configuration",
    Width => "66", # Excel Formula: =calc_reg_width(E82:E84,F84)
    Type => "Config",
    LinkSelectionMethodLut => { #Structure Type: RegField;
      Name => "LinkSelectionMethodLut",
      RegMem => "RegField",
      Description => "Decides if to select the link based on SLBM/LLBM or based on LLBC:
0 - Select by SLBM/LLBM
1 - Select by LLBC
Bit is selected using {LLBC_delta_quantized, Max_delay_delta}",
      Width => "64",
      Position => "63:0", # Excel Formula: =calc_position(F81,E82,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "h0f0f0f0f00000000",
    },
    EnableLlbmFlowControl => { #Structure Type: RegField;
      Name => "EnableLlbmFlowControl",
      RegMem => "RegField",
      Description => "Enable Flow control by LLBM",
      Width => "1",
      Position => "64", # Excel Formula: =calc_position(F82,E83)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "b1",
      InitValueFe => "0",
    },
    EnableSlbmFlowControl => { #Structure Type: RegField;
      Name => "EnableSlbmFlowControl",
      RegMem => "RegField",
      Description => "Enable Flow control by SLBM",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F83,E84)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "b1",
      InitValueFe => "0",
    },
  },
  LinkTypeCfg => { #Structure Type: Reg;
    Name => "LinkTypeCfg",
    RegMem => "Reg",
    Address => "131", # Excel Formula: =calc_reg_address(C81,A81,G81)
    Width => "108", # Excel Formula: =calc_reg_width(E86:E86,F86)
    Type => "Config",
    LinkTypeBitmap => { #Structure Type: RegField;
      Name => "LinkTypeBitmap",
      RegMem => "RegField",
      Description => "Bitmap whether each link is towards LC or FE2
0 - link towards LC
1 - link towards FE2",
      Width => "108",
      Position => "107:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "hffffffffffffffff00000000000",
    },
  },
  SlbmQuantCfg => { #Structure Type: Reg;
    Name => "SlbmQuantCfg",
    RegMem => "Reg",
    Address => "132", # Excel Formula: =calc_reg_address(C85,A85,G85)
    Description => "Load balancing scheme general configuration",
    Width => "180", # Excel Formula: =calc_reg_width(E88:E88,F88)
    Type => "Config",
    SlbmQuantThr => { #Structure Type: RegField;
      Name => "SlbmQuantThr",
      RegMem => "RegField",
      Description => "15 thresholds for 16 SLBM quantization regions (12b per TH)
On the exact TH value the higher region is selected",
      Width => "180", # Excel Formula: =E70*15
      Position => "179:0", # Excel Formula: =calc_position(F87,E88,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "h3c03803403002c02802402001c01801401000c0080040",
    },
  },
  LlbmQuantCfg0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 13;
    Name => "LlbmQuantCfg[2]",
    RegMem => "Reg",
    Address => "133", # Excel Formula: =calc_reg_address(C87,A87,G87)
    Description => "Load balancing scheme general configuration
Lower register is for 200G links and upper register is for 100G links",
    Width => "240", # Excel Formula: =calc_reg_width(E90:E90,F90)
    Type => "Config",
    ArrayLength => "2",
    ArrayIndex => "0",
    Llbm0QuantThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 5;
      Name => "Llbm[n]QuantThr",
      RegMem => "RegField",
      Description => "15 thresholds for 16 LLBM quantization regions (16b per TH)
On the exact TH value the higher region is selected",
      Width => "240", # Excel Formula: =E73*15
      Position => "239:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "h3c003800340030002c002800240020001c001800140010000c0008000400",
    },
  },
  LlbmQuantCfg1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 13;
    Name => "LlbmQuantCfg[2]",
    RegMem => "Reg",
    Address => "134",
    Description => "Load balancing scheme general configuration
Lower register is for 200G links and upper register is for 100G links",
    Width => "240", # Excel Formula: =calc_reg_width(E90:E90,F90)
    Type => "Config",
    ArrayLength => "2",
    ArrayIndex => "1",
    Llbm1QuantThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 5;
      Name => "Llbm[n]QuantThr",
      RegMem => "RegField",
      Description => "15 thresholds for 16 LLBM quantization regions (16b per TH)
On the exact TH value the higher region is selected",
      Width => "240", # Excel Formula: =E73*15
      Position => "239:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "h3c003800340030002c002800240020001c001800140010000c0008000400",
    },
  },
  LlbcQuantCfg => { #Structure Type: Reg;
    Name => "LlbcQuantCfg",
    RegMem => "Reg",
    Address => "135", # Excel Formula: =calc_reg_address(C89,A89,G89)
    Description => "Load balancing scheme general configuration",
    Width => "224", # Excel Formula: =calc_reg_width(E92:E93,F93)
    Type => "Config",
    UcLlbcQuantThr => { #Structure Type: RegField;
      Name => "UcLlbcQuantThr",
      RegMem => "RegField",
      Description => "7 thresholds for 8 UC LLBC quantization regions (16b per TH)
On the exact TH value the higher region is selected",
      Width => "112", # Excel Formula: =E77*7
      Position => "111:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "h46003c00320028001e0014000a00",
    },
    McLlbcQuantThr => { #Structure Type: RegField;
      Name => "McLlbcQuantThr",
      RegMem => "RegField",
      Description => "7 thresholds for 8 MC LLBC quantization regions (16b per TH)
On the exact TH value the higher region is selected",
      Width => "112", # Excel Formula: =E77*7
      Position => "223:112", # Excel Formula: =calc_position(F92,E93)
      Type => "Config",
      UsedBy => "FLBT",
      DefaultValue => "h46003c00320028001e0014000a00",
    },
  },
  SharedMemoryOutFifoNotReadyReg => { #Structure Type: Reg;
    Name => "SharedMemoryOutFifoNotReadyReg",
    RegMem => "Reg",
    Address => "136", # Excel Formula: =calc_reg_address(C91,A91,G91)
    Width => "6", # Excel Formula: =calc_reg_width(E95:E95,F95)
    Type => "ReadOnly",
    SharedMemoryOutFifoNotReady => { #Structure Type: RegField;
      Name => "SharedMemoryOutFifoNotReady",
      RegMem => "RegField",
      Description => "Indicated that the Output FIFO returning read results to each RX-PDR slice was not ready to receive new data",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F94,E95,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
  },
  SharedMemoryOutFifoAlmostFullReg => { #Structure Type: Reg;
    Name => "SharedMemoryOutFifoAlmostFullReg",
    RegMem => "Reg",
    Address => "137", # Excel Formula: =calc_reg_address(C94,A94,G94)
    Width => "2", # Excel Formula: =calc_reg_width(E97:E97,F97)
    Type => "Config",
    SharedMemoryOutFifoAlmostFull => { #Structure Type: RegField;
      Name => "SharedMemoryOutFifoAlmostFull",
      RegMem => "RegField",
      Description => "Almost full threshold for the Shared Memory output FIFO
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F96,E97,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
  },
  MaxDelayEstimationLut => { #Structure Type: Mem;
    Name => "MaxDelayEstimationLut",
    RegMem => "Mem",
    Address => "100000",
    Description => "Max delay estimation LUT",
    Width => "3", # Excel Formula: =calc_mem_width(E99:E99,M98,F99,-1)
    Type => "Config",
    UsedBy => "FLBT",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "3",
    MaxDelayEstimation => { #Structure Type: MemField;
      Name => "MaxDelayEstimation",
      RegMem => "MemField",
      Description => "Max delay estimation for selected link, quantized to 4 bit.
Address is {SLBM_quantized_value, LLBM_quantized_value}.
Used to access LinkSelectionMethodLut",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F98,E99,TRUE)
      InitValueFe => "(round_down(line/16) < 2 || line%16 < 2) ? 7 :
(round_down(line/16) < 4 || line%16 < 4) ? 6 :
(round_down(line/16) < 6 || line%16 < 6) ? 5 :
(round_down(line/16) < 8 || line%16 < 8) ? 4 :
(round_down(line/16) < 10|| line%16 < 10)? 3 :
(round_down(line/16) < 12|| line%16 < 12)? 2 :
(round_down(line/16) < 14|| line%16 < 14)? 1 :  0",
    },
  },
  SharedMemRdReqFifo0 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "SharedMemRdReqFifo[12]",
    RegMem => "Mem",
    Address => "200000", # Excel Formula: =calc_mem_address(C98,A98,G100,L100)
    Description => "The data holds the key since it is larger than the address to the McFeLinksBmp",
    Width => "32", # Excel Formula: =calc_mem_width(E101:E105,M100,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "0",
    MemLogicalWidth => "32",
    McEmdbKeyEntryNumber0 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 21;
      Name => "McEmdbKeyEntryNumber[n]",
      RegMem => "MemField",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    McEmdbKeyMcid0 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "McEmdbKeyMcid[n]",
      RegMem => "MemField",
      Width => "16",
      Position => "26:11", # Excel Formula: =calc_position(F101,E102)
    },
    McEmdbKeySrcIsRecycle0 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 22;
      Name => "McEmdbKeySrcIsRecycle[n]",
      RegMem => "MemField",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F102,E103)
    },
    McEmdbKeySliceOrientation0 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 26;
      Name => "McEmdbKeySliceOrientation[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F103,E104)
    },
    McEmdbKey0IsTxPdr => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "McEmdbKey[n]IsTxPdr",
      RegMem => "MemField",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SharedMemRdReqFifo1 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "SharedMemRdReqFifo[12]",
    RegMem => "Mem",
    Address => "300000",
    Description => "The data holds the key since it is larger than the address to the McFeLinksBmp",
    Width => "32", # Excel Formula: =calc_mem_width(E101:E105,M100,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "1",
    MemLogicalWidth => "32",
    McEmdbKeyEntryNumber1 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 21;
      Name => "McEmdbKeyEntryNumber[n]",
      RegMem => "MemField",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    McEmdbKeyMcid1 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "McEmdbKeyMcid[n]",
      RegMem => "MemField",
      Width => "16",
      Position => "26:11", # Excel Formula: =calc_position(F101,E102)
    },
    McEmdbKeySrcIsRecycle1 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 22;
      Name => "McEmdbKeySrcIsRecycle[n]",
      RegMem => "MemField",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F102,E103)
    },
    McEmdbKeySliceOrientation1 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 26;
      Name => "McEmdbKeySliceOrientation[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F103,E104)
    },
    McEmdbKey1IsTxPdr => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "McEmdbKey[n]IsTxPdr",
      RegMem => "MemField",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SharedMemRdReqFifo2 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 19;
    Name => "SharedMemRdReqFifo[12]",
    RegMem => "Mem",
    Address => "400000",
    Description => "The data holds the key since it is larger than the address to the McFeLinksBmp",
    Width => "32", # Excel Formula: =calc_mem_width(E101:E105,M100,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "2",
    MemLogicalWidth => "32",
    McEmdbKeyEntryNumber2 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 21;
      Name => "McEmdbKeyEntryNumber[n]",
      RegMem => "MemField",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    McEmdbKeyMcid2 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 14;
      Name => "McEmdbKeyMcid[n]",
      RegMem => "MemField",
      Width => "16",
      Position => "26:11", # Excel Formula: =calc_position(F101,E102)
    },
    McEmdbKeySrcIsRecycle2 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 22;
      Name => "McEmdbKeySrcIsRecycle[n]",
      RegMem => "MemField",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F102,E103)
    },
    McEmdbKeySliceOrientation2 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 26;
      Name => "McEmdbKeySliceOrientation[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F103,E104)
    },
    McEmdbKey2IsTxPdr => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 10;
      Name => "McEmdbKey[n]IsTxPdr",
      RegMem => "MemField",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SharedMemRdReqFifo3 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 19;
    Name => "SharedMemRdReqFifo[12]",
    RegMem => "Mem",
    Address => "500000",
    Description => "The data holds the key since it is larger than the address to the McFeLinksBmp",
    Width => "32", # Excel Formula: =calc_mem_width(E101:E105,M100,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "3",
    MemLogicalWidth => "32",
    McEmdbKeyEntryNumber3 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 21;
      Name => "McEmdbKeyEntryNumber[n]",
      RegMem => "MemField",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    McEmdbKeyMcid3 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 14;
      Name => "McEmdbKeyMcid[n]",
      RegMem => "MemField",
      Width => "16",
      Position => "26:11", # Excel Formula: =calc_position(F101,E102)
    },
    McEmdbKeySrcIsRecycle3 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 22;
      Name => "McEmdbKeySrcIsRecycle[n]",
      RegMem => "MemField",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F102,E103)
    },
    McEmdbKeySliceOrientation3 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 26;
      Name => "McEmdbKeySliceOrientation[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F103,E104)
    },
    McEmdbKey3IsTxPdr => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 10;
      Name => "McEmdbKey[n]IsTxPdr",
      RegMem => "MemField",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SharedMemRdReqFifo4 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 19;
    Name => "SharedMemRdReqFifo[12]",
    RegMem => "Mem",
    Address => "600000",
    Description => "The data holds the key since it is larger than the address to the McFeLinksBmp",
    Width => "32", # Excel Formula: =calc_mem_width(E101:E105,M100,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "4",
    MemLogicalWidth => "32",
    McEmdbKeyEntryNumber4 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 21;
      Name => "McEmdbKeyEntryNumber[n]",
      RegMem => "MemField",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    McEmdbKeyMcid4 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 14;
      Name => "McEmdbKeyMcid[n]",
      RegMem => "MemField",
      Width => "16",
      Position => "26:11", # Excel Formula: =calc_position(F101,E102)
    },
    McEmdbKeySrcIsRecycle4 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 22;
      Name => "McEmdbKeySrcIsRecycle[n]",
      RegMem => "MemField",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F102,E103)
    },
    McEmdbKeySliceOrientation4 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 26;
      Name => "McEmdbKeySliceOrientation[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F103,E104)
    },
    McEmdbKey4IsTxPdr => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 10;
      Name => "McEmdbKey[n]IsTxPdr",
      RegMem => "MemField",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SharedMemRdReqFifo5 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 19;
    Name => "SharedMemRdReqFifo[12]",
    RegMem => "Mem",
    Address => "700000",
    Description => "The data holds the key since it is larger than the address to the McFeLinksBmp",
    Width => "32", # Excel Formula: =calc_mem_width(E101:E105,M100,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "5",
    MemLogicalWidth => "32",
    McEmdbKeyEntryNumber5 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 21;
      Name => "McEmdbKeyEntryNumber[n]",
      RegMem => "MemField",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    McEmdbKeyMcid5 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 14;
      Name => "McEmdbKeyMcid[n]",
      RegMem => "MemField",
      Width => "16",
      Position => "26:11", # Excel Formula: =calc_position(F101,E102)
    },
    McEmdbKeySrcIsRecycle5 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 22;
      Name => "McEmdbKeySrcIsRecycle[n]",
      RegMem => "MemField",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F102,E103)
    },
    McEmdbKeySliceOrientation5 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 26;
      Name => "McEmdbKeySliceOrientation[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F103,E104)
    },
    McEmdbKey5IsTxPdr => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 10;
      Name => "McEmdbKey[n]IsTxPdr",
      RegMem => "MemField",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SharedMemRdReqFifo6 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 19;
    Name => "SharedMemRdReqFifo[12]",
    RegMem => "Mem",
    Address => "800000",
    Description => "The data holds the key since it is larger than the address to the McFeLinksBmp",
    Width => "32", # Excel Formula: =calc_mem_width(E101:E105,M100,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "6",
    MemLogicalWidth => "32",
    McEmdbKeyEntryNumber6 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 21;
      Name => "McEmdbKeyEntryNumber[n]",
      RegMem => "MemField",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    McEmdbKeyMcid6 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 14;
      Name => "McEmdbKeyMcid[n]",
      RegMem => "MemField",
      Width => "16",
      Position => "26:11", # Excel Formula: =calc_position(F101,E102)
    },
    McEmdbKeySrcIsRecycle6 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 22;
      Name => "McEmdbKeySrcIsRecycle[n]",
      RegMem => "MemField",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F102,E103)
    },
    McEmdbKeySliceOrientation6 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 26;
      Name => "McEmdbKeySliceOrientation[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F103,E104)
    },
    McEmdbKey6IsTxPdr => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 10;
      Name => "McEmdbKey[n]IsTxPdr",
      RegMem => "MemField",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SharedMemRdReqFifo7 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 19;
    Name => "SharedMemRdReqFifo[12]",
    RegMem => "Mem",
    Address => "900000",
    Description => "The data holds the key since it is larger than the address to the McFeLinksBmp",
    Width => "32", # Excel Formula: =calc_mem_width(E101:E105,M100,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "7",
    MemLogicalWidth => "32",
    McEmdbKeyEntryNumber7 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 21;
      Name => "McEmdbKeyEntryNumber[n]",
      RegMem => "MemField",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    McEmdbKeyMcid7 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 14;
      Name => "McEmdbKeyMcid[n]",
      RegMem => "MemField",
      Width => "16",
      Position => "26:11", # Excel Formula: =calc_position(F101,E102)
    },
    McEmdbKeySrcIsRecycle7 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 22;
      Name => "McEmdbKeySrcIsRecycle[n]",
      RegMem => "MemField",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F102,E103)
    },
    McEmdbKeySliceOrientation7 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 26;
      Name => "McEmdbKeySliceOrientation[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F103,E104)
    },
    McEmdbKey7IsTxPdr => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 10;
      Name => "McEmdbKey[n]IsTxPdr",
      RegMem => "MemField",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SharedMemRdReqFifo8 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 19;
    Name => "SharedMemRdReqFifo[12]",
    RegMem => "Mem",
    Address => "A00000",
    Description => "The data holds the key since it is larger than the address to the McFeLinksBmp",
    Width => "32", # Excel Formula: =calc_mem_width(E101:E105,M100,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "8",
    MemLogicalWidth => "32",
    McEmdbKeyEntryNumber8 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 21;
      Name => "McEmdbKeyEntryNumber[n]",
      RegMem => "MemField",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    McEmdbKeyMcid8 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 14;
      Name => "McEmdbKeyMcid[n]",
      RegMem => "MemField",
      Width => "16",
      Position => "26:11", # Excel Formula: =calc_position(F101,E102)
    },
    McEmdbKeySrcIsRecycle8 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 22;
      Name => "McEmdbKeySrcIsRecycle[n]",
      RegMem => "MemField",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F102,E103)
    },
    McEmdbKeySliceOrientation8 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 26;
      Name => "McEmdbKeySliceOrientation[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F103,E104)
    },
    McEmdbKey8IsTxPdr => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 10;
      Name => "McEmdbKey[n]IsTxPdr",
      RegMem => "MemField",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SharedMemRdReqFifo9 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 19;
    Name => "SharedMemRdReqFifo[12]",
    RegMem => "Mem",
    Address => "B00000",
    Description => "The data holds the key since it is larger than the address to the McFeLinksBmp",
    Width => "32", # Excel Formula: =calc_mem_width(E101:E105,M100,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "9",
    MemLogicalWidth => "32",
    McEmdbKeyEntryNumber9 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 21;
      Name => "McEmdbKeyEntryNumber[n]",
      RegMem => "MemField",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    McEmdbKeyMcid9 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 14;
      Name => "McEmdbKeyMcid[n]",
      RegMem => "MemField",
      Width => "16",
      Position => "26:11", # Excel Formula: =calc_position(F101,E102)
    },
    McEmdbKeySrcIsRecycle9 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 22;
      Name => "McEmdbKeySrcIsRecycle[n]",
      RegMem => "MemField",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F102,E103)
    },
    McEmdbKeySliceOrientation9 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 26;
      Name => "McEmdbKeySliceOrientation[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F103,E104)
    },
    McEmdbKey9IsTxPdr => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 10;
      Name => "McEmdbKey[n]IsTxPdr",
      RegMem => "MemField",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SharedMemRdReqFifo10 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 19;
    Name => "SharedMemRdReqFifo[12]",
    RegMem => "Mem",
    Address => "C00000",
    Description => "The data holds the key since it is larger than the address to the McFeLinksBmp",
    Width => "32", # Excel Formula: =calc_mem_width(E101:E105,M100,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "10",
    MemLogicalWidth => "32",
    McEmdbKeyEntryNumber10 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 21;
      Name => "McEmdbKeyEntryNumber[n]",
      RegMem => "MemField",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    McEmdbKeyMcid10 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 14;
      Name => "McEmdbKeyMcid[n]",
      RegMem => "MemField",
      Width => "16",
      Position => "26:11", # Excel Formula: =calc_position(F101,E102)
    },
    McEmdbKeySrcIsRecycle10 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 22;
      Name => "McEmdbKeySrcIsRecycle[n]",
      RegMem => "MemField",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F102,E103)
    },
    McEmdbKeySliceOrientation10 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 26;
      Name => "McEmdbKeySliceOrientation[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F103,E104)
    },
    McEmdbKey10IsTxPdr => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 10;
      Name => "McEmdbKey[n]IsTxPdr",
      RegMem => "MemField",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SharedMemRdReqFifo11 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 19;
    Name => "SharedMemRdReqFifo[12]",
    RegMem => "Mem",
    Address => "D00000",
    Description => "The data holds the key since it is larger than the address to the McFeLinksBmp",
    Width => "32", # Excel Formula: =calc_mem_width(E101:E105,M100,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "11",
    MemLogicalWidth => "32",
    McEmdbKeyEntryNumber11 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 21;
      Name => "McEmdbKeyEntryNumber[n]",
      RegMem => "MemField",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    McEmdbKeyMcid11 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 14;
      Name => "McEmdbKeyMcid[n]",
      RegMem => "MemField",
      Width => "16",
      Position => "26:11", # Excel Formula: =calc_position(F101,E102)
    },
    McEmdbKeySrcIsRecycle11 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 22;
      Name => "McEmdbKeySrcIsRecycle[n]",
      RegMem => "MemField",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F102,E103)
    },
    McEmdbKeySliceOrientation11 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 26;
      Name => "McEmdbKeySliceOrientation[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F103,E104)
    },
    McEmdbKey11IsTxPdr => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 10;
      Name => "McEmdbKey[n]IsTxPdr",
      RegMem => "MemField",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SharedMemRdResultFifo0 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 22;
    Name => "SharedMemRdResultFifo[12]",
    RegMem => "Mem",
    Address => "E00000", # Excel Formula: =calc_mem_address(C100,A100,G106,L106)
    Description => "The FIFO holds the data returning from the McFeLinksBmp because it is larger than the data from the MC Emdb",
    Width => "117", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "0",
    MemLogicalWidth => "109",
    McFeLinksBmpData0 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 17;
      Name => "McFeLinksBmpData[n]",
      RegMem => "MemField",
      Width => "109",
      Position => "108:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  SharedMemRdResultFifo1 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 22;
    Name => "SharedMemRdResultFifo[12]",
    RegMem => "Mem",
    Address => "F00000",
    Description => "The FIFO holds the data returning from the McFeLinksBmp because it is larger than the data from the MC Emdb",
    Width => "117", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "1",
    MemLogicalWidth => "109",
    McFeLinksBmpData1 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 17;
      Name => "McFeLinksBmpData[n]",
      RegMem => "MemField",
      Width => "109",
      Position => "108:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  SharedMemRdResultFifo2 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 22;
    Name => "SharedMemRdResultFifo[12]",
    RegMem => "Mem",
    Address => "1000000",
    Description => "The FIFO holds the data returning from the McFeLinksBmp because it is larger than the data from the MC Emdb",
    Width => "117", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "2",
    MemLogicalWidth => "109",
    McFeLinksBmpData2 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 17;
      Name => "McFeLinksBmpData[n]",
      RegMem => "MemField",
      Width => "109",
      Position => "108:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  SharedMemRdResultFifo3 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 22;
    Name => "SharedMemRdResultFifo[12]",
    RegMem => "Mem",
    Address => "1100000",
    Description => "The FIFO holds the data returning from the McFeLinksBmp because it is larger than the data from the MC Emdb",
    Width => "117", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "3",
    MemLogicalWidth => "109",
    McFeLinksBmpData3 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 17;
      Name => "McFeLinksBmpData[n]",
      RegMem => "MemField",
      Width => "109",
      Position => "108:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  SharedMemRdResultFifo4 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 22;
    Name => "SharedMemRdResultFifo[12]",
    RegMem => "Mem",
    Address => "1200000",
    Description => "The FIFO holds the data returning from the McFeLinksBmp because it is larger than the data from the MC Emdb",
    Width => "117", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "4",
    MemLogicalWidth => "109",
    McFeLinksBmpData4 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 17;
      Name => "McFeLinksBmpData[n]",
      RegMem => "MemField",
      Width => "109",
      Position => "108:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  SharedMemRdResultFifo5 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 22;
    Name => "SharedMemRdResultFifo[12]",
    RegMem => "Mem",
    Address => "1300000",
    Description => "The FIFO holds the data returning from the McFeLinksBmp because it is larger than the data from the MC Emdb",
    Width => "117", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "5",
    MemLogicalWidth => "109",
    McFeLinksBmpData5 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 17;
      Name => "McFeLinksBmpData[n]",
      RegMem => "MemField",
      Width => "109",
      Position => "108:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  SharedMemRdResultFifo6 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 22;
    Name => "SharedMemRdResultFifo[12]",
    RegMem => "Mem",
    Address => "1400000",
    Description => "The FIFO holds the data returning from the McFeLinksBmp because it is larger than the data from the MC Emdb",
    Width => "117", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "6",
    MemLogicalWidth => "109",
    McFeLinksBmpData6 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 17;
      Name => "McFeLinksBmpData[n]",
      RegMem => "MemField",
      Width => "109",
      Position => "108:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  SharedMemRdResultFifo7 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 22;
    Name => "SharedMemRdResultFifo[12]",
    RegMem => "Mem",
    Address => "1500000",
    Description => "The FIFO holds the data returning from the McFeLinksBmp because it is larger than the data from the MC Emdb",
    Width => "117", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "7",
    MemLogicalWidth => "109",
    McFeLinksBmpData7 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 17;
      Name => "McFeLinksBmpData[n]",
      RegMem => "MemField",
      Width => "109",
      Position => "108:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  SharedMemRdResultFifo8 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 22;
    Name => "SharedMemRdResultFifo[12]",
    RegMem => "Mem",
    Address => "1600000",
    Description => "The FIFO holds the data returning from the McFeLinksBmp because it is larger than the data from the MC Emdb",
    Width => "117", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "8",
    MemLogicalWidth => "109",
    McFeLinksBmpData8 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 17;
      Name => "McFeLinksBmpData[n]",
      RegMem => "MemField",
      Width => "109",
      Position => "108:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  SharedMemRdResultFifo9 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 22;
    Name => "SharedMemRdResultFifo[12]",
    RegMem => "Mem",
    Address => "1700000",
    Description => "The FIFO holds the data returning from the McFeLinksBmp because it is larger than the data from the MC Emdb",
    Width => "117", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "9",
    MemLogicalWidth => "109",
    McFeLinksBmpData9 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 17;
      Name => "McFeLinksBmpData[n]",
      RegMem => "MemField",
      Width => "109",
      Position => "108:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  SharedMemRdResultFifo10 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 22;
    Name => "SharedMemRdResultFifo[12]",
    RegMem => "Mem",
    Address => "1800000",
    Description => "The FIFO holds the data returning from the McFeLinksBmp because it is larger than the data from the MC Emdb",
    Width => "117", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "10",
    MemLogicalWidth => "109",
    McFeLinksBmpData10 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 17;
      Name => "McFeLinksBmpData[n]",
      RegMem => "MemField",
      Width => "109",
      Position => "108:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  SharedMemRdResultFifo11 => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 22;
    Name => "SharedMemRdResultFifo[12]",
    RegMem => "Mem",
    Address => "1900000",
    Description => "The FIFO holds the data returning from the McFeLinksBmp because it is larger than the data from the MC Emdb",
    Width => "117", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=2,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "12",
    ArrayIndex => "11",
    MemLogicalWidth => "109",
    McFeLinksBmpData11 => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 17;
      Name => "McFeLinksBmpData[n]",
      RegMem => "MemField",
      Width => "109",
      Position => "108:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  CounterAHistogramCfg => { #Structure Type: Reg; Skip Register;
    Name => "CounterAHistogramCfg",
    RegMem => "Reg",
    Address => "138", # Excel Formula: =calc_reg_address(C96,A96,G96)
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E109:E116,F116)
    Type => "Config",
    Comments => "EM Skip Reg",
    CounterAHistogramTh0 => { #Structure Type: RegField;
      Name => "CounterAHistogramTh0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterAHistogramTh0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F108,E109,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterAHistogramTh1 => { #Structure Type: RegField;
      Name => "CounterAHistogramTh1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterAHistogramTh1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F109,E110)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterAHistogramTh2 => { #Structure Type: RegField;
      Name => "CounterAHistogramTh2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterAHistogramTh2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F110,E111)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterAHistogramTh3 => { #Structure Type: RegField;
      Name => "CounterAHistogramTh3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterAHistogramTh3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F111,E112)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterAHistogramTh4 => { #Structure Type: RegField;
      Name => "CounterAHistogramTh4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterAHistogramTh4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F112,E113)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterAHistogramTh5 => { #Structure Type: RegField;
      Name => "CounterAHistogramTh5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterAHistogramTh5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F113,E114)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterAHistogramTh6 => { #Structure Type: RegField;
      Name => "CounterAHistogramTh6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterAHistogramTh6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F114,E115)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterAHistogramTimeInterval => { #Structure Type: RegField;
      Name => "CounterAHistogramTimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F115,E116)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CounterAHistogramStatus => { #Structure Type: Reg; Skip Register;
    Name => "CounterAHistogramStatus",
    RegMem => "Reg",
    Address => "139", # Excel Formula: =calc_reg_address(C108,A108,G108)
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E118:E133,F133)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    CounterAHistogramValue0 => { #Structure Type: RegField;
      Name => "CounterAHistogramValue0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F117,E118,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramOverflow0 => { #Structure Type: RegField;
      Name => "CounterAHistogramOverflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F118,E119)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramValue1 => { #Structure Type: RegField;
      Name => "CounterAHistogramValue1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F119,E120)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramOverflow1 => { #Structure Type: RegField;
      Name => "CounterAHistogramOverflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F120,E121)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramValue2 => { #Structure Type: RegField;
      Name => "CounterAHistogramValue2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F121,E122)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramOverflow2 => { #Structure Type: RegField;
      Name => "CounterAHistogramOverflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F122,E123)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramValue3 => { #Structure Type: RegField;
      Name => "CounterAHistogramValue3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F123,E124)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramOverflow3 => { #Structure Type: RegField;
      Name => "CounterAHistogramOverflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F124,E125)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramValue4 => { #Structure Type: RegField;
      Name => "CounterAHistogramValue4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F125,E126)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramOverflow4 => { #Structure Type: RegField;
      Name => "CounterAHistogramOverflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F126,E127)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramValue5 => { #Structure Type: RegField;
      Name => "CounterAHistogramValue5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F127,E128)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramOverflow5 => { #Structure Type: RegField;
      Name => "CounterAHistogramOverflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F128,E129)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramValue6 => { #Structure Type: RegField;
      Name => "CounterAHistogramValue6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F129,E130)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramOverflow6 => { #Structure Type: RegField;
      Name => "CounterAHistogramOverflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F130,E131)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramValue7 => { #Structure Type: RegField;
      Name => "CounterAHistogramValue7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F131,E132)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterAHistogramOverflow7 => { #Structure Type: RegField;
      Name => "CounterAHistogramOverflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F132,E133)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CounterAHistogramMaxWmkReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterAHistogramMaxWmkReg",
    RegMem => "Reg",
    Address => "13A", # Excel Formula: =calc_reg_address(C117,A117,G117)
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E135:E136,F136)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    CounterAHistogramMaxWmk => { #Structure Type: RegField;
      Name => "CounterAHistogramMaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F134,E135,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CounterAHistogramMaxWmkTime => { #Structure Type: RegField;
      Name => "CounterAHistogramMaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F135,E136)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CounterBHistogramCfg => { #Structure Type: Reg; Skip Register;
    Name => "CounterBHistogramCfg",
    RegMem => "Reg",
    Address => "13B", # Excel Formula: =calc_reg_address(C134,A134,G134)
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E138:E145,F145)
    Type => "Config",
    Comments => "EM Skip Reg",
    CounterBHistogramTh0 => { #Structure Type: RegField;
      Name => "CounterBHistogramTh0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterBHistogramTh0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F137,E138,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterBHistogramTh1 => { #Structure Type: RegField;
      Name => "CounterBHistogramTh1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterBHistogramTh1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F138,E139)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterBHistogramTh2 => { #Structure Type: RegField;
      Name => "CounterBHistogramTh2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterBHistogramTh2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F139,E140)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterBHistogramTh3 => { #Structure Type: RegField;
      Name => "CounterBHistogramTh3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterBHistogramTh3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F140,E141)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterBHistogramTh4 => { #Structure Type: RegField;
      Name => "CounterBHistogramTh4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterBHistogramTh4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F141,E142)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterBHistogramTh5 => { #Structure Type: RegField;
      Name => "CounterBHistogramTh5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterBHistogramTh5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F142,E143)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterBHistogramTh6 => { #Structure Type: RegField;
      Name => "CounterBHistogramTh6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterBHistogramTh6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F143,E144)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterBHistogramTimeInterval => { #Structure Type: RegField;
      Name => "CounterBHistogramTimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F144,E145)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CounterBHistogramStatus => { #Structure Type: Reg; Skip Register;
    Name => "CounterBHistogramStatus",
    RegMem => "Reg",
    Address => "13C", # Excel Formula: =calc_reg_address(C137,A137,G137)
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E147:E162,F162)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    CounterBHistogramValue0 => { #Structure Type: RegField;
      Name => "CounterBHistogramValue0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F146,E147,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramOverflow0 => { #Structure Type: RegField;
      Name => "CounterBHistogramOverflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F147,E148)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramValue1 => { #Structure Type: RegField;
      Name => "CounterBHistogramValue1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F148,E149)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramOverflow1 => { #Structure Type: RegField;
      Name => "CounterBHistogramOverflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F149,E150)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramValue2 => { #Structure Type: RegField;
      Name => "CounterBHistogramValue2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F150,E151)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramOverflow2 => { #Structure Type: RegField;
      Name => "CounterBHistogramOverflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F151,E152)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramValue3 => { #Structure Type: RegField;
      Name => "CounterBHistogramValue3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F152,E153)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramOverflow3 => { #Structure Type: RegField;
      Name => "CounterBHistogramOverflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F153,E154)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramValue4 => { #Structure Type: RegField;
      Name => "CounterBHistogramValue4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F154,E155)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramOverflow4 => { #Structure Type: RegField;
      Name => "CounterBHistogramOverflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F155,E156)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramValue5 => { #Structure Type: RegField;
      Name => "CounterBHistogramValue5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F156,E157)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramOverflow5 => { #Structure Type: RegField;
      Name => "CounterBHistogramOverflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F157,E158)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramValue6 => { #Structure Type: RegField;
      Name => "CounterBHistogramValue6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F158,E159)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramOverflow6 => { #Structure Type: RegField;
      Name => "CounterBHistogramOverflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F159,E160)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramValue7 => { #Structure Type: RegField;
      Name => "CounterBHistogramValue7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F160,E161)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterBHistogramOverflow7 => { #Structure Type: RegField;
      Name => "CounterBHistogramOverflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F161,E162)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CounterBHistogramMaxWmkReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterBHistogramMaxWmkReg",
    RegMem => "Reg",
    Address => "13D", # Excel Formula: =calc_reg_address(C146,A146,G146)
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E164:E165,F165)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    CounterBHistogramMaxWmk => { #Structure Type: RegField;
      Name => "CounterBHistogramMaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F163,E164,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CounterBHistogramMaxWmkTime => { #Structure Type: RegField;
      Name => "CounterBHistogramMaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F164,E165)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CounterGHistogramCfg => { #Structure Type: Reg; Skip Register;
    Name => "CounterGHistogramCfg",
    RegMem => "Reg",
    Address => "13E", # Excel Formula: =calc_reg_address(C163,A163,G163)
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E167:E174,F174)
    Type => "Config",
    Comments => "EM Skip Reg",
    CounterGHistogramTh0 => { #Structure Type: RegField;
      Name => "CounterGHistogramTh0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterGHistogramTh0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F166,E167,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterGHistogramTh1 => { #Structure Type: RegField;
      Name => "CounterGHistogramTh1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterGHistogramTh1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F167,E168)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterGHistogramTh2 => { #Structure Type: RegField;
      Name => "CounterGHistogramTh2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterGHistogramTh2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F168,E169)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterGHistogramTh3 => { #Structure Type: RegField;
      Name => "CounterGHistogramTh3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterGHistogramTh3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F169,E170)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterGHistogramTh4 => { #Structure Type: RegField;
      Name => "CounterGHistogramTh4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterGHistogramTh4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F170,E171)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterGHistogramTh5 => { #Structure Type: RegField;
      Name => "CounterGHistogramTh5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterGHistogramTh5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F171,E172)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterGHistogramTh6 => { #Structure Type: RegField;
      Name => "CounterGHistogramTh6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterGHistogramTh6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F172,E173)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterGHistogramTimeInterval => { #Structure Type: RegField;
      Name => "CounterGHistogramTimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F173,E174)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CounterGHistogramStatus => { #Structure Type: Reg; Skip Register;
    Name => "CounterGHistogramStatus",
    RegMem => "Reg",
    Address => "13F", # Excel Formula: =calc_reg_address(C166,A166,G166)
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E176:E191,F191)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    CounterGHistogramValue0 => { #Structure Type: RegField;
      Name => "CounterGHistogramValue0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F175,E176,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramOverflow0 => { #Structure Type: RegField;
      Name => "CounterGHistogramOverflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F176,E177)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramValue1 => { #Structure Type: RegField;
      Name => "CounterGHistogramValue1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F177,E178)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramOverflow1 => { #Structure Type: RegField;
      Name => "CounterGHistogramOverflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F178,E179)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramValue2 => { #Structure Type: RegField;
      Name => "CounterGHistogramValue2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F179,E180)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramOverflow2 => { #Structure Type: RegField;
      Name => "CounterGHistogramOverflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F180,E181)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramValue3 => { #Structure Type: RegField;
      Name => "CounterGHistogramValue3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F181,E182)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramOverflow3 => { #Structure Type: RegField;
      Name => "CounterGHistogramOverflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F182,E183)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramValue4 => { #Structure Type: RegField;
      Name => "CounterGHistogramValue4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F183,E184)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramOverflow4 => { #Structure Type: RegField;
      Name => "CounterGHistogramOverflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F184,E185)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramValue5 => { #Structure Type: RegField;
      Name => "CounterGHistogramValue5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F185,E186)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramOverflow5 => { #Structure Type: RegField;
      Name => "CounterGHistogramOverflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F186,E187)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramValue6 => { #Structure Type: RegField;
      Name => "CounterGHistogramValue6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F187,E188)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramOverflow6 => { #Structure Type: RegField;
      Name => "CounterGHistogramOverflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F188,E189)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramValue7 => { #Structure Type: RegField;
      Name => "CounterGHistogramValue7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F189,E190)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterGHistogramOverflow7 => { #Structure Type: RegField;
      Name => "CounterGHistogramOverflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F190,E191)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CounterGHistogramMaxWmkReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterGHistogramMaxWmkReg",
    RegMem => "Reg",
    Address => "140", # Excel Formula: =calc_reg_address(C175,A175,G175)
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E193:E194,F194)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    CounterGHistogramMaxWmk => { #Structure Type: RegField;
      Name => "CounterGHistogramMaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F192,E193,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CounterGHistogramMaxWmkTime => { #Structure Type: RegField;
      Name => "CounterGHistogramMaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F193,E194)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CounterEHistogramCfg => { #Structure Type: Reg; Skip Register;
    Name => "CounterEHistogramCfg",
    RegMem => "Reg",
    Address => "141", # Excel Formula: =calc_reg_address(C192,A192,G192)
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E196:E203,F203)
    Type => "Config",
    Comments => "EM Skip Reg",
    CounterEHistogramTh0 => { #Structure Type: RegField;
      Name => "CounterEHistogramTh0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterEHistogramTh0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F195,E196,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterEHistogramTh1 => { #Structure Type: RegField;
      Name => "CounterEHistogramTh1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterEHistogramTh1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F196,E197)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterEHistogramTh2 => { #Structure Type: RegField;
      Name => "CounterEHistogramTh2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterEHistogramTh2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F197,E198)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterEHistogramTh3 => { #Structure Type: RegField;
      Name => "CounterEHistogramTh3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterEHistogramTh3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F198,E199)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterEHistogramTh4 => { #Structure Type: RegField;
      Name => "CounterEHistogramTh4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterEHistogramTh4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F199,E200)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterEHistogramTh5 => { #Structure Type: RegField;
      Name => "CounterEHistogramTh5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterEHistogramTh5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F200,E201)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterEHistogramTh6 => { #Structure Type: RegField;
      Name => "CounterEHistogramTh6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CounterEHistogramTh6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F201,E202)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CounterEHistogramTimeInterval => { #Structure Type: RegField;
      Name => "CounterEHistogramTimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CounterEHistogramStatus => { #Structure Type: Reg; Skip Register;
    Name => "CounterEHistogramStatus",
    RegMem => "Reg",
    Address => "142", # Excel Formula: =calc_reg_address(C195,A195,G195)
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E205:E220,F220)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    CounterEHistogramValue0 => { #Structure Type: RegField;
      Name => "CounterEHistogramValue0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F204,E205,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramOverflow0 => { #Structure Type: RegField;
      Name => "CounterEHistogramOverflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F205,E206)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramValue1 => { #Structure Type: RegField;
      Name => "CounterEHistogramValue1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F206,E207)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramOverflow1 => { #Structure Type: RegField;
      Name => "CounterEHistogramOverflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F207,E208)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramValue2 => { #Structure Type: RegField;
      Name => "CounterEHistogramValue2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F208,E209)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramOverflow2 => { #Structure Type: RegField;
      Name => "CounterEHistogramOverflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F209,E210)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramValue3 => { #Structure Type: RegField;
      Name => "CounterEHistogramValue3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F210,E211)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramOverflow3 => { #Structure Type: RegField;
      Name => "CounterEHistogramOverflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F211,E212)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramValue4 => { #Structure Type: RegField;
      Name => "CounterEHistogramValue4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F212,E213)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramOverflow4 => { #Structure Type: RegField;
      Name => "CounterEHistogramOverflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F213,E214)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramValue5 => { #Structure Type: RegField;
      Name => "CounterEHistogramValue5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F214,E215)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramOverflow5 => { #Structure Type: RegField;
      Name => "CounterEHistogramOverflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F215,E216)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramValue6 => { #Structure Type: RegField;
      Name => "CounterEHistogramValue6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F216,E217)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramOverflow6 => { #Structure Type: RegField;
      Name => "CounterEHistogramOverflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F217,E218)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramValue7 => { #Structure Type: RegField;
      Name => "CounterEHistogramValue7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F218,E219)
      Type => "Status",
      UsedBy => "CIF",
    },
    CounterEHistogramOverflow7 => { #Structure Type: RegField;
      Name => "CounterEHistogramOverflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F219,E220)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CounterEHistogramMaxWmkReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterEHistogramMaxWmkReg",
    RegMem => "Reg",
    Address => "143", # Excel Formula: =calc_reg_address(C204,A204,G204)
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E222:E223,F223)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    CounterEHistogramMaxWmk => { #Structure Type: RegField;
      Name => "CounterEHistogramMaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F221,E222,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CounterEHistogramMaxWmkTime => { #Structure Type: RegField;
      Name => "CounterEHistogramMaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F222,E223)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
};
