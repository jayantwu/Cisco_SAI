$block{npe} = {
  Defines_db => " ../../global/rxpp_pd_defines.v,../verilog/npe_defines.v,../verilog/npe_hw_defines.v",
  ProjectName => "Gibraltar",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "2",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    NpeInterruptsSummary => { #Structure Type: RegField;
      Name => "NpeInterruptsSummary",
      RegMem => "RegField",
      Description => "When this bit is set, NpeInterrupts has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt test register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  ParityErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "ParityErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "5",
    Description => "Parity Error Interrupt Mask Register",
    Width => "41",
    Type => "Config",
    ScoperMacroParityErrInterruptMask => { #Structure Type: RegField;
      Name => "ScoperMacroParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupKeysSelectionMacroParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupKeysSelectionMacroParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupKeysConstructionMacroParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupKeysConstructionMacroParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupKeysSelectionTcamParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupKeysSelectionTcamParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupResultMemoryA_ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupResultMemoryA_ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupResultMemoryB_ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupResultMemoryB_ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupResultMemoryC_ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupResultMemoryC_ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupResultMemoryD_ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupResultMemoryD_ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryA_HighParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryA_HighParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryB_HighParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryB_HighParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryC_HighParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryC_HighParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryD_HighParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryD_HighParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryA_LowParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryA_LowParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryB_LowParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryB_LowParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryC_LowParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryC_LowParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryD_LowParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryD_LowParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    ResolutionKeysSelectionMacroParityErrInterruptMask => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionMacroParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    ResolutionKeysSelectionTcamLowParityErrInterruptMask => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionTcamLowParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    ResolutionKeysSelectionTcamHighParityErrInterruptMask => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionTcamHighParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PdUpdateUnifiedBucketsControlParityErrInterruptMask => { #Structure Type: RegField;
      Name => "PdUpdateUnifiedBucketsControlParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusHolderHighParityErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusHolderHighParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusHolderLowParityErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusHolderLowParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupCoreTcamParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupCoreTcamParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Lvr0FsInstructionsParityErrInterruptMask => { #Structure Type: RegField;
      Name => "Lvr0FsInstructionsParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Lvr0MacroCfgParityErrInterruptMask => { #Structure Type: RegField;
      Name => "Lvr0MacroCfgParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Lvr1FsInstructionsParityErrInterruptMask => { #Structure Type: RegField;
      Name => "Lvr1FsInstructionsParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Lvr1MacroCfgParityErrInterruptMask => { #Structure Type: RegField;
      Name => "Lvr1MacroCfgParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Lvr3FsInstructionsParityErrInterruptMask => { #Structure Type: RegField;
      Name => "Lvr3FsInstructionsParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Lvr3MacroCfgParityErrInterruptMask => { #Structure Type: RegField;
      Name => "Lvr3MacroCfgParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    TrapsKeyConstructionMacroParityErrInterruptMask => { #Structure Type: RegField;
      Name => "TrapsKeyConstructionMacroParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    TrapsTcamParityErrInterruptMask => { #Structure Type: RegField;
      Name => "TrapsTcamParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Lvr4MacroCfgParityErrInterruptMask => { #Structure Type: RegField;
      Name => "Lvr4MacroCfgParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "31",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable0ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable0ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "32",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable1ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable1ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "33",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable2ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable2ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "34",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable3ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable3ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "35",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable4ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable4ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "36",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable5ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable5ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "37",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable6ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable6ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "38",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable7ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable7ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "39",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    ThreadMemoryParityErrInterruptMask => { #Structure Type: RegField;
      Name => "ThreadMemoryParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "40",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  ParityErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "ParityErrInitiateRegister",
    RegMem => "Reg",
    Address => "32",
    Description => "Parity Error Initiator Register",
    Width => "41",
    Type => "Config",
    ScoperMacroParityErrInitiate => { #Structure Type: RegField;
      Name => "ScoperMacroParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupKeysSelectionMacroParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupKeysSelectionMacroParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupKeysConstructionMacroParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupKeysConstructionMacroParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupKeysSelectionTcamParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupKeysSelectionTcamParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupResultMemoryA_ParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupResultMemoryA_ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupResultMemoryB_ParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupResultMemoryB_ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupResultMemoryC_ParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupResultMemoryC_ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupResultMemoryD_ParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupResultMemoryD_ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryA_HighParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryA_HighParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryB_HighParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryB_HighParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryC_HighParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryC_HighParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryD_HighParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryD_HighParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryA_LowParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryA_LowParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryB_LowParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryB_LowParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryC_LowParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryC_LowParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryD_LowParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryD_LowParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    ResolutionKeysSelectionMacroParityErrInitiate => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionMacroParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    ResolutionKeysSelectionTcamLowParityErrInitiate => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionTcamLowParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    ResolutionKeysSelectionTcamHighParityErrInitiate => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionTcamHighParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PdUpdateUnifiedBucketsControlParityErrInitiate => { #Structure Type: RegField;
      Name => "PdUpdateUnifiedBucketsControlParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusHolderHighParityErrInitiate => { #Structure Type: RegField;
      Name => "DataBusHolderHighParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusHolderLowParityErrInitiate => { #Structure Type: RegField;
      Name => "DataBusHolderLowParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupCoreTcamParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupCoreTcamParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Lvr0FsInstructionsParityErrInitiate => { #Structure Type: RegField;
      Name => "Lvr0FsInstructionsParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Lvr0MacroCfgParityErrInitiate => { #Structure Type: RegField;
      Name => "Lvr0MacroCfgParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Lvr1FsInstructionsParityErrInitiate => { #Structure Type: RegField;
      Name => "Lvr1FsInstructionsParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Lvr1MacroCfgParityErrInitiate => { #Structure Type: RegField;
      Name => "Lvr1MacroCfgParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Lvr3FsInstructionsParityErrInitiate => { #Structure Type: RegField;
      Name => "Lvr3FsInstructionsParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Lvr3MacroCfgParityErrInitiate => { #Structure Type: RegField;
      Name => "Lvr3MacroCfgParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    TrapsKeyConstructionMacroParityErrInitiate => { #Structure Type: RegField;
      Name => "TrapsKeyConstructionMacroParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    TrapsTcamParityErrInitiate => { #Structure Type: RegField;
      Name => "TrapsTcamParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Lvr4MacroCfgParityErrInitiate => { #Structure Type: RegField;
      Name => "Lvr4MacroCfgParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "31",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable0ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable0ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "32",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable1ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable1ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "33",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable2ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable2ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "34",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable3ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable3ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "35",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable4ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable4ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "36",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable5ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable5ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "37",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable6ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable6ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "38",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable7ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable7ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "39",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    ThreadMemoryParityErrInitiate => { #Structure Type: RegField;
      Name => "ThreadMemoryParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "40",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "41",
    Type => "ReadOnly",
    ScoperMacroErrInt => { #Structure Type: RegField;
      Name => "ScoperMacroErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupKeysSelectionMacroErrInt => { #Structure Type: RegField;
      Name => "LookupKeysSelectionMacroErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupKeysConstructionMacroErrInt => { #Structure Type: RegField;
      Name => "LookupKeysConstructionMacroErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupKeysSelectionTcamErrInt => { #Structure Type: RegField;
      Name => "LookupKeysSelectionTcamErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupResultMemoryA_ErrInt => { #Structure Type: RegField;
      Name => "LookupResultMemoryA_ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupResultMemoryB_ErrInt => { #Structure Type: RegField;
      Name => "LookupResultMemoryB_ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupResultMemoryC_ErrInt => { #Structure Type: RegField;
      Name => "LookupResultMemoryC_ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupResultMemoryD_ErrInt => { #Structure Type: RegField;
      Name => "LookupResultMemoryD_ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryA_HighErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryA_HighErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryB_HighErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryB_HighErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryC_HighErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryC_HighErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryD_HighErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryD_HighErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryA_LowErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryA_LowErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "12",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryB_LowErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryB_LowErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "13",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryC_LowErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryC_LowErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "14",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryD_LowErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryD_LowErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "15",
      Type => "Status",
      UsedBy => "SER",
    },
    ResolutionKeysSelectionMacroErrInt => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionMacroErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "16",
      Type => "Status",
      UsedBy => "SER",
    },
    ResolutionKeysSelectionTcamLowErrInt => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionTcamLowErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "17",
      Type => "Status",
      UsedBy => "SER",
    },
    ResolutionKeysSelectionTcamHighErrInt => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionTcamHighErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "18",
      Type => "Status",
      UsedBy => "SER",
    },
    PdUpdateUnifiedBucketsControlErrInt => { #Structure Type: RegField;
      Name => "PdUpdateUnifiedBucketsControlErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "19",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusHolderHighErrInt => { #Structure Type: RegField;
      Name => "DataBusHolderHighErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "20",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusHolderLowErrInt => { #Structure Type: RegField;
      Name => "DataBusHolderLowErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "21",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupCoreTcamErrInt => { #Structure Type: RegField;
      Name => "LookupCoreTcamErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "22",
      Type => "Status",
      UsedBy => "SER",
    },
    Lvr0FsInstructionsErrInt => { #Structure Type: RegField;
      Name => "Lvr0FsInstructionsErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "23",
      Type => "Status",
      UsedBy => "SER",
    },
    Lvr0MacroCfgErrInt => { #Structure Type: RegField;
      Name => "Lvr0MacroCfgErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "24",
      Type => "Status",
      UsedBy => "SER",
    },
    Lvr1FsInstructionsErrInt => { #Structure Type: RegField;
      Name => "Lvr1FsInstructionsErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "25",
      Type => "Status",
      UsedBy => "SER",
    },
    Lvr1MacroCfgErrInt => { #Structure Type: RegField;
      Name => "Lvr1MacroCfgErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "26",
      Type => "Status",
      UsedBy => "SER",
    },
    Lvr3FsInstructionsErrInt => { #Structure Type: RegField;
      Name => "Lvr3FsInstructionsErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "27",
      Type => "Status",
      UsedBy => "SER",
    },
    Lvr3MacroCfgErrInt => { #Structure Type: RegField;
      Name => "Lvr3MacroCfgErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "28",
      Type => "Status",
      UsedBy => "SER",
    },
    TrapsKeyConstructionMacroErrInt => { #Structure Type: RegField;
      Name => "TrapsKeyConstructionMacroErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "29",
      Type => "Status",
      UsedBy => "SER",
    },
    TrapsTcamErrInt => { #Structure Type: RegField;
      Name => "TrapsTcamErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "30",
      Type => "Status",
      UsedBy => "SER",
    },
    Lvr4MacroCfgErrInt => { #Structure Type: RegField;
      Name => "Lvr4MacroCfgErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "31",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable0ErrInt => { #Structure Type: RegField;
      Name => "SharedTable0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "32",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable1ErrInt => { #Structure Type: RegField;
      Name => "SharedTable1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "33",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable2ErrInt => { #Structure Type: RegField;
      Name => "SharedTable2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "34",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable3ErrInt => { #Structure Type: RegField;
      Name => "SharedTable3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "35",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable4ErrInt => { #Structure Type: RegField;
      Name => "SharedTable4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "36",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable5ErrInt => { #Structure Type: RegField;
      Name => "SharedTable5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "37",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable6ErrInt => { #Structure Type: RegField;
      Name => "SharedTable6ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "38",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable7ErrInt => { #Structure Type: RegField;
      Name => "SharedTable7ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "39",
      Type => "Status",
      UsedBy => "SER",
    },
    ThreadMemoryErrInt => { #Structure Type: RegField;
      Name => "ThreadMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "40",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "13",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "11",
      Position => "10:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "12:11",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "7",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "6",
      Position => "5:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  ParityErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "ParityErrDebug",
    RegMem => "Reg",
    Address => "38",
    Description => "Parity Error Counter",
    Width => "16",
    Type => "ReadOnly",
    ParityErrCounter => { #Structure Type: RegField;
      Name => "ParityErrCounter",
      RegMem => "RegField",
      Description => "Counts number of Parity errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  TcamBistControl => { #Structure Type: Reg; Skip Register;
    Name => "TcamBistControl",
    RegMem => "Reg",
    Address => "39",
    Description => "TCAM BIST control",
    Width => "4",
    Type => "Config",
    TcamStrw => { #Structure Type: RegField;
      Name => "TcamStrw",
      RegMem => "RegField",
      Description => "The timing-mode configuration of the TCAMs",
      Width => "2",
      Position => "1:0",
      Type => "Config",
      UsedBy => "TCAM",
      DefaultValue => "d1",
    },
    TcamBistRst => { #Structure Type: RegField;
      Name => "TcamBistRst",
      RegMem => "RegField",
      Description => "TCAM BIST reset",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "TCAM",
      DefaultValue => "d0",
    },
    TcamBistRun => { #Structure Type: RegField;
      Name => "TcamBistRun",
      RegMem => "RegField",
      Description => "TCAM BIST run",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "TCAM",
      DefaultValue => "d0",
    },
  },
  TcamBistStatus => { #Structure Type: Reg; Skip Register;
    Name => "TcamBistStatus",
    RegMem => "Reg",
    Address => "3A",
    Description => "TCAM BIST pass fail status",
    Width => "10",
    Type => "ReadOnly",
    TcamBistDonePassOut => { #Structure Type: RegField;
      Name => "TcamBistDonePassOut",
      RegMem => "RegField",
      Description => "When this bit is set, TCAM BIST passed",
      Width => "5",
      Position => "4:0",
      Type => "Status",
      UsedBy => "TCAM",
    },
    TcamBistDoneFailOut => { #Structure Type: RegField;
      Name => "TcamBistDoneFailOut",
      RegMem => "RegField",
      Description => "When this bit is set, TCAM BIST failed",
      Width => "5",
      Position => "9:5",
      Type => "Status",
      UsedBy => "TCAM",
    },
  },
  TcamScanPeriodCfg => { #Structure Type: Reg; Skip Register;
    Name => "TcamScanPeriodCfg",
    RegMem => "Reg",
    Address => "3B",
    Description => "Configures period of TCAM scan for SER, set 0 to disable",
    Width => "32",
    Type => "Config",
    TcamScanPeriod => { #Structure Type: RegField;
      Name => "TcamScanPeriod",
      RegMem => "RegField",
      Description => "Configures period of TCAM scan for SER, set 0 to disable",
      Width => "32",
      Position => "31:0",
      Type => "Config",
      UsedBy => "TCAM",
      DefaultValue => "d120000000",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "73", # Excel Formula: =calc_reg_width(E25:E53,F53)
    Type => "Config",
    SACR1P_RME => { #Structure Type: RegField;
      Name => "SACR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACR1P_RM => { #Structure Type: RegField;
      Name => "SACR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "4:1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RME => { #Structure Type: RegField;
      Name => "SACU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RM => { #Structure Type: RegField;
      Name => "SACU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "9:6", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RME => { #Structure Type: RegField;
      Name => "SADC1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RM => { #Structure Type: RegField;
      Name => "SADC1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEA => { #Structure Type: RegField;
      Name => "SADR2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMA => { #Structure Type: RegField;
      Name => "SADR2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "19:16", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEB => { #Structure Type: RegField;
      Name => "SADR2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMB => { #Structure Type: RegField;
      Name => "SADR2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "24:21", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEA => { #Structure Type: RegField;
      Name => "SADS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "25", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMA => { #Structure Type: RegField;
      Name => "SADS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "29:26", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEB => { #Structure Type: RegField;
      Name => "SADS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMB => { #Structure Type: RegField;
      Name => "SADS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "34:31", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RME => { #Structure Type: RegField;
      Name => "SASR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "35", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RM => { #Structure Type: RegField;
      Name => "SASR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "39:36", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RME => { #Structure Type: RegField;
      Name => "SASS1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RM => { #Structure Type: RegField;
      Name => "SASS1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "44:41", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEA => { #Structure Type: RegField;
      Name => "SASS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "45", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMA => { #Structure Type: RegField;
      Name => "SASS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "49:46", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEB => { #Structure Type: RegField;
      Name => "SASS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "50", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMB => { #Structure Type: RegField;
      Name => "SASS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "54:51", # Excel Formula: =calc_position(F45,E46)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RME => { #Structure Type: RegField;
      Name => "SASU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F46,E47)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RM => { #Structure Type: RegField;
      Name => "SASU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "59:56", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RME => { #Structure Type: RegField;
      Name => "SADU1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RM => { #Structure Type: RegField;
      Name => "SADU1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "64:61", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RA => { #Structure Type: RegField;
      Name => "SADS2P_RA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Assist for Dual port",
      Width => "2",
      Position => "66:65", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_WA => { #Structure Type: RegField;
      Name => "SADU1P_WA",
      RegMem => "RegField",
      Description => "Write-Assist configuration for the SP SADU compiler",
      Width => "3",
      Position => "69:67", # Excel Formula: =calc_position(F51,E52)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "d5",
    },
    SADU1P_WPULSE => { #Structure Type: RegField;
      Name => "SADU1P_WPULSE",
      RegMem => "RegField",
      Description => "Write-Assist-Pulse configuration for the SP SADU compiler",
      Width => "3",
      Position => "72:70", # Excel Formula: =calc_position(F52,E53)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E55:E55,F55)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F54,E55,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C54,A54,G54)
    Description => "Spare register",
    Width => "128", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "Spare register ",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C56,A56,G56)
    Description => "PMRO controller configuration",
    Width => "32", # Excel Formula: =calc_reg_width(E59:E63,F63)
    Type => "Config",
    PmroRstn => { #Structure Type: RegField;
      Name => "PmroRstn",
      RegMem => "RegField",
      Description => "PMRO reset, active low",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F58,E59,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroConfigEn => { #Structure Type: RegField;
      Name => "PmroConfigEn",
      RegMem => "RegField",
      Description => "Enable pmro configuration, when equals to 0 configurations are locked",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroStart => { #Structure Type: RegField;
      Name => "PmroStart",
      RegMem => "RegField",
      Description => "Start the pmro operation",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F60,E61)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroRingEn => { #Structure Type: RegField;
      Name => "PmroRingEn",
      RegMem => "RegField",
      Description => "Determines which PMRO ring to activate, should be configured as one hot",
      Width => "7",
      Position => "9:3", # Excel Formula: =calc_position(F61,E62)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroCntPeriod => { #Structure Type: RegField;
      Name => "PmroCntPeriod",
      RegMem => "RegField",
      Description => "Number of core clock cycles on which PMRO is measured",
      Width => "22",
      Position => "31:10", # Excel Formula: =calc_position(F62,E63)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "h3FFFFF",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C58,A58,G58)
    Description => "PMRO status configuration",
    Width => "23", # Excel Formula: =calc_reg_width(E65:E66,F66)
    Type => "ReadOnly",
    PmroCountOut => { #Structure Type: RegField;
      Name => "PmroCountOut",
      RegMem => "RegField",
      Description => "The ring oscilator counter value.",
      Width => "22",
      Position => "21:0", # Excel Formula: =calc_position(F64,E65,TRUE)
      Type => "Status",
      UsedBy => "pmro",
    },
    PmroDone => { #Structure Type: RegField;
      Name => "PmroDone",
      RegMem => "RegField",
      Description => "Pmro operation done, PmroCountOut is valid.",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F65,E66)
      Type => "Status",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C64,A64,G64)
    Description => "Mirror Bus configurations",
    Width => "11", # Excel Formula: =calc_reg_width(E68:E69,F69)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "Enable Mirror Bus",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "Mirror Bus selector",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C67,A67,G67)
    Description => "Mirror Bus status result",
    Width => "32", # Excel Formula: =calc_reg_width(E71:E71,F71)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "Mirror Bus status result",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F70,E71,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C70,A70,G70)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E73:E73,F73)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F72,E73,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  debug_data_bus_register => { #Structure Type: Reg;
    Name => "debug_data_bus_register",
    RegMem => "Reg",
    Address => "100",
    Description => "debug_data_bus_register",
    Width => "32", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "ReadOnly",
    debug_data_bus => { #Structure Type: RegField;
      Name => "debug_data_bus",
      RegMem => "RegField",
      Description => "Reflects the value of the last transaction according to the configuration of  debug_data_select ",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Status",
      UsedBy => "npe",
    },
  },
  debug_data_select_register => { #Structure Type: Reg;
    Name => "debug_data_select_register",
    RegMem => "Reg",
    Address => "101", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "debug_data_select_register",
    Width => "10", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Config",
    debug_data_select => { #Structure Type: RegField;
      Name => "debug_data_select",
      RegMem => "RegField",
      Description => "356: Macro ID
298-355: incoming or loopback NPPD
297: incoming Thread index
286-296: Scoper Data bus
262-285: Scoper bypass data
242-262: LVR0 (Level 1) Data bus
222-241: LVR 1 (Level 2) Data bus
199-221: LVR 2 (Level 3) Data bus
178-198: LVR 3 (Level 6) Data bus
154-177: LVR 4 (Level 7) Data bus
133-153: LVR 5 (Level 8) Data bus
128-132: Lookup A Key
127: Lookup A destination
126: Lookup A result index
121-125: Lookup B Key
120: Lookup B destination
119: Lookup B result index
116-118: Lookup C Key
115: Lookup C destination
114: Lookup C result index
111-113: Lookup D Key
110: Lookup D destination
109: Lookup D result index
104-108: Lookup result A Data
103: Lookup result A Thread index
98-102: Lookup result B Data
97: Lookup result B Thread index
94-96: Lookup result c Data
93: Lookup result C Thread index
90-92: Lookup result D Data
89: Lookup result D Thread index
62-88: PD update Data
61: Next Macro-ID
2-60: Outgoing NPPD                       1856 //`NPE_PD_WIDTH
1: Macro-ID
0: Outgoing Thread index",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "d0",
    },
  },
  debug_mcro_id_stack_register => { #Structure Type: Reg;
    Name => "debug_mcro_id_stack_register",
    RegMem => "Reg",
    Address => "102", # Excel Formula: =calc_reg_address(C9,A9,G9)
    Description => "debug_data_bus_register",
    Width => "36", # Excel Formula: =calc_reg_width(E12:E12,F12)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    debug_mcro_id_stack => { #Structure Type: RegField;
      Name => "debug_mcro_id_stack",
      RegMem => "RegField",
      Description => "Reflects the value of the four last macro_ids:
0-7: macro_id0
8:macro_id0_valid
9-16: macro_id1
17::macro_id1_valid
18-25: macro_id2
26:macro_id2_valid
27-34: macro_id3
35:macro_id3_valid",
      Width => "36",
      Position => "35:0", # Excel Formula: =calc_position(F11,E12,TRUE)
      Type => "Status",
      UsedBy => "npe",
    },
  },
  StopMacroRegister => { #Structure Type: Reg;
    Name => "StopMacroRegister",
    RegMem => "Reg",
    Address => "103", # Excel Formula: =calc_reg_address(C11,A11,G11)
    Description => "stop macro from performing a loopback",
    Width => "1", # Excel Formula: =calc_reg_width(E14:E14,F14)
    Type => "Config",
    StopMacro => { #Structure Type: RegField;
      Name => "StopMacro",
      RegMem => "RegField",
      Description => "Loopback fifo's will be stopped until differentiation of StepMacro register (change from 0 to 1)",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F13,E14,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  StepMacroRegister => { #Structure Type: Reg;
    Name => "StepMacroRegister",
    RegMem => "Reg",
    Address => "104", # Excel Formula: =calc_reg_address(C13,A13,G13)
    Description => "continue one loopback",
    Width => "1", # Excel Formula: =calc_reg_width(E16:E16,F16)
    Type => "Config",
    StepMacro => { #Structure Type: RegField;
      Name => "StepMacro",
      RegMem => "RegField",
      Description => "When the register is set from 0 to 1, one loopback will be performed.
Valid only when StopMacro register is set. ",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F15,E16,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  LookupKeysSelectionTcamRanges => { #Structure Type: Reg;
    Name => "LookupKeysSelectionTcamRanges",
    RegMem => "Reg",
    Address => "105", # Excel Formula: =calc_reg_address(C15,A15,G15)
    Description => "Lookup core keys selection TCAM can be split to 4 buckets. Each field control the begning  of each range. Value of 0 means range is not valid.",
    Width => "21", # Excel Formula: =calc_reg_width(E18:E20,F20)
    Type => "Config",
    LkpKeysSelTcamRange1Start => { #Structure Type: RegField;
      Name => "LkpKeysSelTcamRange1Start",
      RegMem => "RegField",
      Description => "Control the TCAM start index of the second bucket. 
Backet 0 range: 0 - LkpKeysSelTcamRange1Start-1",
      Width => "7", # Excel Formula: =LOG(K133,2)
      Position => "6:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    LkpKeysSelTcamRange2Start => { #Structure Type: RegField;
      Name => "LkpKeysSelTcamRange2Start",
      RegMem => "RegField",
      Description => "Control the TCAM start index of the Third bucket. 
Backet 1 range: LkpKeysSelTcamRange1Start - LkpKeysSelTcamRange2Start-1",
      Width => "7", # Excel Formula: =LOG(K133,2)
      Position => "13:7", # Excel Formula: =calc_position(F18,E19)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    LkpKeysSelTcamRange3Start => { #Structure Type: RegField;
      Name => "LkpKeysSelTcamRange3Start",
      RegMem => "RegField",
      Description => "Control the TCAM start index of the forth bucket. 
Backet 2 range: LkpKeysSelTcamRange2Start - LkpKeysSelTcamRange3Start-1
Backet 3 range: LkpKeysSelTcamRange3Start - 127",
      Width => "7", # Excel Formula: =LOG(K133,2)
      Position => "20:14", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucket0Mask => { #Structure Type: Reg;
    Name => "ResolutionKeysSelectionBucket0Mask",
    RegMem => "Reg",
    Address => "106", # Excel Formula: =calc_reg_address(C17,A17,G17)
    Description => "PD update TCAM holds 30 buckets. Bucket 0, which update the next-NPE-Macro-ID, can hold up to 64 entries. This register control the number of TCAM entries that are associated with bucket 0. ",
    Width => "64", # Excel Formula: =calc_reg_width(E22:E22,F22)
    Type => "Config",
    ResolutionKeysSelectionBucket0MaskData => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionBucket0MaskData",
      RegMem => "RegField",
      Width => "64",
      Position => "63:0", # Excel Formula: =calc_position(F21,E22,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask0 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 0; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "107", # Excel Formula: =calc_reg_address(C21,A21,G21)
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "0",
    ResolutionKeysSelectionBucketsMaskBus0 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 0; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask1 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 1; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "108",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "1",
    ResolutionKeysSelectionBucketsMaskBus1 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 1; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask2 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 2; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "109",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "2",
    ResolutionKeysSelectionBucketsMaskBus2 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 2; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask3 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 3; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "10A",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "3",
    ResolutionKeysSelectionBucketsMaskBus3 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 3; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask4 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 4; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "10B",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "4",
    ResolutionKeysSelectionBucketsMaskBus4 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 4; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask5 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 5; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "10C",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "5",
    ResolutionKeysSelectionBucketsMaskBus5 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 5; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask6 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 6; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "10D",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "6",
    ResolutionKeysSelectionBucketsMaskBus6 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 6; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask7 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 7; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "10E",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "7",
    ResolutionKeysSelectionBucketsMaskBus7 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 7; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask8 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 8; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "10F",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "8",
    ResolutionKeysSelectionBucketsMaskBus8 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 8; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask9 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 9; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "110",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "9",
    ResolutionKeysSelectionBucketsMaskBus9 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 9; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask10 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 10; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "111",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "10",
    ResolutionKeysSelectionBucketsMaskBus10 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 10; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask11 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 11; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "112",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "11",
    ResolutionKeysSelectionBucketsMaskBus11 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 11; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask12 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 12; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "113",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "12",
    ResolutionKeysSelectionBucketsMaskBus12 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 12; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask13 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 13; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "114",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "13",
    ResolutionKeysSelectionBucketsMaskBus13 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 13; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask14 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 14; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "115",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "14",
    ResolutionKeysSelectionBucketsMaskBus14 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 14; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask15 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 15; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "116",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "15",
    ResolutionKeysSelectionBucketsMaskBus15 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 15; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask16 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 16; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "117",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "16",
    ResolutionKeysSelectionBucketsMaskBus16 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 16; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask17 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 17; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "118",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "17",
    ResolutionKeysSelectionBucketsMaskBus17 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 17; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask18 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 18; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "119",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "18",
    ResolutionKeysSelectionBucketsMaskBus18 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 18; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask19 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 19; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "11A",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "19",
    ResolutionKeysSelectionBucketsMaskBus19 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 19; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask20 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 20; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "11B",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "20",
    ResolutionKeysSelectionBucketsMaskBus20 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 20; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask21 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 21; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "11C",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "21",
    ResolutionKeysSelectionBucketsMaskBus21 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 21; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask22 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 22; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "11D",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "22",
    ResolutionKeysSelectionBucketsMaskBus22 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 22; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask23 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 23; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "11E",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "23",
    ResolutionKeysSelectionBucketsMaskBus23 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 23; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask24 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 24; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "11F",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "24",
    ResolutionKeysSelectionBucketsMaskBus24 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 24; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask25 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 25; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "120",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "25",
    ResolutionKeysSelectionBucketsMaskBus25 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 25; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask26 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 26; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "121",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "26",
    ResolutionKeysSelectionBucketsMaskBus26 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 26; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask27 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 27; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "122",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "27",
    ResolutionKeysSelectionBucketsMaskBus27 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 27; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask28 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 28; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "123",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "28",
    ResolutionKeysSelectionBucketsMaskBus28 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 28; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask29 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 29; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "124",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "29",
    ResolutionKeysSelectionBucketsMaskBus29 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 29; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask30 => { #Structure Type: Reg; ArrayLength: 31; ArrayIndex: 30; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[31]",
    RegMem => "Reg",
    Address => "125",
    Description => "PD update TCAM holds 30 buckets. Each of those registers control the number of TCAM entries be that are associated with the corresponded bucket.",
    Width => "32", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "31",
    ArrayIndex => "30",
    ResolutionKeysSelectionBucketsMaskBus30 => { #Structure Type: RegField; ArrayLength: 31; ArrayIndex: 30; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ReadyInOutCfg => { #Structure Type: Reg;
    Name => "ReadyInOutCfg",
    RegMem => "Reg",
    Address => "126", # Excel Formula: =calc_reg_address(C23,A23,G23)
    Width => "8", # Excel Formula: =calc_reg_width(E26:E27,F27)
    Type => "Config",
    NextReadyToValidLatency => { #Structure Type: RegField;
      Name => "NextReadyToValidLatency",
      RegMem => "RegField",
      Description => "control the number of clocks between transmit request of the block after the NPE until the NPE transmit the packet.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F25,E26,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    PrevSlotReadyToSlotUsedLatency => { #Structure Type: RegField;
      Name => "PrevSlotReadyToSlotUsedLatency",
      RegMem => "RegField",
      Description => "NPE signal the previous block if it is ready to receive new packet. The previous block response with an indication if a new packet will be sent. This register control the number of clocks from the NPE indication until the previous block response. ",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  DisableThread => { #Structure Type: Reg;
    Name => "DisableThread",
    RegMem => "Reg",
    Address => "127", # Excel Formula: =calc_reg_address(C25,A25,G25)
    Description => "Used when one of the Thread-index based memories has a continues SER. In this case the relevant Thread-index should be remove from the available pool. ",
    Width => "9", # Excel Formula: =calc_reg_width(E29:E30,F30)
    Type => "Config",
    DisableThreadValid => { #Structure Type: RegField;
      Name => "DisableThreadValid",
      RegMem => "RegField",
      Description => "When set, the thread will not be pushed to the thread-index-manager",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    DisableThreadID => { #Structure Type: RegField;
      Name => "DisableThreadID",
      RegMem => "RegField",
      Width => "8",
      Position => "8:1", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "d0",
      DefaultSvConstraint => "h1",
    },
  },
  GeneralCfg => { #Structure Type: Reg;
    Name => "GeneralCfg",
    RegMem => "Reg",
    Address => "128", # Excel Formula: =calc_reg_address(C28,A28,G28)
    Width => "64", # Excel Formula: =calc_reg_width(E32:E43,F43)
    Type => "Config",
    MyMacroMsbs => { #Structure Type: RegField;
      Name => "MyMacroMsbs",
      RegMem => "RegField",
      Description => "The NPE-Macro-ID is 8 bits width. The 2 Mabs of this ID control which stage process the next-Macro. This register control the value of the NPE Msbs that are processed in the current NPE. If Next-NPE-Macro-ID msbs are equal to this register the packet will perform another cycle in the current NPE.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F31,E32,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h0",
    },
    LookupCoreHighTcamStart => { #Structure Type: RegField;
      Name => "LookupCoreHighTcamStart",
      RegMem => "RegField",
      Description => "Lookup core TCAM can be split to 2 TCAM. This register control on the number of entries belong to each TCAM",
      Width => "7",
      Position => "8:2", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h0",
    },
    EnableCountersHeaderIndexUpdate => { #Structure Type: RegField;
      Name => "EnableCountersHeaderIndexUpdate",
      RegMem => "RegField",
      Description => "If set, header index is updated in counters stack when updating coutners",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h1",
      DefaultSvConstraint => "h1",
    },
    EnableCountersCompensationIndexUpdate => { #Structure Type: RegField;
      Name => "EnableCountersCompensationIndexUpdate",
      RegMem => "RegField",
      Description => "If set, compensation index is updated in counters stack when updating coutners",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h0",
      DefaultSvConstraint => "h0",
    },
    SelectOutputAccordingToSrc => { #Structure Type: RegField;
      Name => "SelectOutputAccordingToSrc",
      RegMem => "RegField",
      Description => "If set, the output of the NPE is arranged based on the incoming src (IFG)",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h0",
      DefaultSvConstraint => "h0",
    },
    EnableLookupIf0OrderKeeping => { #Structure Type: RegField;
      Name => "EnableLookupIf0OrderKeeping",
      RegMem => "RegField",
      Description => "If set, lookup interface 0 is connected to a database that support 320 bits key. ",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h0",
      DefaultSvConstraint => "h0",
    },
    LookupIf0OrderKeepingPriorityTh => { #Structure Type: RegField;
      Name => "LookupIf0OrderKeepingPriorityTh",
      RegMem => "RegField",
      Description => "prioritize interface 0 if order fifo is above this threshold",
      Width => "8",
      Position => "20:13", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h40",
      DefaultSvConstraint => "h40",
    },
    EnableLookupIf1OrderKeeping => { #Structure Type: RegField;
      Name => "EnableLookupIf1OrderKeeping",
      RegMem => "RegField",
      Description => "If set, lookup interface 1 is connected to a database that support 320 bits key. ",
      Width => "1",
      Position => "21", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h0",
      DefaultSvConstraint => "h0",
    },
    LookupIf1OrderKeepingPriorityTh => { #Structure Type: RegField;
      Name => "LookupIf1OrderKeepingPriorityTh",
      RegMem => "RegField",
      Description => "prioritize interface 1 if order fifo is above this threshold",
      Width => "8",
      Position => "29:22", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h40",
      DefaultSvConstraint => "h40",
    },
    EnableSnoopPriorityOverRedirect => { #Structure Type: RegField;
      Name => "EnableSnoopPriorityOverRedirect",
      RegMem => "RegField",
      Description => "If set, the msb of the redirect and snoop code is a priority bit. In case both redirect and snoop hit the TCAM and snoop has priority over redirect, the redirect hit will be reset",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b1",
      DefaultSvConstraint => "h40",
    },
    PacketStackTimerTimeout => { #Structure Type: RegField;
      Name => "PacketStackTimerTimeout",
      RegMem => "RegField",
      Description => "Scan piriod for checking if a packet is stack in the NPE. ",
      Width => "32",
      Position => "62:31", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "d2000",
      DefaultSvConstraint => "d2000",
    },
    EnableTimeout => { #Structure Type: RegField;
      Name => "EnableTimeout",
      RegMem => "RegField",
      Description => "If set, Timeout scanning feature is enabled. ",
      Width => "1",
      Position => "63", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b1",
    },
  },
  TrapsTcamCfg => { #Structure Type: Reg;
    Name => "TrapsTcamCfg",
    RegMem => "Reg",
    Address => "129", # Excel Formula: =calc_reg_address(C31,A31,G31)
    Width => "7", # Excel Formula: =calc_reg_width(E45:E45,F45)
    Type => "Config",
    TrapsRedirectTcamStart => { #Structure Type: RegField;
      Name => "TrapsRedirectTcamStart",
      RegMem => "RegField",
      Description => "Traps TCAM is split to 2 TCAMs: Trap and redirect. This register control how many entries belongs to each TCAM",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F44,E45,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  NpeInterrupts => { #Structure Type: Reg;
    Name => "NpeInterrupts",
    RegMem => "Reg",
    Address => "12A", # Excel Formula: =calc_reg_address(C44,A44,G44)
    Width => "2", # Excel Formula: =calc_reg_width(E47:E48,F48)
    Type => "Interrupt",
    CountersOverflow => { #Structure Type: RegField;
      Name => "CountersOverflow",
      RegMem => "RegField",
      Description => "Set when trying to update counter, but PD.counters stack if full",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "Interrupt",
      UsedBy => "npe",
      DefaultSvConstraint => "h0",
    },
    PacketTimeout => { #Structure Type: RegField;
      Name => "PacketTimeout",
      RegMem => "RegField",
      Description => "when set, a packet is waiting in the engine more than the allowed time",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F47,E48)
      Type => "Interrupt",
      UsedBy => "npe",
      DefaultSvConstraint => "h0",
    },
  },
  NpeInterruptsMask => { #Structure Type: Reg; Skip Register;
    Name => "NpeInterruptsMask",
    RegMem => "Reg",
    Address => "12B",
    Width => "2", # Excel Formula: =calc_reg_width(E47:E48,F48)
    Type => "InterruptMask",
    CountersOverflowMask => { #Structure Type: RegField;
      Name => "CountersOverflowMask",
      RegMem => "RegField",
      Description => "This field masks CountersOverflow interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h0",
    },
    PacketTimeoutMask => { #Structure Type: RegField;
      Name => "PacketTimeoutMask",
      RegMem => "RegField",
      Description => "This field masks PacketTimeout interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F47,E48)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h0",
    },
  },
  NpeInterruptsTest => { #Structure Type: Reg; Skip Register;
    Name => "NpeInterruptsTest",
    RegMem => "Reg",
    Address => "12C",
    Width => "2", # Excel Formula: =calc_reg_width(E47:E48,F48)
    Type => "InterruptTest",
    CountersOverflowTest => { #Structure Type: RegField;
      Name => "CountersOverflowTest",
      RegMem => "RegField",
      Description => "This field tests CountersOverflow interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h0",
    },
    PacketTimeoutTest => { #Structure Type: RegField;
      Name => "PacketTimeoutTest",
      RegMem => "RegField",
      Description => "This field tests PacketTimeout interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F47,E48)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h0",
    },
  },
  PacketTimeoutMacroIdReg => { #Structure Type: Reg;
    Name => "PacketTimeoutMacroIdReg",
    RegMem => "Reg",
    Address => "12D", # Excel Formula: =calc_reg_address(C46,A46,G46)
    Width => "8", # Excel Formula: =calc_reg_width(E50:E50,F50)
    Type => "ReadOnly",
    PacketTimeoutMacroId => { #Structure Type: RegField;
      Name => "PacketTimeoutMacroId",
      RegMem => "RegField",
      Description => "If a packet experienced timeout in the NPE, this register holds the macro-id that was processed by this packet.",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F49,E50,TRUE)
      Type => "Status",
      UsedBy => "npe",
      DefaultSvConstraint => "h0",
    },
  },
  LvrRegtcam_use_logical_db_cfg => { #Structure Type: Reg;
    Name => "LvrRegtcam_use_logical_db_cfg",
    RegMem => "Reg",
    Address => "12E", # Excel Formula: =calc_reg_address(C49,A49,G49)
    Description => "Bit per register-TCAM. Control if to use logical databse bit when building the register-TCAM key.",
    Width => "20", # Excel Formula: =calc_reg_width(E52:E61,F61)
    Type => "Config",
    Lvr0Regtcam0_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr0Regtcam0_use_logical_db_bit",
      RegMem => "RegField",
      Description => "when set, the msb of tcam's key holds a logical-dabase. Otherwise it holds the selected field from the key-construction process.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F51,E52,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr0Regtcam1_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr0Regtcam1_use_logical_db_bit",
      RegMem => "RegField",
      Description => "when set, the msb of tcam's key holds a logical-dabase. Otherwise it holds the selected field from the key-construction process.",
      Width => "2",
      Position => "3:2", # Excel Formula: =calc_position(F52,E53)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr0Regtcam2_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr0Regtcam2_use_logical_db_bit",
      RegMem => "RegField",
      Description => "when set, the msb of tcam's key holds a logical-dabase. Otherwise it holds the selected field from the key-construction process.",
      Width => "2",
      Position => "5:4", # Excel Formula: =calc_position(F53,E54)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr0Regtcam3_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr0Regtcam3_use_logical_db_bit",
      RegMem => "RegField",
      Description => "when set, the msb of tcam's key holds a logical-dabase. Otherwise it holds the selected field from the key-construction process.",
      Width => "2",
      Position => "7:6", # Excel Formula: =calc_position(F54,E55)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
    Lvr1Regtcam0_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr1Regtcam0_use_logical_db_bit",
      RegMem => "RegField",
      Description => "when set, the msb of tcam's key holds a logical-dabase. Otherwise it holds the selected field from the key-construction process.",
      Width => "2",
      Position => "9:8", # Excel Formula: =calc_position(F55,E56)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr3Regtcam0_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr3Regtcam0_use_logical_db_bit",
      RegMem => "RegField",
      Description => "when set, the msb of tcam's key holds a logical-dabase. Otherwise it holds the selected field from the key-construction process.",
      Width => "2",
      Position => "11:10", # Excel Formula: =calc_position(F56,E57)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr3Regtcam1_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr3Regtcam1_use_logical_db_bit",
      RegMem => "RegField",
      Description => "when set, the msb of tcam's key holds a logical-dabase. Otherwise it holds the selected field from the key-construction process.",
      Width => "2",
      Position => "13:12", # Excel Formula: =calc_position(F57,E58)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr3Regtcam2_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr3Regtcam2_use_logical_db_bit",
      RegMem => "RegField",
      Description => "when set, the msb of tcam's key holds a logical-dabase. Otherwise it holds the selected field from the key-construction process.",
      Width => "2",
      Position => "15:14", # Excel Formula: =calc_position(F58,E59)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr4Regtcam0_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr4Regtcam0_use_logical_db_bit",
      RegMem => "RegField",
      Description => "when set, the msb of tcam's key holds a logical-dabase. Otherwise it holds the selected field from the key-construction process.",
      Width => "2",
      Position => "17:16", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr4Regtcam1_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr4Regtcam1_use_logical_db_bit",
      RegMem => "RegField",
      Description => "when set, the msb of tcam's key holds a logical-dabase. Otherwise it holds the selected field from the key-construction process.",
      Width => "2",
      Position => "19:18", # Excel Formula: =calc_position(F60,E61)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  SharedTablesCfg => { #Structure Type: Reg;
    Name => "SharedTablesCfg",
    RegMem => "Reg",
    Address => "12F", # Excel Formula: =calc_reg_address(C51,A51,G51)
    Description => "4 LVRs can access the shared tables (0,1,3,4). Each LVR output 3 keys. This register control over the connectivity of each table to a LVR interface.",
    Width => "64", # Excel Formula: =calc_reg_width(E63:E82,F82)
    Type => "Config",
    Table0Src => { #Structure Type: RegField;
      Name => "Table0Src",
      RegMem => "RegField",
      Description => "Selects the LVR interface that access SharedTable0. the 4 bits represents {LVR(2), key-index(2)}",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F62,E63,TRUE)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Table1Src => { #Structure Type: RegField;
      Name => "Table1Src",
      RegMem => "RegField",
      Description => "Selects the LVR interface that access SharedTable1. the 4 bits represents {LVR(2), key-index(2)}",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F63,E64)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Table2Src => { #Structure Type: RegField;
      Name => "Table2Src",
      RegMem => "RegField",
      Description => "Selects the LVR interface that access SharedTable2. the 4 bits represents {LVR(2), key-index(2)}",
      Width => "4",
      Position => "11:8", # Excel Formula: =calc_position(F64,E65)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Table3Src => { #Structure Type: RegField;
      Name => "Table3Src",
      RegMem => "RegField",
      Description => "Selects the LVR interface that access SharedTable3. the 4 bits represents {LVR(2), key-index(2)}",
      Width => "4",
      Position => "15:12", # Excel Formula: =calc_position(F65,E66)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Table4Src => { #Structure Type: RegField;
      Name => "Table4Src",
      RegMem => "RegField",
      Description => "Selects the LVR interface that access SharedTable4. the 4 bits represents {LVR(2), key-index(2)}",
      Width => "4",
      Position => "19:16", # Excel Formula: =calc_position(F66,E67)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Table5Src => { #Structure Type: RegField;
      Name => "Table5Src",
      RegMem => "RegField",
      Description => "Selects the LVR interface that access SharedTable5. the 2 bits represents the LVR (the interface is eqaul to key-index='B')",
      Width => "2",
      Position => "21:20", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Table6Src => { #Structure Type: RegField;
      Name => "Table6Src",
      RegMem => "RegField",
      Description => "Selects the LVR interface that access SharedTable6. the 2 bits represents the LVR (the interface is eqaul to key-index='C')",
      Width => "2",
      Position => "23:22", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Table7Src => { #Structure Type: RegField;
      Name => "Table7Src",
      RegMem => "RegField",
      Description => "Selects the LVR interface that access SharedTable7. the 4 bits represents {LVR(2), key-index(2)}",
      Width => "4",
      Position => "27:24", # Excel Formula: =calc_position(F69,E70)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr0Pld0Src => { #Structure Type: RegField;
      Name => "Lvr0Pld0Src",
      RegMem => "RegField",
      Description => "Selects per LVR interface the accosiated table. ",
      Width => "3",
      Position => "30:28", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr0Pld1Src => { #Structure Type: RegField;
      Name => "Lvr0Pld1Src",
      RegMem => "RegField",
      Description => "Selects per LVR interface the accosiated table. ",
      Width => "3",
      Position => "33:31", # Excel Formula: =calc_position(F71,E72)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr0Pld2Src => { #Structure Type: RegField;
      Name => "Lvr0Pld2Src",
      RegMem => "RegField",
      Description => "Selects per LVR interface the accosiated table. ",
      Width => "3",
      Position => "36:34", # Excel Formula: =calc_position(F72,E73)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr1Pld0Src => { #Structure Type: RegField;
      Name => "Lvr1Pld0Src",
      RegMem => "RegField",
      Description => "Selects per LVR interface the accosiated table. ",
      Width => "3",
      Position => "39:37", # Excel Formula: =calc_position(F73,E74)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr1Pld1Src => { #Structure Type: RegField;
      Name => "Lvr1Pld1Src",
      RegMem => "RegField",
      Description => "Selects per LVR interface the accosiated table. ",
      Width => "3",
      Position => "42:40", # Excel Formula: =calc_position(F74,E75)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr1Pld2Src => { #Structure Type: RegField;
      Name => "Lvr1Pld2Src",
      RegMem => "RegField",
      Description => "Selects per LVR interface the accosiated table. ",
      Width => "3",
      Position => "45:43", # Excel Formula: =calc_position(F75,E76)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr3Pld0Src => { #Structure Type: RegField;
      Name => "Lvr3Pld0Src",
      RegMem => "RegField",
      Description => "Selects per LVR interface the accosiated table. ",
      Width => "3",
      Position => "48:46", # Excel Formula: =calc_position(F76,E77)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr3Pld1Src => { #Structure Type: RegField;
      Name => "Lvr3Pld1Src",
      RegMem => "RegField",
      Description => "Selects per LVR interface the accosiated table. ",
      Width => "3",
      Position => "51:49", # Excel Formula: =calc_position(F77,E78)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr3Pld2Src => { #Structure Type: RegField;
      Name => "Lvr3Pld2Src",
      RegMem => "RegField",
      Description => "Selects per LVR interface the accosiated table. ",
      Width => "3",
      Position => "54:52", # Excel Formula: =calc_position(F78,E79)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr4Pld0Src => { #Structure Type: RegField;
      Name => "Lvr4Pld0Src",
      RegMem => "RegField",
      Description => "Selects per LVR interface the accosiated table. ",
      Width => "3",
      Position => "57:55", # Excel Formula: =calc_position(F79,E80)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr4Pld1Src => { #Structure Type: RegField;
      Name => "Lvr4Pld1Src",
      RegMem => "RegField",
      Description => "Selects per LVR interface the accosiated table. ",
      Width => "3",
      Position => "60:58", # Excel Formula: =calc_position(F80,E81)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr4Pld2Src => { #Structure Type: RegField;
      Name => "Lvr4Pld2Src",
      RegMem => "RegField",
      Description => "Selects per LVR interface the accosiated table. ",
      Width => "3",
      Position => "63:61", # Excel Formula: =calc_position(F81,E82)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
  },
  NpeCounters => { #Structure Type: Reg;
    Name => "NpeCounters",
    RegMem => "Reg",
    Address => "130", # Excel Formula: =calc_reg_address(C62,A62,G62)
    Width => "192", # Excel Formula: =calc_reg_width(E84:E86,F86)
    Type => "ReadOnly",
    IncomingPacketsCounter => { #Structure Type: RegField;
      Name => "IncomingPacketsCounter",
      RegMem => "RegField",
      Description => "The number of packets injected to the NPE",
      Width => "64",
      Position => "63:0", # Excel Formula: =calc_position(F83,E84,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    LoopbackPacketsCounter => { #Structure Type: RegField;
      Name => "LoopbackPacketsCounter",
      RegMem => "RegField",
      Description => "The number of packets performed loopback in the NPE",
      Width => "64",
      Position => "127:64", # Excel Formula: =calc_position(F84,E85)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    OutgoingPacketsCounter => { #Structure Type: RegField;
      Name => "OutgoingPacketsCounter",
      RegMem => "RegField",
      Description => "The number of packet transmitted from the NPE",
      Width => "64",
      Position => "191:128", # Excel Formula: =calc_position(F85,E86)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfACounters0 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "NpeCbtIfACounters[8]",
    RegMem => "Reg",
    Address => "131", # Excel Formula: =calc_reg_address(C83,A83,G83)
    Width => "32", # Excel Formula: =calc_reg_width(E88:E88,F88)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "0",
    CbtIfACounter0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "CbtIfACounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface A (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F87,E88,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfACounters1 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "NpeCbtIfACounters[8]",
    RegMem => "Reg",
    Address => "132",
    Width => "32", # Excel Formula: =calc_reg_width(E88:E88,F88)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "1",
    CbtIfACounter1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "CbtIfACounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface A (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F87,E88,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfACounters2 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 18;
    Name => "NpeCbtIfACounters[8]",
    RegMem => "Reg",
    Address => "133",
    Width => "32", # Excel Formula: =calc_reg_width(E88:E88,F88)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "2",
    CbtIfACounter2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 14;
      Name => "CbtIfACounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface A (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F87,E88,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfACounters3 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 18;
    Name => "NpeCbtIfACounters[8]",
    RegMem => "Reg",
    Address => "134",
    Width => "32", # Excel Formula: =calc_reg_width(E88:E88,F88)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "3",
    CbtIfACounter3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 14;
      Name => "CbtIfACounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface A (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F87,E88,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfACounters4 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 18;
    Name => "NpeCbtIfACounters[8]",
    RegMem => "Reg",
    Address => "135",
    Width => "32", # Excel Formula: =calc_reg_width(E88:E88,F88)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "4",
    CbtIfACounter4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 14;
      Name => "CbtIfACounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface A (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F87,E88,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfACounters5 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 18;
    Name => "NpeCbtIfACounters[8]",
    RegMem => "Reg",
    Address => "136",
    Width => "32", # Excel Formula: =calc_reg_width(E88:E88,F88)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "5",
    CbtIfACounter5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 14;
      Name => "CbtIfACounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface A (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F87,E88,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfACounters6 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 18;
    Name => "NpeCbtIfACounters[8]",
    RegMem => "Reg",
    Address => "137",
    Width => "32", # Excel Formula: =calc_reg_width(E88:E88,F88)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "6",
    CbtIfACounter6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 14;
      Name => "CbtIfACounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface A (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F87,E88,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfACounters7 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 18;
    Name => "NpeCbtIfACounters[8]",
    RegMem => "Reg",
    Address => "138",
    Width => "32", # Excel Formula: =calc_reg_width(E88:E88,F88)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "7",
    CbtIfACounter7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 14;
      Name => "CbtIfACounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface A (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F87,E88,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfBCounters0 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "NpeCbtIfBCounters[8]",
    RegMem => "Reg",
    Address => "139", # Excel Formula: =calc_reg_address(C87,A87,G87)
    Width => "32", # Excel Formula: =calc_reg_width(E90:E90,F90)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "0",
    CbtIfBCounter0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "CbtIfBCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface B (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfBCounters1 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "NpeCbtIfBCounters[8]",
    RegMem => "Reg",
    Address => "13A",
    Width => "32", # Excel Formula: =calc_reg_width(E90:E90,F90)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "1",
    CbtIfBCounter1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "CbtIfBCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface B (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfBCounters2 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 18;
    Name => "NpeCbtIfBCounters[8]",
    RegMem => "Reg",
    Address => "13B",
    Width => "32", # Excel Formula: =calc_reg_width(E90:E90,F90)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "2",
    CbtIfBCounter2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 14;
      Name => "CbtIfBCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface B (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfBCounters3 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 18;
    Name => "NpeCbtIfBCounters[8]",
    RegMem => "Reg",
    Address => "13C",
    Width => "32", # Excel Formula: =calc_reg_width(E90:E90,F90)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "3",
    CbtIfBCounter3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 14;
      Name => "CbtIfBCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface B (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfBCounters4 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 18;
    Name => "NpeCbtIfBCounters[8]",
    RegMem => "Reg",
    Address => "13D",
    Width => "32", # Excel Formula: =calc_reg_width(E90:E90,F90)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "4",
    CbtIfBCounter4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 14;
      Name => "CbtIfBCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface B (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfBCounters5 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 18;
    Name => "NpeCbtIfBCounters[8]",
    RegMem => "Reg",
    Address => "13E",
    Width => "32", # Excel Formula: =calc_reg_width(E90:E90,F90)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "5",
    CbtIfBCounter5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 14;
      Name => "CbtIfBCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface B (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfBCounters6 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 18;
    Name => "NpeCbtIfBCounters[8]",
    RegMem => "Reg",
    Address => "13F",
    Width => "32", # Excel Formula: =calc_reg_width(E90:E90,F90)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "6",
    CbtIfBCounter6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 14;
      Name => "CbtIfBCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface B (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfBCounters7 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 18;
    Name => "NpeCbtIfBCounters[8]",
    RegMem => "Reg",
    Address => "140",
    Width => "32", # Excel Formula: =calc_reg_width(E90:E90,F90)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "7",
    CbtIfBCounter7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 14;
      Name => "CbtIfBCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface B (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfCCounters0 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "NpeCbtIfCCounters[8]",
    RegMem => "Reg",
    Address => "141", # Excel Formula: =calc_reg_address(C89,A89,G89)
    Width => "32", # Excel Formula: =calc_reg_width(E92:E92,F92)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "0",
    CbtIfCCounter0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "CbtIfCCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface C (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfCCounters1 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "NpeCbtIfCCounters[8]",
    RegMem => "Reg",
    Address => "142",
    Width => "32", # Excel Formula: =calc_reg_width(E92:E92,F92)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "1",
    CbtIfCCounter1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "CbtIfCCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface C (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfCCounters2 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 18;
    Name => "NpeCbtIfCCounters[8]",
    RegMem => "Reg",
    Address => "143",
    Width => "32", # Excel Formula: =calc_reg_width(E92:E92,F92)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "2",
    CbtIfCCounter2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 14;
      Name => "CbtIfCCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface C (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfCCounters3 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 18;
    Name => "NpeCbtIfCCounters[8]",
    RegMem => "Reg",
    Address => "144",
    Width => "32", # Excel Formula: =calc_reg_width(E92:E92,F92)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "3",
    CbtIfCCounter3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 14;
      Name => "CbtIfCCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface C (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfCCounters4 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 18;
    Name => "NpeCbtIfCCounters[8]",
    RegMem => "Reg",
    Address => "145",
    Width => "32", # Excel Formula: =calc_reg_width(E92:E92,F92)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "4",
    CbtIfCCounter4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 14;
      Name => "CbtIfCCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface C (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfCCounters5 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 18;
    Name => "NpeCbtIfCCounters[8]",
    RegMem => "Reg",
    Address => "146",
    Width => "32", # Excel Formula: =calc_reg_width(E92:E92,F92)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "5",
    CbtIfCCounter5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 14;
      Name => "CbtIfCCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface C (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfCCounters6 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 18;
    Name => "NpeCbtIfCCounters[8]",
    RegMem => "Reg",
    Address => "147",
    Width => "32", # Excel Formula: =calc_reg_width(E92:E92,F92)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "6",
    CbtIfCCounter6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 14;
      Name => "CbtIfCCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface C (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfCCounters7 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 18;
    Name => "NpeCbtIfCCounters[8]",
    RegMem => "Reg",
    Address => "148",
    Width => "32", # Excel Formula: =calc_reg_width(E92:E92,F92)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "7",
    CbtIfCCounter7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 14;
      Name => "CbtIfCCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface C (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfDCounters0 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "NpeCbtIfDCounters[8]",
    RegMem => "Reg",
    Address => "149", # Excel Formula: =calc_reg_address(C91,A91,G91)
    Width => "32", # Excel Formula: =calc_reg_width(E94:E94,F94)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "0",
    CbtIfDCounter0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "CbtIfDCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface D (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfDCounters1 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "NpeCbtIfDCounters[8]",
    RegMem => "Reg",
    Address => "14A",
    Width => "32", # Excel Formula: =calc_reg_width(E94:E94,F94)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "1",
    CbtIfDCounter1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "CbtIfDCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface D (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfDCounters2 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 18;
    Name => "NpeCbtIfDCounters[8]",
    RegMem => "Reg",
    Address => "14B",
    Width => "32", # Excel Formula: =calc_reg_width(E94:E94,F94)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "2",
    CbtIfDCounter2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 14;
      Name => "CbtIfDCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface D (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfDCounters3 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 18;
    Name => "NpeCbtIfDCounters[8]",
    RegMem => "Reg",
    Address => "14C",
    Width => "32", # Excel Formula: =calc_reg_width(E94:E94,F94)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "3",
    CbtIfDCounter3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 14;
      Name => "CbtIfDCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface D (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfDCounters4 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 18;
    Name => "NpeCbtIfDCounters[8]",
    RegMem => "Reg",
    Address => "14D",
    Width => "32", # Excel Formula: =calc_reg_width(E94:E94,F94)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "4",
    CbtIfDCounter4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 14;
      Name => "CbtIfDCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface D (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfDCounters5 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 18;
    Name => "NpeCbtIfDCounters[8]",
    RegMem => "Reg",
    Address => "14E",
    Width => "32", # Excel Formula: =calc_reg_width(E94:E94,F94)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "5",
    CbtIfDCounter5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 14;
      Name => "CbtIfDCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface D (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfDCounters6 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 18;
    Name => "NpeCbtIfDCounters[8]",
    RegMem => "Reg",
    Address => "14F",
    Width => "32", # Excel Formula: =calc_reg_width(E94:E94,F94)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "6",
    CbtIfDCounter6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 14;
      Name => "CbtIfDCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface D (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeCbtIfDCounters7 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 18;
    Name => "NpeCbtIfDCounters[8]",
    RegMem => "Reg",
    Address => "150",
    Width => "32", # Excel Formula: =calc_reg_width(E94:E94,F94)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "7",
    CbtIfDCounter7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 14;
      Name => "CbtIfDCounter[n]",
      RegMem => "RegField",
      Description => "No credits counter for interface D (per database)",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeWatermarks => { #Structure Type: Reg;
    Name => "NpeWatermarks",
    RegMem => "Reg",
    Address => "151", # Excel Formula: =calc_reg_address(C93,A93,G93)
    Width => "184", # Excel Formula: =calc_reg_width(E96:E114,F114)
    Type => "ReadOnly",
    LoopbackHighFifoWatermark => { #Structure Type: RegField;
      Name => "LoopbackHighFifoWatermark",
      RegMem => "RegField",
      Description => "The Maximum number of entries that LoopbackHigh FIFO hold (Maximum value is 96)",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F95,E96,TRUE)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    LoopbackLowFifoWatermark => { #Structure Type: RegField;
      Name => "LoopbackLowFifoWatermark",
      RegMem => "RegField",
      Description => "The Maximum number of entries that LoopbackLow FIFO hold (Maximum value is 96)",
      Width => "8",
      Position => "15:8", # Excel Formula: =calc_position(F96,E97)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitHighSrc0FifoWatermark => { #Structure Type: RegField;
      Name => "ExitHighSrc0FifoWatermark",
      RegMem => "RegField",
      Description => "The Maximum number of entries that ExitHigh IFG 0FIFO hold (Maximum value is 96)",
      Width => "8",
      Position => "23:16", # Excel Formula: =calc_position(F97,E98)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitHighSrc1FifoWatermark => { #Structure Type: RegField;
      Name => "ExitHighSrc1FifoWatermark",
      RegMem => "RegField",
      Description => "The Maximum number of entries that ExitHigh IFG 1 FIFO hold (Maximum value is 96)",
      Width => "8",
      Position => "31:24", # Excel Formula: =calc_position(F98,E99)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitLowSrc0FifoWatermark => { #Structure Type: RegField;
      Name => "ExitLowSrc0FifoWatermark",
      RegMem => "RegField",
      Description => "The Maximum number of entries that ExitLow IFG 0FIFO hold (Maximum value is 96)",
      Width => "8",
      Position => "39:32", # Excel Formula: =calc_position(F99,E100)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitLowSrc1FifoWatermark => { #Structure Type: RegField;
      Name => "ExitLowSrc1FifoWatermark",
      RegMem => "RegField",
      Description => "The Maximum number of entries that ExitLow IFG 1 FIFO hold (Maximum value is 96)",
      Width => "8",
      Position => "47:40", # Excel Formula: =calc_position(F100,E101)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    LoopbackHighFifoMinWatermark => { #Structure Type: RegField;
      Name => "LoopbackHighFifoMinWatermark",
      RegMem => "RegField",
      Description => "The Minimum number of entries that LoopbackHigh FIFO hold (Maximum value is 96)",
      Width => "8",
      Position => "55:48", # Excel Formula: =calc_position(F101,E102)
      Type => "MinWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    LoopbackLowFifoMinWatermark => { #Structure Type: RegField;
      Name => "LoopbackLowFifoMinWatermark",
      RegMem => "RegField",
      Description => "The Minimum number of entries that LoopbackLow FIFO hold (Maximum value is 96)",
      Width => "8",
      Position => "63:56", # Excel Formula: =calc_position(F102,E103)
      Type => "MinWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitHighSrc0FifoMinWatermark => { #Structure Type: RegField;
      Name => "ExitHighSrc0FifoMinWatermark",
      RegMem => "RegField",
      Description => "The Minimum number of entries that ExitHigh IFG 0FIFO hold (Maximum value is 96)",
      Width => "8",
      Position => "71:64", # Excel Formula: =calc_position(F103,E104)
      Type => "MinWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitHighSrc1FifoMinWatermark => { #Structure Type: RegField;
      Name => "ExitHighSrc1FifoMinWatermark",
      RegMem => "RegField",
      Description => "The Minimum number of entries that ExitHigh IFG 1 FIFO hold (Maximum value is 96)",
      Width => "8",
      Position => "79:72", # Excel Formula: =calc_position(F104,E105)
      Type => "MinWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitLowSrc0FifoMinWatermark => { #Structure Type: RegField;
      Name => "ExitLowSrc0FifoMinWatermark",
      RegMem => "RegField",
      Description => "The Minimum number of entries that ExitLow IFG 0FIFO hold (Maximum value is 96)",
      Width => "8",
      Position => "87:80", # Excel Formula: =calc_position(F105,E106)
      Type => "MinWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitLowSrc1FifoMinWatermark => { #Structure Type: RegField;
      Name => "ExitLowSrc1FifoMinWatermark",
      RegMem => "RegField",
      Description => "The Minimum number of entries that ExitLow IFG 1 FIFO hold (Maximum value is 96)",
      Width => "8",
      Position => "95:88", # Excel Formula: =calc_position(F106,E107)
      Type => "MinWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    OngoingLookupsWatermark => { #Structure Type: RegField;
      Name => "OngoingLookupsWatermark",
      RegMem => "RegField",
      Description => "The Maximum number of packets that waited for lookup result",
      Width => "8",
      Position => "103:96", # Excel Formula: =calc_position(F107,E108)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitHighSrc0FifoRdyNoPopWatermark => { #Structure Type: RegField;
      Name => "ExitHighSrc0FifoRdyNoPopWatermark",
      RegMem => "RegField",
      Description => "The Maximum number of cycles with FIFO ready and no pop ",
      Width => "16",
      Position => "119:104", # Excel Formula: =calc_position(F108,E109)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitHighSrc1FifoRdyNoPopWatermark => { #Structure Type: RegField;
      Name => "ExitHighSrc1FifoRdyNoPopWatermark",
      RegMem => "RegField",
      Description => "The Maximum number of cycles with FIFO ready and no pop ",
      Width => "16",
      Position => "135:120", # Excel Formula: =calc_position(F109,E110)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitLowSrc0FifoRdyNoPopWatermark => { #Structure Type: RegField;
      Name => "ExitLowSrc0FifoRdyNoPopWatermark",
      RegMem => "RegField",
      Description => "The Maximum number of cycles with FIFO ready and no pop ",
      Width => "16",
      Position => "151:136", # Excel Formula: =calc_position(F110,E111)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitLowSrc1FifoRdyNoPopWatermark => { #Structure Type: RegField;
      Name => "ExitLowSrc1FifoRdyNoPopWatermark",
      RegMem => "RegField",
      Description => "The Maximum number of cycles with FIFO ready and no pop ",
      Width => "16",
      Position => "167:152", # Excel Formula: =calc_position(F111,E112)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    OddThreadIdxManagerWatermark => { #Structure Type: RegField;
      Name => "OddThreadIdxManagerWatermark",
      RegMem => "RegField",
      Description => "The Minimum number of free buffers left in  the odd thread index manager (Maximum value is 96)",
      Width => "8",
      Position => "175:168", # Excel Formula: =calc_position(F112,E113)
      Type => "MinWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    EvenThreadIdxManagerWatermark => { #Structure Type: RegField;
      Name => "EvenThreadIdxManagerWatermark",
      RegMem => "RegField",
      Description => "The Minimum number of free buffers left in  the even thread index manager (Maximum value is 96)",
      Width => "8",
      Position => "183:176", # Excel Formula: =calc_position(F113,E114)
      Type => "MinWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
  },
  MiniScoperBitSel_cfg => { #Structure Type: Mem;
    Name => "MiniScoperBitSel_cfg",
    RegMem => "Mem",
    Address => "100000",
    Description => "Mini scoper special channel selects each of its 16 bits from the lookup core databus in a bit resolution. This register control the selection of each bit",
    Width => "165", # Excel Formula: =calc_mem_width(E116:E117,M115,F117,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "165",
    MiniScoperBitSel => { #Structure Type: MemField;
      Name => "MiniScoperBitSel",
      RegMem => "MemField",
      Description => "10 bits offset per bit (in bit resolution)",
      Width => "160",
      Position => "159:0", # Excel Formula: =calc_position(F115,E116,TRUE)
    },
    MiniScoperSpecialChannelOffset => { #Structure Type: MemField;
      Name => "MiniScoperSpecialChannelOffset",
      RegMem => "MemField",
      Description => "The position to locate the special channel in the resolution core data bus (in channel resolution)",
      Width => "5",
      Position => "164:160", # Excel Formula: =calc_position(F116,E117)
    },
  },
  Lvr0TcamProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr0TcamProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "200000", # Excel Formula: =calc_mem_address(C115,A115,G118,L118)
    Description => "8 profiles that control how to access LVR0 TCAM
",
    Width => "36", # Excel Formula: =calc_mem_width(E119:E119,M118,F119,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "36",
    Lvr0TcamProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr0TcamProfileExpanding",
      RegMem => "MemField",
      Description => "6 Field-indices (5/6) - Selects up to 6 fields from LVR-selected-fields
Logical-database (4) - 4 bits to be used as the logical-database of the LVR-TCAM. Stamped on the lsbs of the TCAM-key
TCAM-low-valid (1) - The offset of the result in the entry (nibble resolution).
TCAM-high-valid (5) - The width of the result (in nibbles)",
      Width => "36", # Excel Formula: =calc_field_width_define("NPE_LVR_TCAM_CONTROL_WIDTH")
      Position => "35:0", # Excel Formula: =calc_position(F118,E119,TRUE)
    },
  },
  ScoperMacro => { #Structure Type: Mem;
    Name => "ScoperMacro",
    RegMem => "Mem",
    Address => "300000", # Excel Formula: =calc_mem_address(C118,A118,G120,L120)
    Description => "Control which fields the Scoper selects from the NPPD",
    Width => "694", # Excel Formula: =calc_mem_width(E121:E121,M120,F121,128)
    Type => "Config",
    UsedBy => "scp",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SplitProtWidth=128,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "688",
    ScoperInstructions => { #Structure Type: MemField;
      Name => "ScoperInstructions",
      RegMem => "MemField",
      Width => "688", # Excel Formula: =calc_field_width_define("NPE_SCOPER_INSTRUCTION_WIDTH")*calc_field_width_define("NPE_SCOPER_NUM_OF_FS")
      Position => "687:0", # Excel Formula: =calc_position(F120,E121,TRUE)
    },
  },
  LookupKeysSelectionMacro => { #Structure Type: Mem;
    Name => "LookupKeysSelectionMacro",
    RegMem => "Mem",
    Address => "400000", # Excel Formula: =calc_mem_address(C120,A120,G122,L122)
    Description => "Control per NPE-Macro-ID how to build the key to the keys-selection-TCAM",
    Width => "68", # Excel Formula: =calc_mem_width(E123:E127,M122,F127,256)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "67",
    TcamKeyInstructions => { #Structure Type: MemField;
      Name => "TcamKeyInstructions",
      RegMem => "MemField",
      Description => "Instructions to build the keys-selection TCAM key",
      Width => "63", # Excel Formula: =calc_field_width_define("NPE_LEVEL_3_1_FS_OFFSETS_INSTRUCTIONS_WIDTH")
      Position => "62:0", # Excel Formula: =calc_position(F122,E123,TRUE)
    },
    BucketA_LookupEnable => { #Structure Type: MemField;
      Name => "BucketA_LookupEnable",
      RegMem => "MemField",
      Description => "If set, keys-selection-TCAM.bucket-A is enabled",
      Width => "1",
      Position => "63", # Excel Formula: =calc_position(F123,E124)
    },
    BucketB_LookupEnable => { #Structure Type: MemField;
      Name => "BucketB_LookupEnable",
      RegMem => "MemField",
      Description => "If set, keys-selection-TCAM.bucket-B is enabled",
      Width => "1",
      Position => "64", # Excel Formula: =calc_position(F124,E125)
    },
    BucketC_LookupEnable => { #Structure Type: MemField;
      Name => "BucketC_LookupEnable",
      RegMem => "MemField",
      Description => "If set, keys-selection-TCAM.bucket-C is enabled",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F125,E126)
    },
    BucketD_LookupEnable => { #Structure Type: MemField;
      Name => "BucketD_LookupEnable",
      RegMem => "MemField",
      Description => "If set, keys-selection-TCAM.bucket-D is enabled",
      Width => "1",
      Position => "66", # Excel Formula: =calc_position(F126,E127)
    },
  },
  LookupKeysConstructionMacro => { #Structure Type: Mem;
    Name => "LookupKeysConstructionMacro",
    RegMem => "Mem",
    Address => "500000", # Excel Formula: =calc_mem_address(C122,A122,G128,L128)
    Width => "233", # Excel Formula: =calc_mem_width(E129:E130,M128,F130,256)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "232",
    SharedKeysGenInstructions => { #Structure Type: MemField;
      Name => "SharedKeysGenInstructions",
      RegMem => "MemField",
      Description => "16 global instructions to be used in the key construction. ",
      Width => "230", # Excel Formula: =calc_field_width_define("NPE_LEVEL_4_1_FS_INSTRUCTIONS_WIDTH")
      Position => "229:0", # Excel Formula: =calc_position(F128,E129,TRUE)
    },
    ConstantSelect => { #Structure Type: MemField;
      Name => "ConstantSelect",
      RegMem => "MemField",
      Description => "Select one of 4 constants (48 bits each). The constant can be used for the construction of the lookup keys.",
      Width => "2",
      Position => "231:230", # Excel Formula: =calc_position(F129,E130)
    },
  },
  LookupKeysConstructionConstantsCfg => { #Structure Type: Mem;
    Name => "LookupKeysConstructionConstantsCfg",
    RegMem => "Mem",
    Address => "600000", # Excel Formula: =calc_mem_address(C128,A128,G131,L131)
    Width => "48", # Excel Formula: =calc_mem_width(E132:E132,M131,F132,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "48",
    KeysConstructionConstants => { #Structure Type: MemField;
      Name => "KeysConstructionConstants",
      RegMem => "MemField",
      Description => "4 constants (48 bits each) to be used in the lookup key construction",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F131,E132,TRUE)
    },
  },
  LookupKeysSelectionTcam => { #Structure Type: Mem;
    Name => "LookupKeysSelectionTcam",
    RegMem => "Mem",
    Address => "700000", # Excel Formula: =calc_mem_address(C131,A131,G133,L133)
    Width => "43", # Excel Formula: =calc_mem_width(E134:E135,"None",F135,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "128",
    MemWrapper => "TCAM",
    MemProtect => "Parity",
    AdditionalInfo => "NumOfKeys=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "43",
    LookupKeysSelectionTcam_key => { #Structure Type: MemField;
      Name => "LookupKeysSelectionTcam_key",
      RegMem => "MemField",
      Description => "width of key to be searched ",
      Width => "42", # Excel Formula: =calc_field_width_define("NPE_LEVEL_3_1_FS_TOTAL_OUTPUT_WIDTH") + 6
      Position => "41:0", # Excel Formula: =calc_position(F133,E134,TRUE)
    },
    LookupKeysSelectionTcam_delete => { #Structure Type: MemField;
      Name => "LookupKeysSelectionTcam_delete",
      RegMem => "MemField",
      Description => "set to 1 inorder to delete entry with cpu.",
      Width => "1",
      Position => "42", # Excel Formula: =calc_position(F134,E135)
      Comments => "output index logic can be disabled ",
    },
  },
  LookupKeysConstructionLowBuckets0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 33;
    Name => "LookupKeysConstructionLowBuckets[2]",
    RegMem => "Mem",
    Address => "800000", # Excel Formula: =calc_mem_address(C133,A133,G136,L136)
    Description => "Control the key construction of keys A and B (160 bits)",
    Width => "80", # Excel Formula: =calc_mem_width(E137:E143,M136,F143,128)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "40",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "80",
    Indexs0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 7;
      Name => "Indexs[n]",
      RegMem => "MemField",
      Description => "8 indexes to field select, to be used in the key construction. Index 15 means bucket FS",
      Width => "45", # Excel Formula: =5*9
      Position => "44:0", # Excel Formula: =calc_position(F136,E137,TRUE)
    },
    BucketFieldSelectInst0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 22;
      Name => "BucketFieldSelectInst[n]",
      RegMem => "MemField",
      Description => "Control over Field-Select, dedicated for this bucket",
      Width => "14",
      Position => "58:45", # Excel Formula: =calc_position(F137,E138)
    },
    LogicalDb0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "LogicalDb[n]",
      RegMem => "MemField",
      Description => "Logical database to be added to the lsbs of the key",
      Width => "7",
      Position => "65:59", # Excel Formula: =calc_position(F138,E139)
    },
    LogicalDbWidth0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "LogicalDbWidth[n]",
      RegMem => "MemField",
      Description => "The width of the logical database.",
      Width => "3",
      Position => "68:66", # Excel Formula: =calc_position(F139,E140)
    },
    TagID0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "TagID[n]",
      RegMem => "MemField",
      Description => "4 bits to be transmited to the resolution core. This tag is a lookup identifier.",
      Width => "4",
      Position => "72:69", # Excel Formula: =calc_position(F140,E141)
    },
    KeyDestination0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "KeyDestination[n]",
      RegMem => "MemField",
      Description => "The database that the lookup is directed to. The encoding is changed between NPE instances",
      Width => "4",
      Position => "76:73", # Excel Formula: =calc_position(F141,E142)
    },
    ResultIndex0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "ResultIndex[n]",
      RegMem => "MemField",
      Description => "To which bucket to return the lookups results.
0-3: Regular databases result
6: Use-key-as-result - the constructed key is used as a lookup result
7: No-return - no result return from this lookup",
      Width => "3",
      Position => "79:77", # Excel Formula: =calc_position(F142,E143)
    },
  },
  LookupKeysConstructionLowBuckets1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 33;
    Name => "LookupKeysConstructionLowBuckets[2]",
    RegMem => "Mem",
    Address => "900000",
    Description => "Control the key construction of keys A and B (160 bits)",
    Width => "80", # Excel Formula: =calc_mem_width(E137:E143,M136,F143,128)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "40",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "80",
    Indexs1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 7;
      Name => "Indexs[n]",
      RegMem => "MemField",
      Description => "8 indexes to field select, to be used in the key construction. Index 15 means bucket FS",
      Width => "45", # Excel Formula: =5*9
      Position => "44:0", # Excel Formula: =calc_position(F136,E137,TRUE)
    },
    BucketFieldSelectInst1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 22;
      Name => "BucketFieldSelectInst[n]",
      RegMem => "MemField",
      Description => "Control over Field-Select, dedicated for this bucket",
      Width => "14",
      Position => "58:45", # Excel Formula: =calc_position(F137,E138)
    },
    LogicalDb1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "LogicalDb[n]",
      RegMem => "MemField",
      Description => "Logical database to be added to the lsbs of the key",
      Width => "7",
      Position => "65:59", # Excel Formula: =calc_position(F138,E139)
    },
    LogicalDbWidth1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "LogicalDbWidth[n]",
      RegMem => "MemField",
      Description => "The width of the logical database.",
      Width => "3",
      Position => "68:66", # Excel Formula: =calc_position(F139,E140)
    },
    TagID1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "TagID[n]",
      RegMem => "MemField",
      Description => "4 bits to be transmited to the resolution core. This tag is a lookup identifier.",
      Width => "4",
      Position => "72:69", # Excel Formula: =calc_position(F140,E141)
    },
    KeyDestination1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "KeyDestination[n]",
      RegMem => "MemField",
      Description => "The database that the lookup is directed to. The encoding is changed between NPE instances",
      Width => "4",
      Position => "76:73", # Excel Formula: =calc_position(F141,E142)
    },
    ResultIndex1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "ResultIndex[n]",
      RegMem => "MemField",
      Description => "To which bucket to return the lookups results.
0-3: Regular databases result
6: Use-key-as-result - the constructed key is used as a lookup result
7: No-return - no result return from this lookup",
      Width => "3",
      Position => "79:77", # Excel Formula: =calc_position(F142,E143)
    },
  },
  LookupKeysConstructionHighBuckets0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 34;
    Name => "LookupKeysConstructionHighBuckets[2]",
    RegMem => "Mem",
    Address => "A00000", # Excel Formula: =calc_mem_address(C136,A136,G144,L144)
    Description => "Control the key construction of keys C and D (160 bits)",
    Width => "80", # Excel Formula: =calc_mem_width(E145:E151,M144,F151,128)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "40",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "80",
    Indexs0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 7;
      Name => "Indexs[n]",
      RegMem => "MemField",
      Description => "8 indexes to field select, to be used in the key construction. Index 15 means bucket FS",
      Width => "45", # Excel Formula: =5*9
      Position => "44:0", # Excel Formula: =calc_position(F144,E145,TRUE)
    },
    BucketFieldSelectInst0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 22;
      Name => "BucketFieldSelectInst[n]",
      RegMem => "MemField",
      Description => "Control over Field-Select, dedicated for this bucket",
      Width => "14",
      Position => "58:45", # Excel Formula: =calc_position(F145,E146)
    },
    LogicalDb0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "LogicalDb[n]",
      RegMem => "MemField",
      Description => "Logical database to be added to the lsbs of the key",
      Width => "7",
      Position => "65:59", # Excel Formula: =calc_position(F146,E147)
    },
    LogicalDbWidth0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "LogicalDbWidth[n]",
      RegMem => "MemField",
      Description => "The width of the logical database.",
      Width => "3",
      Position => "68:66", # Excel Formula: =calc_position(F147,E148)
    },
    TagID0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "TagID[n]",
      RegMem => "MemField",
      Description => "4 bits to be transmited to the resolution core. This tag is a lookup identifier.",
      Width => "4",
      Position => "72:69", # Excel Formula: =calc_position(F148,E149)
    },
    KeyDestination0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "KeyDestination[n]",
      RegMem => "MemField",
      Description => "The database that the lookup is directed to. The encoding is changed between NPE instances",
      Width => "4",
      Position => "76:73", # Excel Formula: =calc_position(F149,E150)
    },
    ResultIndex0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "ResultIndex[n]",
      RegMem => "MemField",
      Description => "To which bucket to return the lookups results.
0-3: Regular databases result
6: Use-key-as-result - the constructed key is used as a lookup result
7: No-return - no result return from this lookup",
      Width => "3",
      Position => "79:77", # Excel Formula: =calc_position(F150,E151)
    },
  },
  LookupKeysConstructionHighBuckets1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 34;
    Name => "LookupKeysConstructionHighBuckets[2]",
    RegMem => "Mem",
    Address => "B00000",
    Description => "Control the key construction of keys C and D (160 bits)",
    Width => "80", # Excel Formula: =calc_mem_width(E145:E151,M144,F151,128)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "40",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "80",
    Indexs1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 7;
      Name => "Indexs[n]",
      RegMem => "MemField",
      Description => "8 indexes to field select, to be used in the key construction. Index 15 means bucket FS",
      Width => "45", # Excel Formula: =5*9
      Position => "44:0", # Excel Formula: =calc_position(F144,E145,TRUE)
    },
    BucketFieldSelectInst1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 22;
      Name => "BucketFieldSelectInst[n]",
      RegMem => "MemField",
      Description => "Control over Field-Select, dedicated for this bucket",
      Width => "14",
      Position => "58:45", # Excel Formula: =calc_position(F145,E146)
    },
    LogicalDb1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "LogicalDb[n]",
      RegMem => "MemField",
      Description => "Logical database to be added to the lsbs of the key",
      Width => "7",
      Position => "65:59", # Excel Formula: =calc_position(F146,E147)
    },
    LogicalDbWidth1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "LogicalDbWidth[n]",
      RegMem => "MemField",
      Description => "The width of the logical database.",
      Width => "3",
      Position => "68:66", # Excel Formula: =calc_position(F147,E148)
    },
    TagID1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "TagID[n]",
      RegMem => "MemField",
      Description => "4 bits to be transmited to the resolution core. This tag is a lookup identifier.",
      Width => "4",
      Position => "72:69", # Excel Formula: =calc_position(F148,E149)
    },
    KeyDestination1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "KeyDestination[n]",
      RegMem => "MemField",
      Description => "The database that the lookup is directed to. The encoding is changed between NPE instances",
      Width => "4",
      Position => "76:73", # Excel Formula: =calc_position(F149,E150)
    },
    ResultIndex1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "ResultIndex[n]",
      RegMem => "MemField",
      Description => "To which bucket to return the lookups results.
0-3: Regular databases result
6: Use-key-as-result - the constructed key is used as a lookup result
7: No-return - no result return from this lookup",
      Width => "3",
      Position => "79:77", # Excel Formula: =calc_position(F150,E151)
    },
  },
  LookupA_per_dest_linked_list_fifo_index => { #Structure Type: Mem;
    Name => "LookupA_per_dest_linked_list_fifo_index",
    RegMem => "Mem",
    Address => "C00000", # Excel Formula: =calc_mem_address(C144,A144,G152,L152)
    Width => "4", # Excel Formula: =calc_mem_width(E153:E153,M152,F153,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "16", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "4",
    per_dest_linked_list_fifo_index => { #Structure Type: MemField;
      Name => "per_dest_linked_list_fifo_index",
      RegMem => "MemField",
      Description => "Valid indices: 0-7. all ones for 'not-valid'",
      Width => "4", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_LINKED_LIST_FIFO_INDEX_WIDTH")
      Position => "3:0", # Excel Formula: =calc_position(F152,E153,TRUE)
    },
  },
  LookupB_per_dest_linked_list_fifo_index => { #Structure Type: Mem;
    Name => "LookupB_per_dest_linked_list_fifo_index",
    RegMem => "Mem",
    Address => "D00000", # Excel Formula: =calc_mem_address(C152,A152,G154,L154)
    Width => "4", # Excel Formula: =calc_mem_width(E155:E155,M154,F155,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "16", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "4",
    per_dest_linked_list_fifo_index => { #Structure Type: MemField;
      Name => "per_dest_linked_list_fifo_index",
      RegMem => "MemField",
      Description => "Valid indices: 0-7. all ones for 'not-valid'",
      Width => "4", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_LINKED_LIST_FIFO_INDEX_WIDTH")
      Position => "3:0", # Excel Formula: =calc_position(F154,E155,TRUE)
    },
  },
  LookupC_per_dest_linked_list_fifo_index => { #Structure Type: Mem;
    Name => "LookupC_per_dest_linked_list_fifo_index",
    RegMem => "Mem",
    Address => "E00000", # Excel Formula: =calc_mem_address(C154,A154,G156,L156)
    Width => "4", # Excel Formula: =calc_mem_width(E157:E157,M156,F157,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "16", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "4",
    per_dest_linked_list_fifo_index => { #Structure Type: MemField;
      Name => "per_dest_linked_list_fifo_index",
      RegMem => "MemField",
      Description => "Valid indices: 0-7. all ones for 'not-valid'",
      Width => "4", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_LINKED_LIST_FIFO_INDEX_WIDTH")
      Position => "3:0", # Excel Formula: =calc_position(F156,E157,TRUE)
    },
  },
  LookupD_per_dest_linked_list_fifo_index => { #Structure Type: Mem;
    Name => "LookupD_per_dest_linked_list_fifo_index",
    RegMem => "Mem",
    Address => "F00000", # Excel Formula: =calc_mem_address(C156,A156,G158,L158)
    Width => "4", # Excel Formula: =calc_mem_width(E159:E159,M158,F159,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "16", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "4",
    per_dest_linked_list_fifo_index => { #Structure Type: MemField;
      Name => "per_dest_linked_list_fifo_index",
      RegMem => "MemField",
      Description => "Valid indices: 0-7. all ones for 'not-valid'",
      Width => "4", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_LINKED_LIST_FIFO_INDEX_WIDTH")
      Position => "3:0", # Excel Formula: =calc_position(F158,E159,TRUE)
    },
  },
  LookupResultMemoryA => { #Structure Type: Mem;
    Name => "LookupResultMemoryA",
    RegMem => "Mem",
    Address => "1000000", # Excel Formula: =calc_mem_address(C158,A158,G160,L160)
    Description => "Lookup memory holds the lookup result.",
    Width => "168", # Excel Formula: =calc_mem_width(E161:E161,M160,F161,256)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "192", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=256,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "167",
    LookupResultMemoryA_Data => { #Structure Type: MemField;
      Name => "LookupResultMemoryA_Data",
      RegMem => "MemField",
      Width => "167", # Excel Formula: =160+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "166:0", # Excel Formula: =calc_position(F160,E161,TRUE)
    },
  },
  LookupResultMemoryB => { #Structure Type: Mem;
    Name => "LookupResultMemoryB",
    RegMem => "Mem",
    Address => "1100000", # Excel Formula: =calc_mem_address(C160,A160,G162,L162)
    Description => "Lookup memory holds the lookup result.",
    Width => "168", # Excel Formula: =calc_mem_width(E163:E163,M162,F163,256)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "192", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=256,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "167",
    LookupResultMemoryB_Data => { #Structure Type: MemField;
      Name => "LookupResultMemoryB_Data",
      RegMem => "MemField",
      Width => "167", # Excel Formula: =160++LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "166:0", # Excel Formula: =calc_position(F162,E163,TRUE)
    },
  },
  LookupResultMemoryC => { #Structure Type: Mem;
    Name => "LookupResultMemoryC",
    RegMem => "Mem",
    Address => "1200000", # Excel Formula: =calc_mem_address(C162,A162,G164,L164)
    Description => "Lookup memory holds the lookup result.",
    Width => "88", # Excel Formula: =calc_mem_width(E165:E165,M164,F165,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "192", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "87",
    LookupResultMemoryC_Data => { #Structure Type: MemField;
      Name => "LookupResultMemoryC_Data",
      RegMem => "MemField",
      Width => "87", # Excel Formula: =80++LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "86:0", # Excel Formula: =calc_position(F164,E165,TRUE)
    },
  },
  LookupResultMemoryD => { #Structure Type: Mem;
    Name => "LookupResultMemoryD",
    RegMem => "Mem",
    Address => "1300000", # Excel Formula: =calc_mem_address(C164,A164,G166,L166)
    Description => "Lookup memory holds the lookup result.",
    Width => "88", # Excel Formula: =calc_mem_width(E167:E167,M166,F167,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "192", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "87",
    LookupResultMemoryD_Data => { #Structure Type: MemField;
      Name => "LookupResultMemoryD_Data",
      RegMem => "MemField",
      Width => "87", # Excel Formula: =80+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "86:0", # Excel Formula: =calc_position(F166,E167,TRUE)
    },
  },
  LookupMemoryA_High => { #Structure Type: Mem;
    Name => "LookupMemoryA_High",
    RegMem => "Mem",
    Address => "1400000", # Excel Formula: =calc_mem_address(C166,A166,G168,L168)
    Description => "Lookup memory holds the lookup key.",
    Width => "168", # Excel Formula: =calc_mem_width(E169:E169,M168,F169,256)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=256,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "167",
    LookupMemoryA_HighData => { #Structure Type: MemField;
      Name => "LookupMemoryA_HighData",
      RegMem => "MemField",
      Width => "167", # Excel Formula: =160+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "166:0", # Excel Formula: =calc_position(F168,E169,TRUE)
    },
  },
  LookupMemoryB_High => { #Structure Type: Mem;
    Name => "LookupMemoryB_High",
    RegMem => "Mem",
    Address => "1500000", # Excel Formula: =calc_mem_address(C168,A168,G170,L170)
    Description => "Lookup memory holds the lookup key.",
    Width => "168", # Excel Formula: =calc_mem_width(E171:E171,M170,F171,256)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=256,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "167",
    LookupMemoryB_HighData => { #Structure Type: MemField;
      Name => "LookupMemoryB_HighData",
      RegMem => "MemField",
      Width => "167", # Excel Formula: =160++LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "166:0", # Excel Formula: =calc_position(F170,E171,TRUE)
    },
  },
  LookupMemoryC_High => { #Structure Type: Mem;
    Name => "LookupMemoryC_High",
    RegMem => "Mem",
    Address => "1600000", # Excel Formula: =calc_mem_address(C170,A170,G172,L172)
    Description => "Lookup memory holds the lookup key.",
    Width => "88", # Excel Formula: =calc_mem_width(E173:E173,M172,F173,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "87",
    LookupMemoryC_HighData => { #Structure Type: MemField;
      Name => "LookupMemoryC_HighData",
      RegMem => "MemField",
      Width => "87", # Excel Formula: =80++LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "86:0", # Excel Formula: =calc_position(F172,E173,TRUE)
    },
  },
  LookupMemoryD_High => { #Structure Type: Mem;
    Name => "LookupMemoryD_High",
    RegMem => "Mem",
    Address => "1700000", # Excel Formula: =calc_mem_address(C172,A172,G174,L174)
    Description => "Lookup memory holds the lookup key.",
    Width => "88", # Excel Formula: =calc_mem_width(E175:E175,M174,F175,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "87",
    LookupMemoryD_HighData => { #Structure Type: MemField;
      Name => "LookupMemoryD_HighData",
      RegMem => "MemField",
      Width => "87", # Excel Formula: =80+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "86:0", # Excel Formula: =calc_position(F174,E175,TRUE)
    },
  },
  LookupMemoryA_Low => { #Structure Type: Mem;
    Name => "LookupMemoryA_Low",
    RegMem => "Mem",
    Address => "1800000", # Excel Formula: =calc_mem_address(C174,A174,G176,L176)
    Description => "Lookup memory holds the lookup key.",
    Width => "168", # Excel Formula: =calc_mem_width(E177:E177,M176,F177,256)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=256,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "167",
    LookupMemoryA_LowData => { #Structure Type: MemField;
      Name => "LookupMemoryA_LowData",
      RegMem => "MemField",
      Width => "167", # Excel Formula: =160+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "166:0", # Excel Formula: =calc_position(F176,E177,TRUE)
    },
  },
  LookupMemoryB_Low => { #Structure Type: Mem;
    Name => "LookupMemoryB_Low",
    RegMem => "Mem",
    Address => "1900000", # Excel Formula: =calc_mem_address(C176,A176,G178,L178)
    Description => "Lookup memory holds the lookup key.",
    Width => "168", # Excel Formula: =calc_mem_width(E179:E179,M178,F179,256)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=256,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "167",
    LookupMemoryB_LowData => { #Structure Type: MemField;
      Name => "LookupMemoryB_LowData",
      RegMem => "MemField",
      Width => "167", # Excel Formula: =160+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "166:0", # Excel Formula: =calc_position(F178,E179,TRUE)
    },
  },
  LookupMemoryC_Low => { #Structure Type: Mem;
    Name => "LookupMemoryC_Low",
    RegMem => "Mem",
    Address => "1A00000", # Excel Formula: =calc_mem_address(C178,A178,G180,L180)
    Description => "Lookup memory holds the lookup key.",
    Width => "88", # Excel Formula: =calc_mem_width(E181:E181,M180,F181,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "87",
    LookupMemoryC_LowData => { #Structure Type: MemField;
      Name => "LookupMemoryC_LowData",
      RegMem => "MemField",
      Width => "87", # Excel Formula: =80+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "86:0", # Excel Formula: =calc_position(F180,E181,TRUE)
    },
  },
  LookupMemoryD_Low => { #Structure Type: Mem;
    Name => "LookupMemoryD_Low",
    RegMem => "Mem",
    Address => "1B00000", # Excel Formula: =calc_mem_address(C180,A180,G182,L182)
    Description => "Lookup memory holds the lookup key.",
    Width => "88", # Excel Formula: =calc_mem_width(E183:E183,M182,F183,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "87",
    LookupMemoryD_LowData => { #Structure Type: MemField;
      Name => "LookupMemoryD_LowData",
      RegMem => "MemField",
      Width => "87", # Excel Formula: =80+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "86:0", # Excel Formula: =calc_position(F182,E183,TRUE)
    },
  },
  LookupResultsCfg => { #Structure Type: Mem;
    Name => "LookupResultsCfg",
    RegMem => "Mem",
    Address => "1C00000", # Excel Formula: =calc_mem_address(C182,A182,G184,L184)
    Description => "control per NPE-Macro-ID:
1. The width in bytes of each lookup result
2. Final Result Shift-value (in channles-resolution)",
    Width => "41", # Excel Formula: =calc_mem_width(E185:E193,M184,F193,-1)
    Type => "Config",
    UsedBy => "npe",
    DefaultValue => "Per macro:,1. The width in bytes of each lookup result,2. Final Result Shift-value (in channles-resolution)",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "41",
    LookupResultA_Width => { #Structure Type: MemField;
      Name => "LookupResultA_Width",
      RegMem => "MemField",
      Description => "Lookup result width on interface A",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F184,E185,TRUE)
    },
    LookupResultB_Width => { #Structure Type: MemField;
      Name => "LookupResultB_Width",
      RegMem => "MemField",
      Description => "Lookup result width on interface B",
      Width => "5",
      Position => "9:5", # Excel Formula: =calc_position(F185,E186)
    },
    LookupResultC_Width => { #Structure Type: MemField;
      Name => "LookupResultC_Width",
      RegMem => "MemField",
      Description => "Lookup result width on interface C",
      Width => "4",
      Position => "13:10", # Excel Formula: =calc_position(F186,E187)
    },
    LookupResultD_Width => { #Structure Type: MemField;
      Name => "LookupResultD_Width",
      RegMem => "MemField",
      Description => "Lookup result width on interface D",
      Width => "4",
      Position => "17:14", # Excel Formula: =calc_position(F187,E188)
    },
    LookupResultShift => { #Structure Type: MemField;
      Name => "LookupResultShift",
      RegMem => "MemField",
      Description => "Control where to stamp the lookup results over the resolution core data-bus",
      Width => "5",
      Position => "22:18", # Excel Formula: =calc_position(F188,E189)
    },
    LookupUseKeyAsResultA_Width => { #Structure Type: MemField;
      Name => "LookupUseKeyAsResultA_Width",
      RegMem => "MemField",
      Description => "Result width in a case of UseKeyAsResult on interface A",
      Width => "5",
      Position => "27:23", # Excel Formula: =calc_position(F189,E190)
    },
    LookupUseKeyAsResultB_Width => { #Structure Type: MemField;
      Name => "LookupUseKeyAsResultB_Width",
      RegMem => "MemField",
      Description => "Result width in a case of UseKeyAsResult on interface B",
      Width => "5",
      Position => "32:28", # Excel Formula: =calc_position(F190,E191)
    },
    LookupUseKeyAsResultC_Width => { #Structure Type: MemField;
      Name => "LookupUseKeyAsResultC_Width",
      RegMem => "MemField",
      Description => "Result width in a case of UseKeyAsResult on interface C",
      Width => "4",
      Position => "36:33", # Excel Formula: =calc_position(F191,E192)
    },
    LookupUseKeyAsResultD_Width => { #Structure Type: MemField;
      Name => "LookupUseKeyAsResultD_Width",
      RegMem => "MemField",
      Description => "Result width in a case of UseKeyAsResult on interface D",
      Width => "4",
      Position => "40:37", # Excel Formula: =calc_position(F192,E193)
    },
  },
  ResolutionKeysSelectionMacro => { #Structure Type: Mem;
    Name => "ResolutionKeysSelectionMacro",
    RegMem => "Mem",
    Address => "1D00000", # Excel Formula: =calc_mem_address(C184,A184,G194,L194)
    Width => "181", # Excel Formula: =calc_mem_width(E195:E195,M194,F195,256)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "180",
    TcamKeyInstructions => { #Structure Type: MemField;
      Name => "TcamKeyInstructions",
      RegMem => "MemField",
      Description => "Instructions to build the keys-selection TCAM key ",
      Width => "180", # Excel Formula: =calc_field_width_define("NPE_LEVEL_8_1_FS_OFFSETS_INSTRUCTIONS_WIDTH")
      Position => "179:0", # Excel Formula: =calc_position(F194,E195,TRUE)
    },
  },
  ResolutionKeysSelectionTcamLow => { #Structure Type: Mem;
    Name => "ResolutionKeysSelectionTcamLow",
    RegMem => "Mem",
    Address => "1E00000", # Excel Formula: =calc_mem_address(C194,A194,G196,L196)
    Width => "75", # Excel Formula: =calc_mem_width(E197:E198,"None",F198,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "512",
    MemWrapper => "TCAM",
    MemProtect => "Parity",
    AdditionalInfo => "NumOfKeys=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "75",
    ResolutionKeysSelectionTcamLow_key => { #Structure Type: MemField;
      Name => "ResolutionKeysSelectionTcamLow_key",
      RegMem => "MemField",
      Width => "74", # Excel Formula: =calc_field_width_define("NPE_LEVEL_8_1_FS_TOTAL_OUTPUT_WIDTH") + 6 + 2
      Position => "73:0", # Excel Formula: =calc_position(F196,E197,TRUE)
    },
    ResolutionKeysSelectionTcamLow_delete => { #Structure Type: MemField;
      Name => "ResolutionKeysSelectionTcamLow_delete",
      RegMem => "MemField",
      Description => "set to 1 inorder to delete entry with cpu.",
      Width => "1",
      Position => "74", # Excel Formula: =calc_position(F197,E198)
      Comments => "output index logic can be disabled ",
    },
  },
  ResolutionKeysSelectionTcamHigh => { #Structure Type: Mem;
    Name => "ResolutionKeysSelectionTcamHigh",
    RegMem => "Mem",
    Address => "1F00000", # Excel Formula: =calc_mem_address(C196,A196,G199,L199)
    Width => "75", # Excel Formula: =calc_mem_width(E200:E201,"None",F201,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "256",
    MemWrapper => "TCAM",
    MemProtect => "Parity",
    AdditionalInfo => "NumOfKeys=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "75",
    ResolutionKeysSelectionTcamHigh_key => { #Structure Type: MemField;
      Name => "ResolutionKeysSelectionTcamHigh_key",
      RegMem => "MemField",
      Width => "74", # Excel Formula: =calc_field_width_define("NPE_LEVEL_8_1_FS_TOTAL_OUTPUT_WIDTH") + 6 + 2
      Position => "73:0", # Excel Formula: =calc_position(F199,E200,TRUE)
    },
    ResolutionKeysSelectionTcamHigh_delete => { #Structure Type: MemField;
      Name => "ResolutionKeysSelectionTcamHigh_delete",
      RegMem => "MemField",
      Description => "set to 1 inorder to delete entry with cpu.",
      Width => "1",
      Position => "74", # Excel Formula: =calc_position(F200,E201)
      Comments => "output index logic can be disabled ",
    },
  },
  PdUpdateInstructions => { #Structure Type: Mem;
    Name => "PdUpdateInstructions",
    RegMem => "Mem",
    Address => "2000000", # Excel Formula: =calc_mem_address(C199,A199,G202,L202)
    Description => "Instructions to update packet descriptor. The instructions are the associated data of the ResolutionKeysSelectionTcam",
    Width => "14", # Excel Formula: =calc_mem_width(E203:E203,M202,F203,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "768",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "14",
    PdUpdateInstruction => { #Structure Type: MemField;
      Name => "PdUpdateInstruction",
      RegMem => "MemField",
      Description => "Instruction to extract a data from the resolution data-bus",
      Width => "14", # Excel Formula: =calc_field_width_define("NPE_PD_UPDATE_INSTRUCTION_WIDTH")
      Position => "13:0", # Excel Formula: =calc_position(F202,E203,TRUE)
    },
  },
  PdUpdateUnifiedBucketsControl => { #Structure Type: Mem;
    Name => "PdUpdateUnifiedBucketsControl",
    RegMem => "Mem",
    Address => "2100000", # Excel Formula: =calc_mem_address(C202,A202,G204,L204)
    Description => "control Per NPE-Macro-ID how to build the unified buckets. ",
    Width => "422", # Excel Formula: =calc_mem_width(E205:E205,M204,F205,256)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "420",
    PdUpdateUnifiedBucketsControlData => { #Structure Type: MemField;
      Name => "PdUpdateUnifiedBucketsControlData",
      RegMem => "MemField",
      Description => "Holds per unified bucket the Field-Select indices to be used for the update and the destination of the update on the NPPD.",
      Width => "420", # Excel Formula: =calc_field_width_define("NPE_PD_UPDATE_UBS_INST_TOTAL_WIDTH")
      Position => "419:0", # Excel Formula: =calc_position(F204,E205,TRUE)
    },
  },
  PdUpdateMacro => { #Structure Type: Mem;
    Name => "PdUpdateMacro",
    RegMem => "Mem",
    Address => "2200000", # Excel Formula: =calc_mem_address(C204,A204,G206,L206)
    Width => "16", # Excel Formula: =calc_mem_width(E207:E208,M206,F208,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    ConstantSelect => { #Structure Type: MemField;
      Name => "ConstantSelect",
      RegMem => "MemField",
      Description => "Select per NPE-Macro-ID which on the 4 constants (80 bits each) to use when updating the NPPD",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F206,E207,TRUE)
    },
    DefaultMacroInsruction => { #Structure Type: MemField;
      Name => "DefaultMacroInsruction",
      RegMem => "MemField",
      Description => "Select per NPE-Macro-ID if there is no hit at resolution-key-construction-TCAM bucket-0 ",
      Width => "14",
      Position => "15:2", # Excel Formula: =calc_position(F207,E208)
    },
  },
  PdUpdateConstantsCfg => { #Structure Type: Mem;
    Name => "PdUpdateConstantsCfg",
    RegMem => "Mem",
    Address => "2300000", # Excel Formula: =calc_mem_address(C206,A206,G209,L209)
    Width => "80", # Excel Formula: =calc_mem_width(E210:E210,M209,F210,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "80",
    PdUpdateConstants => { #Structure Type: MemField;
      Name => "PdUpdateConstants",
      RegMem => "MemField",
      Description => "constant to be used when updating the NPPD",
      Width => "80",
      Position => "79:0", # Excel Formula: =calc_position(F209,E210,TRUE)
    },
  },
  DataBusHolderHigh => { #Structure Type: Mem;
    Name => "DataBusHolderHigh",
    RegMem => "Mem",
    Address => "2400000", # Excel Formula: =calc_mem_address(C209,A209,G211,L211)
    Description => "DataBus memory holds the Data-bus when waiting for lookup results and holds the update data before updating the NPPD",
    Width => "979", # Excel Formula: =calc_mem_width(E212:E212,M211,F212,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=60,ReadActivityFactor=60,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "971",
    DataBusHolderDataHigh => { #Structure Type: MemField;
      Name => "DataBusHolderDataHigh",
      RegMem => "MemField",
      Width => "971", # Excel Formula: =calc_field_width_define("NPE_PD_UPDATE_REGULAR_INST_OFFSET") + calc_field_width_define("NPE_PD_UPDATE_UBS_PRE2POST_INST_TOTAL_WIDTH")
      Position => "970:0", # Excel Formula: =calc_position(F211,E212,TRUE)
    },
  },
  DataBusHolderLow => { #Structure Type: Mem;
    Name => "DataBusHolderLow",
    RegMem => "Mem",
    Address => "2500000", # Excel Formula: =calc_mem_address(C211,A211,G213,L213)
    Description => "DataBus memory holds the Data-bus when waiting for lookup results and holds the update data before updating the NPPD",
    Width => "979", # Excel Formula: =calc_mem_width(E214:E214,M213,F214,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=60,ReadActivityFactor=60,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "971",
    DataBusHolderDataLow => { #Structure Type: MemField;
      Name => "DataBusHolderDataLow",
      RegMem => "MemField",
      Width => "971", # Excel Formula: =calc_field_width_define("NPE_PD_UPDATE_REGULAR_INST_OFFSET") + calc_field_width_define("NPE_PD_UPDATE_UBS_PRE2POST_INST_TOTAL_WIDTH")
      Position => "970:0", # Excel Formula: =calc_position(F213,E214,TRUE)
    },
  },
  MiniScoperCfg => { #Structure Type: Mem;
    Name => "MiniScoperCfg",
    RegMem => "Mem",
    Address => "2600000", # Excel Formula: =calc_mem_address(C213,A213,G215,L215)
    Description => "select the source of each channel in the data-bus between lookup-core and resolution-core",
    Width => "135", # Excel Formula: =calc_mem_width(E216:E218,M215,F218,256)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "135",
    MiniScoperCfgData => { #Structure Type: MemField;
      Name => "MiniScoperCfgData",
      RegMem => "MemField",
      Description => "set of offsets to the incoming bus in 16b resolution",
      Width => "132", # Excel Formula: =calc_field_width_define("NPE_LEVEL_4_NUM_OF_CHANNELS")*ROUNDUP(LOG(calc_field_width_define("NPE_LEVEL_3_NUM_OF_CHANNELS"),2),0)
      Position => "131:0", # Excel Formula: =calc_position(F215,E216,TRUE)
    },
    MiniScoperCfgBitSelProfile => { #Structure Type: MemField;
      Name => "MiniScoperCfgBitSelProfile",
      RegMem => "MemField",
      Description => "Select which control to use for the special channel in the mini scoper",
      Width => "2", # Excel Formula: =calc_field_width_define("NPE_MINI_SCOPER_SPECIAL_CH_NUM_OF_PROFILE_WIDTH")
      Position => "133:132", # Excel Formula: =calc_position(F216,E217)
    },
    MiniScoperCfgUseSpecialChannel => { #Structure Type: MemField;
      Name => "MiniScoperCfgUseSpecialChannel",
      RegMem => "MemField",
      Description => "determine if to use the specail channel in this macro",
      Width => "1",
      Position => "134", # Excel Formula: =calc_position(F217,E218)
    },
  },
  LookupCoreTcam => { #Structure Type: Mem;
    Name => "LookupCoreTcam",
    RegMem => "Mem",
    Address => "2700000", # Excel Formula: =calc_mem_address(C215,A215,G219,L219)
    Description => "LVR 0 TCAM.",
    Width => "141", # Excel Formula: =calc_mem_width(E220:E221,"None",F221,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "128", # Excel Formula: =calc_field_width_define("NPE_LKP_KEYS_SEL_TCAM_DEPTH")
    MemWrapper => "TCAM",
    MemProtect => "Parity",
    AdditionalInfo => "NumOfKeys=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "141",
    LookupCoreTcam_key => { #Structure Type: MemField;
      Name => "LookupCoreTcam_key",
      RegMem => "MemField",
      Description => "width of key to be searched",
      Width => "140",
      Position => "139:0", # Excel Formula: =calc_position(F219,E220,TRUE)
    },
    LookupCoreTcam_delete => { #Structure Type: MemField;
      Name => "LookupCoreTcam_delete",
      RegMem => "MemField",
      Description => "set to 1 inorder to delete entry with cpu.",
      Width => "1",
      Position => "140", # Excel Formula: =calc_position(F220,E221)
      Comments => "output index logic can be disabled ",
    },
  },
  Lvr0FsInstructions => { #Structure Type: Mem;
    Name => "Lvr0FsInstructions",
    RegMem => "Mem",
    Address => "2800000", # Excel Formula: =calc_mem_address(C219,A219,G222,L222)
    Description => "Per NPE-Macro-ID, control the field extraction for LVR 0. ",
    Width => "225", # Excel Formula: =calc_mem_width(E223:E224,M222,F224,256)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "224",
    Lvr0FsInst => { #Structure Type: MemField;
      Name => "Lvr0FsInst",
      RegMem => "MemField",
      Description => "Set of instructions per NPE-macro-ID. Each instruction control a dedicated Field-extractor",
      Width => "222", # Excel Formula: =calc_field_width_define("NPE_LEVEL_1_0_FS_INSTRUCTIONS_WIDTH")
      Position => "221:0", # Excel Formula: =calc_position(F222,E223,TRUE)
    },
    Lvr0ConstantSelect => { #Structure Type: MemField;
      Name => "Lvr0ConstantSelect",
      RegMem => "MemField",
      Description => "Select which of the 4 constants is used in the field-extraction. ",
      Width => "2",
      Position => "223:222", # Excel Formula: =calc_position(F223,E224)
    },
  },
  Lvr0ConstantsCfg => { #Structure Type: Mem;
    Name => "Lvr0ConstantsCfg",
    RegMem => "Mem",
    Address => "2900000", # Excel Formula: =calc_mem_address(C222,A222,G225,L225)
    Width => "48", # Excel Formula: =calc_mem_width(E226:E226,M225,F226,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "48",
    Lvr0Constants => { #Structure Type: MemField;
      Name => "Lvr0Constants",
      RegMem => "MemField",
      Description => "48 bits constant, selected according to LVR0ConstantSelect. The constant can be used in the field extraction process.",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F225,E226,TRUE)
    },
  },
  Lvr0MacroCfg => { #Structure Type: Mem;
    Name => "Lvr0MacroCfg",
    RegMem => "Mem",
    Address => "2A00000", # Excel Formula: =calc_mem_address(C225,A225,G227,L227)
    Width => "280", # Excel Formula: =calc_mem_width(E228:E228,M227,F228,256)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "278",
    Lvr0MacroConfig => { #Structure Type: MemField;
      Name => "Lvr0MacroConfig",
      RegMem => "MemField",
      Description => "Channels to remove (4)
register TCAM configuration (26)X number of register based TCAM in the LVR
ALU control fields (18) X number-of-full-ALU + (14) X number-of-reduced ALU 
Tables control (75)
TCAM profile (3)
",
      Width => "278", # Excel Formula: =calc_field_width_define("NPE_LEVEL_1_0_MACRO_CTRL_WIDTH")
      Position => "277:0", # Excel Formula: =calc_position(F227,E228,TRUE)
    },
  },
  Lvr0RegTcam0 => { #Structure Type: Mem;
    Name => "Lvr0RegTcam0",
    RegMem => "Mem",
    Address => "2B00000", # Excel Formula: =calc_mem_address(C227,A227,G229,L229)
    Description => "Register TCAM based. Used in the LVR process",
    Width => "41", # Excel Formula: =calc_mem_width(E230:E232,"None",F232,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "41",
    Lvr0RegTcam0_mask => { #Structure Type: MemField;
      Name => "Lvr0RegTcam0_mask",
      RegMem => "MemField",
      Width => "20",
      Position => "19:0", # Excel Formula: =calc_position(F229,E230,TRUE)
    },
    Lvr0RegTcam0_key => { #Structure Type: MemField;
      Name => "Lvr0RegTcam0_key",
      RegMem => "MemField",
      Width => "20",
      Position => "39:20", # Excel Formula: =calc_position(F230,E231)
    },
    Lvr0RegTcam0_delete => { #Structure Type: MemField;
      Name => "Lvr0RegTcam0_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F231,E232)
    },
  },
  Lvr0RegTcam0_mem => { #Structure Type: Mem;
    Name => "Lvr0RegTcam0_mem",
    RegMem => "Mem",
    Address => "2C00000", # Excel Formula: =calc_mem_address(C229,A229,G233,L233)
    Description => "Register TCAM based associated data",
    Width => "16", # Excel Formula: =calc_mem_width(E234:E234,M233,F234,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr0RegTcam0_mem_data => { #Structure Type: MemField;
      Name => "Lvr0RegTcam0_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F233,E234,TRUE)
    },
  },
  Lvr0RegTcam1 => { #Structure Type: Mem;
    Name => "Lvr0RegTcam1",
    RegMem => "Mem",
    Address => "2D00000", # Excel Formula: =calc_mem_address(C233,A233,G235,L235)
    Description => "Register TCAM based. Used in the LVR process",
    Width => "65", # Excel Formula: =calc_mem_width(E236:E238,"None",F238,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "65",
    Lvr0RegTcam1_mask => { #Structure Type: MemField;
      Name => "Lvr0RegTcam1_mask",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F235,E236,TRUE)
    },
    Lvr0RegTcam1_key => { #Structure Type: MemField;
      Name => "Lvr0RegTcam1_key",
      RegMem => "MemField",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F236,E237)
    },
    Lvr0RegTcam1_delete => { #Structure Type: MemField;
      Name => "Lvr0RegTcam1_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "64", # Excel Formula: =calc_position(F237,E238)
    },
  },
  Lvr0RegTcam1_mem => { #Structure Type: Mem;
    Name => "Lvr0RegTcam1_mem",
    RegMem => "Mem",
    Address => "2E00000", # Excel Formula: =calc_mem_address(C235,A235,G239,L239)
    Description => "Register TCAM based associated data",
    Width => "16", # Excel Formula: =calc_mem_width(E240:E240,M239,F240,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr0RegTcam1_mem_data => { #Structure Type: MemField;
      Name => "Lvr0RegTcam1_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F239,E240,TRUE)
    },
  },
  Lvr0RegTcam2 => { #Structure Type: Mem;
    Name => "Lvr0RegTcam2",
    RegMem => "Mem",
    Address => "2F00000", # Excel Formula: =calc_mem_address(C239,A239,G241,L241)
    Description => "Register TCAM based. Used in the LVR process",
    Width => "65", # Excel Formula: =calc_mem_width(E242:E244,"None",F244,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "65",
    Lvr0RegTcam2_mask => { #Structure Type: MemField;
      Name => "Lvr0RegTcam2_mask",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F241,E242,TRUE)
    },
    Lvr0RegTcam2_key => { #Structure Type: MemField;
      Name => "Lvr0RegTcam2_key",
      RegMem => "MemField",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F242,E243)
    },
    Lvr0RegTcam2_delete => { #Structure Type: MemField;
      Name => "Lvr0RegTcam2_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "64", # Excel Formula: =calc_position(F243,E244)
    },
  },
  Lvr0RegTcam2_mem => { #Structure Type: Mem;
    Name => "Lvr0RegTcam2_mem",
    RegMem => "Mem",
    Address => "3000000", # Excel Formula: =calc_mem_address(C241,A241,G245,L245)
    Description => "Register TCAM based associated data",
    Width => "16", # Excel Formula: =calc_mem_width(E246:E246,M245,F246,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr0RegTcam2_mem_data => { #Structure Type: MemField;
      Name => "Lvr0RegTcam2_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F245,E246,TRUE)
    },
  },
  Lvr0RegTcam3 => { #Structure Type: Mem;
    Name => "Lvr0RegTcam3",
    RegMem => "Mem",
    Address => "3100000", # Excel Formula: =calc_mem_address(C245,A245,G247,L247)
    Description => "Register TCAM based. Used in the LVR process",
    Width => "81", # Excel Formula: =calc_mem_width(E248:E250,"None",F250,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "81",
    Lvr0RegTcam3_mask => { #Structure Type: MemField;
      Name => "Lvr0RegTcam3_mask",
      RegMem => "MemField",
      Width => "40",
      Position => "39:0", # Excel Formula: =calc_position(F247,E248,TRUE)
    },
    Lvr0RegTcam3_key => { #Structure Type: MemField;
      Name => "Lvr0RegTcam3_key",
      RegMem => "MemField",
      Width => "40",
      Position => "79:40", # Excel Formula: =calc_position(F248,E249)
    },
    Lvr0RegTcam3_delete => { #Structure Type: MemField;
      Name => "Lvr0RegTcam3_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "80", # Excel Formula: =calc_position(F249,E250)
    },
  },
  Lvr0RegTcam3_mem => { #Structure Type: Mem;
    Name => "Lvr0RegTcam3_mem",
    RegMem => "Mem",
    Address => "3200000", # Excel Formula: =calc_mem_address(C247,A247,G251,L251)
    Description => "Register TCAM based associated data",
    Width => "16", # Excel Formula: =calc_mem_width(E252:E252,M251,F252,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr0RegTcam3_mem_data => { #Structure Type: MemField;
      Name => "Lvr0RegTcam3_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F251,E252,TRUE)
    },
  },
  Lvr1FsInstructions => { #Structure Type: Mem;
    Name => "Lvr1FsInstructions",
    RegMem => "Mem",
    Address => "3300000", # Excel Formula: =calc_mem_address(C251,A251,G253,L253)
    Description => "Per NPE-Macro-ID, control the field extraction for LVR 1. ",
    Width => "177", # Excel Formula: =calc_mem_width(E254:E255,M253,F255,256)
    Type => "Config",
    UsedBy => "Lvr1",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "176",
    Lvr1FsInst => { #Structure Type: MemField;
      Name => "Lvr1FsInst",
      RegMem => "MemField",
      Description => "Set of instructions per NPE-macro-ID. Each instruction control a dedicated Field-extractor",
      Width => "174", # Excel Formula: =calc_field_width_define("NPE_LEVEL_2_0_FS_INSTRUCTIONS_WIDTH")
      Position => "173:0", # Excel Formula: =calc_position(F253,E254,TRUE)
    },
    Lvr1ConstantSelect => { #Structure Type: MemField;
      Name => "Lvr1ConstantSelect",
      RegMem => "MemField",
      Description => "Select which of the 4 constants is used in the field-extraction. ",
      Width => "2",
      Position => "175:174", # Excel Formula: =calc_position(F254,E255)
    },
  },
  Lvr1ConstantsCfg => { #Structure Type: Mem;
    Name => "Lvr1ConstantsCfg",
    RegMem => "Mem",
    Address => "3400000", # Excel Formula: =calc_mem_address(C253,A253,G256,L256)
    Width => "48", # Excel Formula: =calc_mem_width(E257:E257,M256,F257,-1)
    Type => "Config",
    UsedBy => "LVR1",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "48",
    Lvr1Constants => { #Structure Type: MemField;
      Name => "Lvr1Constants",
      RegMem => "MemField",
      Description => "48 bits constant, selected according to LVR1ConstantSelect. The constant can be used in the field extraction process.",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F256,E257,TRUE)
    },
  },
  Lvr1MacroCfg => { #Structure Type: Mem;
    Name => "Lvr1MacroCfg",
    RegMem => "Mem",
    Address => "3500000", # Excel Formula: =calc_mem_address(C256,A256,G258,L258)
    Width => "210", # Excel Formula: =calc_mem_width(E259:E259,M258,F259,128)
    Type => "Config",
    UsedBy => "Lvr1",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "208",
    Lvr1MacroConfig => { #Structure Type: MemField;
      Name => "Lvr1MacroConfig",
      RegMem => "MemField",
      Description => "Channels to remove (4)
register TCAM configuration (26)X number of register based TCAM in the LVR
ALU control fields (18) X number-of-full-ALU + (14) X number-of-reduced ALU 
Tables control (75)
TCAM profile (3)
",
      Width => "208", # Excel Formula: =calc_field_width_define("NPE_LEVEL_2_0_MACRO_CTRL_WIDTH")
      Position => "207:0", # Excel Formula: =calc_position(F258,E259,TRUE)
    },
  },
  Lvr1RegTcam0 => { #Structure Type: Mem;
    Name => "Lvr1RegTcam0",
    RegMem => "Mem",
    Address => "3600000", # Excel Formula: =calc_mem_address(C258,A258,G260,L260)
    Description => "Register TCAM based. Used in the LVR process",
    Width => "97", # Excel Formula: =calc_mem_width(E261:E263,"None",F263,-1)
    Type => "Config",
    UsedBy => "Lvr1",
    MemEntries => "16",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "97",
    Lvr1RegTcam0_mask => { #Structure Type: MemField;
      Name => "Lvr1RegTcam0_mask",
      RegMem => "MemField",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F260,E261,TRUE)
    },
    Lvr1RegTcam0_key => { #Structure Type: MemField;
      Name => "Lvr1RegTcam0_key",
      RegMem => "MemField",
      Width => "48",
      Position => "95:48", # Excel Formula: =calc_position(F261,E262)
    },
    Lvr1RegTcam0_delete => { #Structure Type: MemField;
      Name => "Lvr1RegTcam0_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "96", # Excel Formula: =calc_position(F262,E263)
    },
  },
  Lvr1RegTcam0_mem => { #Structure Type: Mem;
    Name => "Lvr1RegTcam0_mem",
    RegMem => "Mem",
    Address => "3700000", # Excel Formula: =calc_mem_address(C260,A260,G264,L264)
    Description => "Register TCAM based associated data",
    Width => "16", # Excel Formula: =calc_mem_width(E265:E265,M264,F265,-1)
    Type => "Config",
    UsedBy => "Lvr1",
    MemEntries => "16",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr1RegTcam0_mem_data => { #Structure Type: MemField;
      Name => "Lvr1RegTcam0_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F264,E265,TRUE)
    },
  },
  Lvr2PerMacroNumOfBypassChannels => { #Structure Type: Mem;
    Name => "Lvr2PerMacroNumOfBypassChannels",
    RegMem => "Mem",
    Address => "3800000", # Excel Formula: =calc_mem_address(C264,A264,G266,L266)
    Width => "5", # Excel Formula: =calc_mem_width(E267:E267,M266,F267,-1)
    Type => "Config",
    UsedBy => "LVR2",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "5",
    NumOfBypassChannels => { #Structure Type: MemField;
      Name => "NumOfBypassChannels",
      RegMem => "MemField",
      Description => "The number of bypass channels per NPE-Macro-ID",
      Width => "5", # Excel Formula: =ROUNDUP(LOG((calc_field_width_define("NPE_SCOPER_NUM_OF_FS")-calc_field_width_define("NPE_LEVEL_0_NUM_OF_CHANNELS")),2),0)
      Position => "4:0", # Excel Formula: =calc_position(F266,E267,TRUE)
    },
  },
  Lvr3FsInstructions => { #Structure Type: Mem;
    Name => "Lvr3FsInstructions",
    RegMem => "Mem",
    Address => "3900000", # Excel Formula: =calc_mem_address(C266,A266,G268,L268)
    Description => "Per NPE-Macro-ID, control the field extraction for LVR 3. ",
    Width => "298", # Excel Formula: =calc_mem_width(E269:E270,M268,F270,256)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "296",
    Lvr3FsInst => { #Structure Type: MemField;
      Name => "Lvr3FsInst",
      RegMem => "MemField",
      Description => "Set of instructions per NPE-macro-ID. Each instruction control a dedicated Field-extractor",
      Width => "294", # Excel Formula: =calc_field_width_define("NPE_LEVEL_6_0_FS_INSTRUCTIONS_WIDTH")
      Position => "293:0", # Excel Formula: =calc_position(F268,E269,TRUE)
    },
    Lvr3ConstantSelect => { #Structure Type: MemField;
      Name => "Lvr3ConstantSelect",
      RegMem => "MemField",
      Description => "Select which of the 4 constants is used in the field-extraction. ",
      Width => "2",
      Position => "295:294", # Excel Formula: =calc_position(F269,E270)
    },
  },
  Lvr3ConstantsCfg => { #Structure Type: Mem;
    Name => "Lvr3ConstantsCfg",
    RegMem => "Mem",
    Address => "3A00000", # Excel Formula: =calc_mem_address(C268,A268,G271,L271)
    Width => "48", # Excel Formula: =calc_mem_width(E272:E272,M271,F272,-1)
    Type => "Config",
    UsedBy => "LVR3",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "48",
    Lvr3Constants => { #Structure Type: MemField;
      Name => "Lvr3Constants",
      RegMem => "MemField",
      Description => "48 bits constant, selected according to LVR3ConstantSelect. The constant can be used in the field extraction process.",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F271,E272,TRUE)
    },
  },
  Lvr3MacroCfg => { #Structure Type: Mem;
    Name => "Lvr3MacroCfg",
    RegMem => "Mem",
    Address => "3B00000", # Excel Formula: =calc_mem_address(C271,A271,G273,L273)
    Width => "322", # Excel Formula: =calc_mem_width(E274:E274,M273,F274,256)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "320",
    Lvr3MacroConfig => { #Structure Type: MemField;
      Name => "Lvr3MacroConfig",
      RegMem => "MemField",
      Description => "Channels to remove (4)
register TCAM configuration (26)X number of register based TCAM in the LVR
ALU control fields (18) X number-of-full-ALU + (14) X number-of-reduced ALU 
Tables control (75)
TCAM profile (3)
",
      Width => "320", # Excel Formula: =calc_field_width_define("NPE_LEVEL_6_0_MACRO_CTRL_WIDTH")
      Position => "319:0", # Excel Formula: =calc_position(F273,E274,TRUE)
    },
  },
  Lvr3RegTcam0 => { #Structure Type: Mem;
    Name => "Lvr3RegTcam0",
    RegMem => "Mem",
    Address => "3C00000", # Excel Formula: =calc_mem_address(C273,A273,G275,L275)
    Description => "Register TCAM based. Used in the LVR process",
    Width => "33", # Excel Formula: =calc_mem_width(E276:E278,"None",F278,-1)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "33",
    Lvr3RegTcam0_mask => { #Structure Type: MemField;
      Name => "Lvr3RegTcam0_mask",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F275,E276,TRUE)
    },
    Lvr3RegTcam0_key => { #Structure Type: MemField;
      Name => "Lvr3RegTcam0_key",
      RegMem => "MemField",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F276,E277)
    },
    Lvr3RegTcam0_delete => { #Structure Type: MemField;
      Name => "Lvr3RegTcam0_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F277,E278)
    },
  },
  Lvr3RegTcam0_mem => { #Structure Type: Mem;
    Name => "Lvr3RegTcam0_mem",
    RegMem => "Mem",
    Address => "3D00000", # Excel Formula: =calc_mem_address(C275,A275,G279,L279)
    Description => "Register TCAM based associated data",
    Width => "16", # Excel Formula: =calc_mem_width(E280:E280,M279,F280,-1)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr3RegTcam0_mem_data => { #Structure Type: MemField;
      Name => "Lvr3RegTcam0_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F279,E280,TRUE)
    },
  },
  Lvr3RegTcam1 => { #Structure Type: Mem;
    Name => "Lvr3RegTcam1",
    RegMem => "Mem",
    Address => "3E00000", # Excel Formula: =calc_mem_address(C279,A279,G281,L281)
    Description => "Register TCAM based. Used in the LVR process",
    Width => "65", # Excel Formula: =calc_mem_width(E282:E284,"None",F284,-1)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "65",
    Lvr3RegTcam1_mask => { #Structure Type: MemField;
      Name => "Lvr3RegTcam1_mask",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F281,E282,TRUE)
    },
    Lvr3RegTcam1_key => { #Structure Type: MemField;
      Name => "Lvr3RegTcam1_key",
      RegMem => "MemField",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F282,E283)
    },
    Lvr3RegTcam1_delete => { #Structure Type: MemField;
      Name => "Lvr3RegTcam1_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "64", # Excel Formula: =calc_position(F283,E284)
    },
  },
  Lvr3RegTcam1_mem => { #Structure Type: Mem;
    Name => "Lvr3RegTcam1_mem",
    RegMem => "Mem",
    Address => "3F00000", # Excel Formula: =calc_mem_address(C281,A281,G285,L285)
    Description => "Register TCAM based associated data",
    Width => "16", # Excel Formula: =calc_mem_width(E286:E286,M285,F286,-1)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr3RegTcam1_mem_data => { #Structure Type: MemField;
      Name => "Lvr3RegTcam1_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F285,E286,TRUE)
    },
  },
  Lvr3RegTcam2 => { #Structure Type: Mem;
    Name => "Lvr3RegTcam2",
    RegMem => "Mem",
    Address => "4000000", # Excel Formula: =calc_mem_address(C285,A285,G287,L287)
    Description => "Register TCAM based. Used in the LVR process",
    Width => "49", # Excel Formula: =calc_mem_width(E288:E290,"None",F290,-1)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "49",
    Lvr3RegTcam2_mask => { #Structure Type: MemField;
      Name => "Lvr3RegTcam2_mask",
      RegMem => "MemField",
      Width => "24",
      Position => "23:0", # Excel Formula: =calc_position(F287,E288,TRUE)
    },
    Lvr3RegTcam2_key => { #Structure Type: MemField;
      Name => "Lvr3RegTcam2_key",
      RegMem => "MemField",
      Width => "24",
      Position => "47:24", # Excel Formula: =calc_position(F288,E289)
    },
    Lvr3RegTcam2_delete => { #Structure Type: MemField;
      Name => "Lvr3RegTcam2_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "48", # Excel Formula: =calc_position(F289,E290)
    },
  },
  Lvr3RegTcam2_mem => { #Structure Type: Mem;
    Name => "Lvr3RegTcam2_mem",
    RegMem => "Mem",
    Address => "4100000", # Excel Formula: =calc_mem_address(C287,A287,G291,L291)
    Description => "Register TCAM based associated data",
    Width => "16", # Excel Formula: =calc_mem_width(E292:E292,M291,F292,-1)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr3RegTcam2_mem_data => { #Structure Type: MemField;
      Name => "Lvr3RegTcam2_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F291,E292,TRUE)
    },
  },
  TrapsKeyConstructionMacro => { #Structure Type: Mem;
    Name => "TrapsKeyConstructionMacro",
    RegMem => "Mem",
    Address => "4200000", # Excel Formula: =calc_mem_address(C291,A291,G293,L293)
    Width => "226", # Excel Formula: =calc_mem_width(E294:E295,M293,F295,256)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "225",
    TrapsKeyInstructions => { #Structure Type: MemField;
      Name => "TrapsKeyInstructions",
      RegMem => "MemField",
      Description => "Instructions to build the Traps TCAM key ",
      Width => "224", # Excel Formula: =calc_field_width_define("NPE_LEVEL_7_1_FS_OFFSETS_INSTRUCTIONS_WIDTH")
      Position => "223:0", # Excel Formula: =calc_position(F293,E294,TRUE)
    },
    TrapsTcamLookupEn => { #Structure Type: MemField;
      Name => "TrapsTcamLookupEn",
      RegMem => "MemField",
      Description => "when set, access to Traps-tcam. ",
      Width => "1",
      Position => "224", # Excel Formula: =calc_position(F294,E295)
    },
  },
  TrapsTcam => { #Structure Type: Mem;
    Name => "TrapsTcam",
    RegMem => "Mem",
    Address => "4300000", # Excel Formula: =calc_mem_address(C293,A293,G296,L296)
    Description => "Traps TCAM. Used for checking if Snoop or redirect are needed.",
    Width => "97", # Excel Formula: =calc_mem_width(E297:E298,"None",F298,-1)
    Type => "Config",
    UsedBy => "traps",
    MemEntries => "128",
    MemWrapper => "TCAM",
    MemProtect => "Parity",
    AdditionalInfo => "NumOfKeys=1,NumAccessSamples=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "97",
    TrapsTcam_key => { #Structure Type: MemField;
      Name => "TrapsTcam_key",
      RegMem => "MemField",
      Width => "96", # Excel Formula: =calc_field_width_define("NPE_LEVEL_7_1_FS_TOTAL_OUTPUT_WIDTH")+6
      Position => "95:0", # Excel Formula: =calc_position(F296,E297,TRUE)
    },
    TrapsTcam_delete => { #Structure Type: MemField;
      Name => "TrapsTcam_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "96", # Excel Formula: =calc_position(F297,E298)
      Comments => "output index logic can be disabled ",
    },
  },
  TrapsTcam_mem => { #Structure Type: Mem;
    Name => "TrapsTcam_mem",
    RegMem => "Mem",
    Address => "4400000", # Excel Formula: =calc_mem_address(C296,A296,G299,L299)
    Description => "Associated data of the Trap TCAM",
    Width => "8", # Excel Formula: =calc_mem_width(E300:E300,M299,F300,-1)
    Type => "Config",
    UsedBy => "traps",
    MemEntries => "128",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "8",
    SnoopOrRedirectCode => { #Structure Type: MemField;
      Name => "SnoopOrRedirectCode",
      RegMem => "MemField",
      Width => "8", # Excel Formula: =calc_field_width_define("NPE_TRAPS_SNOOP_CODE_WIDTH")
      Position => "7:0", # Excel Formula: =calc_position(F299,E300,TRUE)
    },
  },
  Lvr4FsInstructions => { #Structure Type: Mem;
    Name => "Lvr4FsInstructions",
    RegMem => "Mem",
    Address => "4500000", # Excel Formula: =calc_mem_address(C299,A299,G301,L301)
    Description => "Per NPE-Macro-ID, control the field extraction for LVR 4. ",
    Width => "188", # Excel Formula: =calc_mem_width(E302:E303,M301,F303,128)
    Type => "Config",
    UsedBy => "Lvr4",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "188",
    Lvr4FsInst => { #Structure Type: MemField;
      Name => "Lvr4FsInst",
      RegMem => "MemField",
      Description => "Set of instructions per NPE-macro-ID. Each instruction control a dedicated Field-extractor",
      Width => "186", # Excel Formula: =calc_field_width_define("NPE_LEVEL_7_0_FS_INSTRUCTIONS_WIDTH")
      Position => "185:0", # Excel Formula: =calc_position(F301,E302,TRUE)
    },
    Lvr4ConstantSelect => { #Structure Type: MemField;
      Name => "Lvr4ConstantSelect",
      RegMem => "MemField",
      Description => "Select which of the 4 constants is used in the field-extraction. ",
      Width => "2",
      Position => "187:186", # Excel Formula: =calc_position(F302,E303)
    },
  },
  Lvr4ConstantsCfg => { #Structure Type: Mem;
    Name => "Lvr4ConstantsCfg",
    RegMem => "Mem",
    Address => "4600000", # Excel Formula: =calc_mem_address(C301,A301,G304,L304)
    Width => "48", # Excel Formula: =calc_mem_width(E305:E305,M304,F305,-1)
    Type => "Config",
    UsedBy => "Lvr4",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "48",
    Lvr4Constants => { #Structure Type: MemField;
      Name => "Lvr4Constants",
      RegMem => "MemField",
      Description => "48 bits constant, selected according to LVR4ConstantSelect. The constant can be used in the field extraction process.",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F304,E305,TRUE)
    },
  },
  Lvr4MacroCfg => { #Structure Type: Mem;
    Name => "Lvr4MacroCfg",
    RegMem => "Mem",
    Address => "4700000", # Excel Formula: =calc_mem_address(C304,A304,G306,L306)
    Width => "180", # Excel Formula: =calc_mem_width(E307:E307,M306,F307,128)
    Type => "Config",
    UsedBy => "Lvr4",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "178",
    Lvr4MacroConfig => { #Structure Type: MemField;
      Name => "Lvr4MacroConfig",
      RegMem => "MemField",
      Description => "Channels to remove (4)
register TCAM configuration (26)X number of register based TCAM in the LVR
ALU control fields (18) X number-of-full-ALU + (14) X number-of-reduced ALU 
Tables control (75)
TCAM profile (3)
",
      Width => "178", # Excel Formula: =calc_field_width_define("NPE_LEVEL_7_0_MACRO_CTRL_WIDTH")
      Position => "177:0", # Excel Formula: =calc_position(F306,E307,TRUE)
    },
  },
  Lvr4RegTcam0 => { #Structure Type: Mem;
    Name => "Lvr4RegTcam0",
    RegMem => "Mem",
    Address => "4800000", # Excel Formula: =calc_mem_address(C306,A306,G308,L308)
    Description => "Register TCAM based. Used in the LVR process",
    Width => "33", # Excel Formula: =calc_mem_width(E309:E311,"None",F311,-1)
    Type => "Config",
    UsedBy => "Lvr4",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "33",
    Lvr4RegTcam0_mask => { #Structure Type: MemField;
      Name => "Lvr4RegTcam0_mask",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F308,E309,TRUE)
    },
    Lvr4RegTcam0_key => { #Structure Type: MemField;
      Name => "Lvr4RegTcam0_key",
      RegMem => "MemField",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F309,E310)
    },
    Lvr4RegTcam0_delete => { #Structure Type: MemField;
      Name => "Lvr4RegTcam0_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F310,E311)
    },
  },
  Lvr4RegTcam0_mem => { #Structure Type: Mem;
    Name => "Lvr4RegTcam0_mem",
    RegMem => "Mem",
    Address => "4900000", # Excel Formula: =calc_mem_address(C308,A308,G312,L312)
    Description => "Register TCAM based associated data",
    Width => "16", # Excel Formula: =calc_mem_width(E313:E313,M312,F313,-1)
    Type => "Config",
    UsedBy => "Lvr4",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr4RegTcam0_mem_data => { #Structure Type: MemField;
      Name => "Lvr4RegTcam0_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F312,E313,TRUE)
    },
  },
  Lvr4RegTcam1 => { #Structure Type: Mem;
    Name => "Lvr4RegTcam1",
    RegMem => "Mem",
    Address => "4A00000", # Excel Formula: =calc_mem_address(C312,A312,G314,L314)
    Description => "Register TCAM based. Used in the LVR process",
    Width => "33", # Excel Formula: =calc_mem_width(E315:E317,"None",F317,-1)
    Type => "Config",
    UsedBy => "Lvr4",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=32,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "33",
    Lvr4RegTcam1_mask => { #Structure Type: MemField;
      Name => "Lvr4RegTcam1_mask",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F314,E315,TRUE)
    },
    Lvr4RegTcam1_key => { #Structure Type: MemField;
      Name => "Lvr4RegTcam1_key",
      RegMem => "MemField",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F315,E316)
    },
    Lvr4RegTcam1_delete => { #Structure Type: MemField;
      Name => "Lvr4RegTcam1_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F316,E317)
    },
  },
  Lvr4RegTcam1_mem => { #Structure Type: Mem;
    Name => "Lvr4RegTcam1_mem",
    RegMem => "Mem",
    Address => "4B00000", # Excel Formula: =calc_mem_address(C314,A314,G318,L318)
    Description => "Register TCAM based associated data",
    Width => "32", # Excel Formula: =calc_mem_width(E319:E319,M318,F319,-1)
    Type => "Config",
    UsedBy => "Lvr4",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "32",
    Lvr4RegTcam1_mem_data => { #Structure Type: MemField;
      Name => "Lvr4RegTcam1_mem_data",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F318,E319,TRUE)
    },
  },
  Lvr5FsInstructions => { #Structure Type: Mem;
    Name => "Lvr5FsInstructions",
    RegMem => "Mem",
    Address => "4C00000", # Excel Formula: =calc_mem_address(C318,A318,G320,L320)
    Description => "Per NPE-Macro-ID, control the field extraction for LVR 5. ",
    Width => "130", # Excel Formula: =calc_mem_width(E321:E322,M320,F322,128)
    Type => "Config",
    UsedBy => "Lvr5",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "130",
    Lvr5FsInst => { #Structure Type: MemField;
      Name => "Lvr5FsInst",
      RegMem => "MemField",
      Description => "Set of instructions per NPE-macro-ID. Each instruction control a dedicated Field-extractor",
      Width => "128", # Excel Formula: =calc_field_width_define("NPE_LEVEL_8_0_FS_INSTRUCTIONS_WIDTH")
      Position => "127:0", # Excel Formula: =calc_position(F320,E321,TRUE)
    },
    Lvr5ConstantSelect => { #Structure Type: MemField;
      Name => "Lvr5ConstantSelect",
      RegMem => "MemField",
      Description => "Select which of the 4 constants is used in the field-extraction. ",
      Width => "2",
      Position => "129:128", # Excel Formula: =calc_position(F321,E322)
    },
  },
  Lvr5ConstantsCfg => { #Structure Type: Mem;
    Name => "Lvr5ConstantsCfg",
    RegMem => "Mem",
    Address => "4D00000", # Excel Formula: =calc_mem_address(C320,A320,G323,L323)
    Width => "48", # Excel Formula: =calc_mem_width(E324:E324,M323,F324,-1)
    Type => "Config",
    UsedBy => "Lvr5",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "48",
    Lvr5Constants => { #Structure Type: MemField;
      Name => "Lvr5Constants",
      RegMem => "MemField",
      Description => "48 bits constant, selected according to LVR5ConstantSelect. The constant can be used in the field extraction process.",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F323,E324,TRUE)
    },
  },
  Lvr5MacroCfg => { #Structure Type: Mem;
    Name => "Lvr5MacroCfg",
    RegMem => "Mem",
    Address => "4E00000", # Excel Formula: =calc_mem_address(C323,A323,G325,L325)
    Width => "93", # Excel Formula: =calc_mem_width(E326:E326,M325,F326,128)
    Type => "Config",
    UsedBy => "Lvr5",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "93",
    Lvr5MacroConfig => { #Structure Type: MemField;
      Name => "Lvr5MacroConfig",
      RegMem => "MemField",
      Description => "Channels to remove (4)
register TCAM configuration (26)X number of register based TCAM in the LVR
ALU control fields (18) X number-of-full-ALU + (14) X number-of-reduced ALU 
TCAM profile (3)
",
      Width => "93", # Excel Formula: =calc_field_width_define("NPE_LEVEL_8_0_MACRO_CTRL_WIDTH")
      Position => "92:0", # Excel Formula: =calc_position(F325,E326,TRUE)
    },
  },
  SharedTable0 => { #Structure Type: Mem;
    Name => "SharedTable0",
    RegMem => "Mem",
    Address => "4F00000", # Excel Formula: =calc_mem_address(C325,A325,G327,L327)
    Description => "One of eight shared tables located in the NPE. A table can be accessed from a single LVR according to TableSrc and LvrPldSrc configurations",
    Width => "33", # Excel Formula: =calc_mem_width(E328:E328,M327,F328,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "32",
    SharedTable0Data => { #Structure Type: MemField;
      Name => "SharedTable0Data",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F327,E328,TRUE)
    },
  },
  SharedTable1 => { #Structure Type: Mem;
    Name => "SharedTable1",
    RegMem => "Mem",
    Address => "5000000", # Excel Formula: =calc_mem_address(C327,A327,G329,L329)
    Description => "One of seven shared tables located in the NPE. A table can be accessed from a single LVR according to TableSrc and LvrPldSrc configurations",
    Width => "33", # Excel Formula: =calc_mem_width(E330:E330,M329,F330,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "32",
    SharedTable1Data => { #Structure Type: MemField;
      Name => "SharedTable1Data",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F329,E330,TRUE)
    },
  },
  SharedTable2 => { #Structure Type: Mem;
    Name => "SharedTable2",
    RegMem => "Mem",
    Address => "5100000", # Excel Formula: =calc_mem_address(C329,A329,G331,L331)
    Description => "One of eight shared tables located in the NPE. A table can be accessed from a single LVR according to TableSrc and LvrPldSrc configurations",
    Width => "33", # Excel Formula: =calc_mem_width(E332:E332,M331,F332,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "32",
    SharedTable2Data => { #Structure Type: MemField;
      Name => "SharedTable2Data",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F331,E332,TRUE)
    },
  },
  SharedTable3 => { #Structure Type: Mem;
    Name => "SharedTable3",
    RegMem => "Mem",
    Address => "5200000", # Excel Formula: =calc_mem_address(C331,A331,G333,L333)
    Description => "One of eight shared tables located in the NPE. A table can be accessed from a single LVR according to TableSrc and LvrPldSrc configurations",
    Width => "33", # Excel Formula: =calc_mem_width(E334:E334,M333,F334,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "32",
    SharedTable3Data => { #Structure Type: MemField;
      Name => "SharedTable3Data",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F333,E334,TRUE)
    },
  },
  SharedTable4 => { #Structure Type: Mem;
    Name => "SharedTable4",
    RegMem => "Mem",
    Address => "5300000", # Excel Formula: =calc_mem_address(C333,A333,G335,L335)
    Description => "One of eight shared tables located in the NPE. A table can be accessed from a single LVR according to TableSrc and LvrPldSrc configurations",
    Width => "33", # Excel Formula: =calc_mem_width(E336:E336,M335,F336,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "2048",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "32",
    SharedTable7Data => { #Structure Type: MemField;
      Name => "SharedTable7Data",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F335,E336,TRUE)
    },
  },
  SharedTable5 => { #Structure Type: Mem;
    Name => "SharedTable5",
    RegMem => "Mem",
    Address => "5400000", # Excel Formula: =calc_mem_address(C335,A335,G337,L337)
    Description => "One of eight shared tables located in the NPE. A table can be accessed from a single LVR according to TableSrc and LvrPldSrc configurations",
    Width => "97", # Excel Formula: =calc_mem_width(E338:E338,M337,F338,128)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "96",
    SharedTable8Data => { #Structure Type: MemField;
      Name => "SharedTable8Data",
      RegMem => "MemField",
      Width => "96",
      Position => "95:0", # Excel Formula: =calc_position(F337,E338,TRUE)
    },
  },
  SharedTable6 => { #Structure Type: Mem;
    Name => "SharedTable6",
    RegMem => "Mem",
    Address => "5500000", # Excel Formula: =calc_mem_address(C337,A337,G339,L339)
    Description => "One of eight shared tables located in the NPE. A table can be accessed from a single LVR according to TableSrc and LvrPldSrc configurations",
    Width => "33", # Excel Formula: =calc_mem_width(E340:E340,M339,F340,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "2048", # Excel Formula: =2*1024
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "32",
    SharedTable9Data => { #Structure Type: MemField;
      Name => "SharedTable9Data",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F339,E340,TRUE)
    },
  },
  SharedTable7 => { #Structure Type: Mem;
    Name => "SharedTable7",
    RegMem => "Mem",
    Address => "5600000", # Excel Formula: =calc_mem_address(C339,A339,G341,L341)
    Description => "One of eight shared tables located in the NPE. A table can be accessed from a single LVR according to TableSrc and LvrPldSrc configurations",
    Width => "33", # Excel Formula: =calc_mem_width(E342:E342,M341,F342,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "32",
    SharedTable7Data => { #Structure Type: MemField;
      Name => "SharedTable7Data",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F341,E342,TRUE)
    },
  },
  ThreadMemory => { #Structure Type: Mem;
    Name => "ThreadMemory",
    RegMem => "Mem",
    Address => "5700000", # Excel Formula: =calc_mem_address(C341,A341,G343,L343)
    Description => "Thread memory holds the NPPD while the packet is processed by the NPE",
    Width => "1860", # Excel Formula: =calc_mem_width(E344:E344,M343,F344,512)
    Type => "Dynamic",
    UsedBy => "NPE",
    MemEntries => "192", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteBeforeProt=2,SplitProtWidth=512,PortErrPropagate=Enabled,WriteActivityFactor=60,ReadActivityFactor=60,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "1856",
    ThreadMemoryData => { #Structure Type: MemField;
      Name => "ThreadMemoryData",
      RegMem => "MemField",
      Width => "1856", # Excel Formula: =calc_field_width_define("NPE_PD_WIDTH")
      Position => "1855:0", # Excel Formula: =calc_position(F343,E344,TRUE)
    },
  },
};
