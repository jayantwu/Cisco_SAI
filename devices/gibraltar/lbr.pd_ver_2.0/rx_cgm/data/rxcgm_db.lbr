$block{rx_cgm} = {
  Defines_db => "Z:\\leaba_reg_db_example\\defines.v",
  ProjectName => "Gibraltar",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "7",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    RxCGMInterruptReg10Summary => { #Structure Type: RegField;
      Name => "RxCGMInterruptReg10Summary",
      RegMem => "RegField",
      Description => "When this bit is set, RxCGMInterruptReg10 has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
    RxCGMInterruptReg11Summary => { #Structure Type: RegField;
      Name => "RxCGMInterruptReg11Summary",
      RegMem => "RegField",
      Description => "When this bit is set, RxCGMInterruptReg11 has asserted interrupt",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
    },
    RxCGMInterruptReg12Summary => { #Structure Type: RegField;
      Name => "RxCGMInterruptReg12Summary",
      RegMem => "RegField",
      Description => "When this bit is set, RxCGMInterruptReg12 has asserted interrupt",
      Width => "1",
      Position => "3",
      Type => "Interrupt",
    },
    RxCGMInterruptReg13Summary => { #Structure Type: RegField;
      Name => "RxCGMInterruptReg13Summary",
      RegMem => "RegField",
      Description => "When this bit is set, RxCGMInterruptReg13 has asserted interrupt",
      Width => "1",
      Position => "4",
      Type => "Interrupt",
    },
    RxCGMInterruptReg14Summary => { #Structure Type: RegField;
      Name => "RxCGMInterruptReg14Summary",
      RegMem => "RegField",
      Description => "When this bit is set, RxCGMInterruptReg14 has asserted interrupt",
      Width => "1",
      Position => "5",
      Type => "Interrupt",
    },
    RxCGMInterruptReg15Summary => { #Structure Type: RegField;
      Name => "RxCGMInterruptReg15Summary",
      RegMem => "RegField",
      Description => "When this bit is set, RxCGMInterruptReg15 has asserted interrupt",
      Width => "1",
      Position => "6",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt test register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "18",
    Type => "Config",
    SqCountersTable0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SqCountersTable0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SqCountersTable1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SqCountersTable1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SqCountersTable2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SqCountersTable2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SqCountersTable3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SqCountersTable3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SqCountersTable4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SqCountersTable4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SqCountersTable5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SqCountersTable5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SourceCgmPolicyLut0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SourceCgmPolicyLut1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SourceCgmPolicyLut2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SourceCgmPolicyLut3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SourceCgmPolicyLut4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SourceCgmPolicyLut5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DropCountersSspTc0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DropCountersSspTc0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DropCountersSspTc1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DropCountersSspTc1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DropCountersSspTc2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DropCountersSspTc2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DropCountersSspTc3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DropCountersSspTc3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DropCountersSspTc4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DropCountersSspTc4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DropCountersSspTc5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DropCountersSspTc5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "18",
    Type => "Config",
    SqCountersTable0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SqCountersTable0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SqCountersTable1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SqCountersTable1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SqCountersTable2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SqCountersTable2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SqCountersTable3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SqCountersTable3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SqCountersTable4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SqCountersTable4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SqCountersTable5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SqCountersTable5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SourceCgmPolicyLut0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SourceCgmPolicyLut1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SourceCgmPolicyLut2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SourceCgmPolicyLut3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SourceCgmPolicyLut4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SourceCgmPolicyLut5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DropCountersSspTc0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DropCountersSspTc0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DropCountersSspTc1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DropCountersSspTc1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DropCountersSspTc2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DropCountersSspTc2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DropCountersSspTc3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DropCountersSspTc3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DropCountersSspTc4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DropCountersSspTc4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DropCountersSspTc5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DropCountersSspTc5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInitiateRegister",
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "18",
    Type => "Config",
    SqCountersTable0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SqCountersTable0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SqCountersTable1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SqCountersTable1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SqCountersTable2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SqCountersTable2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SqCountersTable3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SqCountersTable3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SqCountersTable4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SqCountersTable4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SqCountersTable5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SqCountersTable5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SourceCgmPolicyLut0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SourceCgmPolicyLut1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SourceCgmPolicyLut2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SourceCgmPolicyLut3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SourceCgmPolicyLut4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SourceCgmPolicyLut5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DropCountersSspTc0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DropCountersSspTc0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DropCountersSspTc1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DropCountersSspTc1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DropCountersSspTc2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DropCountersSspTc2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DropCountersSspTc3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DropCountersSspTc3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DropCountersSspTc4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DropCountersSspTc4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DropCountersSspTc5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DropCountersSspTc5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInitiateRegister",
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "18",
    Type => "Config",
    SqCountersTable0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SqCountersTable0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SqCountersTable1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SqCountersTable1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SqCountersTable2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SqCountersTable2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SqCountersTable3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SqCountersTable3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SqCountersTable4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SqCountersTable4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SqCountersTable5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SqCountersTable5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SourceCgmPolicyLut0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SourceCgmPolicyLut1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SourceCgmPolicyLut2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SourceCgmPolicyLut3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SourceCgmPolicyLut4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SourceCgmPolicyLut5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DropCountersSspTc0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DropCountersSspTc0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DropCountersSspTc1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DropCountersSspTc1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DropCountersSspTc2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DropCountersSspTc2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DropCountersSspTc3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DropCountersSspTc3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DropCountersSspTc4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DropCountersSspTc4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DropCountersSspTc5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DropCountersSspTc5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "18",
    Type => "ReadOnly",
    SqCountersTable0ErrInt => { #Structure Type: RegField;
      Name => "SqCountersTable0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    SqCountersTable1ErrInt => { #Structure Type: RegField;
      Name => "SqCountersTable1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    SqCountersTable2ErrInt => { #Structure Type: RegField;
      Name => "SqCountersTable2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    SqCountersTable3ErrInt => { #Structure Type: RegField;
      Name => "SqCountersTable3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    SqCountersTable4ErrInt => { #Structure Type: RegField;
      Name => "SqCountersTable4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    SqCountersTable5ErrInt => { #Structure Type: RegField;
      Name => "SqCountersTable5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    SourceCgmPolicyLut0ErrInt => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    SourceCgmPolicyLut1ErrInt => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    SourceCgmPolicyLut2ErrInt => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    SourceCgmPolicyLut3ErrInt => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    SourceCgmPolicyLut4ErrInt => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    SourceCgmPolicyLut5ErrInt => { #Structure Type: RegField;
      Name => "SourceCgmPolicyLut5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
    DropCountersSspTc0ErrInt => { #Structure Type: RegField;
      Name => "DropCountersSspTc0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "12",
      Type => "Status",
      UsedBy => "SER",
    },
    DropCountersSspTc1ErrInt => { #Structure Type: RegField;
      Name => "DropCountersSspTc1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "13",
      Type => "Status",
      UsedBy => "SER",
    },
    DropCountersSspTc2ErrInt => { #Structure Type: RegField;
      Name => "DropCountersSspTc2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "14",
      Type => "Status",
      UsedBy => "SER",
    },
    DropCountersSspTc3ErrInt => { #Structure Type: RegField;
      Name => "DropCountersSspTc3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "15",
      Type => "Status",
      UsedBy => "SER",
    },
    DropCountersSspTc4ErrInt => { #Structure Type: RegField;
      Name => "DropCountersSspTc4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "16",
      Type => "Status",
      UsedBy => "SER",
    },
    DropCountersSspTc5ErrInt => { #Structure Type: RegField;
      Name => "DropCountersSspTc5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "17",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "11",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "9",
      Position => "8:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "10:9",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "6",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "5",
      Position => "4:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrDebug",
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_1bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrDebug",
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_2bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "73", # Excel Formula: =calc_reg_width(E25:E53,F53)
    Type => "Config",
    SACR1P_RME => { #Structure Type: RegField;
      Name => "SACR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACR1P_RM => { #Structure Type: RegField;
      Name => "SACR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "4:1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RME => { #Structure Type: RegField;
      Name => "SACU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RM => { #Structure Type: RegField;
      Name => "SACU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "9:6", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RME => { #Structure Type: RegField;
      Name => "SADC1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RM => { #Structure Type: RegField;
      Name => "SADC1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEA => { #Structure Type: RegField;
      Name => "SADR2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMA => { #Structure Type: RegField;
      Name => "SADR2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "19:16", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEB => { #Structure Type: RegField;
      Name => "SADR2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMB => { #Structure Type: RegField;
      Name => "SADR2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "24:21", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEA => { #Structure Type: RegField;
      Name => "SADS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "25", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMA => { #Structure Type: RegField;
      Name => "SADS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "29:26", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEB => { #Structure Type: RegField;
      Name => "SADS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMB => { #Structure Type: RegField;
      Name => "SADS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "34:31", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RME => { #Structure Type: RegField;
      Name => "SASR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "35", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RM => { #Structure Type: RegField;
      Name => "SASR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "39:36", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RME => { #Structure Type: RegField;
      Name => "SASS1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RM => { #Structure Type: RegField;
      Name => "SASS1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "44:41", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEA => { #Structure Type: RegField;
      Name => "SASS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "45", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMA => { #Structure Type: RegField;
      Name => "SASS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "49:46", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEB => { #Structure Type: RegField;
      Name => "SASS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "50", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMB => { #Structure Type: RegField;
      Name => "SASS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "54:51", # Excel Formula: =calc_position(F45,E46)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RME => { #Structure Type: RegField;
      Name => "SASU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F46,E47)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RM => { #Structure Type: RegField;
      Name => "SASU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "59:56", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RME => { #Structure Type: RegField;
      Name => "SADU1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RM => { #Structure Type: RegField;
      Name => "SADU1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "64:61", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RA => { #Structure Type: RegField;
      Name => "SADS2P_RA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Assist for Dual port",
      Width => "2",
      Position => "66:65", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_WA => { #Structure Type: RegField;
      Name => "SADU1P_WA",
      RegMem => "RegField",
      Description => "Write-Assist configuration for the SP SADU compiler",
      Width => "3",
      Position => "69:67", # Excel Formula: =calc_position(F51,E52)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "d5",
    },
    SADU1P_WPULSE => { #Structure Type: RegField;
      Name => "SADU1P_WPULSE",
      RegMem => "RegField",
      Description => "Write-Assist-Pulse configuration for the SP SADU compiler",
      Width => "3",
      Position => "72:70", # Excel Formula: =calc_position(F52,E53)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E55:E55,F55)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F54,E55,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C54,A54,G54)
    Description => "Spare register",
    Width => "128", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "Spare register ",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C56,A56,G56)
    Description => "PMRO controller configuration",
    Width => "32", # Excel Formula: =calc_reg_width(E59:E63,F63)
    Type => "Config",
    PmroRstn => { #Structure Type: RegField;
      Name => "PmroRstn",
      RegMem => "RegField",
      Description => "PMRO reset, active low",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F58,E59,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroConfigEn => { #Structure Type: RegField;
      Name => "PmroConfigEn",
      RegMem => "RegField",
      Description => "Enable pmro configuration, when equals to 0 configurations are locked",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroStart => { #Structure Type: RegField;
      Name => "PmroStart",
      RegMem => "RegField",
      Description => "Start the pmro operation",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F60,E61)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroRingEn => { #Structure Type: RegField;
      Name => "PmroRingEn",
      RegMem => "RegField",
      Description => "Determines which PMRO ring to activate, should be configured as one hot",
      Width => "7",
      Position => "9:3", # Excel Formula: =calc_position(F61,E62)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroCntPeriod => { #Structure Type: RegField;
      Name => "PmroCntPeriod",
      RegMem => "RegField",
      Description => "Number of core clock cycles on which PMRO is measured",
      Width => "22",
      Position => "31:10", # Excel Formula: =calc_position(F62,E63)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "h3FFFFF",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C58,A58,G58)
    Description => "PMRO status configuration",
    Width => "23", # Excel Formula: =calc_reg_width(E65:E66,F66)
    Type => "ReadOnly",
    PmroCountOut => { #Structure Type: RegField;
      Name => "PmroCountOut",
      RegMem => "RegField",
      Description => "The ring oscilator counter value.",
      Width => "22",
      Position => "21:0", # Excel Formula: =calc_position(F64,E65,TRUE)
      Type => "Status",
      UsedBy => "pmro",
    },
    PmroDone => { #Structure Type: RegField;
      Name => "PmroDone",
      RegMem => "RegField",
      Description => "Pmro operation done, PmroCountOut is valid.",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F65,E66)
      Type => "Status",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C64,A64,G64)
    Description => "Mirror Bus configurations",
    Width => "11", # Excel Formula: =calc_reg_width(E68:E69,F69)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "Enable Mirror Bus",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "Mirror Bus selector",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C67,A67,G67)
    Description => "Mirror Bus status result",
    Width => "32", # Excel Formula: =calc_reg_width(E71:E71,F71)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "Mirror Bus status result",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F70,E71,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C70,A70,G70)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E73:E73,F73)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F72,E73,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  StatusRegister => { #Structure Type: Reg;
    Name => "StatusRegister",
    RegMem => "Reg",
    Address => "100",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "ReadOnly",
    RxcgmInitDone => { #Structure Type: RegField;
      Name => "RxcgmInitDone",
      RegMem => "RegField",
      Description => "Indication that the rx cgm completed the initialization process.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  GlobalConfiguration0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 20;
    Name => "GlobalConfiguration[6]",
    RegMem => "Reg",
    Address => "101", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Width => "61", # Excel Formula: =calc_reg_width(E10:E27,F27)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    Slice0CbtThreshold => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CbtThreshold",
      RegMem => "RegField",
      Description => "Defines the number of credits in the TS mon CBT required to pop an entry from the RXPDR CBR. 
This is done to avoid supporting backpressure in the pipe.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hc",
    },
    Slice0DropVoq => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DropVoq",
      RegMem => "RegField",
      Description => "Holds the VOQ number that will be mapped to the drop VOQ.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "16",
      Position => "21:6", # Excel Formula: =calc_position(F10,E11)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hFFFF",
    },
    Slice0IncMsgFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]IncMsgFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Defines the almost full threshold of the inc message FIFO.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "27:22", # Excel Formula: =calc_position(F11,E12)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h6",
    },
    Slice0UpdatePipeArbMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]UpdatePipeArbMode",
      RegMem => "RegField",
      Description => "0 - RR between inc and dec messages
1 - SP to dec messages
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "1",
      Position => "28", # Excel Formula: =calc_position(F12,E13)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice0HrManagementMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]HrManagementMode",
      RegMem => "RegField",
      Description => "0 - Timer Mode - The user is limited by the amount of data it can consume regardless of the time passed from triggering the Xoff message. 
1 - ThrMode - The user is limited by the amount of data is can consume, where the amount of data varies with the time passed from triggering flow control.",
      Width => "1",
      Position => "29", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice0DisableRxCGM => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DisableRxCGM",
      RegMem => "RegField",
      Description => "Disable the Rx CGM functionality",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice0DropPktsCountEn => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DropPktsCountEn",
      RegMem => "RegField",
      Description => "Count drop packets configuration.
0 - The rxcgm will not count dropped packets.
1 - The rxcgm will count dropped packets.",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F15,E16)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
    },
    Slice0EnableFastDropAfterXon => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]EnableFastDropAfterXon",
      RegMem => "RegField",
      Description => "Whether to start dropping packets faster when changing to Xoff shortly after Xon
0 - Always wait Tmax before dropping when changing to Xoff
1 - Before dropping packets after Xoff, wait only (Device-Time - Ton) if it is a shorter time than Tmax",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F16,E17)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice0ScrubberWindow => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberWindow",
      RegMem => "RegField",
      Description => "The scrubber is a mechanism that scans the status of the SQs and checked if the SQ flow conrol status should be changed.
This configuration defines in cc the scrubber time in which the scrubber should complete a full scan of the SQs flow control status and refresh it if needed.",
      Width => "14",
      Position => "46:33", # Excel Formula: =calc_position(F17,E18)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1000",
    },
    Slice0ScrubberEnable => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberEnable",
      RegMem => "RegField",
      Description => "Enables the operation of the scrubber.
Need to enable the scrubber operation after the tables are fully configured.
0 - Scrubber Disabled
1 - Scrubber Enabled",
      Width => "1",
      Position => "47", # Excel Formula: =calc_position(F18,E19)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice0ScrubberForceGapThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberForceGapThr",
      RegMem => "RegField",
      Description => "The scrubber scan is in low priority.
If the scrubber failed  to complete a full scan in ScrubberWindow amount of cc - this configuration defines in cc the scrubber gap between 2 scrubber transactions that are inserted to the pipe in SP to avoid scrubber starvation.",
      Width => "6",
      Position => "53:48", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d20",
    },
    Slice0ClearDropCounterCtcCtcg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterCtcCtcg",
      RegMem => "RegField",
      Width => "1",
      Position => "54", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice0ClearDropCounterSqSqg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterSqSqg",
      RegMem => "RegField",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F21,E22)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice0ClearDropCounterHr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterHr",
      RegMem => "RegField",
      Width => "1",
      Position => "56", # Excel Formula: =calc_position(F22,E23)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice0CountDramBuffers => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CountDramBuffers",
      RegMem => "RegField",
      Description => "Whether RX-CGM counts SMS buffers or DRAM buffers
0 - Count SMS buffers
1 - Count DRAM buffers",
      Width => "1",
      Position => "57", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice0CountPacketsWithUcdvToDram => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CountPacketsWithUcdvToDram",
      RegMem => "RegField",
      Description => "In DRAM counting mode, whether to count packets with UCDV != 0 (i.e. IBM, since MC packets are not counted anyway)
0 - Do not count packets with UCDV != 0
1 - Count packets with UCDV != 0",
      Width => "1",
      Position => "58", # Excel Formula: =calc_position(F24,E25)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice0CountTwoDramBuffersJumboPackets => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CountTwoDramBuffersJumboPackets",
      RegMem => "RegField",
      Description => "In DRAM counting mode, whether to possibly (statistically) count jumbo packets >8KB as two DRAM buffers, by overwriting Sub-Port value of Source-IF
0 - Always count packets as up to 1 DRAM buffers
1 - Possibly count jumbo packets as 2 DRAM buffers",
      Width => "1",
      Position => "59", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice0ProtectFromNegativeWraparound => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ProtectFromNegativeWraparound",
      RegMem => "RegField",
      Description => "Whether to protect from negative wraparound, i.e. in case decrement will result with negative counter - remain at value 0.
This should be enabled when in DRAM counting mode and ICS is configured to use leaking rate
0 - Disable wraparound protection
1 - Enable wraparound protection",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
  },
  GlobalConfiguration1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 20;
    Name => "GlobalConfiguration[6]",
    RegMem => "Reg",
    Address => "102",
    Width => "61", # Excel Formula: =calc_reg_width(E10:E27,F27)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    Slice1CbtThreshold => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CbtThreshold",
      RegMem => "RegField",
      Description => "Defines the number of credits in the TS mon CBT required to pop an entry from the RXPDR CBR. 
This is done to avoid supporting backpressure in the pipe.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hc",
    },
    Slice1DropVoq => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DropVoq",
      RegMem => "RegField",
      Description => "Holds the VOQ number that will be mapped to the drop VOQ.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "16",
      Position => "21:6", # Excel Formula: =calc_position(F10,E11)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hFFFF",
    },
    Slice1IncMsgFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]IncMsgFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Defines the almost full threshold of the inc message FIFO.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "27:22", # Excel Formula: =calc_position(F11,E12)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h6",
    },
    Slice1UpdatePipeArbMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]UpdatePipeArbMode",
      RegMem => "RegField",
      Description => "0 - RR between inc and dec messages
1 - SP to dec messages
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "1",
      Position => "28", # Excel Formula: =calc_position(F12,E13)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice1HrManagementMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]HrManagementMode",
      RegMem => "RegField",
      Description => "0 - Timer Mode - The user is limited by the amount of data it can consume regardless of the time passed from triggering the Xoff message. 
1 - ThrMode - The user is limited by the amount of data is can consume, where the amount of data varies with the time passed from triggering flow control.",
      Width => "1",
      Position => "29", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice1DisableRxCGM => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DisableRxCGM",
      RegMem => "RegField",
      Description => "Disable the Rx CGM functionality",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice1DropPktsCountEn => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DropPktsCountEn",
      RegMem => "RegField",
      Description => "Count drop packets configuration.
0 - The rxcgm will not count dropped packets.
1 - The rxcgm will count dropped packets.",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F15,E16)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
    },
    Slice1EnableFastDropAfterXon => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]EnableFastDropAfterXon",
      RegMem => "RegField",
      Description => "Whether to start dropping packets faster when changing to Xoff shortly after Xon
0 - Always wait Tmax before dropping when changing to Xoff
1 - Before dropping packets after Xoff, wait only (Device-Time - Ton) if it is a shorter time than Tmax",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F16,E17)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice1ScrubberWindow => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberWindow",
      RegMem => "RegField",
      Description => "The scrubber is a mechanism that scans the status of the SQs and checked if the SQ flow conrol status should be changed.
This configuration defines in cc the scrubber time in which the scrubber should complete a full scan of the SQs flow control status and refresh it if needed.",
      Width => "14",
      Position => "46:33", # Excel Formula: =calc_position(F17,E18)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1000",
    },
    Slice1ScrubberEnable => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberEnable",
      RegMem => "RegField",
      Description => "Enables the operation of the scrubber.
Need to enable the scrubber operation after the tables are fully configured.
0 - Scrubber Disabled
1 - Scrubber Enabled",
      Width => "1",
      Position => "47", # Excel Formula: =calc_position(F18,E19)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice1ScrubberForceGapThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberForceGapThr",
      RegMem => "RegField",
      Description => "The scrubber scan is in low priority.
If the scrubber failed  to complete a full scan in ScrubberWindow amount of cc - this configuration defines in cc the scrubber gap between 2 scrubber transactions that are inserted to the pipe in SP to avoid scrubber starvation.",
      Width => "6",
      Position => "53:48", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d20",
    },
    Slice1ClearDropCounterCtcCtcg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterCtcCtcg",
      RegMem => "RegField",
      Width => "1",
      Position => "54", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice1ClearDropCounterSqSqg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterSqSqg",
      RegMem => "RegField",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F21,E22)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice1ClearDropCounterHr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterHr",
      RegMem => "RegField",
      Width => "1",
      Position => "56", # Excel Formula: =calc_position(F22,E23)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice1CountDramBuffers => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CountDramBuffers",
      RegMem => "RegField",
      Description => "Whether RX-CGM counts SMS buffers or DRAM buffers
0 - Count SMS buffers
1 - Count DRAM buffers",
      Width => "1",
      Position => "57", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice1CountPacketsWithUcdvToDram => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CountPacketsWithUcdvToDram",
      RegMem => "RegField",
      Description => "In DRAM counting mode, whether to count packets with UCDV != 0 (i.e. IBM, since MC packets are not counted anyway)
0 - Do not count packets with UCDV != 0
1 - Count packets with UCDV != 0",
      Width => "1",
      Position => "58", # Excel Formula: =calc_position(F24,E25)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice1CountTwoDramBuffersJumboPackets => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CountTwoDramBuffersJumboPackets",
      RegMem => "RegField",
      Description => "In DRAM counting mode, whether to possibly (statistically) count jumbo packets >8KB as two DRAM buffers, by overwriting Sub-Port value of Source-IF
0 - Always count packets as up to 1 DRAM buffers
1 - Possibly count jumbo packets as 2 DRAM buffers",
      Width => "1",
      Position => "59", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice1ProtectFromNegativeWraparound => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ProtectFromNegativeWraparound",
      RegMem => "RegField",
      Description => "Whether to protect from negative wraparound, i.e. in case decrement will result with negative counter - remain at value 0.
This should be enabled when in DRAM counting mode and ICS is configured to use leaking rate
0 - Disable wraparound protection
1 - Enable wraparound protection",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
  },
  GlobalConfiguration2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 20;
    Name => "GlobalConfiguration[6]",
    RegMem => "Reg",
    Address => "103",
    Width => "61", # Excel Formula: =calc_reg_width(E10:E27,F27)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    Slice2CbtThreshold => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]CbtThreshold",
      RegMem => "RegField",
      Description => "Defines the number of credits in the TS mon CBT required to pop an entry from the RXPDR CBR. 
This is done to avoid supporting backpressure in the pipe.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hc",
    },
    Slice2DropVoq => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]DropVoq",
      RegMem => "RegField",
      Description => "Holds the VOQ number that will be mapped to the drop VOQ.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "16",
      Position => "21:6", # Excel Formula: =calc_position(F10,E11)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hFFFF",
    },
    Slice2IncMsgFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]IncMsgFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Defines the almost full threshold of the inc message FIFO.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "27:22", # Excel Formula: =calc_position(F11,E12)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h6",
    },
    Slice2UpdatePipeArbMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]UpdatePipeArbMode",
      RegMem => "RegField",
      Description => "0 - RR between inc and dec messages
1 - SP to dec messages
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "1",
      Position => "28", # Excel Formula: =calc_position(F12,E13)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice2HrManagementMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]HrManagementMode",
      RegMem => "RegField",
      Description => "0 - Timer Mode - The user is limited by the amount of data it can consume regardless of the time passed from triggering the Xoff message. 
1 - ThrMode - The user is limited by the amount of data is can consume, where the amount of data varies with the time passed from triggering flow control.",
      Width => "1",
      Position => "29", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice2DisableRxCGM => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]DisableRxCGM",
      RegMem => "RegField",
      Description => "Disable the Rx CGM functionality",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice2DropPktsCountEn => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]DropPktsCountEn",
      RegMem => "RegField",
      Description => "Count drop packets configuration.
0 - The rxcgm will not count dropped packets.
1 - The rxcgm will count dropped packets.",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F15,E16)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
    },
    Slice2EnableFastDropAfterXon => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]EnableFastDropAfterXon",
      RegMem => "RegField",
      Description => "Whether to start dropping packets faster when changing to Xoff shortly after Xon
0 - Always wait Tmax before dropping when changing to Xoff
1 - Before dropping packets after Xoff, wait only (Device-Time - Ton) if it is a shorter time than Tmax",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F16,E17)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice2ScrubberWindow => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberWindow",
      RegMem => "RegField",
      Description => "The scrubber is a mechanism that scans the status of the SQs and checked if the SQ flow conrol status should be changed.
This configuration defines in cc the scrubber time in which the scrubber should complete a full scan of the SQs flow control status and refresh it if needed.",
      Width => "14",
      Position => "46:33", # Excel Formula: =calc_position(F17,E18)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1000",
    },
    Slice2ScrubberEnable => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberEnable",
      RegMem => "RegField",
      Description => "Enables the operation of the scrubber.
Need to enable the scrubber operation after the tables are fully configured.
0 - Scrubber Disabled
1 - Scrubber Enabled",
      Width => "1",
      Position => "47", # Excel Formula: =calc_position(F18,E19)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice2ScrubberForceGapThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberForceGapThr",
      RegMem => "RegField",
      Description => "The scrubber scan is in low priority.
If the scrubber failed  to complete a full scan in ScrubberWindow amount of cc - this configuration defines in cc the scrubber gap between 2 scrubber transactions that are inserted to the pipe in SP to avoid scrubber starvation.",
      Width => "6",
      Position => "53:48", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d20",
    },
    Slice2ClearDropCounterCtcCtcg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterCtcCtcg",
      RegMem => "RegField",
      Width => "1",
      Position => "54", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice2ClearDropCounterSqSqg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterSqSqg",
      RegMem => "RegField",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F21,E22)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice2ClearDropCounterHr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterHr",
      RegMem => "RegField",
      Width => "1",
      Position => "56", # Excel Formula: =calc_position(F22,E23)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice2CountDramBuffers => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]CountDramBuffers",
      RegMem => "RegField",
      Description => "Whether RX-CGM counts SMS buffers or DRAM buffers
0 - Count SMS buffers
1 - Count DRAM buffers",
      Width => "1",
      Position => "57", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice2CountPacketsWithUcdvToDram => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]CountPacketsWithUcdvToDram",
      RegMem => "RegField",
      Description => "In DRAM counting mode, whether to count packets with UCDV != 0 (i.e. IBM, since MC packets are not counted anyway)
0 - Do not count packets with UCDV != 0
1 - Count packets with UCDV != 0",
      Width => "1",
      Position => "58", # Excel Formula: =calc_position(F24,E25)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice2CountTwoDramBuffersJumboPackets => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]CountTwoDramBuffersJumboPackets",
      RegMem => "RegField",
      Description => "In DRAM counting mode, whether to possibly (statistically) count jumbo packets >8KB as two DRAM buffers, by overwriting Sub-Port value of Source-IF
0 - Always count packets as up to 1 DRAM buffers
1 - Possibly count jumbo packets as 2 DRAM buffers",
      Width => "1",
      Position => "59", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice2ProtectFromNegativeWraparound => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]ProtectFromNegativeWraparound",
      RegMem => "RegField",
      Description => "Whether to protect from negative wraparound, i.e. in case decrement will result with negative counter - remain at value 0.
This should be enabled when in DRAM counting mode and ICS is configured to use leaking rate
0 - Disable wraparound protection
1 - Enable wraparound protection",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
  },
  GlobalConfiguration3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 20;
    Name => "GlobalConfiguration[6]",
    RegMem => "Reg",
    Address => "104",
    Width => "61", # Excel Formula: =calc_reg_width(E10:E27,F27)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    Slice3CbtThreshold => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]CbtThreshold",
      RegMem => "RegField",
      Description => "Defines the number of credits in the TS mon CBT required to pop an entry from the RXPDR CBR. 
This is done to avoid supporting backpressure in the pipe.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hc",
    },
    Slice3DropVoq => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]DropVoq",
      RegMem => "RegField",
      Description => "Holds the VOQ number that will be mapped to the drop VOQ.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "16",
      Position => "21:6", # Excel Formula: =calc_position(F10,E11)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hFFFF",
    },
    Slice3IncMsgFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]IncMsgFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Defines the almost full threshold of the inc message FIFO.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "27:22", # Excel Formula: =calc_position(F11,E12)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h6",
    },
    Slice3UpdatePipeArbMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]UpdatePipeArbMode",
      RegMem => "RegField",
      Description => "0 - RR between inc and dec messages
1 - SP to dec messages
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "1",
      Position => "28", # Excel Formula: =calc_position(F12,E13)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice3HrManagementMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]HrManagementMode",
      RegMem => "RegField",
      Description => "0 - Timer Mode - The user is limited by the amount of data it can consume regardless of the time passed from triggering the Xoff message. 
1 - ThrMode - The user is limited by the amount of data is can consume, where the amount of data varies with the time passed from triggering flow control.",
      Width => "1",
      Position => "29", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice3DisableRxCGM => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]DisableRxCGM",
      RegMem => "RegField",
      Description => "Disable the Rx CGM functionality",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice3DropPktsCountEn => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]DropPktsCountEn",
      RegMem => "RegField",
      Description => "Count drop packets configuration.
0 - The rxcgm will not count dropped packets.
1 - The rxcgm will count dropped packets.",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F15,E16)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
    },
    Slice3EnableFastDropAfterXon => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]EnableFastDropAfterXon",
      RegMem => "RegField",
      Description => "Whether to start dropping packets faster when changing to Xoff shortly after Xon
0 - Always wait Tmax before dropping when changing to Xoff
1 - Before dropping packets after Xoff, wait only (Device-Time - Ton) if it is a shorter time than Tmax",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F16,E17)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice3ScrubberWindow => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberWindow",
      RegMem => "RegField",
      Description => "The scrubber is a mechanism that scans the status of the SQs and checked if the SQ flow conrol status should be changed.
This configuration defines in cc the scrubber time in which the scrubber should complete a full scan of the SQs flow control status and refresh it if needed.",
      Width => "14",
      Position => "46:33", # Excel Formula: =calc_position(F17,E18)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1000",
    },
    Slice3ScrubberEnable => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberEnable",
      RegMem => "RegField",
      Description => "Enables the operation of the scrubber.
Need to enable the scrubber operation after the tables are fully configured.
0 - Scrubber Disabled
1 - Scrubber Enabled",
      Width => "1",
      Position => "47", # Excel Formula: =calc_position(F18,E19)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice3ScrubberForceGapThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberForceGapThr",
      RegMem => "RegField",
      Description => "The scrubber scan is in low priority.
If the scrubber failed  to complete a full scan in ScrubberWindow amount of cc - this configuration defines in cc the scrubber gap between 2 scrubber transactions that are inserted to the pipe in SP to avoid scrubber starvation.",
      Width => "6",
      Position => "53:48", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d20",
    },
    Slice3ClearDropCounterCtcCtcg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterCtcCtcg",
      RegMem => "RegField",
      Width => "1",
      Position => "54", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice3ClearDropCounterSqSqg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterSqSqg",
      RegMem => "RegField",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F21,E22)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice3ClearDropCounterHr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterHr",
      RegMem => "RegField",
      Width => "1",
      Position => "56", # Excel Formula: =calc_position(F22,E23)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice3CountDramBuffers => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]CountDramBuffers",
      RegMem => "RegField",
      Description => "Whether RX-CGM counts SMS buffers or DRAM buffers
0 - Count SMS buffers
1 - Count DRAM buffers",
      Width => "1",
      Position => "57", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice3CountPacketsWithUcdvToDram => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]CountPacketsWithUcdvToDram",
      RegMem => "RegField",
      Description => "In DRAM counting mode, whether to count packets with UCDV != 0 (i.e. IBM, since MC packets are not counted anyway)
0 - Do not count packets with UCDV != 0
1 - Count packets with UCDV != 0",
      Width => "1",
      Position => "58", # Excel Formula: =calc_position(F24,E25)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice3CountTwoDramBuffersJumboPackets => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]CountTwoDramBuffersJumboPackets",
      RegMem => "RegField",
      Description => "In DRAM counting mode, whether to possibly (statistically) count jumbo packets >8KB as two DRAM buffers, by overwriting Sub-Port value of Source-IF
0 - Always count packets as up to 1 DRAM buffers
1 - Possibly count jumbo packets as 2 DRAM buffers",
      Width => "1",
      Position => "59", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice3ProtectFromNegativeWraparound => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]ProtectFromNegativeWraparound",
      RegMem => "RegField",
      Description => "Whether to protect from negative wraparound, i.e. in case decrement will result with negative counter - remain at value 0.
This should be enabled when in DRAM counting mode and ICS is configured to use leaking rate
0 - Disable wraparound protection
1 - Enable wraparound protection",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
  },
  GlobalConfiguration4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 20;
    Name => "GlobalConfiguration[6]",
    RegMem => "Reg",
    Address => "105",
    Width => "61", # Excel Formula: =calc_reg_width(E10:E27,F27)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    Slice4CbtThreshold => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]CbtThreshold",
      RegMem => "RegField",
      Description => "Defines the number of credits in the TS mon CBT required to pop an entry from the RXPDR CBR. 
This is done to avoid supporting backpressure in the pipe.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hc",
    },
    Slice4DropVoq => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]DropVoq",
      RegMem => "RegField",
      Description => "Holds the VOQ number that will be mapped to the drop VOQ.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "16",
      Position => "21:6", # Excel Formula: =calc_position(F10,E11)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hFFFF",
    },
    Slice4IncMsgFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]IncMsgFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Defines the almost full threshold of the inc message FIFO.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "27:22", # Excel Formula: =calc_position(F11,E12)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h6",
    },
    Slice4UpdatePipeArbMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]UpdatePipeArbMode",
      RegMem => "RegField",
      Description => "0 - RR between inc and dec messages
1 - SP to dec messages
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "1",
      Position => "28", # Excel Formula: =calc_position(F12,E13)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice4HrManagementMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]HrManagementMode",
      RegMem => "RegField",
      Description => "0 - Timer Mode - The user is limited by the amount of data it can consume regardless of the time passed from triggering the Xoff message. 
1 - ThrMode - The user is limited by the amount of data is can consume, where the amount of data varies with the time passed from triggering flow control.",
      Width => "1",
      Position => "29", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice4DisableRxCGM => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]DisableRxCGM",
      RegMem => "RegField",
      Description => "Disable the Rx CGM functionality",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice4DropPktsCountEn => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]DropPktsCountEn",
      RegMem => "RegField",
      Description => "Count drop packets configuration.
0 - The rxcgm will not count dropped packets.
1 - The rxcgm will count dropped packets.",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F15,E16)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
    },
    Slice4EnableFastDropAfterXon => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]EnableFastDropAfterXon",
      RegMem => "RegField",
      Description => "Whether to start dropping packets faster when changing to Xoff shortly after Xon
0 - Always wait Tmax before dropping when changing to Xoff
1 - Before dropping packets after Xoff, wait only (Device-Time - Ton) if it is a shorter time than Tmax",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F16,E17)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice4ScrubberWindow => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberWindow",
      RegMem => "RegField",
      Description => "The scrubber is a mechanism that scans the status of the SQs and checked if the SQ flow conrol status should be changed.
This configuration defines in cc the scrubber time in which the scrubber should complete a full scan of the SQs flow control status and refresh it if needed.",
      Width => "14",
      Position => "46:33", # Excel Formula: =calc_position(F17,E18)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1000",
    },
    Slice4ScrubberEnable => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberEnable",
      RegMem => "RegField",
      Description => "Enables the operation of the scrubber.
Need to enable the scrubber operation after the tables are fully configured.
0 - Scrubber Disabled
1 - Scrubber Enabled",
      Width => "1",
      Position => "47", # Excel Formula: =calc_position(F18,E19)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice4ScrubberForceGapThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberForceGapThr",
      RegMem => "RegField",
      Description => "The scrubber scan is in low priority.
If the scrubber failed  to complete a full scan in ScrubberWindow amount of cc - this configuration defines in cc the scrubber gap between 2 scrubber transactions that are inserted to the pipe in SP to avoid scrubber starvation.",
      Width => "6",
      Position => "53:48", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d20",
    },
    Slice4ClearDropCounterCtcCtcg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterCtcCtcg",
      RegMem => "RegField",
      Width => "1",
      Position => "54", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice4ClearDropCounterSqSqg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterSqSqg",
      RegMem => "RegField",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F21,E22)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice4ClearDropCounterHr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterHr",
      RegMem => "RegField",
      Width => "1",
      Position => "56", # Excel Formula: =calc_position(F22,E23)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice4CountDramBuffers => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]CountDramBuffers",
      RegMem => "RegField",
      Description => "Whether RX-CGM counts SMS buffers or DRAM buffers
0 - Count SMS buffers
1 - Count DRAM buffers",
      Width => "1",
      Position => "57", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice4CountPacketsWithUcdvToDram => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]CountPacketsWithUcdvToDram",
      RegMem => "RegField",
      Description => "In DRAM counting mode, whether to count packets with UCDV != 0 (i.e. IBM, since MC packets are not counted anyway)
0 - Do not count packets with UCDV != 0
1 - Count packets with UCDV != 0",
      Width => "1",
      Position => "58", # Excel Formula: =calc_position(F24,E25)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice4CountTwoDramBuffersJumboPackets => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]CountTwoDramBuffersJumboPackets",
      RegMem => "RegField",
      Description => "In DRAM counting mode, whether to possibly (statistically) count jumbo packets >8KB as two DRAM buffers, by overwriting Sub-Port value of Source-IF
0 - Always count packets as up to 1 DRAM buffers
1 - Possibly count jumbo packets as 2 DRAM buffers",
      Width => "1",
      Position => "59", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice4ProtectFromNegativeWraparound => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]ProtectFromNegativeWraparound",
      RegMem => "RegField",
      Description => "Whether to protect from negative wraparound, i.e. in case decrement will result with negative counter - remain at value 0.
This should be enabled when in DRAM counting mode and ICS is configured to use leaking rate
0 - Disable wraparound protection
1 - Enable wraparound protection",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
  },
  GlobalConfiguration5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 20;
    Name => "GlobalConfiguration[6]",
    RegMem => "Reg",
    Address => "106",
    Width => "61", # Excel Formula: =calc_reg_width(E10:E27,F27)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    Slice5CbtThreshold => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]CbtThreshold",
      RegMem => "RegField",
      Description => "Defines the number of credits in the TS mon CBT required to pop an entry from the RXPDR CBR. 
This is done to avoid supporting backpressure in the pipe.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hc",
    },
    Slice5DropVoq => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]DropVoq",
      RegMem => "RegField",
      Description => "Holds the VOQ number that will be mapped to the drop VOQ.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "16",
      Position => "21:6", # Excel Formula: =calc_position(F10,E11)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hFFFF",
    },
    Slice5IncMsgFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]IncMsgFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Defines the almost full threshold of the inc message FIFO.
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "27:22", # Excel Formula: =calc_position(F11,E12)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h6",
    },
    Slice5UpdatePipeArbMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]UpdatePipeArbMode",
      RegMem => "RegField",
      Description => "0 - RR between inc and dec messages
1 - SP to dec messages
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "1",
      Position => "28", # Excel Formula: =calc_position(F12,E13)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
    Slice5HrManagementMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]HrManagementMode",
      RegMem => "RegField",
      Description => "0 - Timer Mode - The user is limited by the amount of data it can consume regardless of the time passed from triggering the Xoff message. 
1 - ThrMode - The user is limited by the amount of data is can consume, where the amount of data varies with the time passed from triggering flow control.",
      Width => "1",
      Position => "29", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice5DisableRxCGM => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]DisableRxCGM",
      RegMem => "RegField",
      Description => "Disable the Rx CGM functionality",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
      InitValueLcFab => "1",
      InitValueFe => "1",
    },
    Slice5DropPktsCountEn => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]DropPktsCountEn",
      RegMem => "RegField",
      Description => "Count drop packets configuration.
0 - The rxcgm will not count dropped packets.
1 - The rxcgm will count dropped packets.",
      Width => "1",
      Position => "31", # Excel Formula: =calc_position(F15,E16)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
    },
    Slice5EnableFastDropAfterXon => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]EnableFastDropAfterXon",
      RegMem => "RegField",
      Description => "Whether to start dropping packets faster when changing to Xoff shortly after Xon
0 - Always wait Tmax before dropping when changing to Xoff
1 - Before dropping packets after Xoff, wait only (Device-Time - Ton) if it is a shorter time than Tmax",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F16,E17)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b1",
    },
    Slice5ScrubberWindow => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberWindow",
      RegMem => "RegField",
      Description => "The scrubber is a mechanism that scans the status of the SQs and checked if the SQ flow conrol status should be changed.
This configuration defines in cc the scrubber time in which the scrubber should complete a full scan of the SQs flow control status and refresh it if needed.",
      Width => "14",
      Position => "46:33", # Excel Formula: =calc_position(F17,E18)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1000",
    },
    Slice5ScrubberEnable => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberEnable",
      RegMem => "RegField",
      Description => "Enables the operation of the scrubber.
Need to enable the scrubber operation after the tables are fully configured.
0 - Scrubber Disabled
1 - Scrubber Enabled",
      Width => "1",
      Position => "47", # Excel Formula: =calc_position(F18,E19)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice5ScrubberForceGapThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]ScrubberForceGapThr",
      RegMem => "RegField",
      Description => "The scrubber scan is in low priority.
If the scrubber failed  to complete a full scan in ScrubberWindow amount of cc - this configuration defines in cc the scrubber gap between 2 scrubber transactions that are inserted to the pipe in SP to avoid scrubber starvation.",
      Width => "6",
      Position => "53:48", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d20",
    },
    Slice5ClearDropCounterCtcCtcg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterCtcCtcg",
      RegMem => "RegField",
      Width => "1",
      Position => "54", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice5ClearDropCounterSqSqg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterSqSqg",
      RegMem => "RegField",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F21,E22)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice5ClearDropCounterHr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]ClearDropCounterHr",
      RegMem => "RegField",
      Width => "1",
      Position => "56", # Excel Formula: =calc_position(F22,E23)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
    },
    Slice5CountDramBuffers => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]CountDramBuffers",
      RegMem => "RegField",
      Description => "Whether RX-CGM counts SMS buffers or DRAM buffers
0 - Count SMS buffers
1 - Count DRAM buffers",
      Width => "1",
      Position => "57", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice5CountPacketsWithUcdvToDram => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]CountPacketsWithUcdvToDram",
      RegMem => "RegField",
      Description => "In DRAM counting mode, whether to count packets with UCDV != 0 (i.e. IBM, since MC packets are not counted anyway)
0 - Do not count packets with UCDV != 0
1 - Count packets with UCDV != 0",
      Width => "1",
      Position => "58", # Excel Formula: =calc_position(F24,E25)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice5CountTwoDramBuffersJumboPackets => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]CountTwoDramBuffersJumboPackets",
      RegMem => "RegField",
      Description => "In DRAM counting mode, whether to possibly (statistically) count jumbo packets >8KB as two DRAM buffers, by overwriting Sub-Port value of Source-IF
0 - Always count packets as up to 1 DRAM buffers
1 - Possibly count jumbo packets as 2 DRAM buffers",
      Width => "1",
      Position => "59", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
    Slice5ProtectFromNegativeWraparound => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]ProtectFromNegativeWraparound",
      RegMem => "RegField",
      Description => "Whether to protect from negative wraparound, i.e. in case decrement will result with negative counter - remain at value 0.
This should be enabled when in DRAM counting mode and ICS is configured to use leaking rate
0 - Disable wraparound protection
1 - Enable wraparound protection",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
  },
  CountersTopConfig => { #Structure Type: Reg;
    Name => "CountersTopConfig",
    RegMem => "Reg",
    Address => "107", # Excel Formula: =calc_reg_address(C9,A9,G9)
    Width => "1", # Excel Formula: =calc_reg_width(E29:E29,F29)
    Type => "Config",
    ProtectFromNegativeWraparound => { #Structure Type: RegField;
      Name => "ProtectFromNegativeWraparound",
      RegMem => "RegField",
      Description => "Whether to protect from negative wraparound, i.e. in case decrement will result with negative counter - remain at value 0.
This should be enabled when in DRAM counting mode and ICS is configured to use leaking rate
0 - Disable wraparound protection
1 - Enable wraparound protection",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0",
    },
  },
  SourceCgmPolicyLutMap0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 22;
    Name => "SourceCgmPolicyLutMap[6]",
    RegMem => "Reg",
    Address => "108", # Excel Formula: =calc_reg_address(C28,A28,G28)
    Width => "32", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    Slice0SourceCgmPolicyLutMap => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutMap",
      RegMem => "RegField",
      Description => "8 Consequent entries for mapping from 3b result of SourceCgmPolicyLut to 4b for the following indications:
[0] FlowControlTrigger
[1] FlowControl
[2] DropYellow
[3] DropGreen
Default configuration:
0 - Trigger Xon, no drops
1 - Don't change FC, no drops
2 - Don't change FC, drop yellow
3 - Don't change FC, drop yellow+green
4 - Trigger Xoff, no drops
5 - Trigger Xoff, drop yellow
6 - Trigger Xoff, drop yellow+green",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF73C401",
      Comments => "For pacific behaviour (no FlowControlTrigger) configure to: hFDB97531",
    },
  },
  SourceCgmPolicyLutMap1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 22;
    Name => "SourceCgmPolicyLutMap[6]",
    RegMem => "Reg",
    Address => "109",
    Width => "32", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    Slice1SourceCgmPolicyLutMap => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutMap",
      RegMem => "RegField",
      Description => "8 Consequent entries for mapping from 3b result of SourceCgmPolicyLut to 4b for the following indications:
[0] FlowControlTrigger
[1] FlowControl
[2] DropYellow
[3] DropGreen
Default configuration:
0 - Trigger Xon, no drops
1 - Don't change FC, no drops
2 - Don't change FC, drop yellow
3 - Don't change FC, drop yellow+green
4 - Trigger Xoff, no drops
5 - Trigger Xoff, drop yellow
6 - Trigger Xoff, drop yellow+green",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF73C401",
      Comments => "For pacific behaviour (no FlowControlTrigger) configure to: hFDB97531",
    },
  },
  SourceCgmPolicyLutMap2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 22;
    Name => "SourceCgmPolicyLutMap[6]",
    RegMem => "Reg",
    Address => "10A",
    Width => "32", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    Slice2SourceCgmPolicyLutMap => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutMap",
      RegMem => "RegField",
      Description => "8 Consequent entries for mapping from 3b result of SourceCgmPolicyLut to 4b for the following indications:
[0] FlowControlTrigger
[1] FlowControl
[2] DropYellow
[3] DropGreen
Default configuration:
0 - Trigger Xon, no drops
1 - Don't change FC, no drops
2 - Don't change FC, drop yellow
3 - Don't change FC, drop yellow+green
4 - Trigger Xoff, no drops
5 - Trigger Xoff, drop yellow
6 - Trigger Xoff, drop yellow+green",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF73C401",
      Comments => "For pacific behaviour (no FlowControlTrigger) configure to: hFDB97531",
    },
  },
  SourceCgmPolicyLutMap3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 22;
    Name => "SourceCgmPolicyLutMap[6]",
    RegMem => "Reg",
    Address => "10B",
    Width => "32", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    Slice3SourceCgmPolicyLutMap => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutMap",
      RegMem => "RegField",
      Description => "8 Consequent entries for mapping from 3b result of SourceCgmPolicyLut to 4b for the following indications:
[0] FlowControlTrigger
[1] FlowControl
[2] DropYellow
[3] DropGreen
Default configuration:
0 - Trigger Xon, no drops
1 - Don't change FC, no drops
2 - Don't change FC, drop yellow
3 - Don't change FC, drop yellow+green
4 - Trigger Xoff, no drops
5 - Trigger Xoff, drop yellow
6 - Trigger Xoff, drop yellow+green",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF73C401",
      Comments => "For pacific behaviour (no FlowControlTrigger) configure to: hFDB97531",
    },
  },
  SourceCgmPolicyLutMap4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 22;
    Name => "SourceCgmPolicyLutMap[6]",
    RegMem => "Reg",
    Address => "10C",
    Width => "32", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    Slice4SourceCgmPolicyLutMap => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutMap",
      RegMem => "RegField",
      Description => "8 Consequent entries for mapping from 3b result of SourceCgmPolicyLut to 4b for the following indications:
[0] FlowControlTrigger
[1] FlowControl
[2] DropYellow
[3] DropGreen
Default configuration:
0 - Trigger Xon, no drops
1 - Don't change FC, no drops
2 - Don't change FC, drop yellow
3 - Don't change FC, drop yellow+green
4 - Trigger Xoff, no drops
5 - Trigger Xoff, drop yellow
6 - Trigger Xoff, drop yellow+green",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF73C401",
      Comments => "For pacific behaviour (no FlowControlTrigger) configure to: hFDB97531",
    },
  },
  SourceCgmPolicyLutMap5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 22;
    Name => "SourceCgmPolicyLutMap[6]",
    RegMem => "Reg",
    Address => "10D",
    Width => "32", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    Slice5SourceCgmPolicyLutMap => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutMap",
      RegMem => "RegField",
      Description => "8 Consequent entries for mapping from 3b result of SourceCgmPolicyLut to 4b for the following indications:
[0] FlowControlTrigger
[1] FlowControl
[2] DropYellow
[3] DropGreen
Default configuration:
0 - Trigger Xon, no drops
1 - Don't change FC, no drops
2 - Don't change FC, drop yellow
3 - Don't change FC, drop yellow+green
4 - Trigger Xoff, no drops
5 - Trigger Xoff, drop yellow
6 - Trigger Xoff, drop yellow+green",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF73C401",
      Comments => "For pacific behaviour (no FlowControlTrigger) configure to: hFDB97531",
    },
  },
  RxCGMInterruptReg10 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "RxCGMInterruptReg1[6]",
    RegMem => "Reg",
    Address => "10E", # Excel Formula: =calc_reg_address(C30,A30,G30)
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Slice0LocalUSerCounterWrapAround => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAround",
      RegMem => "RegField",
      Description => "When giving SP to dec messages over inc messages the dec message may bypass its corresponding inc message and the counter may wraparound (reach a negative value)This is a rare scenario so there is no special treatment for it except for an interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
  },
  RxCGMInterruptReg11 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "RxCGMInterruptReg1[6]",
    RegMem => "Reg",
    Address => "10F",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Slice1LocalUSerCounterWrapAround => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAround",
      RegMem => "RegField",
      Description => "When giving SP to dec messages over inc messages the dec message may bypass its corresponding inc message and the counter may wraparound (reach a negative value)This is a rare scenario so there is no special treatment for it except for an interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
  },
  RxCGMInterruptReg12 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 19;
    Name => "RxCGMInterruptReg1[6]",
    RegMem => "Reg",
    Address => "110",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Slice2LocalUSerCounterWrapAround => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAround",
      RegMem => "RegField",
      Description => "When giving SP to dec messages over inc messages the dec message may bypass its corresponding inc message and the counter may wraparound (reach a negative value)This is a rare scenario so there is no special treatment for it except for an interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
  },
  RxCGMInterruptReg13 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 19;
    Name => "RxCGMInterruptReg1[6]",
    RegMem => "Reg",
    Address => "111",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Slice3LocalUSerCounterWrapAround => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAround",
      RegMem => "RegField",
      Description => "When giving SP to dec messages over inc messages the dec message may bypass its corresponding inc message and the counter may wraparound (reach a negative value)This is a rare scenario so there is no special treatment for it except for an interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
  },
  RxCGMInterruptReg14 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 19;
    Name => "RxCGMInterruptReg1[6]",
    RegMem => "Reg",
    Address => "112",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Slice4LocalUSerCounterWrapAround => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAround",
      RegMem => "RegField",
      Description => "When giving SP to dec messages over inc messages the dec message may bypass its corresponding inc message and the counter may wraparound (reach a negative value)This is a rare scenario so there is no special treatment for it except for an interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
  },
  RxCGMInterruptReg15 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 19;
    Name => "RxCGMInterruptReg1[6]",
    RegMem => "Reg",
    Address => "113",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Slice5LocalUSerCounterWrapAround => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAround",
      RegMem => "RegField",
      Description => "When giving SP to dec messages over inc messages the dec message may bypass its corresponding inc message and the counter may wraparound (reach a negative value)This is a rare scenario so there is no special treatment for it except for an interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
  },
  RxCGMInterruptReg10Mask => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 19; Skip Register;
    Name => "RxCGMInterruptReg1[6]Mask",
    RegMem => "Reg",
    Address => "114",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Slice0LocalUSerCounterWrapAroundMask => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAroundMask",
      RegMem => "RegField",
      Description => "This field masks Slice[n]LocalUSerCounterWrapAround interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  RxCGMInterruptReg11Mask => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 19; Skip Register;
    Name => "RxCGMInterruptReg1[6]Mask",
    RegMem => "Reg",
    Address => "115",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Slice1LocalUSerCounterWrapAroundMask => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAroundMask",
      RegMem => "RegField",
      Description => "This field masks Slice[n]LocalUSerCounterWrapAround interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  RxCGMInterruptReg12Mask => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 19; Skip Register;
    Name => "RxCGMInterruptReg1[6]Mask",
    RegMem => "Reg",
    Address => "116",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Slice2LocalUSerCounterWrapAroundMask => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAroundMask",
      RegMem => "RegField",
      Description => "This field masks Slice[n]LocalUSerCounterWrapAround interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  RxCGMInterruptReg13Mask => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 19; Skip Register;
    Name => "RxCGMInterruptReg1[6]Mask",
    RegMem => "Reg",
    Address => "117",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Slice3LocalUSerCounterWrapAroundMask => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAroundMask",
      RegMem => "RegField",
      Description => "This field masks Slice[n]LocalUSerCounterWrapAround interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  RxCGMInterruptReg14Mask => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 19; Skip Register;
    Name => "RxCGMInterruptReg1[6]Mask",
    RegMem => "Reg",
    Address => "118",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Slice4LocalUSerCounterWrapAroundMask => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAroundMask",
      RegMem => "RegField",
      Description => "This field masks Slice[n]LocalUSerCounterWrapAround interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  RxCGMInterruptReg15Mask => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 19; Skip Register;
    Name => "RxCGMInterruptReg1[6]Mask",
    RegMem => "Reg",
    Address => "119",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Slice5LocalUSerCounterWrapAroundMask => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAroundMask",
      RegMem => "RegField",
      Description => "This field masks Slice[n]LocalUSerCounterWrapAround interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  RxCGMInterruptReg10Test => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 19; Skip Register;
    Name => "RxCGMInterruptReg1[6]Test",
    RegMem => "Reg",
    Address => "11A",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Slice0LocalUSerCounterWrapAroundTest => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAroundTest",
      RegMem => "RegField",
      Description => "This field tests Slice[n]LocalUSerCounterWrapAround interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  RxCGMInterruptReg11Test => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 19; Skip Register;
    Name => "RxCGMInterruptReg1[6]Test",
    RegMem => "Reg",
    Address => "11B",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Slice1LocalUSerCounterWrapAroundTest => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAroundTest",
      RegMem => "RegField",
      Description => "This field tests Slice[n]LocalUSerCounterWrapAround interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  RxCGMInterruptReg12Test => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 19; Skip Register;
    Name => "RxCGMInterruptReg1[6]Test",
    RegMem => "Reg",
    Address => "11C",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Slice2LocalUSerCounterWrapAroundTest => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAroundTest",
      RegMem => "RegField",
      Description => "This field tests Slice[n]LocalUSerCounterWrapAround interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  RxCGMInterruptReg13Test => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 19; Skip Register;
    Name => "RxCGMInterruptReg1[6]Test",
    RegMem => "Reg",
    Address => "11D",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Slice3LocalUSerCounterWrapAroundTest => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAroundTest",
      RegMem => "RegField",
      Description => "This field tests Slice[n]LocalUSerCounterWrapAround interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  RxCGMInterruptReg14Test => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 19; Skip Register;
    Name => "RxCGMInterruptReg1[6]Test",
    RegMem => "Reg",
    Address => "11E",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Slice4LocalUSerCounterWrapAroundTest => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAroundTest",
      RegMem => "RegField",
      Description => "This field tests Slice[n]LocalUSerCounterWrapAround interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  RxCGMInterruptReg15Test => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 19; Skip Register;
    Name => "RxCGMInterruptReg1[6]Test",
    RegMem => "Reg",
    Address => "11F",
    Width => "1", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Slice5LocalUSerCounterWrapAroundTest => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]LocalUSerCounterWrapAroundTest",
      RegMem => "RegField",
      Description => "This field tests Slice[n]LocalUSerCounterWrapAround interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  StatisticCgmConfigurations0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 27;
    Name => "StatisticCgmConfigurations[6]",
    RegMem => "Reg",
    Address => "120", # Excel Formula: =calc_reg_address(C32,A32,G32)
    Width => "4", # Excel Formula: =calc_reg_width(E35:E35,F35)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Slice0StatisticUpdateRateMask => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]StatisticUpdateRateMask",
      RegMem => "RegField",
      Description => "This vector mask bits from the 4 bit lfsr according to the statistics required for the rate sample.
For example:
If the probability required is in resolution of 1/8 then set this configuration to 4'b0111
If the probability required is in resolution of 1/4 then set this configuration to 4'b0011
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0111",
    },
  },
  StatisticCgmConfigurations1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 27;
    Name => "StatisticCgmConfigurations[6]",
    RegMem => "Reg",
    Address => "121",
    Width => "4", # Excel Formula: =calc_reg_width(E35:E35,F35)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Slice1StatisticUpdateRateMask => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]StatisticUpdateRateMask",
      RegMem => "RegField",
      Description => "This vector mask bits from the 4 bit lfsr according to the statistics required for the rate sample.
For example:
If the probability required is in resolution of 1/8 then set this configuration to 4'b0111
If the probability required is in resolution of 1/4 then set this configuration to 4'b0011
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0111",
    },
  },
  StatisticCgmConfigurations2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 27;
    Name => "StatisticCgmConfigurations[6]",
    RegMem => "Reg",
    Address => "122",
    Width => "4", # Excel Formula: =calc_reg_width(E35:E35,F35)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Slice2StatisticUpdateRateMask => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]StatisticUpdateRateMask",
      RegMem => "RegField",
      Description => "This vector mask bits from the 4 bit lfsr according to the statistics required for the rate sample.
For example:
If the probability required is in resolution of 1/8 then set this configuration to 4'b0111
If the probability required is in resolution of 1/4 then set this configuration to 4'b0011
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0111",
    },
  },
  StatisticCgmConfigurations3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 27;
    Name => "StatisticCgmConfigurations[6]",
    RegMem => "Reg",
    Address => "123",
    Width => "4", # Excel Formula: =calc_reg_width(E35:E35,F35)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Slice3StatisticUpdateRateMask => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]StatisticUpdateRateMask",
      RegMem => "RegField",
      Description => "This vector mask bits from the 4 bit lfsr according to the statistics required for the rate sample.
For example:
If the probability required is in resolution of 1/8 then set this configuration to 4'b0111
If the probability required is in resolution of 1/4 then set this configuration to 4'b0011
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0111",
    },
  },
  StatisticCgmConfigurations4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 27;
    Name => "StatisticCgmConfigurations[6]",
    RegMem => "Reg",
    Address => "124",
    Width => "4", # Excel Formula: =calc_reg_width(E35:E35,F35)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Slice4StatisticUpdateRateMask => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]StatisticUpdateRateMask",
      RegMem => "RegField",
      Description => "This vector mask bits from the 4 bit lfsr according to the statistics required for the rate sample.
For example:
If the probability required is in resolution of 1/8 then set this configuration to 4'b0111
If the probability required is in resolution of 1/4 then set this configuration to 4'b0011
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0111",
    },
  },
  StatisticCgmConfigurations5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 27;
    Name => "StatisticCgmConfigurations[6]",
    RegMem => "Reg",
    Address => "125",
    Width => "4", # Excel Formula: =calc_reg_width(E35:E35,F35)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Slice5StatisticUpdateRateMask => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]StatisticUpdateRateMask",
      RegMem => "RegField",
      Description => "This vector mask bits from the 4 bit lfsr according to the statistics required for the rate sample.
For example:
If the probability required is in resolution of 1/8 then set this configuration to 4'b0111
If the probability required is in resolution of 1/4 then set this configuration to 4'b0011
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "b0111",
    },
  },
  RxCGMCounters0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 14;
    Name => "RxCGMCounters[6]",
    RegMem => "Reg",
    Address => "126", # Excel Formula: =calc_reg_address(C34,A34,G34)
    Width => "48", # Excel Formula: =calc_reg_width(E37:E39,F39)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Slice0FlowControlFifoLostUpdate => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]FlowControlFifoLostUpdate",
      RegMem => "RegField",
      Description => "Indicates that the FIFO of flow control messages to the IFG was full and a message was lost.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F36,E37,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice0IncFifoLostUpdates => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]IncFifoLostUpdates",
      RegMem => "RegField",
      Description => "Indicates that the inc FIFO was full thus a PD did not increment the counters although the sampling logic sampled it.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F37,E38)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice0FlowControlTsmon => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]FlowControlTsmon",
      RegMem => "RegField",
      Description => "Count flow control cycles from tsmon",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F38,E39)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMCounters1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 14;
    Name => "RxCGMCounters[6]",
    RegMem => "Reg",
    Address => "127",
    Width => "48", # Excel Formula: =calc_reg_width(E37:E39,F39)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Slice1FlowControlFifoLostUpdate => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]FlowControlFifoLostUpdate",
      RegMem => "RegField",
      Description => "Indicates that the FIFO of flow control messages to the IFG was full and a message was lost.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F36,E37,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice1IncFifoLostUpdates => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]IncFifoLostUpdates",
      RegMem => "RegField",
      Description => "Indicates that the inc FIFO was full thus a PD did not increment the counters although the sampling logic sampled it.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F37,E38)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice1FlowControlTsmon => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]FlowControlTsmon",
      RegMem => "RegField",
      Description => "Count flow control cycles from tsmon",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F38,E39)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMCounters2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 14;
    Name => "RxCGMCounters[6]",
    RegMem => "Reg",
    Address => "128",
    Width => "48", # Excel Formula: =calc_reg_width(E37:E39,F39)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Slice2FlowControlFifoLostUpdate => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]FlowControlFifoLostUpdate",
      RegMem => "RegField",
      Description => "Indicates that the FIFO of flow control messages to the IFG was full and a message was lost.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F36,E37,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice2IncFifoLostUpdates => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]IncFifoLostUpdates",
      RegMem => "RegField",
      Description => "Indicates that the inc FIFO was full thus a PD did not increment the counters although the sampling logic sampled it.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F37,E38)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice2FlowControlTsmon => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]FlowControlTsmon",
      RegMem => "RegField",
      Description => "Count flow control cycles from tsmon",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F38,E39)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMCounters3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 14;
    Name => "RxCGMCounters[6]",
    RegMem => "Reg",
    Address => "129",
    Width => "48", # Excel Formula: =calc_reg_width(E37:E39,F39)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Slice3FlowControlFifoLostUpdate => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]FlowControlFifoLostUpdate",
      RegMem => "RegField",
      Description => "Indicates that the FIFO of flow control messages to the IFG was full and a message was lost.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F36,E37,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice3IncFifoLostUpdates => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]IncFifoLostUpdates",
      RegMem => "RegField",
      Description => "Indicates that the inc FIFO was full thus a PD did not increment the counters although the sampling logic sampled it.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F37,E38)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice3FlowControlTsmon => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]FlowControlTsmon",
      RegMem => "RegField",
      Description => "Count flow control cycles from tsmon",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F38,E39)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMCounters4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 14;
    Name => "RxCGMCounters[6]",
    RegMem => "Reg",
    Address => "12A",
    Width => "48", # Excel Formula: =calc_reg_width(E37:E39,F39)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Slice4FlowControlFifoLostUpdate => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]FlowControlFifoLostUpdate",
      RegMem => "RegField",
      Description => "Indicates that the FIFO of flow control messages to the IFG was full and a message was lost.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F36,E37,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice4IncFifoLostUpdates => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]IncFifoLostUpdates",
      RegMem => "RegField",
      Description => "Indicates that the inc FIFO was full thus a PD did not increment the counters although the sampling logic sampled it.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F37,E38)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice4FlowControlTsmon => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]FlowControlTsmon",
      RegMem => "RegField",
      Description => "Count flow control cycles from tsmon",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F38,E39)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMCounters5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 14;
    Name => "RxCGMCounters[6]",
    RegMem => "Reg",
    Address => "12B",
    Width => "48", # Excel Formula: =calc_reg_width(E37:E39,F39)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Slice5FlowControlFifoLostUpdate => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]FlowControlFifoLostUpdate",
      RegMem => "RegField",
      Description => "Indicates that the FIFO of flow control messages to the IFG was full and a message was lost.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F36,E37,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice5IncFifoLostUpdates => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]IncFifoLostUpdates",
      RegMem => "RegField",
      Description => "Indicates that the inc FIFO was full thus a PD did not increment the counters although the sampling logic sampled it.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F37,E38)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Slice5FlowControlTsmon => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]FlowControlTsmon",
      RegMem => "RegField",
      Description => "Count flow control cycles from tsmon",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F38,E39)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMStatus => { #Structure Type: Reg;
    Name => "RxCGMStatus",
    RegMem => "Reg",
    Address => "12C", # Excel Formula: =calc_reg_address(C36,A36,G36)
    Description => "All counters are in one regsiter to enable reading all of them together",
    Width => "304", # Excel Formula: =calc_reg_width(E41:E56,F56)
    Type => "ReadOnly",
    SqGroup0Counter => { #Structure Type: RegField;
      Name => "SqGroup0Counter",
      RegMem => "RegField",
      Description => "Holds the SQ group 0 counter",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
    SqGroup1Counter => { #Structure Type: RegField;
      Name => "SqGroup1Counter",
      RegMem => "RegField",
      Description => "Holds the SQ group 1 counter",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F41,E42)
      Type => "Status",
      UsedBy => "DSN",
    },
    SqGroup2Counter => { #Structure Type: RegField;
      Name => "SqGroup2Counter",
      RegMem => "RegField",
      Description => "Holds the SQ group 2 counter",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F42,E43)
      Type => "Status",
      UsedBy => "DSN",
    },
    SqGroup3Counter => { #Structure Type: RegField;
      Name => "SqGroup3Counter",
      RegMem => "RegField",
      Description => "Holds the SQ group 3 counter",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F43,E44)
      Type => "Status",
      UsedBy => "DSN",
    },
    CtcGroup0Counter => { #Structure Type: RegField;
      Name => "CtcGroup0Counter",
      RegMem => "RegField",
      Description => "Holds the CTC group 0 counter",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F44,E45)
      Type => "Status",
      UsedBy => "DSN",
    },
    CtcGroup1Counter => { #Structure Type: RegField;
      Name => "CtcGroup1Counter",
      RegMem => "RegField",
      Description => "Holds the CTC group 1 counter",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F45,E46)
      Type => "Status",
      UsedBy => "DSN",
    },
    CtcGroup2Counter => { #Structure Type: RegField;
      Name => "CtcGroup2Counter",
      RegMem => "RegField",
      Description => "Holds the CTC group 2 counter",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F46,E47)
      Type => "Status",
      UsedBy => "DSN",
    },
    CtcGroup3Counter => { #Structure Type: RegField;
      Name => "CtcGroup3Counter",
      RegMem => "RegField",
      Description => "Holds the CTC group 3 counter",
      Width => "19",
      Position => "151:133", # Excel Formula: =calc_position(F47,E48)
      Type => "Status",
      UsedBy => "DSN",
    },
    Ctc0Counter => { #Structure Type: RegField;
      Name => "Ctc0Counter",
      RegMem => "RegField",
      Description => "Holds the CTC 0 counter",
      Width => "19",
      Position => "170:152", # Excel Formula: =calc_position(F48,E49)
      Type => "Status",
      UsedBy => "DSN",
    },
    Ctc1Counter => { #Structure Type: RegField;
      Name => "Ctc1Counter",
      RegMem => "RegField",
      Description => "Holds the CTC 1 counter",
      Width => "19",
      Position => "189:171", # Excel Formula: =calc_position(F49,E50)
      Type => "Status",
      UsedBy => "DSN",
    },
    Ctc2Counter => { #Structure Type: RegField;
      Name => "Ctc2Counter",
      RegMem => "RegField",
      Description => "Holds the CTC 2 counter",
      Width => "19",
      Position => "208:190", # Excel Formula: =calc_position(F50,E51)
      Type => "Status",
      UsedBy => "DSN",
    },
    Ctc3Counter => { #Structure Type: RegField;
      Name => "Ctc3Counter",
      RegMem => "RegField",
      Description => "Holds the CTC 3 counter",
      Width => "19",
      Position => "227:209", # Excel Formula: =calc_position(F51,E52)
      Type => "Status",
      UsedBy => "DSN",
    },
    Ctc4Counter => { #Structure Type: RegField;
      Name => "Ctc4Counter",
      RegMem => "RegField",
      Description => "Holds the CTC 4 counter",
      Width => "19",
      Position => "246:228", # Excel Formula: =calc_position(F52,E53)
      Type => "Status",
      UsedBy => "DSN",
    },
    Ctc5Counter => { #Structure Type: RegField;
      Name => "Ctc5Counter",
      RegMem => "RegField",
      Description => "Holds the CTC 5 counter",
      Width => "19",
      Position => "265:247", # Excel Formula: =calc_position(F53,E54)
      Type => "Status",
      UsedBy => "DSN",
    },
    Ctc6Counter => { #Structure Type: RegField;
      Name => "Ctc6Counter",
      RegMem => "RegField",
      Description => "Holds the CTC 6 counter",
      Width => "19",
      Position => "284:266", # Excel Formula: =calc_position(F54,E55)
      Type => "Status",
      UsedBy => "DSN",
    },
    Ctc7Counter => { #Structure Type: RegField;
      Name => "Ctc7Counter",
      RegMem => "RegField",
      Description => "Holds the CTC 7 counter",
      Width => "19",
      Position => "303:285", # Excel Formula: =calc_position(F55,E56)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  RxCGMDropCountersCtcSqHr0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 25;
    Name => "RxCGMDropCountersCtcSqHr[6]",
    RegMem => "Reg",
    Address => "12D", # Excel Formula: =calc_reg_address(C40,A40,G40)
    Width => "96", # Excel Formula: =calc_reg_width(E58:E60,F60)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Slice0DropCounterCtcCtcg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterCtcCtcg",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
    Slice0DropCounterSqSqg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterSqSqg",
      RegMem => "RegField",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F58,E59)
      Type => "Status",
      UsedBy => "DSN",
    },
    Slice0DropCounterHr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterHr",
      RegMem => "RegField",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F59,E60)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  RxCGMDropCountersCtcSqHr1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 25;
    Name => "RxCGMDropCountersCtcSqHr[6]",
    RegMem => "Reg",
    Address => "12E",
    Width => "96", # Excel Formula: =calc_reg_width(E58:E60,F60)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Slice1DropCounterCtcCtcg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterCtcCtcg",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
    Slice1DropCounterSqSqg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterSqSqg",
      RegMem => "RegField",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F58,E59)
      Type => "Status",
      UsedBy => "DSN",
    },
    Slice1DropCounterHr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterHr",
      RegMem => "RegField",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F59,E60)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  RxCGMDropCountersCtcSqHr2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 25;
    Name => "RxCGMDropCountersCtcSqHr[6]",
    RegMem => "Reg",
    Address => "12F",
    Width => "96", # Excel Formula: =calc_reg_width(E58:E60,F60)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Slice2DropCounterCtcCtcg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterCtcCtcg",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
    Slice2DropCounterSqSqg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterSqSqg",
      RegMem => "RegField",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F58,E59)
      Type => "Status",
      UsedBy => "DSN",
    },
    Slice2DropCounterHr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterHr",
      RegMem => "RegField",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F59,E60)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  RxCGMDropCountersCtcSqHr3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 25;
    Name => "RxCGMDropCountersCtcSqHr[6]",
    RegMem => "Reg",
    Address => "130",
    Width => "96", # Excel Formula: =calc_reg_width(E58:E60,F60)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Slice3DropCounterCtcCtcg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterCtcCtcg",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
    Slice3DropCounterSqSqg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterSqSqg",
      RegMem => "RegField",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F58,E59)
      Type => "Status",
      UsedBy => "DSN",
    },
    Slice3DropCounterHr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterHr",
      RegMem => "RegField",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F59,E60)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  RxCGMDropCountersCtcSqHr4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 25;
    Name => "RxCGMDropCountersCtcSqHr[6]",
    RegMem => "Reg",
    Address => "131",
    Width => "96", # Excel Formula: =calc_reg_width(E58:E60,F60)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Slice4DropCounterCtcCtcg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterCtcCtcg",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
    Slice4DropCounterSqSqg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterSqSqg",
      RegMem => "RegField",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F58,E59)
      Type => "Status",
      UsedBy => "DSN",
    },
    Slice4DropCounterHr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterHr",
      RegMem => "RegField",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F59,E60)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  RxCGMDropCountersCtcSqHr5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 25;
    Name => "RxCGMDropCountersCtcSqHr[6]",
    RegMem => "Reg",
    Address => "132",
    Width => "96", # Excel Formula: =calc_reg_width(E58:E60,F60)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Slice5DropCounterCtcCtcg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterCtcCtcg",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
    Slice5DropCounterSqSqg => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterSqSqg",
      RegMem => "RegField",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F58,E59)
      Type => "Status",
      UsedBy => "DSN",
    },
    Slice5DropCounterHr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]DropCounterHr",
      RegMem => "RegField",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F59,E60)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  RxCGMDropCounters00 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters0[8]",
    RegMem => "Reg",
    Address => "133", # Excel Formula: =calc_reg_address(C57,A57,G57)
    Width => "16", # Excel Formula: =calc_reg_width(E62:E62,F62)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "0",
    CgmTc0DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "CgmTc[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and belong to the CGM TC.
",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F61,E62,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=3",
    },
  },
  RxCGMDropCounters01 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters0[8]",
    RegMem => "Reg",
    Address => "134",
    Width => "16", # Excel Formula: =calc_reg_width(E62:E62,F62)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "1",
    CgmTc1DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "CgmTc[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and belong to the CGM TC.
",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F61,E62,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=3",
    },
  },
  RxCGMDropCounters02 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters0[8]",
    RegMem => "Reg",
    Address => "135",
    Width => "16", # Excel Formula: =calc_reg_width(E62:E62,F62)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "2",
    CgmTc2DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "CgmTc[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and belong to the CGM TC.
",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F61,E62,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=3",
    },
  },
  RxCGMDropCounters03 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters0[8]",
    RegMem => "Reg",
    Address => "136",
    Width => "16", # Excel Formula: =calc_reg_width(E62:E62,F62)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "3",
    CgmTc3DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "CgmTc[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and belong to the CGM TC.
",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F61,E62,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=3",
    },
  },
  RxCGMDropCounters04 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters0[8]",
    RegMem => "Reg",
    Address => "137",
    Width => "16", # Excel Formula: =calc_reg_width(E62:E62,F62)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "4",
    CgmTc4DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "CgmTc[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and belong to the CGM TC.
",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F61,E62,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=3",
    },
  },
  RxCGMDropCounters05 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters0[8]",
    RegMem => "Reg",
    Address => "138",
    Width => "16", # Excel Formula: =calc_reg_width(E62:E62,F62)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "5",
    CgmTc5DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "CgmTc[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and belong to the CGM TC.
",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F61,E62,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=3",
    },
  },
  RxCGMDropCounters06 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters0[8]",
    RegMem => "Reg",
    Address => "139",
    Width => "16", # Excel Formula: =calc_reg_width(E62:E62,F62)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "6",
    CgmTc6DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 6;
      Name => "CgmTc[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and belong to the CGM TC.
",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F61,E62,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=3",
    },
  },
  RxCGMDropCounters07 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters0[8]",
    RegMem => "Reg",
    Address => "13A",
    Width => "16", # Excel Formula: =calc_reg_width(E62:E62,F62)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "8",
    ArrayIndex => "7",
    CgmTc7DropCounter => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 6;
      Name => "CgmTc[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and belong to the CGM TC.
",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F61,E62,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=3",
    },
  },
  RxCGMDropCounters10 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "13B", # Excel Formula: =calc_reg_address(C61,A61,G61)
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "0",
    Sq0DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 0; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters11 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "13C",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "1",
    Sq1DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 1; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters12 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 2; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "13D",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "2",
    Sq2DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 2; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters13 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 3; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "13E",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "3",
    Sq3DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 3; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters14 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 4; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "13F",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "4",
    Sq4DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 4; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters15 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 5; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "140",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "5",
    Sq5DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 5; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters16 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 6; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "141",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "6",
    Sq6DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 6; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters17 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 7; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "142",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "7",
    Sq7DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 7; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters18 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 8; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "143",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "8",
    Sq8DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 8; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters19 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 9; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "144",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "9",
    Sq9DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 9; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters110 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 10; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "145",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "10",
    Sq10DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 10; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters111 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 11; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "146",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "11",
    Sq11DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 11; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters112 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 12; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "147",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "12",
    Sq12DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 12; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters113 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 13; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "148",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "13",
    Sq13DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 13; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters114 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 14; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "149",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "14",
    Sq14DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 14; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters115 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 15; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "14A",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "15",
    Sq15DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 15; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters116 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 16; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "14B",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "16",
    Sq16DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 16; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters117 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 17; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "14C",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "17",
    Sq17DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 17; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters118 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 18; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "14D",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "18",
    Sq18DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 18; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters119 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 19; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "14E",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "19",
    Sq19DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 19; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters120 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 20; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "14F",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "20",
    Sq20DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 20; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters121 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 21; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "150",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "21",
    Sq21DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 21; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters122 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 22; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "151",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "22",
    Sq22DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 22; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters123 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 23; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "152",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "23",
    Sq23DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 23; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters124 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 24; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "153",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "24",
    Sq24DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 24; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters125 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 25; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "154",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "25",
    Sq25DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 25; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters126 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 26; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "155",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "26",
    Sq26DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 26; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters127 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 27; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "156",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "27",
    Sq27DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 27; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters128 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 28; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "157",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "28",
    Sq28DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 28; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters129 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 29; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "158",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "29",
    Sq29DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 29; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters130 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 30; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "159",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "30",
    Sq30DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 30; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters131 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 31; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "15A",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "31",
    Sq31DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 31; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters132 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 32; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "15B",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "32",
    Sq32DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 32; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters133 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 33; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "15C",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "33",
    Sq33DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 33; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters134 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 34; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "15D",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "34",
    Sq34DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 34; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters135 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 35; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "15E",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "35",
    Sq35DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 35; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters136 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 36; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "15F",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "36",
    Sq36DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 36; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters137 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 37; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "160",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "37",
    Sq37DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 37; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters138 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 38; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "161",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "38",
    Sq38DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 38; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters139 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 39; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "162",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "39",
    Sq39DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 39; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters140 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 40; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "163",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "40",
    Sq40DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 40; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters141 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 41; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "164",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "41",
    Sq41DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 41; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters142 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 42; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "165",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "42",
    Sq42DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 42; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters143 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 43; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "166",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "43",
    Sq43DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 43; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters144 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 44; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "167",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "44",
    Sq44DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 44; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters145 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 45; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "168",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "45",
    Sq45DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 45; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters146 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 46; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "169",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "46",
    Sq46DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 46; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RxCGMDropCounters147 => { #Structure Type: Reg; ArrayLength: 48; ArrayIndex: 47; ArrayLocationInName: 19;
    Name => "RxCGMDropCounters1[48]",
    RegMem => "Reg",
    Address => "16A",
    Width => "16", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "48",
    ArrayIndex => "47",
    Sq47DropCounter => { #Structure Type: RegField; ArrayLength: 48; ArrayIndex: 47; ArrayLocationInName: 3;
      Name => "Sq[n]DropCounter",
      RegMem => "RegField",
      Description => "Counts the number of packets that were dropped and were mapped by the profile map table to the counter.
There are 8 counters per slice thus:
counters 0 - 7 belong to slice 0, counters 8 - 15 to slice 1 etc.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  SliceModeReg0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 13;
    Name => "SliceModeReg[6]",
    RegMem => "Reg",
    Address => "16B", # Excel Formula: =calc_reg_address(C63,A63,G63)
    Width => "4", # Excel Formula: =calc_reg_width(E66:E66,F66)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    CgmSliceMode0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CgmSliceMode[n]",
      RegMem => "RegField",
      Description => "0  // Linecard mode CRF TS network slice
1  // Linecard mode CRF SN network slice
2  // Linecard mode CRF TS fabric slice
3  // Linecard mode CRF SN fabric slice
4  // TOR mode network slice with SLB
5  // TOR mode network slice with PLB --> not supported
6  // TOR mode fabric slice with SLB
7  // TOR mode fabric slice with PLB --> not supported
8  // FE mode with TS
9  // FE mode with SN
10 // DRAM slice ",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
      InitValueSa => "`SLICE_MODE_SA",
      InitValueLcNwk => "`SLICE_MODE_CRF_NWK_TS",
      InitValueLcFab => "`SLICE_MODE_CRF_FAB_TS",
      InitValueFe => "`SLICE_MODE_FE_TS",
    },
  },
  SliceModeReg1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 13;
    Name => "SliceModeReg[6]",
    RegMem => "Reg",
    Address => "16C",
    Width => "4", # Excel Formula: =calc_reg_width(E66:E66,F66)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    CgmSliceMode1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CgmSliceMode[n]",
      RegMem => "RegField",
      Description => "0  // Linecard mode CRF TS network slice
1  // Linecard mode CRF SN network slice
2  // Linecard mode CRF TS fabric slice
3  // Linecard mode CRF SN fabric slice
4  // TOR mode network slice with SLB
5  // TOR mode network slice with PLB --> not supported
6  // TOR mode fabric slice with SLB
7  // TOR mode fabric slice with PLB --> not supported
8  // FE mode with TS
9  // FE mode with SN
10 // DRAM slice ",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
      InitValueSa => "`SLICE_MODE_SA",
      InitValueLcNwk => "`SLICE_MODE_CRF_NWK_TS",
      InitValueLcFab => "`SLICE_MODE_CRF_FAB_TS",
      InitValueFe => "`SLICE_MODE_FE_TS",
    },
  },
  SliceModeReg2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 13;
    Name => "SliceModeReg[6]",
    RegMem => "Reg",
    Address => "16D",
    Width => "4", # Excel Formula: =calc_reg_width(E66:E66,F66)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    CgmSliceMode2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CgmSliceMode[n]",
      RegMem => "RegField",
      Description => "0  // Linecard mode CRF TS network slice
1  // Linecard mode CRF SN network slice
2  // Linecard mode CRF TS fabric slice
3  // Linecard mode CRF SN fabric slice
4  // TOR mode network slice with SLB
5  // TOR mode network slice with PLB --> not supported
6  // TOR mode fabric slice with SLB
7  // TOR mode fabric slice with PLB --> not supported
8  // FE mode with TS
9  // FE mode with SN
10 // DRAM slice ",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
      InitValueSa => "`SLICE_MODE_SA",
      InitValueLcNwk => "`SLICE_MODE_CRF_NWK_TS",
      InitValueLcFab => "`SLICE_MODE_CRF_FAB_TS",
      InitValueFe => "`SLICE_MODE_FE_TS",
    },
  },
  SliceModeReg3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 13;
    Name => "SliceModeReg[6]",
    RegMem => "Reg",
    Address => "16E",
    Width => "4", # Excel Formula: =calc_reg_width(E66:E66,F66)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    CgmSliceMode3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CgmSliceMode[n]",
      RegMem => "RegField",
      Description => "0  // Linecard mode CRF TS network slice
1  // Linecard mode CRF SN network slice
2  // Linecard mode CRF TS fabric slice
3  // Linecard mode CRF SN fabric slice
4  // TOR mode network slice with SLB
5  // TOR mode network slice with PLB --> not supported
6  // TOR mode fabric slice with SLB
7  // TOR mode fabric slice with PLB --> not supported
8  // FE mode with TS
9  // FE mode with SN
10 // DRAM slice ",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
      InitValueSa => "`SLICE_MODE_SA",
      InitValueLcNwk => "`SLICE_MODE_CRF_NWK_TS",
      InitValueLcFab => "`SLICE_MODE_CRF_FAB_TS",
      InitValueFe => "`SLICE_MODE_FE_TS",
    },
  },
  SliceModeReg4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 13;
    Name => "SliceModeReg[6]",
    RegMem => "Reg",
    Address => "16F",
    Width => "4", # Excel Formula: =calc_reg_width(E66:E66,F66)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    CgmSliceMode4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CgmSliceMode[n]",
      RegMem => "RegField",
      Description => "0  // Linecard mode CRF TS network slice
1  // Linecard mode CRF SN network slice
2  // Linecard mode CRF TS fabric slice
3  // Linecard mode CRF SN fabric slice
4  // TOR mode network slice with SLB
5  // TOR mode network slice with PLB --> not supported
6  // TOR mode fabric slice with SLB
7  // TOR mode fabric slice with PLB --> not supported
8  // FE mode with TS
9  // FE mode with SN
10 // DRAM slice ",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
      InitValueSa => "`SLICE_MODE_SA",
      InitValueLcNwk => "`SLICE_MODE_CRF_NWK_TS",
      InitValueLcFab => "`SLICE_MODE_CRF_FAB_TS",
      InitValueFe => "`SLICE_MODE_FE_TS",
    },
  },
  SliceModeReg5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 13;
    Name => "SliceModeReg[6]",
    RegMem => "Reg",
    Address => "170",
    Width => "4", # Excel Formula: =calc_reg_width(E66:E66,F66)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    CgmSliceMode5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CgmSliceMode[n]",
      RegMem => "RegField",
      Description => "0  // Linecard mode CRF TS network slice
1  // Linecard mode CRF SN network slice
2  // Linecard mode CRF TS fabric slice
3  // Linecard mode CRF SN fabric slice
4  // TOR mode network slice with SLB
5  // TOR mode network slice with PLB --> not supported
6  // TOR mode fabric slice with SLB
7  // TOR mode fabric slice with PLB --> not supported
8  // FE mode with TS
9  // FE mode with SN
10 // DRAM slice ",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d0",
      InitValueSa => "`SLICE_MODE_SA",
      InitValueLcNwk => "`SLICE_MODE_CRF_NWK_TS",
      InitValueLcFab => "`SLICE_MODE_CRF_FAB_TS",
      InitValueFe => "`SLICE_MODE_FE_TS",
    },
  },
  SqgHistogram0 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
    Name => "SqgHistogram[4]",
    RegMem => "Reg",
    Address => "171", # Excel Formula: =calc_reg_address(C65,A65,G65)
    Width => "1", # Excel Formula: =calc_reg_width(E68:E68,F68)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "4",
    ArrayIndex => "0",
    Sqg0Hist => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Sqg[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 4 SQ groups.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  SqgHistogram1 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
    Name => "SqgHistogram[4]",
    RegMem => "Reg",
    Address => "172",
    Width => "1", # Excel Formula: =calc_reg_width(E68:E68,F68)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "4",
    ArrayIndex => "1",
    Sqg1Hist => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Sqg[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 4 SQ groups.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  SqgHistogram2 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
    Name => "SqgHistogram[4]",
    RegMem => "Reg",
    Address => "173",
    Width => "1", # Excel Formula: =calc_reg_width(E68:E68,F68)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "4",
    ArrayIndex => "2",
    Sqg2Hist => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Sqg[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 4 SQ groups.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  SqgHistogram3 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
    Name => "SqgHistogram[4]",
    RegMem => "Reg",
    Address => "174",
    Width => "1", # Excel Formula: =calc_reg_width(E68:E68,F68)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "4",
    ArrayIndex => "3",
    Sqg3Hist => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Sqg[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 4 SQ groups.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CtcGroupHistogram0 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "CtcGroupHistogram[4]",
    RegMem => "Reg",
    Address => "175", # Excel Formula: =calc_reg_address(C67,A67,G67)
    Width => "1", # Excel Formula: =calc_reg_width(E70:E70,F70)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "4",
    ArrayIndex => "0",
    CtcGroup0Hist => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 9;
      Name => "CtcGroup[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 4 CTC groups.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CtcGroupHistogram1 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "CtcGroupHistogram[4]",
    RegMem => "Reg",
    Address => "176",
    Width => "1", # Excel Formula: =calc_reg_width(E70:E70,F70)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "4",
    ArrayIndex => "1",
    CtcGroup1Hist => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 9;
      Name => "CtcGroup[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 4 CTC groups.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CtcGroupHistogram2 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
    Name => "CtcGroupHistogram[4]",
    RegMem => "Reg",
    Address => "177",
    Width => "1", # Excel Formula: =calc_reg_width(E70:E70,F70)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "4",
    ArrayIndex => "2",
    CtcGroup2Hist => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 9;
      Name => "CtcGroup[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 4 CTC groups.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CtcGroupHistogram3 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
    Name => "CtcGroupHistogram[4]",
    RegMem => "Reg",
    Address => "178",
    Width => "1", # Excel Formula: =calc_reg_width(E70:E70,F70)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "4",
    ArrayIndex => "3",
    CtcGroup3Hist => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 9;
      Name => "CtcGroup[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 4 CTC groups.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CtcHistogram0 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
    Name => "CtcHistogram[8]",
    RegMem => "Reg",
    Address => "179", # Excel Formula: =calc_reg_address(C69,A69,G69)
    Width => "1", # Excel Formula: =calc_reg_width(E72:E72,F72)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "8",
    ArrayIndex => "0",
    Ctc0Hist => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ctc[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 8 CTCs.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F71,E72,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CtcHistogram1 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
    Name => "CtcHistogram[8]",
    RegMem => "Reg",
    Address => "17A",
    Width => "1", # Excel Formula: =calc_reg_width(E72:E72,F72)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "8",
    ArrayIndex => "1",
    Ctc1Hist => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ctc[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 8 CTCs.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F71,E72,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CtcHistogram2 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
    Name => "CtcHistogram[8]",
    RegMem => "Reg",
    Address => "17B",
    Width => "1", # Excel Formula: =calc_reg_width(E72:E72,F72)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "8",
    ArrayIndex => "2",
    Ctc2Hist => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ctc[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 8 CTCs.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F71,E72,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CtcHistogram3 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
    Name => "CtcHistogram[8]",
    RegMem => "Reg",
    Address => "17C",
    Width => "1", # Excel Formula: =calc_reg_width(E72:E72,F72)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "8",
    ArrayIndex => "3",
    Ctc3Hist => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ctc[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 8 CTCs.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F71,E72,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CtcHistogram4 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
    Name => "CtcHistogram[8]",
    RegMem => "Reg",
    Address => "17D",
    Width => "1", # Excel Formula: =calc_reg_width(E72:E72,F72)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "8",
    ArrayIndex => "4",
    Ctc4Hist => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ctc[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 8 CTCs.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F71,E72,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CtcHistogram5 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
    Name => "CtcHistogram[8]",
    RegMem => "Reg",
    Address => "17E",
    Width => "1", # Excel Formula: =calc_reg_width(E72:E72,F72)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "8",
    ArrayIndex => "5",
    Ctc5Hist => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ctc[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 8 CTCs.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F71,E72,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CtcHistogram6 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
    Name => "CtcHistogram[8]",
    RegMem => "Reg",
    Address => "17F",
    Width => "1", # Excel Formula: =calc_reg_width(E72:E72,F72)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "8",
    ArrayIndex => "6",
    Ctc6Hist => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ctc[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 8 CTCs.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F71,E72,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  CtcHistogram7 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
    Name => "CtcHistogram[8]",
    RegMem => "Reg",
    Address => "180",
    Width => "1", # Excel Formula: =calc_reg_width(E72:E72,F72)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=19,TimeIntervalWidth=10,RateEventWidth=14",
    ArrayLength => "8",
    ArrayIndex => "7",
    Ctc7Hist => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ctc[n]Hist",
      RegMem => "RegField",
      Description => "Histograms of the 8 CTCs.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F71,E72,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  RxCgmLastInPd => { #Structure Type: Reg;
    Name => "RxCgmLastInPd",
    RegMem => "Reg",
    Address => "181", # Excel Formula: =calc_reg_address(C71,A71,G71)
    Width => "32", # Excel Formula: =calc_reg_width(E74:E74,F74)
    Type => "ReadOnly",
    RxCgmLastIncomingPd => { #Structure Type: RegField;
      Name => "RxCgmLastIncomingPd",
      RegMem => "RegField",
      Description => "Holds the 16 bits of the PD muxed by LastIncomingPdMuxSel",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  RxCgmDebugConf => { #Structure Type: Reg;
    Name => "RxCgmDebugConf",
    RegMem => "Reg",
    Address => "182", # Excel Formula: =calc_reg_address(C73,A73,G73)
    Width => "6", # Excel Formula: =calc_reg_width(E76:E76,F76)
    Type => "Config",
    LastIncomingPdMuxSel => { #Structure Type: RegField;
      Name => "LastIncomingPdMuxSel",
      RegMem => "RegField",
      Description => "Selector for the debug mux of RxCgmLastIncomingPd",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F75,E76,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  SqCountersTable0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 16;
    Name => "SqCountersTable[6]",
    RegMem => "Mem",
    Address => "100000",
    Width => "47", # Excel Formula: =calc_mem_width(E78:E81,M77,F81,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "416",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=2,SampleReadAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=25,ReadActivityFactor=25,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "40",
    Slice0SqBufferCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SqBufferCounter",
      RegMem => "MemField",
      Description => "The number of buffers occupied by packets from the SQ.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F77,E78,TRUE)
      DefaultValue => "h0",
    },
    Slice0SqTimerValid => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SqTimerValid",
      RegMem => "MemField",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F78,E79)
      DefaultValue => "h0",
    },
    Slice0SqHrTimerOrHrCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SqHrTimerOrHrCounter",
      RegMem => "MemField",
      Description => "When in timer mode:
If SqTimerValid and SqState=Xon - the timer contains the time where the Xon has started.
If SqTimerValid and SqState=Xoff - the timer contains Tdrop which is the time after all packets are dropped.
When in counter mode:
Counts the number of buffers occupied by packtes that arrived after the Xoff was sent.",
      Width => "19",
      Position => "38:20", # Excel Formula: =calc_position(F79,E80)
      DefaultValue => "h0",
    },
    Slice0SqState => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SqState",
      RegMem => "MemField",
      Description => "The state of the Sq:
0 - Xon
1 - Xoff",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F80,E81)
      DefaultValue => "h0",
    },
  },
  SqCountersTable1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 16;
    Name => "SqCountersTable[6]",
    RegMem => "Mem",
    Address => "200000",
    Width => "47", # Excel Formula: =calc_mem_width(E78:E81,M77,F81,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "416",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=2,SampleReadAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=25,ReadActivityFactor=25,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "40",
    Slice1SqBufferCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SqBufferCounter",
      RegMem => "MemField",
      Description => "The number of buffers occupied by packets from the SQ.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F77,E78,TRUE)
      DefaultValue => "h0",
    },
    Slice1SqTimerValid => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SqTimerValid",
      RegMem => "MemField",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F78,E79)
      DefaultValue => "h0",
    },
    Slice1SqHrTimerOrHrCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SqHrTimerOrHrCounter",
      RegMem => "MemField",
      Description => "When in timer mode:
If SqTimerValid and SqState=Xon - the timer contains the time where the Xon has started.
If SqTimerValid and SqState=Xoff - the timer contains Tdrop which is the time after all packets are dropped.
When in counter mode:
Counts the number of buffers occupied by packtes that arrived after the Xoff was sent.",
      Width => "19",
      Position => "38:20", # Excel Formula: =calc_position(F79,E80)
      DefaultValue => "h0",
    },
    Slice1SqState => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SqState",
      RegMem => "MemField",
      Description => "The state of the Sq:
0 - Xon
1 - Xoff",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F80,E81)
      DefaultValue => "h0",
    },
  },
  SqCountersTable2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 16;
    Name => "SqCountersTable[6]",
    RegMem => "Mem",
    Address => "300000",
    Width => "47", # Excel Formula: =calc_mem_width(E78:E81,M77,F81,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "416",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=2,SampleReadAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=25,ReadActivityFactor=25,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "40",
    Slice2SqBufferCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SqBufferCounter",
      RegMem => "MemField",
      Description => "The number of buffers occupied by packets from the SQ.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F77,E78,TRUE)
      DefaultValue => "h0",
    },
    Slice2SqTimerValid => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SqTimerValid",
      RegMem => "MemField",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F78,E79)
      DefaultValue => "h0",
    },
    Slice2SqHrTimerOrHrCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SqHrTimerOrHrCounter",
      RegMem => "MemField",
      Description => "When in timer mode:
If SqTimerValid and SqState=Xon - the timer contains the time where the Xon has started.
If SqTimerValid and SqState=Xoff - the timer contains Tdrop which is the time after all packets are dropped.
When in counter mode:
Counts the number of buffers occupied by packtes that arrived after the Xoff was sent.",
      Width => "19",
      Position => "38:20", # Excel Formula: =calc_position(F79,E80)
      DefaultValue => "h0",
    },
    Slice2SqState => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SqState",
      RegMem => "MemField",
      Description => "The state of the Sq:
0 - Xon
1 - Xoff",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F80,E81)
      DefaultValue => "h0",
    },
  },
  SqCountersTable3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 16;
    Name => "SqCountersTable[6]",
    RegMem => "Mem",
    Address => "400000",
    Width => "47", # Excel Formula: =calc_mem_width(E78:E81,M77,F81,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "416",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=2,SampleReadAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=25,ReadActivityFactor=25,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "40",
    Slice3SqBufferCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SqBufferCounter",
      RegMem => "MemField",
      Description => "The number of buffers occupied by packets from the SQ.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F77,E78,TRUE)
      DefaultValue => "h0",
    },
    Slice3SqTimerValid => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SqTimerValid",
      RegMem => "MemField",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F78,E79)
      DefaultValue => "h0",
    },
    Slice3SqHrTimerOrHrCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SqHrTimerOrHrCounter",
      RegMem => "MemField",
      Description => "When in timer mode:
If SqTimerValid and SqState=Xon - the timer contains the time where the Xon has started.
If SqTimerValid and SqState=Xoff - the timer contains Tdrop which is the time after all packets are dropped.
When in counter mode:
Counts the number of buffers occupied by packtes that arrived after the Xoff was sent.",
      Width => "19",
      Position => "38:20", # Excel Formula: =calc_position(F79,E80)
      DefaultValue => "h0",
    },
    Slice3SqState => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SqState",
      RegMem => "MemField",
      Description => "The state of the Sq:
0 - Xon
1 - Xoff",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F80,E81)
      DefaultValue => "h0",
    },
  },
  SqCountersTable4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 16;
    Name => "SqCountersTable[6]",
    RegMem => "Mem",
    Address => "500000",
    Width => "47", # Excel Formula: =calc_mem_width(E78:E81,M77,F81,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "416",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=2,SampleReadAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=25,ReadActivityFactor=25,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "40",
    Slice4SqBufferCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SqBufferCounter",
      RegMem => "MemField",
      Description => "The number of buffers occupied by packets from the SQ.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F77,E78,TRUE)
      DefaultValue => "h0",
    },
    Slice4SqTimerValid => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SqTimerValid",
      RegMem => "MemField",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F78,E79)
      DefaultValue => "h0",
    },
    Slice4SqHrTimerOrHrCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SqHrTimerOrHrCounter",
      RegMem => "MemField",
      Description => "When in timer mode:
If SqTimerValid and SqState=Xon - the timer contains the time where the Xon has started.
If SqTimerValid and SqState=Xoff - the timer contains Tdrop which is the time after all packets are dropped.
When in counter mode:
Counts the number of buffers occupied by packtes that arrived after the Xoff was sent.",
      Width => "19",
      Position => "38:20", # Excel Formula: =calc_position(F79,E80)
      DefaultValue => "h0",
    },
    Slice4SqState => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SqState",
      RegMem => "MemField",
      Description => "The state of the Sq:
0 - Xon
1 - Xoff",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F80,E81)
      DefaultValue => "h0",
    },
  },
  SqCountersTable5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 16;
    Name => "SqCountersTable[6]",
    RegMem => "Mem",
    Address => "600000",
    Width => "47", # Excel Formula: =calc_mem_width(E78:E81,M77,F81,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "416",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=2,SampleReadAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=25,ReadActivityFactor=25,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "40",
    Slice5SqBufferCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SqBufferCounter",
      RegMem => "MemField",
      Description => "The number of buffers occupied by packets from the SQ.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F77,E78,TRUE)
      DefaultValue => "h0",
    },
    Slice5SqTimerValid => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SqTimerValid",
      RegMem => "MemField",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F78,E79)
      DefaultValue => "h0",
    },
    Slice5SqHrTimerOrHrCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SqHrTimerOrHrCounter",
      RegMem => "MemField",
      Description => "When in timer mode:
If SqTimerValid and SqState=Xon - the timer contains the time where the Xon has started.
If SqTimerValid and SqState=Xoff - the timer contains Tdrop which is the time after all packets are dropped.
When in counter mode:
Counts the number of buffers occupied by packtes that arrived after the Xoff was sent.",
      Width => "19",
      Position => "38:20", # Excel Formula: =calc_position(F79,E80)
      DefaultValue => "h0",
    },
    Slice5SqState => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SqState",
      RegMem => "MemField",
      Description => "The state of the Sq:
0 - Xon
1 - Xoff",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F80,E81)
      DefaultValue => "h0",
    },
  },
  CtcMapLut0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 10;
    Name => "CtcMapLut[6]",
    RegMem => "Mem",
    Address => "700000", # Excel Formula: =calc_mem_address(C77,A77,G82,L82)
    Width => "5", # Excel Formula: =calc_mem_width(E83:E84,M82,F84,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "5",
    Slice0CgmTc => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CgmTc",
      RegMem => "MemField",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F82,E83,TRUE)
      InitValueSa => "line >> 5",
      InitValueLcNwk => "line >> 5",
    },
    Slice0CgmTcGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CgmTcGroup",
      RegMem => "MemField",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F83,E84)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  CtcMapLut1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 10;
    Name => "CtcMapLut[6]",
    RegMem => "Mem",
    Address => "800000",
    Width => "5", # Excel Formula: =calc_mem_width(E83:E84,M82,F84,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "5",
    Slice1CgmTc => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CgmTc",
      RegMem => "MemField",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F82,E83,TRUE)
      InitValueSa => "line >> 5",
      InitValueLcNwk => "line >> 5",
    },
    Slice1CgmTcGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CgmTcGroup",
      RegMem => "MemField",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F83,E84)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  CtcMapLut2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 10;
    Name => "CtcMapLut[6]",
    RegMem => "Mem",
    Address => "900000",
    Width => "5", # Excel Formula: =calc_mem_width(E83:E84,M82,F84,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "5",
    Slice2CgmTc => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]CgmTc",
      RegMem => "MemField",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F82,E83,TRUE)
      InitValueSa => "line >> 5",
      InitValueLcNwk => "line >> 5",
    },
    Slice2CgmTcGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]CgmTcGroup",
      RegMem => "MemField",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F83,E84)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  CtcMapLut3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 10;
    Name => "CtcMapLut[6]",
    RegMem => "Mem",
    Address => "A00000",
    Width => "5", # Excel Formula: =calc_mem_width(E83:E84,M82,F84,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "5",
    Slice3CgmTc => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]CgmTc",
      RegMem => "MemField",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F82,E83,TRUE)
      InitValueSa => "line >> 5",
      InitValueLcNwk => "line >> 5",
    },
    Slice3CgmTcGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]CgmTcGroup",
      RegMem => "MemField",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F83,E84)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  CtcMapLut4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 10;
    Name => "CtcMapLut[6]",
    RegMem => "Mem",
    Address => "B00000",
    Width => "5", # Excel Formula: =calc_mem_width(E83:E84,M82,F84,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "5",
    Slice4CgmTc => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]CgmTc",
      RegMem => "MemField",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F82,E83,TRUE)
      InitValueSa => "line >> 5",
      InitValueLcNwk => "line >> 5",
    },
    Slice4CgmTcGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]CgmTcGroup",
      RegMem => "MemField",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F83,E84)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  CtcMapLut5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 10;
    Name => "CtcMapLut[6]",
    RegMem => "Mem",
    Address => "C00000",
    Width => "5", # Excel Formula: =calc_mem_width(E83:E84,M82,F84,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "5",
    Slice5CgmTc => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]CgmTc",
      RegMem => "MemField",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F82,E83,TRUE)
      InitValueSa => "line >> 5",
      InitValueLcNwk => "line >> 5",
    },
    Slice5CgmTcGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]CgmTcGroup",
      RegMem => "MemField",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F83,E84)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SqMapTable0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 11;
    Name => "SqMapTable[6]",
    RegMem => "Mem",
    Address => "D00000", # Excel Formula: =calc_mem_address(C82,A82,G85,L85)
    Width => "15", # Excel Formula: =calc_mem_width(E86:E88,M85,F88,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "15",
    Slice0MapMode => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MapMode",
      RegMem => "MemField",
      Description => "3-bit pointer to SqMapLut",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice0BaseSqCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BaseSqCounter",
      RegMem => "MemField",
      Description => "The base Sq counter",
      Width => "9",
      Position => "11:3", # Excel Formula: =calc_position(F86,E87)
      InitValueSa => "line << 3",
      InitValueLcNwk => "line << 3",
    },
    Slice0CtcPtr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CtcPtr",
      RegMem => "MemField",
      Description => "3-bit pointer to CtcMapLut",
      Width => "3",
      Position => "14:12", # Excel Formula: =calc_position(F87,E88)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SqMapTable1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 11;
    Name => "SqMapTable[6]",
    RegMem => "Mem",
    Address => "E00000",
    Width => "15", # Excel Formula: =calc_mem_width(E86:E88,M85,F88,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "15",
    Slice1MapMode => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MapMode",
      RegMem => "MemField",
      Description => "3-bit pointer to SqMapLut",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice1BaseSqCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BaseSqCounter",
      RegMem => "MemField",
      Description => "The base Sq counter",
      Width => "9",
      Position => "11:3", # Excel Formula: =calc_position(F86,E87)
      InitValueSa => "line << 3",
      InitValueLcNwk => "line << 3",
    },
    Slice1CtcPtr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CtcPtr",
      RegMem => "MemField",
      Description => "3-bit pointer to CtcMapLut",
      Width => "3",
      Position => "14:12", # Excel Formula: =calc_position(F87,E88)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SqMapTable2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 11;
    Name => "SqMapTable[6]",
    RegMem => "Mem",
    Address => "F00000",
    Width => "15", # Excel Formula: =calc_mem_width(E86:E88,M85,F88,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "15",
    Slice2MapMode => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]MapMode",
      RegMem => "MemField",
      Description => "3-bit pointer to SqMapLut",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice2BaseSqCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]BaseSqCounter",
      RegMem => "MemField",
      Description => "The base Sq counter",
      Width => "9",
      Position => "11:3", # Excel Formula: =calc_position(F86,E87)
      InitValueSa => "line << 3",
      InitValueLcNwk => "line << 3",
    },
    Slice2CtcPtr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]CtcPtr",
      RegMem => "MemField",
      Description => "3-bit pointer to CtcMapLut",
      Width => "3",
      Position => "14:12", # Excel Formula: =calc_position(F87,E88)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SqMapTable3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 11;
    Name => "SqMapTable[6]",
    RegMem => "Mem",
    Address => "1000000",
    Width => "15", # Excel Formula: =calc_mem_width(E86:E88,M85,F88,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "15",
    Slice3MapMode => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]MapMode",
      RegMem => "MemField",
      Description => "3-bit pointer to SqMapLut",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice3BaseSqCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]BaseSqCounter",
      RegMem => "MemField",
      Description => "The base Sq counter",
      Width => "9",
      Position => "11:3", # Excel Formula: =calc_position(F86,E87)
      InitValueSa => "line << 3",
      InitValueLcNwk => "line << 3",
    },
    Slice3CtcPtr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]CtcPtr",
      RegMem => "MemField",
      Description => "3-bit pointer to CtcMapLut",
      Width => "3",
      Position => "14:12", # Excel Formula: =calc_position(F87,E88)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SqMapTable4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 11;
    Name => "SqMapTable[6]",
    RegMem => "Mem",
    Address => "1100000",
    Width => "15", # Excel Formula: =calc_mem_width(E86:E88,M85,F88,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "15",
    Slice4MapMode => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]MapMode",
      RegMem => "MemField",
      Description => "3-bit pointer to SqMapLut",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice4BaseSqCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]BaseSqCounter",
      RegMem => "MemField",
      Description => "The base Sq counter",
      Width => "9",
      Position => "11:3", # Excel Formula: =calc_position(F86,E87)
      InitValueSa => "line << 3",
      InitValueLcNwk => "line << 3",
    },
    Slice4CtcPtr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]CtcPtr",
      RegMem => "MemField",
      Description => "3-bit pointer to CtcMapLut",
      Width => "3",
      Position => "14:12", # Excel Formula: =calc_position(F87,E88)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SqMapTable5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 11;
    Name => "SqMapTable[6]",
    RegMem => "Mem",
    Address => "1200000",
    Width => "15", # Excel Formula: =calc_mem_width(E86:E88,M85,F88,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "15",
    Slice5MapMode => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]MapMode",
      RegMem => "MemField",
      Description => "3-bit pointer to SqMapLut",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice5BaseSqCounter => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]BaseSqCounter",
      RegMem => "MemField",
      Description => "The base Sq counter",
      Width => "9",
      Position => "11:3", # Excel Formula: =calc_position(F86,E87)
      InitValueSa => "line << 3",
      InitValueLcNwk => "line << 3",
    },
    Slice5CtcPtr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]CtcPtr",
      RegMem => "MemField",
      Description => "3-bit pointer to CtcMapLut",
      Width => "3",
      Position => "14:12", # Excel Formula: =calc_position(F87,E88)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SqMapLut0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 9;
    Name => "SqMapLut[6]",
    RegMem => "Mem",
    Address => "1300000", # Excel Formula: =calc_mem_address(C85,A85,G89,L89)
    Width => "3", # Excel Formula: =calc_mem_width(E90:E90,M89,F90,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "3",
    Slice0CounterOffset => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CounterOffset",
      RegMem => "MemField",
      Description => "Counter Offset",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      InitValueSa => "line & 8'h1c",
      InitValueLcNwk => "line & 8'h1c",
    },
  },
  SqMapLut1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 9;
    Name => "SqMapLut[6]",
    RegMem => "Mem",
    Address => "1400000",
    Width => "3", # Excel Formula: =calc_mem_width(E90:E90,M89,F90,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "3",
    Slice1CounterOffset => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CounterOffset",
      RegMem => "MemField",
      Description => "Counter Offset",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      InitValueSa => "line & 8'h1c",
      InitValueLcNwk => "line & 8'h1c",
    },
  },
  SqMapLut2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 9;
    Name => "SqMapLut[6]",
    RegMem => "Mem",
    Address => "1500000",
    Width => "3", # Excel Formula: =calc_mem_width(E90:E90,M89,F90,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "3",
    Slice2CounterOffset => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]CounterOffset",
      RegMem => "MemField",
      Description => "Counter Offset",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      InitValueSa => "line & 8'h1c",
      InitValueLcNwk => "line & 8'h1c",
    },
  },
  SqMapLut3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 9;
    Name => "SqMapLut[6]",
    RegMem => "Mem",
    Address => "1600000",
    Width => "3", # Excel Formula: =calc_mem_width(E90:E90,M89,F90,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "3",
    Slice3CounterOffset => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]CounterOffset",
      RegMem => "MemField",
      Description => "Counter Offset",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      InitValueSa => "line & 8'h1c",
      InitValueLcNwk => "line & 8'h1c",
    },
  },
  SqMapLut4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 9;
    Name => "SqMapLut[6]",
    RegMem => "Mem",
    Address => "1700000",
    Width => "3", # Excel Formula: =calc_mem_width(E90:E90,M89,F90,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "3",
    Slice4CounterOffset => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]CounterOffset",
      RegMem => "MemField",
      Description => "Counter Offset",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      InitValueSa => "line & 8'h1c",
      InitValueLcNwk => "line & 8'h1c",
    },
  },
  SqMapLut5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 9;
    Name => "SqMapLut[6]",
    RegMem => "Mem",
    Address => "1800000",
    Width => "3", # Excel Formula: =calc_mem_width(E90:E90,M89,F90,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "3",
    Slice5CounterOffset => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]CounterOffset",
      RegMem => "MemField",
      Description => "Counter Offset",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F89,E90,TRUE)
      InitValueSa => "line & 8'h1c",
      InitValueLcNwk => "line & 8'h1c",
    },
  },
  SspSubPortMap0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 14;
    Name => "SspSubPortMap[6]",
    RegMem => "Mem",
    Address => "1900000", # Excel Formula: =calc_mem_address(C89,A89,G91,L91)
    Width => "2", # Excel Formula: =calc_mem_width(E92:E92,M91,F92,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "2",
    Slice0SspSubPortMap => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SspSubPortMap",
      RegMem => "MemField",
      Description => "Counter Offset",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SspSubPortMap1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 14;
    Name => "SspSubPortMap[6]",
    RegMem => "Mem",
    Address => "1A00000",
    Width => "2", # Excel Formula: =calc_mem_width(E92:E92,M91,F92,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "2",
    Slice1SspSubPortMap => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SspSubPortMap",
      RegMem => "MemField",
      Description => "Counter Offset",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SspSubPortMap2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 14;
    Name => "SspSubPortMap[6]",
    RegMem => "Mem",
    Address => "1B00000",
    Width => "2", # Excel Formula: =calc_mem_width(E92:E92,M91,F92,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "2",
    Slice2SspSubPortMap => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SspSubPortMap",
      RegMem => "MemField",
      Description => "Counter Offset",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SspSubPortMap3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 14;
    Name => "SspSubPortMap[6]",
    RegMem => "Mem",
    Address => "1C00000",
    Width => "2", # Excel Formula: =calc_mem_width(E92:E92,M91,F92,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "2",
    Slice3SspSubPortMap => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SspSubPortMap",
      RegMem => "MemField",
      Description => "Counter Offset",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SspSubPortMap4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 14;
    Name => "SspSubPortMap[6]",
    RegMem => "Mem",
    Address => "1D00000",
    Width => "2", # Excel Formula: =calc_mem_width(E92:E92,M91,F92,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "2",
    Slice4SspSubPortMap => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SspSubPortMap",
      RegMem => "MemField",
      Description => "Counter Offset",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SspSubPortMap5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 14;
    Name => "SspSubPortMap[6]",
    RegMem => "Mem",
    Address => "1E00000",
    Width => "2", # Excel Formula: =calc_mem_width(E92:E92,M91,F92,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "2",
    Slice5SspSubPortMap => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SspSubPortMap",
      RegMem => "MemField",
      Description => "Counter Offset",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  ProfileMapTable0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 16;
    Name => "ProfileMapTable[6]",
    RegMem => "Mem",
    Address => "1F00000", # Excel Formula: =calc_mem_address(C91,A91,G93,L93)
    Width => "36", # Excel Formula: =calc_mem_width(E94:E105,M93,F105,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "104",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "Read latency must be an odd number
Changed to FF based due to PD request - due to the change to FFs the memory wrapper was changed to type 2R1W Fast Write instead of 2R1W Slow Write due to problems in defining 2R1W Slow Write as FF based.",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "36",
    Slice0Entry0SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice0Entry0SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "5:2", # Excel Formula: =calc_position(F94,E95)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice0Entry0SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F95,E96)
    },
    Slice0Entry1SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F96,E97)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice0Entry1SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F97,E98)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice0Entry1SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "17:15", # Excel Formula: =calc_position(F98,E99)
    },
    Slice0Entry2SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "19:18", # Excel Formula: =calc_position(F99,E100)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice0Entry2SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "23:20", # Excel Formula: =calc_position(F100,E101)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice0Entry2SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "26:24", # Excel Formula: =calc_position(F101,E102)
    },
    Slice0Entry3SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "28:27", # Excel Formula: =calc_position(F102,E103)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice0Entry3SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "32:29", # Excel Formula: =calc_position(F103,E104)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice0Entry3SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "35:33", # Excel Formula: =calc_position(F104,E105)
    },
  },
  ProfileMapTable1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 16;
    Name => "ProfileMapTable[6]",
    RegMem => "Mem",
    Address => "2000000",
    Width => "36", # Excel Formula: =calc_mem_width(E94:E105,M93,F105,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "104",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "Read latency must be an odd number
Changed to FF based due to PD request - due to the change to FFs the memory wrapper was changed to type 2R1W Fast Write instead of 2R1W Slow Write due to problems in defining 2R1W Slow Write as FF based.",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "36",
    Slice1Entry0SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice1Entry0SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "5:2", # Excel Formula: =calc_position(F94,E95)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice1Entry0SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F95,E96)
    },
    Slice1Entry1SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F96,E97)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice1Entry1SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F97,E98)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice1Entry1SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "17:15", # Excel Formula: =calc_position(F98,E99)
    },
    Slice1Entry2SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "19:18", # Excel Formula: =calc_position(F99,E100)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice1Entry2SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "23:20", # Excel Formula: =calc_position(F100,E101)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice1Entry2SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "26:24", # Excel Formula: =calc_position(F101,E102)
    },
    Slice1Entry3SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "28:27", # Excel Formula: =calc_position(F102,E103)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice1Entry3SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "32:29", # Excel Formula: =calc_position(F103,E104)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice1Entry3SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "35:33", # Excel Formula: =calc_position(F104,E105)
    },
  },
  ProfileMapTable2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 16;
    Name => "ProfileMapTable[6]",
    RegMem => "Mem",
    Address => "2100000",
    Width => "36", # Excel Formula: =calc_mem_width(E94:E105,M93,F105,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "104",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "Read latency must be an odd number
Changed to FF based due to PD request - due to the change to FFs the memory wrapper was changed to type 2R1W Fast Write instead of 2R1W Slow Write due to problems in defining 2R1W Slow Write as FF based.",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "36",
    Slice2Entry0SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice2Entry0SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "5:2", # Excel Formula: =calc_position(F94,E95)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice2Entry0SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F95,E96)
    },
    Slice2Entry1SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F96,E97)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice2Entry1SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F97,E98)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice2Entry1SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "17:15", # Excel Formula: =calc_position(F98,E99)
    },
    Slice2Entry2SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "19:18", # Excel Formula: =calc_position(F99,E100)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice2Entry2SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "23:20", # Excel Formula: =calc_position(F100,E101)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice2Entry2SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "26:24", # Excel Formula: =calc_position(F101,E102)
    },
    Slice2Entry3SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "28:27", # Excel Formula: =calc_position(F102,E103)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice2Entry3SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "32:29", # Excel Formula: =calc_position(F103,E104)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice2Entry3SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "35:33", # Excel Formula: =calc_position(F104,E105)
    },
  },
  ProfileMapTable3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 16;
    Name => "ProfileMapTable[6]",
    RegMem => "Mem",
    Address => "2200000",
    Width => "36", # Excel Formula: =calc_mem_width(E94:E105,M93,F105,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "104",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "Read latency must be an odd number
Changed to FF based due to PD request - due to the change to FFs the memory wrapper was changed to type 2R1W Fast Write instead of 2R1W Slow Write due to problems in defining 2R1W Slow Write as FF based.",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "36",
    Slice3Entry0SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice3Entry0SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "5:2", # Excel Formula: =calc_position(F94,E95)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice3Entry0SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F95,E96)
    },
    Slice3Entry1SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F96,E97)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice3Entry1SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F97,E98)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice3Entry1SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "17:15", # Excel Formula: =calc_position(F98,E99)
    },
    Slice3Entry2SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "19:18", # Excel Formula: =calc_position(F99,E100)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice3Entry2SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "23:20", # Excel Formula: =calc_position(F100,E101)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice3Entry2SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "26:24", # Excel Formula: =calc_position(F101,E102)
    },
    Slice3Entry3SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "28:27", # Excel Formula: =calc_position(F102,E103)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice3Entry3SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "32:29", # Excel Formula: =calc_position(F103,E104)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice3Entry3SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "35:33", # Excel Formula: =calc_position(F104,E105)
    },
  },
  ProfileMapTable4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 16;
    Name => "ProfileMapTable[6]",
    RegMem => "Mem",
    Address => "2300000",
    Width => "36", # Excel Formula: =calc_mem_width(E94:E105,M93,F105,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "104",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "Read latency must be an odd number
Changed to FF based due to PD request - due to the change to FFs the memory wrapper was changed to type 2R1W Fast Write instead of 2R1W Slow Write due to problems in defining 2R1W Slow Write as FF based.",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "36",
    Slice4Entry0SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice4Entry0SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "5:2", # Excel Formula: =calc_position(F94,E95)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice4Entry0SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F95,E96)
    },
    Slice4Entry1SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F96,E97)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice4Entry1SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F97,E98)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice4Entry1SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "17:15", # Excel Formula: =calc_position(F98,E99)
    },
    Slice4Entry2SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "19:18", # Excel Formula: =calc_position(F99,E100)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice4Entry2SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "23:20", # Excel Formula: =calc_position(F100,E101)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice4Entry2SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "26:24", # Excel Formula: =calc_position(F101,E102)
    },
    Slice4Entry3SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "28:27", # Excel Formula: =calc_position(F102,E103)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice4Entry3SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "32:29", # Excel Formula: =calc_position(F103,E104)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice4Entry3SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "35:33", # Excel Formula: =calc_position(F104,E105)
    },
  },
  ProfileMapTable5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 16;
    Name => "ProfileMapTable[6]",
    RegMem => "Mem",
    Address => "2400000",
    Width => "36", # Excel Formula: =calc_mem_width(E94:E105,M93,F105,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "104",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "Read latency must be an odd number
Changed to FF based due to PD request - due to the change to FFs the memory wrapper was changed to type 2R1W Fast Write instead of 2R1W Slow Write due to problems in defining 2R1W Slow Write as FF based.",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "36",
    Slice5Entry0SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice5Entry0SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "5:2", # Excel Formula: =calc_position(F94,E95)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice5Entry0SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F95,E96)
    },
    Slice5Entry1SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F96,E97)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice5Entry1SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F97,E98)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice5Entry1SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "17:15", # Excel Formula: =calc_position(F98,E99)
    },
    Slice5Entry2SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "19:18", # Excel Formula: =calc_position(F99,E100)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice5Entry2SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "23:20", # Excel Formula: =calc_position(F100,E101)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice5Entry2SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "26:24", # Excel Formula: =calc_position(F101,E102)
    },
    Slice5Entry3SqGroup => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqGroup",
      RegMem => "MemField",
      Description => "The group that the Sq is associated with.",
      Width => "2",
      Position => "28:27", # Excel Formula: =calc_position(F102,E103)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice5Entry3SqProfile => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqProfile",
      RegMem => "MemField",
      Description => "The profile number of the Sq.",
      Width => "4",
      Position => "32:29", # Excel Formula: =calc_position(F103,E104)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
    Slice5Entry3SqDropCntIndex => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqDropCntIndex",
      RegMem => "MemField",
      Description => "The index of the drop counter that count drops associated with the Sq",
      Width => "3",
      Position => "35:33", # Excel Formula: =calc_position(F104,E105)
    },
  },
  SqGroupProfileLut0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "SqGroupProfileLut[6]",
    RegMem => "Mem",
    Address => "2500000", # Excel Formula: =calc_mem_address(C93,A93,G106,L106)
    Width => "57", # Excel Formula: =calc_mem_width(E107:E109,M106,F109,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "57",
    Slice0SqGroupThr0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr0",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h0.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F106,E107,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice0SqGroupThr1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr1",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold and above Thr0 - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h1.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F107,E108)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice0SqGroupThr2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr2",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold and above Thr1 - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h2.
If the SqGroup buffer counter is abovehis threshold a - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h3.",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F108,E109)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  SqGroupProfileLut1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "SqGroupProfileLut[6]",
    RegMem => "Mem",
    Address => "2600000",
    Width => "57", # Excel Formula: =calc_mem_width(E107:E109,M106,F109,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "57",
    Slice1SqGroupThr0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr0",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h0.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F106,E107,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice1SqGroupThr1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr1",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold and above Thr0 - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h1.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F107,E108)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice1SqGroupThr2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr2",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold and above Thr1 - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h2.
If the SqGroup buffer counter is abovehis threshold a - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h3.",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F108,E109)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  SqGroupProfileLut2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 18;
    Name => "SqGroupProfileLut[6]",
    RegMem => "Mem",
    Address => "2700000",
    Width => "57", # Excel Formula: =calc_mem_width(E107:E109,M106,F109,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "57",
    Slice2SqGroupThr0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr0",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h0.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F106,E107,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice2SqGroupThr1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr1",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold and above Thr0 - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h1.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F107,E108)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice2SqGroupThr2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr2",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold and above Thr1 - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h2.
If the SqGroup buffer counter is abovehis threshold a - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h3.",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F108,E109)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  SqGroupProfileLut3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 18;
    Name => "SqGroupProfileLut[6]",
    RegMem => "Mem",
    Address => "2800000",
    Width => "57", # Excel Formula: =calc_mem_width(E107:E109,M106,F109,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "57",
    Slice3SqGroupThr0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr0",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h0.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F106,E107,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice3SqGroupThr1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr1",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold and above Thr0 - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h1.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F107,E108)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice3SqGroupThr2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr2",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold and above Thr1 - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h2.
If the SqGroup buffer counter is abovehis threshold a - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h3.",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F108,E109)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  SqGroupProfileLut4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 18;
    Name => "SqGroupProfileLut[6]",
    RegMem => "Mem",
    Address => "2900000",
    Width => "57", # Excel Formula: =calc_mem_width(E107:E109,M106,F109,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "57",
    Slice4SqGroupThr0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr0",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h0.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F106,E107,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice4SqGroupThr1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr1",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold and above Thr0 - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h1.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F107,E108)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice4SqGroupThr2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr2",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold and above Thr1 - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h2.
If the SqGroup buffer counter is abovehis threshold a - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h3.",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F108,E109)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  SqGroupProfileLut5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 18;
    Name => "SqGroupProfileLut[6]",
    RegMem => "Mem",
    Address => "2A00000",
    Width => "57", # Excel Formula: =calc_mem_width(E107:E109,M106,F109,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "57",
    Slice5SqGroupThr0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr0",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h0.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F106,E107,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice5SqGroupThr1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr1",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold and above Thr0 - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h1.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F107,E108)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice5SqGroupThr2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SqGroupThr2",
      RegMem => "MemField",
      Description => "If the SqGroup buffer counter is below this threshold and above Thr1 - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h2.
If the SqGroup buffer counter is abovehis threshold a - the SqGroup status in the index for the Source CGM Policy LUT will be 2'h3.",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F108,E109)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  SqProfileLut0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 13;
    Name => "SqProfileLut[6]",
    RegMem => "Mem",
    Address => "2B00000", # Excel Formula: =calc_mem_address(C106,A106,G110,L110)
    Width => "76", # Excel Formula: =calc_mem_width(E111:E114,M110,F114,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "16",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "76",
    Slice0SqThr0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr0",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold - the SQ status in the index for the Source CGM Policy LUT will be 2'h0.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F110,E111,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice0SqThr1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr1",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold and above Thr0 - the SQ status in the index for the Source CGM Policy LUT will be 2'h1.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F111,E112)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice0SqThr2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr2",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold and above Thr1 - the SQ status in the index for the Source CGM Policy LUT will be 2'h2.
If the SQ buffer counter is abovehis threshold a - the SQ status in the index for the Source CGM Policy LUT will be 2'h3.",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F112,E113)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice0HrThresholdOrTimerMax => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]HrThresholdOrTimerMax",
      RegMem => "MemField",
      Description => "When in HrManagementMode = timer - contains the max timer which is the maximum time for the peer device to respond to flow control. Resolution is 4nsec.
When in HrManagementMode = size - contains the maximal amount of data the peer device can send before reacting to the flow control. Resolution is buffers.",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F113,E114)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  SqProfileLut1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 13;
    Name => "SqProfileLut[6]",
    RegMem => "Mem",
    Address => "2C00000",
    Width => "76", # Excel Formula: =calc_mem_width(E111:E114,M110,F114,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "16",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "76",
    Slice1SqThr0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr0",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold - the SQ status in the index for the Source CGM Policy LUT will be 2'h0.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F110,E111,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice1SqThr1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr1",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold and above Thr0 - the SQ status in the index for the Source CGM Policy LUT will be 2'h1.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F111,E112)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice1SqThr2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr2",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold and above Thr1 - the SQ status in the index for the Source CGM Policy LUT will be 2'h2.
If the SQ buffer counter is abovehis threshold a - the SQ status in the index for the Source CGM Policy LUT will be 2'h3.",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F112,E113)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice1HrThresholdOrTimerMax => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]HrThresholdOrTimerMax",
      RegMem => "MemField",
      Description => "When in HrManagementMode = timer - contains the max timer which is the maximum time for the peer device to respond to flow control. Resolution is 4nsec.
When in HrManagementMode = size - contains the maximal amount of data the peer device can send before reacting to the flow control. Resolution is buffers.",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F113,E114)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  SqProfileLut2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 13;
    Name => "SqProfileLut[6]",
    RegMem => "Mem",
    Address => "2D00000",
    Width => "76", # Excel Formula: =calc_mem_width(E111:E114,M110,F114,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "16",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "76",
    Slice2SqThr0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr0",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold - the SQ status in the index for the Source CGM Policy LUT will be 2'h0.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F110,E111,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice2SqThr1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr1",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold and above Thr0 - the SQ status in the index for the Source CGM Policy LUT will be 2'h1.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F111,E112)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice2SqThr2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr2",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold and above Thr1 - the SQ status in the index for the Source CGM Policy LUT will be 2'h2.
If the SQ buffer counter is abovehis threshold a - the SQ status in the index for the Source CGM Policy LUT will be 2'h3.",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F112,E113)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice2HrThresholdOrTimerMax => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]HrThresholdOrTimerMax",
      RegMem => "MemField",
      Description => "When in HrManagementMode = timer - contains the max timer which is the maximum time for the peer device to respond to flow control. Resolution is 4nsec.
When in HrManagementMode = size - contains the maximal amount of data the peer device can send before reacting to the flow control. Resolution is buffers.",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F113,E114)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  SqProfileLut3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 13;
    Name => "SqProfileLut[6]",
    RegMem => "Mem",
    Address => "2E00000",
    Width => "76", # Excel Formula: =calc_mem_width(E111:E114,M110,F114,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "16",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "76",
    Slice3SqThr0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr0",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold - the SQ status in the index for the Source CGM Policy LUT will be 2'h0.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F110,E111,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice3SqThr1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr1",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold and above Thr0 - the SQ status in the index for the Source CGM Policy LUT will be 2'h1.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F111,E112)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice3SqThr2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr2",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold and above Thr1 - the SQ status in the index for the Source CGM Policy LUT will be 2'h2.
If the SQ buffer counter is abovehis threshold a - the SQ status in the index for the Source CGM Policy LUT will be 2'h3.",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F112,E113)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice3HrThresholdOrTimerMax => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]HrThresholdOrTimerMax",
      RegMem => "MemField",
      Description => "When in HrManagementMode = timer - contains the max timer which is the maximum time for the peer device to respond to flow control. Resolution is 4nsec.
When in HrManagementMode = size - contains the maximal amount of data the peer device can send before reacting to the flow control. Resolution is buffers.",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F113,E114)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  SqProfileLut4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 13;
    Name => "SqProfileLut[6]",
    RegMem => "Mem",
    Address => "2F00000",
    Width => "76", # Excel Formula: =calc_mem_width(E111:E114,M110,F114,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "16",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "76",
    Slice4SqThr0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr0",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold - the SQ status in the index for the Source CGM Policy LUT will be 2'h0.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F110,E111,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice4SqThr1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr1",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold and above Thr0 - the SQ status in the index for the Source CGM Policy LUT will be 2'h1.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F111,E112)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice4SqThr2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr2",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold and above Thr1 - the SQ status in the index for the Source CGM Policy LUT will be 2'h2.
If the SQ buffer counter is abovehis threshold a - the SQ status in the index for the Source CGM Policy LUT will be 2'h3.",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F112,E113)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice4HrThresholdOrTimerMax => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]HrThresholdOrTimerMax",
      RegMem => "MemField",
      Description => "When in HrManagementMode = timer - contains the max timer which is the maximum time for the peer device to respond to flow control. Resolution is 4nsec.
When in HrManagementMode = size - contains the maximal amount of data the peer device can send before reacting to the flow control. Resolution is buffers.",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F113,E114)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  SqProfileLut5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 13;
    Name => "SqProfileLut[6]",
    RegMem => "Mem",
    Address => "3000000",
    Width => "76", # Excel Formula: =calc_mem_width(E111:E114,M110,F114,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "16",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "76",
    Slice5SqThr0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr0",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold - the SQ status in the index for the Source CGM Policy LUT will be 2'h0.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F110,E111,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice5SqThr1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr1",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold and above Thr0 - the SQ status in the index for the Source CGM Policy LUT will be 2'h1.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F111,E112)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice5SqThr2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SqThr2",
      RegMem => "MemField",
      Description => "If the SQ buffer counter is below this threshold and above Thr1 - the SQ status in the index for the Source CGM Policy LUT will be 2'h2.
If the SQ buffer counter is abovehis threshold a - the SQ status in the index for the Source CGM Policy LUT will be 2'h3.",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F112,E113)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice5HrThresholdOrTimerMax => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]HrThresholdOrTimerMax",
      RegMem => "MemField",
      Description => "When in HrManagementMode = timer - contains the max timer which is the maximum time for the peer device to respond to flow control. Resolution is 4nsec.
When in HrManagementMode = size - contains the maximal amount of data the peer device can send before reacting to the flow control. Resolution is buffers.",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F113,E114)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  CtcProfileLut0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 14;
    Name => "CtcProfileLut[6]",
    RegMem => "Mem",
    Address => "3100000", # Excel Formula: =calc_mem_address(C110,A110,G115,L115)
    Width => "38", # Excel Formula: =calc_mem_width(E116:E117,M115,F117,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "38",
    Slice0CtcGreenThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGreenThr",
      RegMem => "MemField",
      Description => "If the CTC buffer counter is above this threshold - packets with PD<RxCGM DP> = 0 will be dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F115,E116,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice0CtcYellowThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CtcYellowThr",
      RegMem => "MemField",
      Description => "If the CTC buffer counter is above this threshold - packets with PD<RxCGM DP> = 1 will be dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F116,E117)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  CtcProfileLut1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 14;
    Name => "CtcProfileLut[6]",
    RegMem => "Mem",
    Address => "3200000",
    Width => "38", # Excel Formula: =calc_mem_width(E116:E117,M115,F117,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "38",
    Slice1CtcGreenThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGreenThr",
      RegMem => "MemField",
      Description => "If the CTC buffer counter is above this threshold - packets with PD<RxCGM DP> = 0 will be dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F115,E116,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice1CtcYellowThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CtcYellowThr",
      RegMem => "MemField",
      Description => "If the CTC buffer counter is above this threshold - packets with PD<RxCGM DP> = 1 will be dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F116,E117)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  CtcProfileLut2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 14;
    Name => "CtcProfileLut[6]",
    RegMem => "Mem",
    Address => "3300000",
    Width => "38", # Excel Formula: =calc_mem_width(E116:E117,M115,F117,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "38",
    Slice2CtcGreenThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGreenThr",
      RegMem => "MemField",
      Description => "If the CTC buffer counter is above this threshold - packets with PD<RxCGM DP> = 0 will be dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F115,E116,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice2CtcYellowThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]CtcYellowThr",
      RegMem => "MemField",
      Description => "If the CTC buffer counter is above this threshold - packets with PD<RxCGM DP> = 1 will be dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F116,E117)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  CtcProfileLut3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 14;
    Name => "CtcProfileLut[6]",
    RegMem => "Mem",
    Address => "3400000",
    Width => "38", # Excel Formula: =calc_mem_width(E116:E117,M115,F117,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "38",
    Slice3CtcGreenThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGreenThr",
      RegMem => "MemField",
      Description => "If the CTC buffer counter is above this threshold - packets with PD<RxCGM DP> = 0 will be dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F115,E116,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice3CtcYellowThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]CtcYellowThr",
      RegMem => "MemField",
      Description => "If the CTC buffer counter is above this threshold - packets with PD<RxCGM DP> = 1 will be dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F116,E117)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  CtcProfileLut4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 14;
    Name => "CtcProfileLut[6]",
    RegMem => "Mem",
    Address => "3500000",
    Width => "38", # Excel Formula: =calc_mem_width(E116:E117,M115,F117,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "38",
    Slice4CtcGreenThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGreenThr",
      RegMem => "MemField",
      Description => "If the CTC buffer counter is above this threshold - packets with PD<RxCGM DP> = 0 will be dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F115,E116,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice4CtcYellowThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]CtcYellowThr",
      RegMem => "MemField",
      Description => "If the CTC buffer counter is above this threshold - packets with PD<RxCGM DP> = 1 will be dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F116,E117)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  CtcProfileLut5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 14;
    Name => "CtcProfileLut[6]",
    RegMem => "Mem",
    Address => "3600000",
    Width => "38", # Excel Formula: =calc_mem_width(E116:E117,M115,F117,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "38",
    Slice5CtcGreenThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGreenThr",
      RegMem => "MemField",
      Description => "If the CTC buffer counter is above this threshold - packets with PD<RxCGM DP> = 0 will be dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F115,E116,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice5CtcYellowThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]CtcYellowThr",
      RegMem => "MemField",
      Description => "If the CTC buffer counter is above this threshold - packets with PD<RxCGM DP> = 1 will be dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F116,E117)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  CtcGroupProfileLut0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "CtcGroupProfileLut[6]",
    RegMem => "Mem",
    Address => "3700000", # Excel Formula: =calc_mem_address(C115,A115,G118,L118)
    Width => "38", # Excel Formula: =calc_mem_width(E119:E120,M118,F120,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "38",
    Slice0CtcGroupGreenThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGroupGreenThr",
      RegMem => "MemField",
      Description => "If the CTC Group buffer counter is above this threshold - packets with PD<RxCGM DP> = 0 will be dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F118,E119,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice0CtcGroupYellowThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGroupYellowThr",
      RegMem => "MemField",
      Description => "If the CTC Group buffer counter is above this threshold - packets with PD<RxCGM DP> = 1 will be dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F119,E120)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  CtcGroupProfileLut1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "CtcGroupProfileLut[6]",
    RegMem => "Mem",
    Address => "3800000",
    Width => "38", # Excel Formula: =calc_mem_width(E119:E120,M118,F120,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "38",
    Slice1CtcGroupGreenThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGroupGreenThr",
      RegMem => "MemField",
      Description => "If the CTC Group buffer counter is above this threshold - packets with PD<RxCGM DP> = 0 will be dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F118,E119,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice1CtcGroupYellowThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGroupYellowThr",
      RegMem => "MemField",
      Description => "If the CTC Group buffer counter is above this threshold - packets with PD<RxCGM DP> = 1 will be dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F119,E120)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  CtcGroupProfileLut2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 19;
    Name => "CtcGroupProfileLut[6]",
    RegMem => "Mem",
    Address => "3900000",
    Width => "38", # Excel Formula: =calc_mem_width(E119:E120,M118,F120,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "38",
    Slice2CtcGroupGreenThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGroupGreenThr",
      RegMem => "MemField",
      Description => "If the CTC Group buffer counter is above this threshold - packets with PD<RxCGM DP> = 0 will be dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F118,E119,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice2CtcGroupYellowThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGroupYellowThr",
      RegMem => "MemField",
      Description => "If the CTC Group buffer counter is above this threshold - packets with PD<RxCGM DP> = 1 will be dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F119,E120)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  CtcGroupProfileLut3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 19;
    Name => "CtcGroupProfileLut[6]",
    RegMem => "Mem",
    Address => "3A00000",
    Width => "38", # Excel Formula: =calc_mem_width(E119:E120,M118,F120,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "38",
    Slice3CtcGroupGreenThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGroupGreenThr",
      RegMem => "MemField",
      Description => "If the CTC Group buffer counter is above this threshold - packets with PD<RxCGM DP> = 0 will be dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F118,E119,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice3CtcGroupYellowThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGroupYellowThr",
      RegMem => "MemField",
      Description => "If the CTC Group buffer counter is above this threshold - packets with PD<RxCGM DP> = 1 will be dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F119,E120)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  CtcGroupProfileLut4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 19;
    Name => "CtcGroupProfileLut[6]",
    RegMem => "Mem",
    Address => "3B00000",
    Width => "38", # Excel Formula: =calc_mem_width(E119:E120,M118,F120,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "38",
    Slice4CtcGroupGreenThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGroupGreenThr",
      RegMem => "MemField",
      Description => "If the CTC Group buffer counter is above this threshold - packets with PD<RxCGM DP> = 0 will be dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F118,E119,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice4CtcGroupYellowThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGroupYellowThr",
      RegMem => "MemField",
      Description => "If the CTC Group buffer counter is above this threshold - packets with PD<RxCGM DP> = 1 will be dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F119,E120)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  CtcGroupProfileLut5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 19;
    Name => "CtcGroupProfileLut[6]",
    RegMem => "Mem",
    Address => "3C00000",
    Width => "38", # Excel Formula: =calc_mem_width(E119:E120,M118,F120,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "38",
    Slice5CtcGroupGreenThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGroupGreenThr",
      RegMem => "MemField",
      Description => "If the CTC Group buffer counter is above this threshold - packets with PD<RxCGM DP> = 0 will be dropped.",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F118,E119,TRUE)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
    Slice5CtcGroupYellowThr => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]CtcGroupYellowThr",
      RegMem => "MemField",
      Description => "If the CTC Group buffer counter is above this threshold - packets with PD<RxCGM DP> = 1 will be dropped.",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F119,E120)
      InitValueSa => "0x7ffff",
      InitValueLcNwk => "0x7ffff",
    },
  },
  SourceCgmPolicyLut0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "SourceCgmPolicyLut[6]",
    RegMem => "Mem",
    Address => "3D00000", # Excel Formula: =calc_mem_address(C118,A118,G121,L121)
    Description => "The index to the table is:
{CounterAStatus[1:0], SQDiscrete[1:0], SQGroupDiscrete[1:0], SQ Profile[3:0]}
Parsing of entries based on SourceCgmPolicyLutMap",
    Width => "18", # Excel Formula: =calc_mem_width(E122:E125,M121,F125,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "12",
    Slice0SourceCgmPolicyLutEntry0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry0",
      RegMem => "MemField",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F121,E122,TRUE)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice0SourceCgmPolicyLutEntry1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry1",
      RegMem => "MemField",
      Width => "3",
      Position => "5:3", # Excel Formula: =calc_position(F122,E123)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice0SourceCgmPolicyLutEntry2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry2",
      RegMem => "MemField",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F123,E124)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice0SourceCgmPolicyLutEntry3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry3",
      RegMem => "MemField",
      Width => "3",
      Position => "11:9", # Excel Formula: =calc_position(F124,E125)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
  },
  SourceCgmPolicyLut1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "SourceCgmPolicyLut[6]",
    RegMem => "Mem",
    Address => "3E00000",
    Description => "The index to the table is:
{CounterAStatus[1:0], SQDiscrete[1:0], SQGroupDiscrete[1:0], SQ Profile[3:0]}
Parsing of entries based on SourceCgmPolicyLutMap",
    Width => "18", # Excel Formula: =calc_mem_width(E122:E125,M121,F125,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "12",
    Slice1SourceCgmPolicyLutEntry0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry0",
      RegMem => "MemField",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F121,E122,TRUE)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice1SourceCgmPolicyLutEntry1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry1",
      RegMem => "MemField",
      Width => "3",
      Position => "5:3", # Excel Formula: =calc_position(F122,E123)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice1SourceCgmPolicyLutEntry2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry2",
      RegMem => "MemField",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F123,E124)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice1SourceCgmPolicyLutEntry3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry3",
      RegMem => "MemField",
      Width => "3",
      Position => "11:9", # Excel Formula: =calc_position(F124,E125)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
  },
  SourceCgmPolicyLut2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 19;
    Name => "SourceCgmPolicyLut[6]",
    RegMem => "Mem",
    Address => "3F00000",
    Description => "The index to the table is:
{CounterAStatus[1:0], SQDiscrete[1:0], SQGroupDiscrete[1:0], SQ Profile[3:0]}
Parsing of entries based on SourceCgmPolicyLutMap",
    Width => "18", # Excel Formula: =calc_mem_width(E122:E125,M121,F125,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "12",
    Slice2SourceCgmPolicyLutEntry0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry0",
      RegMem => "MemField",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F121,E122,TRUE)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice2SourceCgmPolicyLutEntry1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry1",
      RegMem => "MemField",
      Width => "3",
      Position => "5:3", # Excel Formula: =calc_position(F122,E123)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice2SourceCgmPolicyLutEntry2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry2",
      RegMem => "MemField",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F123,E124)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice2SourceCgmPolicyLutEntry3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry3",
      RegMem => "MemField",
      Width => "3",
      Position => "11:9", # Excel Formula: =calc_position(F124,E125)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
  },
  SourceCgmPolicyLut3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 19;
    Name => "SourceCgmPolicyLut[6]",
    RegMem => "Mem",
    Address => "4000000",
    Description => "The index to the table is:
{CounterAStatus[1:0], SQDiscrete[1:0], SQGroupDiscrete[1:0], SQ Profile[3:0]}
Parsing of entries based on SourceCgmPolicyLutMap",
    Width => "18", # Excel Formula: =calc_mem_width(E122:E125,M121,F125,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "12",
    Slice3SourceCgmPolicyLutEntry0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry0",
      RegMem => "MemField",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F121,E122,TRUE)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice3SourceCgmPolicyLutEntry1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry1",
      RegMem => "MemField",
      Width => "3",
      Position => "5:3", # Excel Formula: =calc_position(F122,E123)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice3SourceCgmPolicyLutEntry2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry2",
      RegMem => "MemField",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F123,E124)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice3SourceCgmPolicyLutEntry3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry3",
      RegMem => "MemField",
      Width => "3",
      Position => "11:9", # Excel Formula: =calc_position(F124,E125)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
  },
  SourceCgmPolicyLut4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 19;
    Name => "SourceCgmPolicyLut[6]",
    RegMem => "Mem",
    Address => "4100000",
    Description => "The index to the table is:
{CounterAStatus[1:0], SQDiscrete[1:0], SQGroupDiscrete[1:0], SQ Profile[3:0]}
Parsing of entries based on SourceCgmPolicyLutMap",
    Width => "18", # Excel Formula: =calc_mem_width(E122:E125,M121,F125,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "12",
    Slice4SourceCgmPolicyLutEntry0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry0",
      RegMem => "MemField",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F121,E122,TRUE)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice4SourceCgmPolicyLutEntry1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry1",
      RegMem => "MemField",
      Width => "3",
      Position => "5:3", # Excel Formula: =calc_position(F122,E123)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice4SourceCgmPolicyLutEntry2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry2",
      RegMem => "MemField",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F123,E124)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice4SourceCgmPolicyLutEntry3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry3",
      RegMem => "MemField",
      Width => "3",
      Position => "11:9", # Excel Formula: =calc_position(F124,E125)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
  },
  SourceCgmPolicyLut5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 19;
    Name => "SourceCgmPolicyLut[6]",
    RegMem => "Mem",
    Address => "4200000",
    Description => "The index to the table is:
{CounterAStatus[1:0], SQDiscrete[1:0], SQGroupDiscrete[1:0], SQ Profile[3:0]}
Parsing of entries based on SourceCgmPolicyLutMap",
    Width => "18", # Excel Formula: =calc_mem_width(E122:E125,M121,F125,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "12",
    Slice5SourceCgmPolicyLutEntry0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry0",
      RegMem => "MemField",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F121,E122,TRUE)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice5SourceCgmPolicyLutEntry1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry1",
      RegMem => "MemField",
      Width => "3",
      Position => "5:3", # Excel Formula: =calc_position(F122,E123)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice5SourceCgmPolicyLutEntry2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry2",
      RegMem => "MemField",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F123,E124)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
    Slice5SourceCgmPolicyLutEntry3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SourceCgmPolicyLutEntry3",
      RegMem => "MemField",
      Width => "3",
      Position => "11:9", # Excel Formula: =calc_position(F124,E125)
      InitValueSa => "1",
      InitValueLcNwk => "1",
    },
  },
  SqStatusTable0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 14;
    Name => "SqStatusTable[6]",
    RegMem => "Mem",
    Address => "4300000", # Excel Formula: =calc_mem_address(C121,A121,G126,L126)
    Width => "12", # Excel Formula: =calc_mem_width(E127:E134,M126,F134,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "104",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "Changed to FF based due to PD request",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "12",
    Slice0Entry0SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F126,E127,TRUE)
      DefaultValue => "h0",
    },
    Slice0Entry0SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F127,E128)
      DefaultValue => "h0",
    },
    Slice0Entry1SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F128,E129)
      DefaultValue => "h0",
    },
    Slice0Entry1SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F129,E130)
      DefaultValue => "h0",
    },
    Slice0Entry2SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "7:6", # Excel Formula: =calc_position(F130,E131)
      DefaultValue => "h0",
    },
    Slice0Entry2SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F131,E132)
      DefaultValue => "h0",
    },
    Slice0Entry3SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F132,E133)
      DefaultValue => "h0",
    },
    Slice0Entry3SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F133,E134)
      DefaultValue => "h0",
    },
  },
  SqStatusTable1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 14;
    Name => "SqStatusTable[6]",
    RegMem => "Mem",
    Address => "4400000",
    Width => "12", # Excel Formula: =calc_mem_width(E127:E134,M126,F134,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "104",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "Changed to FF based due to PD request",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "12",
    Slice1Entry0SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F126,E127,TRUE)
      DefaultValue => "h0",
    },
    Slice1Entry0SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F127,E128)
      DefaultValue => "h0",
    },
    Slice1Entry1SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F128,E129)
      DefaultValue => "h0",
    },
    Slice1Entry1SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F129,E130)
      DefaultValue => "h0",
    },
    Slice1Entry2SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "7:6", # Excel Formula: =calc_position(F130,E131)
      DefaultValue => "h0",
    },
    Slice1Entry2SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F131,E132)
      DefaultValue => "h0",
    },
    Slice1Entry3SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F132,E133)
      DefaultValue => "h0",
    },
    Slice1Entry3SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F133,E134)
      DefaultValue => "h0",
    },
  },
  SqStatusTable2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 14;
    Name => "SqStatusTable[6]",
    RegMem => "Mem",
    Address => "4500000",
    Width => "12", # Excel Formula: =calc_mem_width(E127:E134,M126,F134,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "104",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "Changed to FF based due to PD request",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "12",
    Slice2Entry0SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F126,E127,TRUE)
      DefaultValue => "h0",
    },
    Slice2Entry0SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F127,E128)
      DefaultValue => "h0",
    },
    Slice2Entry1SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F128,E129)
      DefaultValue => "h0",
    },
    Slice2Entry1SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F129,E130)
      DefaultValue => "h0",
    },
    Slice2Entry2SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "7:6", # Excel Formula: =calc_position(F130,E131)
      DefaultValue => "h0",
    },
    Slice2Entry2SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F131,E132)
      DefaultValue => "h0",
    },
    Slice2Entry3SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F132,E133)
      DefaultValue => "h0",
    },
    Slice2Entry3SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F133,E134)
      DefaultValue => "h0",
    },
  },
  SqStatusTable3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 14;
    Name => "SqStatusTable[6]",
    RegMem => "Mem",
    Address => "4600000",
    Width => "12", # Excel Formula: =calc_mem_width(E127:E134,M126,F134,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "104",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "Changed to FF based due to PD request",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "12",
    Slice3Entry0SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F126,E127,TRUE)
      DefaultValue => "h0",
    },
    Slice3Entry0SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F127,E128)
      DefaultValue => "h0",
    },
    Slice3Entry1SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F128,E129)
      DefaultValue => "h0",
    },
    Slice3Entry1SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F129,E130)
      DefaultValue => "h0",
    },
    Slice3Entry2SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "7:6", # Excel Formula: =calc_position(F130,E131)
      DefaultValue => "h0",
    },
    Slice3Entry2SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F131,E132)
      DefaultValue => "h0",
    },
    Slice3Entry3SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F132,E133)
      DefaultValue => "h0",
    },
    Slice3Entry3SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F133,E134)
      DefaultValue => "h0",
    },
  },
  SqStatusTable4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 14;
    Name => "SqStatusTable[6]",
    RegMem => "Mem",
    Address => "4700000",
    Width => "12", # Excel Formula: =calc_mem_width(E127:E134,M126,F134,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "104",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "Changed to FF based due to PD request",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "12",
    Slice4Entry0SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F126,E127,TRUE)
      DefaultValue => "h0",
    },
    Slice4Entry0SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F127,E128)
      DefaultValue => "h0",
    },
    Slice4Entry1SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F128,E129)
      DefaultValue => "h0",
    },
    Slice4Entry1SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F129,E130)
      DefaultValue => "h0",
    },
    Slice4Entry2SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "7:6", # Excel Formula: =calc_position(F130,E131)
      DefaultValue => "h0",
    },
    Slice4Entry2SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F131,E132)
      DefaultValue => "h0",
    },
    Slice4Entry3SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F132,E133)
      DefaultValue => "h0",
    },
    Slice4Entry3SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F133,E134)
      DefaultValue => "h0",
    },
  },
  SqStatusTable5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 14;
    Name => "SqStatusTable[6]",
    RegMem => "Mem",
    Address => "4800000",
    Width => "12", # Excel Formula: =calc_mem_width(E127:E134,M126,F134,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "104",
    MemWrapper => "2R1W Fast Write",
    MemProtect => "None",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    Comments => "Changed to FF based due to PD request",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "12",
    Slice5Entry0SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F126,E127,TRUE)
      DefaultValue => "h0",
    },
    Slice5Entry0SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry0SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F127,E128)
      DefaultValue => "h0",
    },
    Slice5Entry1SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F128,E129)
      DefaultValue => "h0",
    },
    Slice5Entry1SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry1SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F129,E130)
      DefaultValue => "h0",
    },
    Slice5Entry2SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "7:6", # Excel Formula: =calc_position(F130,E131)
      DefaultValue => "h0",
    },
    Slice5Entry2SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry2SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F131,E132)
      DefaultValue => "h0",
    },
    Slice5Entry3SqStatus => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqStatus",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F132,E133)
      DefaultValue => "h0",
    },
    Slice5Entry3SqHrDrop => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]Entry3SqHrDrop",
      RegMem => "MemField",
      Description => "The discrete status of the SQ.",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F133,E134)
      DefaultValue => "h0",
    },
  },
  SourceIfToPortMap0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "SourceIfToPortMap[6]",
    RegMem => "Mem",
    Address => "4900000", # Excel Formula: =calc_mem_address(C126,A126,G135,L135)
    Width => "7", # Excel Formula: =calc_mem_width(E136:E138,M135,F138,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "7",
    Slice0SourcePort => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]SourcePort",
      RegMem => "MemField",
      Description => "Mapping of IF Source Port to IFG port for the purpose of flow control messages",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F135,E136,TRUE)
      InitValueSa => "(line > 25) ? line - 26 : line",
      InitValueLcNwk => "(line > 25) ? line - 26 : line",
    },
    Slice0IfgNum => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]IfgNum",
      RegMem => "MemField",
      Description => "Mapping of IF Source Port to IFG number for the purpose of flow control messages",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F136,E137)
      InitValueSa => "
(line > 25) ? 1: 0",
      InitValueLcNwk => "(line > 25) ? 1: 0",
    },
    Slice0FcEnable => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]FcEnable",
      RegMem => "MemField",
      Description => "Indicates wether the port is enabled for flow control.",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F137,E138)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SourceIfToPortMap1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "SourceIfToPortMap[6]",
    RegMem => "Mem",
    Address => "4A00000",
    Width => "7", # Excel Formula: =calc_mem_width(E136:E138,M135,F138,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "7",
    Slice1SourcePort => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]SourcePort",
      RegMem => "MemField",
      Description => "Mapping of IF Source Port to IFG port for the purpose of flow control messages",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F135,E136,TRUE)
      InitValueSa => "(line > 25) ? line - 26 : line",
      InitValueLcNwk => "(line > 25) ? line - 26 : line",
    },
    Slice1IfgNum => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]IfgNum",
      RegMem => "MemField",
      Description => "Mapping of IF Source Port to IFG number for the purpose of flow control messages",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F136,E137)
      InitValueSa => "
(line > 25) ? 1: 0",
      InitValueLcNwk => "(line > 25) ? 1: 0",
    },
    Slice1FcEnable => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]FcEnable",
      RegMem => "MemField",
      Description => "Indicates wether the port is enabled for flow control.",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F137,E138)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SourceIfToPortMap2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 18;
    Name => "SourceIfToPortMap[6]",
    RegMem => "Mem",
    Address => "4B00000",
    Width => "7", # Excel Formula: =calc_mem_width(E136:E138,M135,F138,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "7",
    Slice2SourcePort => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]SourcePort",
      RegMem => "MemField",
      Description => "Mapping of IF Source Port to IFG port for the purpose of flow control messages",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F135,E136,TRUE)
      InitValueSa => "(line > 25) ? line - 26 : line",
      InitValueLcNwk => "(line > 25) ? line - 26 : line",
    },
    Slice2IfgNum => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]IfgNum",
      RegMem => "MemField",
      Description => "Mapping of IF Source Port to IFG number for the purpose of flow control messages",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F136,E137)
      InitValueSa => "
(line > 25) ? 1: 0",
      InitValueLcNwk => "(line > 25) ? 1: 0",
    },
    Slice2FcEnable => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]FcEnable",
      RegMem => "MemField",
      Description => "Indicates wether the port is enabled for flow control.",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F137,E138)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SourceIfToPortMap3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 18;
    Name => "SourceIfToPortMap[6]",
    RegMem => "Mem",
    Address => "4C00000",
    Width => "7", # Excel Formula: =calc_mem_width(E136:E138,M135,F138,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "7",
    Slice3SourcePort => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]SourcePort",
      RegMem => "MemField",
      Description => "Mapping of IF Source Port to IFG port for the purpose of flow control messages",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F135,E136,TRUE)
      InitValueSa => "(line > 25) ? line - 26 : line",
      InitValueLcNwk => "(line > 25) ? line - 26 : line",
    },
    Slice3IfgNum => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]IfgNum",
      RegMem => "MemField",
      Description => "Mapping of IF Source Port to IFG number for the purpose of flow control messages",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F136,E137)
      InitValueSa => "
(line > 25) ? 1: 0",
      InitValueLcNwk => "(line > 25) ? 1: 0",
    },
    Slice3FcEnable => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]FcEnable",
      RegMem => "MemField",
      Description => "Indicates wether the port is enabled for flow control.",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F137,E138)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SourceIfToPortMap4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 18;
    Name => "SourceIfToPortMap[6]",
    RegMem => "Mem",
    Address => "4D00000",
    Width => "7", # Excel Formula: =calc_mem_width(E136:E138,M135,F138,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "7",
    Slice4SourcePort => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]SourcePort",
      RegMem => "MemField",
      Description => "Mapping of IF Source Port to IFG port for the purpose of flow control messages",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F135,E136,TRUE)
      InitValueSa => "(line > 25) ? line - 26 : line",
      InitValueLcNwk => "(line > 25) ? line - 26 : line",
    },
    Slice4IfgNum => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]IfgNum",
      RegMem => "MemField",
      Description => "Mapping of IF Source Port to IFG number for the purpose of flow control messages",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F136,E137)
      InitValueSa => "
(line > 25) ? 1: 0",
      InitValueLcNwk => "(line > 25) ? 1: 0",
    },
    Slice4FcEnable => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]FcEnable",
      RegMem => "MemField",
      Description => "Indicates wether the port is enabled for flow control.",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F137,E138)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  SourceIfToPortMap5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 18;
    Name => "SourceIfToPortMap[6]",
    RegMem => "Mem",
    Address => "4E00000",
    Width => "7", # Excel Formula: =calc_mem_width(E136:E138,M135,F138,-1)
    Type => "Config",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "64",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    InstanceAllocation => "per_slice",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "7",
    Slice5SourcePort => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]SourcePort",
      RegMem => "MemField",
      Description => "Mapping of IF Source Port to IFG port for the purpose of flow control messages",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F135,E136,TRUE)
      InitValueSa => "(line > 25) ? line - 26 : line",
      InitValueLcNwk => "(line > 25) ? line - 26 : line",
    },
    Slice5IfgNum => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]IfgNum",
      RegMem => "MemField",
      Description => "Mapping of IF Source Port to IFG number for the purpose of flow control messages",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F136,E137)
      InitValueSa => "
(line > 25) ? 1: 0",
      InitValueLcNwk => "(line > 25) ? 1: 0",
    },
    Slice5FcEnable => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]FcEnable",
      RegMem => "MemField",
      Description => "Indicates wether the port is enabled for flow control.",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F137,E138)
      InitValueSa => "0",
      InitValueLcNwk => "0",
    },
  },
  DropCountersSspTc0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "DropCountersSspTc[6]",
    RegMem => "Mem",
    Address => "4F00000", # Excel Formula: =calc_mem_address(C135,A135,G139,L139)
    Width => "39", # Excel Formula: =calc_mem_width(E140:E140,M139,F140,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "416", # Excel Formula: =52*8
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "32",
    Slice0DropCountersSspTc => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]DropCountersSspTc",
      RegMem => "MemField",
      Description => "Drop counters per SSP x TC",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F139,E140,TRUE)
      DefaultValue => "h0",
    },
  },
  DropCountersSspTc1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "DropCountersSspTc[6]",
    RegMem => "Mem",
    Address => "5000000",
    Width => "39", # Excel Formula: =calc_mem_width(E140:E140,M139,F140,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "416", # Excel Formula: =52*8
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "32",
    Slice1DropCountersSspTc => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]DropCountersSspTc",
      RegMem => "MemField",
      Description => "Drop counters per SSP x TC",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F139,E140,TRUE)
      DefaultValue => "h0",
    },
  },
  DropCountersSspTc2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 18;
    Name => "DropCountersSspTc[6]",
    RegMem => "Mem",
    Address => "5100000",
    Width => "39", # Excel Formula: =calc_mem_width(E140:E140,M139,F140,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "416", # Excel Formula: =52*8
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "32",
    Slice2DropCountersSspTc => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]DropCountersSspTc",
      RegMem => "MemField",
      Description => "Drop counters per SSP x TC",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F139,E140,TRUE)
      DefaultValue => "h0",
    },
  },
  DropCountersSspTc3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 18;
    Name => "DropCountersSspTc[6]",
    RegMem => "Mem",
    Address => "5200000",
    Width => "39", # Excel Formula: =calc_mem_width(E140:E140,M139,F140,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "416", # Excel Formula: =52*8
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "32",
    Slice3DropCountersSspTc => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Slice[n]DropCountersSspTc",
      RegMem => "MemField",
      Description => "Drop counters per SSP x TC",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F139,E140,TRUE)
      DefaultValue => "h0",
    },
  },
  DropCountersSspTc4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 18;
    Name => "DropCountersSspTc[6]",
    RegMem => "Mem",
    Address => "5300000",
    Width => "39", # Excel Formula: =calc_mem_width(E140:E140,M139,F140,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "416", # Excel Formula: =52*8
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "32",
    Slice4DropCountersSspTc => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Slice[n]DropCountersSspTc",
      RegMem => "MemField",
      Description => "Drop counters per SSP x TC",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F139,E140,TRUE)
      DefaultValue => "h0",
    },
  },
  DropCountersSspTc5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 18;
    Name => "DropCountersSspTc[6]",
    RegMem => "Mem",
    Address => "5400000",
    Width => "39", # Excel Formula: =calc_mem_width(E140:E140,M139,F140,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    MemEntries => "416", # Excel Formula: =52*8
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=0,ReadActivityFactor=0,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "32",
    Slice5DropCountersSspTc => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Slice[n]DropCountersSspTc",
      RegMem => "MemField",
      Description => "Drop counters per SSP x TC",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F139,E140,TRUE)
      DefaultValue => "h0",
    },
  },
  SqgHistogram0Cfg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13; Skip Register;
    Name => "SqgHistogram[4]Cfg",
    RegMem => "Reg",
    Address => "183", # Excel Formula: =calc_reg_address(C75,A75,G75)
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E142:E149,F149)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "0",
    SqgHistogram0Th0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F141,E142,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram0Th1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F142,E143)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram0Th2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F143,E144)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram0Th3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F144,E145)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram0Th4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F145,E146)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram0Th5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F146,E147)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram0Th6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F147,E148)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram0TimeInterval => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F148,E149)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  SqgHistogram1Cfg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13; Skip Register;
    Name => "SqgHistogram[4]Cfg",
    RegMem => "Reg",
    Address => "184",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E142:E149,F149)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "1",
    SqgHistogram1Th0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F141,E142,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram1Th1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F142,E143)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram1Th2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F143,E144)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram1Th3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F144,E145)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram1Th4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F145,E146)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram1Th5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F146,E147)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram1Th6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F147,E148)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram1TimeInterval => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F148,E149)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  SqgHistogram2Cfg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13; Skip Register;
    Name => "SqgHistogram[4]Cfg",
    RegMem => "Reg",
    Address => "185",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E142:E149,F149)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "2",
    SqgHistogram2Th0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F141,E142,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram2Th1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F142,E143)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram2Th2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F143,E144)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram2Th3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F144,E145)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram2Th4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F145,E146)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram2Th5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F146,E147)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram2Th6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F147,E148)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram2TimeInterval => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F148,E149)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  SqgHistogram3Cfg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13; Skip Register;
    Name => "SqgHistogram[4]Cfg",
    RegMem => "Reg",
    Address => "186",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E142:E149,F149)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "3",
    SqgHistogram3Th0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F141,E142,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram3Th1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F142,E143)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram3Th2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F143,E144)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram3Th3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F144,E145)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram3Th4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F145,E146)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram3Th5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F146,E147)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram3Th6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= SqgHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F147,E148)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    SqgHistogram3TimeInterval => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F148,E149)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  SqgHistogram0Status => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13; Skip Register;
    Name => "SqgHistogram[4]Status",
    RegMem => "Reg",
    Address => "187", # Excel Formula: =calc_reg_address(C141,A141,G141)
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E151:E166,F166)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "0",
    SqgHistogram0Value0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F150,E151,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Overflow0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F151,E152)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Value1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F152,E153)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Overflow1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F153,E154)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Value2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F154,E155)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Overflow2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F155,E156)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Value3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F156,E157)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Overflow3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F157,E158)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Value4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F158,E159)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Overflow4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F159,E160)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Value5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F160,E161)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Overflow5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F161,E162)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Value6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F162,E163)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Overflow6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F163,E164)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Value7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F164,E165)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram0Overflow7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F165,E166)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  SqgHistogram1Status => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13; Skip Register;
    Name => "SqgHistogram[4]Status",
    RegMem => "Reg",
    Address => "188",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E151:E166,F166)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "1",
    SqgHistogram1Value0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F150,E151,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Overflow0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F151,E152)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Value1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F152,E153)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Overflow1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F153,E154)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Value2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F154,E155)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Overflow2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F155,E156)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Value3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F156,E157)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Overflow3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F157,E158)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Value4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F158,E159)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Overflow4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F159,E160)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Value5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F160,E161)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Overflow5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F161,E162)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Value6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F162,E163)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Overflow6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F163,E164)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Value7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F164,E165)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram1Overflow7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F165,E166)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  SqgHistogram2Status => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13; Skip Register;
    Name => "SqgHistogram[4]Status",
    RegMem => "Reg",
    Address => "189",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E151:E166,F166)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "2",
    SqgHistogram2Value0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F150,E151,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Overflow0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F151,E152)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Value1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F152,E153)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Overflow1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F153,E154)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Value2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F154,E155)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Overflow2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F155,E156)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Value3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F156,E157)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Overflow3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F157,E158)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Value4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F158,E159)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Overflow4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F159,E160)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Value5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F160,E161)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Overflow5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F161,E162)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Value6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F162,E163)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Overflow6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F163,E164)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Value7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F164,E165)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram2Overflow7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F165,E166)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  SqgHistogram3Status => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13; Skip Register;
    Name => "SqgHistogram[4]Status",
    RegMem => "Reg",
    Address => "18A",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E151:E166,F166)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "3",
    SqgHistogram3Value0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F150,E151,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Overflow0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F151,E152)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Value1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F152,E153)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Overflow1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F153,E154)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Value2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F154,E155)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Overflow2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F155,E156)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Value3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F156,E157)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Overflow3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F157,E158)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Value4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F158,E159)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Overflow4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F159,E160)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Value5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F160,E161)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Overflow5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F161,E162)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Value6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F162,E163)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Overflow6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F163,E164)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Value7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F164,E165)
      Type => "Status",
      UsedBy => "CIF",
    },
    SqgHistogram3Overflow7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F165,E166)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  SqgHistogram0MaxWmkReg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13; Skip Register;
    Name => "SqgHistogram[4]MaxWmkReg",
    RegMem => "Reg",
    Address => "18B", # Excel Formula: =calc_reg_address(C150,A150,G150)
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E168:E169,F169)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "0",
    SqgHistogram0MaxWmk => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F167,E168,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    SqgHistogram0MaxWmkTime => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F168,E169)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  SqgHistogram1MaxWmkReg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13; Skip Register;
    Name => "SqgHistogram[4]MaxWmkReg",
    RegMem => "Reg",
    Address => "18C",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E168:E169,F169)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "1",
    SqgHistogram1MaxWmk => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F167,E168,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    SqgHistogram1MaxWmkTime => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F168,E169)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  SqgHistogram2MaxWmkReg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13; Skip Register;
    Name => "SqgHistogram[4]MaxWmkReg",
    RegMem => "Reg",
    Address => "18D",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E168:E169,F169)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "2",
    SqgHistogram2MaxWmk => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F167,E168,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    SqgHistogram2MaxWmkTime => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F168,E169)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  SqgHistogram3MaxWmkReg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13; Skip Register;
    Name => "SqgHistogram[4]MaxWmkReg",
    RegMem => "Reg",
    Address => "18E",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E168:E169,F169)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "3",
    SqgHistogram3MaxWmk => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F167,E168,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    SqgHistogram3MaxWmkTime => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "SqgHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F168,E169)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CtcGroupHistogram0Cfg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18; Skip Register;
    Name => "CtcGroupHistogram[4]Cfg",
    RegMem => "Reg",
    Address => "18F", # Excel Formula: =calc_reg_address(C167,A167,G167)
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E171:E178,F178)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "0",
    CtcGroupHistogram0Th0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F170,E171,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram0Th1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F171,E172)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram0Th2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F172,E173)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram0Th3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F173,E174)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram0Th4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F174,E175)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram0Th5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F175,E176)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram0Th6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F176,E177)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram0TimeInterval => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F177,E178)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CtcGroupHistogram1Cfg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18; Skip Register;
    Name => "CtcGroupHistogram[4]Cfg",
    RegMem => "Reg",
    Address => "190",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E171:E178,F178)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "1",
    CtcGroupHistogram1Th0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F170,E171,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram1Th1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F171,E172)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram1Th2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F172,E173)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram1Th3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F173,E174)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram1Th4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F174,E175)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram1Th5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F175,E176)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram1Th6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F176,E177)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram1TimeInterval => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F177,E178)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CtcGroupHistogram2Cfg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18; Skip Register;
    Name => "CtcGroupHistogram[4]Cfg",
    RegMem => "Reg",
    Address => "191",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E171:E178,F178)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "2",
    CtcGroupHistogram2Th0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F170,E171,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram2Th1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F171,E172)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram2Th2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F172,E173)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram2Th3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F173,E174)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram2Th4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F174,E175)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram2Th5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F175,E176)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram2Th6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F176,E177)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram2TimeInterval => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F177,E178)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CtcGroupHistogram3Cfg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18; Skip Register;
    Name => "CtcGroupHistogram[4]Cfg",
    RegMem => "Reg",
    Address => "192",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E171:E178,F178)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "3",
    CtcGroupHistogram3Th0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F170,E171,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram3Th1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F171,E172)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram3Th2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F172,E173)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram3Th3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F173,E174)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram3Th4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F174,E175)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram3Th5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F175,E176)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram3Th6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcGroupHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F176,E177)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcGroupHistogram3TimeInterval => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F177,E178)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CtcGroupHistogram0Status => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18; Skip Register;
    Name => "CtcGroupHistogram[4]Status",
    RegMem => "Reg",
    Address => "193", # Excel Formula: =calc_reg_address(C170,A170,G170)
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E180:E195,F195)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "0",
    CtcGroupHistogram0Value0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F179,E180,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Overflow0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F180,E181)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Value1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F181,E182)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Overflow1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F182,E183)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Value2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F183,E184)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Overflow2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F184,E185)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Value3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F185,E186)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Overflow3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F186,E187)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Value4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F187,E188)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Overflow4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F188,E189)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Value5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F189,E190)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Overflow5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F190,E191)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Value6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F191,E192)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Overflow6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F192,E193)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Value7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F193,E194)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0Overflow7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F194,E195)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CtcGroupHistogram1Status => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18; Skip Register;
    Name => "CtcGroupHistogram[4]Status",
    RegMem => "Reg",
    Address => "194",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E180:E195,F195)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "1",
    CtcGroupHistogram1Value0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F179,E180,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Overflow0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F180,E181)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Value1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F181,E182)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Overflow1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F182,E183)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Value2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F183,E184)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Overflow2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F184,E185)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Value3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F185,E186)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Overflow3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F186,E187)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Value4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F187,E188)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Overflow4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F188,E189)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Value5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F189,E190)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Overflow5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F190,E191)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Value6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F191,E192)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Overflow6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F192,E193)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Value7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F193,E194)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1Overflow7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F194,E195)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CtcGroupHistogram2Status => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18; Skip Register;
    Name => "CtcGroupHistogram[4]Status",
    RegMem => "Reg",
    Address => "195",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E180:E195,F195)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "2",
    CtcGroupHistogram2Value0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F179,E180,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Overflow0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F180,E181)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Value1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F181,E182)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Overflow1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F182,E183)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Value2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F183,E184)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Overflow2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F184,E185)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Value3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F185,E186)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Overflow3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F186,E187)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Value4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F187,E188)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Overflow4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F188,E189)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Value5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F189,E190)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Overflow5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F190,E191)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Value6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F191,E192)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Overflow6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F192,E193)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Value7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F193,E194)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2Overflow7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F194,E195)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CtcGroupHistogram3Status => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18; Skip Register;
    Name => "CtcGroupHistogram[4]Status",
    RegMem => "Reg",
    Address => "196",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E180:E195,F195)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "3",
    CtcGroupHistogram3Value0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F179,E180,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Overflow0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F180,E181)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Value1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F181,E182)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Overflow1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F182,E183)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Value2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F183,E184)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Overflow2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F184,E185)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Value3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F185,E186)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Overflow3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F186,E187)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Value4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F187,E188)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Overflow4 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F188,E189)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Value5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F189,E190)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Overflow5 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F190,E191)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Value6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F191,E192)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Overflow6 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F192,E193)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Value7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F193,E194)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3Overflow7 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F194,E195)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CtcGroupHistogram0MaxWmkReg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18; Skip Register;
    Name => "CtcGroupHistogram[4]MaxWmkReg",
    RegMem => "Reg",
    Address => "197", # Excel Formula: =calc_reg_address(C179,A179,G179)
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E197:E198,F198)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "0",
    CtcGroupHistogram0MaxWmk => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F196,E197,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CtcGroupHistogram0MaxWmkTime => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F197,E198)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CtcGroupHistogram1MaxWmkReg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18; Skip Register;
    Name => "CtcGroupHistogram[4]MaxWmkReg",
    RegMem => "Reg",
    Address => "198",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E197:E198,F198)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "1",
    CtcGroupHistogram1MaxWmk => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F196,E197,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CtcGroupHistogram1MaxWmkTime => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F197,E198)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CtcGroupHistogram2MaxWmkReg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18; Skip Register;
    Name => "CtcGroupHistogram[4]MaxWmkReg",
    RegMem => "Reg",
    Address => "199",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E197:E198,F198)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "2",
    CtcGroupHistogram2MaxWmk => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F196,E197,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CtcGroupHistogram2MaxWmkTime => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F197,E198)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CtcGroupHistogram3MaxWmkReg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18; Skip Register;
    Name => "CtcGroupHistogram[4]MaxWmkReg",
    RegMem => "Reg",
    Address => "19A",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E197:E198,F198)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "4",
    ArrayIndex => "3",
    CtcGroupHistogram3MaxWmk => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F196,E197,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CtcGroupHistogram3MaxWmkTime => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "CtcGroupHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F197,E198)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CtcHistogram0Cfg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Cfg",
    RegMem => "Reg",
    Address => "19B", # Excel Formula: =calc_reg_address(C196,A196,G196)
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E200:E207,F207)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "0",
    CtcHistogram0Th0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F199,E200,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram0Th1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F200,E201)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram0Th2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F201,E202)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram0Th3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram0Th4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F203,E204)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram0Th5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F204,E205)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram0Th6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F205,E206)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram0TimeInterval => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F206,E207)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CtcHistogram1Cfg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Cfg",
    RegMem => "Reg",
    Address => "19C",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E200:E207,F207)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "1",
    CtcHistogram1Th0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F199,E200,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram1Th1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F200,E201)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram1Th2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F201,E202)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram1Th3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram1Th4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F203,E204)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram1Th5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F204,E205)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram1Th6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F205,E206)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram1TimeInterval => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F206,E207)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CtcHistogram2Cfg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Cfg",
    RegMem => "Reg",
    Address => "19D",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E200:E207,F207)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "2",
    CtcHistogram2Th0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F199,E200,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram2Th1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F200,E201)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram2Th2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F201,E202)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram2Th3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram2Th4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F203,E204)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram2Th5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F204,E205)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram2Th6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F205,E206)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram2TimeInterval => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F206,E207)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CtcHistogram3Cfg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Cfg",
    RegMem => "Reg",
    Address => "19E",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E200:E207,F207)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "3",
    CtcHistogram3Th0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F199,E200,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram3Th1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F200,E201)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram3Th2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F201,E202)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram3Th3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram3Th4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F203,E204)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram3Th5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F204,E205)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram3Th6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F205,E206)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram3TimeInterval => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F206,E207)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CtcHistogram4Cfg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Cfg",
    RegMem => "Reg",
    Address => "19F",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E200:E207,F207)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "4",
    CtcHistogram4Th0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F199,E200,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram4Th1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F200,E201)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram4Th2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F201,E202)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram4Th3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram4Th4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F203,E204)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram4Th5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F204,E205)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram4Th6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F205,E206)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram4TimeInterval => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F206,E207)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CtcHistogram5Cfg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Cfg",
    RegMem => "Reg",
    Address => "1A0",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E200:E207,F207)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "5",
    CtcHistogram5Th0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F199,E200,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram5Th1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F200,E201)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram5Th2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F201,E202)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram5Th3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram5Th4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F203,E204)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram5Th5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F204,E205)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram5Th6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F205,E206)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram5TimeInterval => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F206,E207)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CtcHistogram6Cfg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Cfg",
    RegMem => "Reg",
    Address => "1A1",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E200:E207,F207)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "6",
    CtcHistogram6Th0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F199,E200,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram6Th1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F200,E201)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram6Th2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F201,E202)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram6Th3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram6Th4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F203,E204)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram6Th5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F204,E205)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram6Th6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F205,E206)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram6TimeInterval => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F206,E207)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CtcHistogram7Cfg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Cfg",
    RegMem => "Reg",
    Address => "1A2",
    Description => "Histogram configurations register, see fields description",
    Width => "143", # Excel Formula: =calc_reg_width(E200:E207,F207)
    Type => "Config",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "7",
    CtcHistogram7Th0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th0",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th0, bin 0 is incremented",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F199,E200,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram7Th1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th1",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th1, bin 1 is incremented",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F200,E201)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram7Th2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th2",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th2, bin 2 is incremented",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F201,E202)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram7Th3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th3",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th3, bin 3 is incremented",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram7Th4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th4",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th4, bin 4 is incremented",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F203,E204)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram7Th5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th5",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th5, bin 5 is incremented",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F204,E205)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram7Th6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Th6",
      RegMem => "RegField",
      Description => "Thresholds for bin detection. If compared value <= CtcHistogram[n]Th6, bin 6 is incremented",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F205,E206)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    CtcHistogram7TimeInterval => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]TimeInterval",
      RegMem => "RegField",
      Description => "Number of clocks between histogram sample events",
      Width => "10",
      Position => "142:133", # Excel Formula: =calc_position(F206,E207)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  CtcHistogram0Status => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Status",
    RegMem => "Reg",
    Address => "1A3", # Excel Formula: =calc_reg_address(C199,A199,G199)
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E209:E224,F224)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "0",
    CtcHistogram0Value0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F208,E209,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Overflow0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F209,E210)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Value1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F210,E211)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Overflow1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F211,E212)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Value2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F212,E213)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Overflow2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F213,E214)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Value3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F214,E215)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Overflow3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F215,E216)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Value4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F216,E217)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Overflow4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F217,E218)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Value5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F218,E219)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Overflow5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F219,E220)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Value6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F220,E221)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Overflow6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F221,E222)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Value7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F222,E223)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram0Overflow7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F223,E224)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CtcHistogram1Status => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Status",
    RegMem => "Reg",
    Address => "1A4",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E209:E224,F224)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "1",
    CtcHistogram1Value0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F208,E209,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Overflow0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F209,E210)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Value1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F210,E211)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Overflow1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F211,E212)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Value2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F212,E213)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Overflow2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F213,E214)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Value3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F214,E215)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Overflow3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F215,E216)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Value4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F216,E217)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Overflow4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F217,E218)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Value5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F218,E219)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Overflow5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F219,E220)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Value6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F220,E221)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Overflow6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F221,E222)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Value7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F222,E223)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram1Overflow7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F223,E224)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CtcHistogram2Status => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Status",
    RegMem => "Reg",
    Address => "1A5",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E209:E224,F224)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "2",
    CtcHistogram2Value0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F208,E209,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Overflow0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F209,E210)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Value1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F210,E211)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Overflow1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F211,E212)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Value2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F212,E213)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Overflow2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F213,E214)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Value3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F214,E215)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Overflow3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F215,E216)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Value4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F216,E217)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Overflow4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F217,E218)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Value5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F218,E219)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Overflow5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F219,E220)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Value6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F220,E221)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Overflow6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F221,E222)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Value7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F222,E223)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram2Overflow7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F223,E224)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CtcHistogram3Status => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Status",
    RegMem => "Reg",
    Address => "1A6",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E209:E224,F224)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "3",
    CtcHistogram3Value0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F208,E209,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Overflow0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F209,E210)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Value1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F210,E211)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Overflow1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F211,E212)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Value2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F212,E213)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Overflow2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F213,E214)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Value3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F214,E215)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Overflow3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F215,E216)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Value4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F216,E217)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Overflow4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F217,E218)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Value5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F218,E219)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Overflow5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F219,E220)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Value6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F220,E221)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Overflow6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F221,E222)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Value7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F222,E223)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram3Overflow7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F223,E224)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CtcHistogram4Status => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Status",
    RegMem => "Reg",
    Address => "1A7",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E209:E224,F224)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "4",
    CtcHistogram4Value0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F208,E209,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Overflow0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F209,E210)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Value1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F210,E211)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Overflow1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F211,E212)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Value2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F212,E213)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Overflow2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F213,E214)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Value3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F214,E215)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Overflow3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F215,E216)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Value4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F216,E217)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Overflow4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F217,E218)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Value5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F218,E219)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Overflow5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F219,E220)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Value6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F220,E221)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Overflow6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F221,E222)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Value7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F222,E223)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram4Overflow7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F223,E224)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CtcHistogram5Status => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Status",
    RegMem => "Reg",
    Address => "1A8",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E209:E224,F224)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "5",
    CtcHistogram5Value0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F208,E209,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Overflow0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F209,E210)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Value1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F210,E211)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Overflow1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F211,E212)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Value2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F212,E213)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Overflow2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F213,E214)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Value3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F214,E215)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Overflow3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F215,E216)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Value4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F216,E217)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Overflow4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F217,E218)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Value5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F218,E219)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Overflow5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F219,E220)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Value6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F220,E221)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Overflow6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F221,E222)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Value7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F222,E223)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram5Overflow7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F223,E224)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CtcHistogram6Status => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Status",
    RegMem => "Reg",
    Address => "1A9",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E209:E224,F224)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "6",
    CtcHistogram6Value0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F208,E209,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Overflow0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F209,E210)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Value1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F210,E211)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Overflow1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F211,E212)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Value2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F212,E213)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Overflow2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F213,E214)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Value3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F214,E215)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Overflow3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F215,E216)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Value4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F216,E217)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Overflow4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F217,E218)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Value5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F218,E219)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Overflow5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F219,E220)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Value6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F220,E221)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Overflow6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F221,E222)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Value7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F222,E223)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram6Overflow7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F223,E224)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CtcHistogram7Status => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]Status",
    RegMem => "Reg",
    Address => "1AA",
    Description => "Histogram status register, see fields description",
    Width => "264", # Excel Formula: =calc_reg_width(E209:E224,F224)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "7",
    CtcHistogram7Value0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value0",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F208,E209,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Overflow0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow0",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F209,E210)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Value1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value1",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F210,E211)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Overflow1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow1",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F211,E212)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Value2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value2",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F212,E213)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Overflow2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow2",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F213,E214)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Value3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value3",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F214,E215)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Overflow3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow3",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F215,E216)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Value4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value4",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F216,E217)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Overflow4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow4",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F217,E218)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Value5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value5",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F218,E219)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Overflow5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow5",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F219,E220)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Value6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value6",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F220,E221)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Overflow6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow6",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F221,E222)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Value7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Value7",
      RegMem => "RegField",
      Description => "Bin value",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F222,E223)
      Type => "Status",
      UsedBy => "CIF",
    },
    CtcHistogram7Overflow7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]Overflow7",
      RegMem => "RegField",
      Description => "Bin overflow indication",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F223,E224)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
  CtcHistogram0MaxWmkReg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]MaxWmkReg",
    RegMem => "Reg",
    Address => "1AB", # Excel Formula: =calc_reg_address(C208,A208,G208)
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E226:E227,F227)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "0",
    CtcHistogram0MaxWmk => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F225,E226,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CtcHistogram0MaxWmkTime => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F226,E227)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CtcHistogram1MaxWmkReg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]MaxWmkReg",
    RegMem => "Reg",
    Address => "1AC",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E226:E227,F227)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "1",
    CtcHistogram1MaxWmk => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F225,E226,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CtcHistogram1MaxWmkTime => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F226,E227)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CtcHistogram2MaxWmkReg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]MaxWmkReg",
    RegMem => "Reg",
    Address => "1AD",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E226:E227,F227)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "2",
    CtcHistogram2MaxWmk => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F225,E226,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CtcHistogram2MaxWmkTime => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F226,E227)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CtcHistogram3MaxWmkReg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]MaxWmkReg",
    RegMem => "Reg",
    Address => "1AE",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E226:E227,F227)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "3",
    CtcHistogram3MaxWmk => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F225,E226,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CtcHistogram3MaxWmkTime => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F226,E227)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CtcHistogram4MaxWmkReg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]MaxWmkReg",
    RegMem => "Reg",
    Address => "1AF",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E226:E227,F227)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "4",
    CtcHistogram4MaxWmk => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F225,E226,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CtcHistogram4MaxWmkTime => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F226,E227)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CtcHistogram5MaxWmkReg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]MaxWmkReg",
    RegMem => "Reg",
    Address => "1B0",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E226:E227,F227)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "5",
    CtcHistogram5MaxWmk => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F225,E226,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CtcHistogram5MaxWmkTime => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F226,E227)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CtcHistogram6MaxWmkReg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]MaxWmkReg",
    RegMem => "Reg",
    Address => "1B1",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E226:E227,F227)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "6",
    CtcHistogram6MaxWmk => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F225,E226,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CtcHistogram6MaxWmkTime => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F226,E227)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
  CtcHistogram7MaxWmkReg => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13; Skip Register;
    Name => "CtcHistogram[8]MaxWmkReg",
    RegMem => "Reg",
    Address => "1B2",
    Description => "Histogram max watermark register, see fields description",
    Width => "51", # Excel Formula: =calc_reg_width(E226:E227,F227)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "7",
    CtcHistogram7MaxWmk => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmk",
      RegMem => "RegField",
      Description => "Histogram max watermark",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F225,E226,TRUE)
      Type => "MaxWmk",
      UsedBy => "CIF",
    },
    CtcHistogram7MaxWmkTime => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
      Name => "CtcHistogram[n]MaxWmkTime",
      RegMem => "RegField",
      Description => "Time of last max watermark update",
      Width => "32",
      Position => "50:19", # Excel Formula: =calc_position(F226,E227)
      Type => "Capture",
      UsedBy => "CIF",
    },
  },
};
