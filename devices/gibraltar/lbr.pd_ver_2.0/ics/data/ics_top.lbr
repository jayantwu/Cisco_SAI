$block{ics_top} = {
  Defines_db => "..\\..\\ics\\verilog\\ics_defines.v,..\\..\\defines\\pd_fd_defines.v,..\\..\\defines\\control_common_defines.v,..\\..\\voq_cgm\\verilog\\voq_cgm_defines.v,..\\..\\defines\\gibraltar_common_defines.v",
  ProjectName => "Gibraltar",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "2",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    GeneralInterruptRegisterSummary => { #Structure Type: RegField;
      Name => "GeneralInterruptRegisterSummary",
      RegMem => "RegField",
      Description => "When this bit is set, GeneralInterruptRegister has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt test register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "13",
    Type => "Config",
    DramContextPoolEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramContextPoolEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDecCnt0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDecCnt0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDecCnt1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDecCnt1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDecCnt2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDecCnt2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDecCnt3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDecCnt3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDecCnt4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDecCnt4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDecCnt5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDecCnt5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramIncCnt0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramIncCnt0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramIncCnt1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramIncCnt1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramIncCnt2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramIncCnt2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramIncCnt3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramIncCnt3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramIncCnt4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramIncCnt4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramIncCnt5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramIncCnt5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "13",
    Type => "Config",
    DramContextPoolEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramContextPoolEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDecCnt0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDecCnt0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDecCnt1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDecCnt1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDecCnt2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDecCnt2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDecCnt3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDecCnt3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDecCnt4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDecCnt4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDecCnt5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDecCnt5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramIncCnt0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramIncCnt0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramIncCnt1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramIncCnt1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramIncCnt2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramIncCnt2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramIncCnt3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramIncCnt3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramIncCnt4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramIncCnt4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramIncCnt5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramIncCnt5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInitiateRegister",
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "13",
    Type => "Config",
    DramContextPoolEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramContextPoolEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDecCnt0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramDecCnt0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDecCnt1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramDecCnt1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDecCnt2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramDecCnt2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDecCnt3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramDecCnt3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDecCnt4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramDecCnt4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDecCnt5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramDecCnt5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramIncCnt0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramIncCnt0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramIncCnt1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramIncCnt1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramIncCnt2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramIncCnt2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramIncCnt3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramIncCnt3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramIncCnt4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramIncCnt4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramIncCnt5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramIncCnt5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInitiateRegister",
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "13",
    Type => "Config",
    DramContextPoolEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramContextPoolEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDecCnt0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramDecCnt0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDecCnt1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramDecCnt1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDecCnt2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramDecCnt2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDecCnt3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramDecCnt3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDecCnt4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramDecCnt4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDecCnt5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramDecCnt5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramIncCnt0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramIncCnt0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramIncCnt1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramIncCnt1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramIncCnt2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramIncCnt2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramIncCnt3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramIncCnt3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramIncCnt4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramIncCnt4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramIncCnt5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramIncCnt5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "13",
    Type => "ReadOnly",
    DramContextPoolErrInt => { #Structure Type: RegField;
      Name => "DramContextPoolErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    DramDecCnt0ErrInt => { #Structure Type: RegField;
      Name => "DramDecCnt0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    DramDecCnt1ErrInt => { #Structure Type: RegField;
      Name => "DramDecCnt1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    DramDecCnt2ErrInt => { #Structure Type: RegField;
      Name => "DramDecCnt2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    DramDecCnt3ErrInt => { #Structure Type: RegField;
      Name => "DramDecCnt3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    DramDecCnt4ErrInt => { #Structure Type: RegField;
      Name => "DramDecCnt4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    DramDecCnt5ErrInt => { #Structure Type: RegField;
      Name => "DramDecCnt5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    DramIncCnt0ErrInt => { #Structure Type: RegField;
      Name => "DramIncCnt0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    DramIncCnt1ErrInt => { #Structure Type: RegField;
      Name => "DramIncCnt1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    DramIncCnt2ErrInt => { #Structure Type: RegField;
      Name => "DramIncCnt2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    DramIncCnt3ErrInt => { #Structure Type: RegField;
      Name => "DramIncCnt3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    DramIncCnt4ErrInt => { #Structure Type: RegField;
      Name => "DramIncCnt4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
    DramIncCnt5ErrInt => { #Structure Type: RegField;
      Name => "DramIncCnt5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "12",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "14",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "12",
      Position => "11:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "13:12",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "5",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "4",
      Position => "3:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrDebug",
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_1bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrDebug",
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_2bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "73", # Excel Formula: =calc_reg_width(E25:E53,F53)
    Type => "Config",
    SACR1P_RME => { #Structure Type: RegField;
      Name => "SACR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACR1P_RM => { #Structure Type: RegField;
      Name => "SACR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "4:1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RME => { #Structure Type: RegField;
      Name => "SACU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RM => { #Structure Type: RegField;
      Name => "SACU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "9:6", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RME => { #Structure Type: RegField;
      Name => "SADC1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RM => { #Structure Type: RegField;
      Name => "SADC1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEA => { #Structure Type: RegField;
      Name => "SADR2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMA => { #Structure Type: RegField;
      Name => "SADR2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "19:16", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEB => { #Structure Type: RegField;
      Name => "SADR2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMB => { #Structure Type: RegField;
      Name => "SADR2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "24:21", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEA => { #Structure Type: RegField;
      Name => "SADS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "25", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMA => { #Structure Type: RegField;
      Name => "SADS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "29:26", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEB => { #Structure Type: RegField;
      Name => "SADS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMB => { #Structure Type: RegField;
      Name => "SADS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "34:31", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RME => { #Structure Type: RegField;
      Name => "SASR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "35", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RM => { #Structure Type: RegField;
      Name => "SASR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "39:36", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RME => { #Structure Type: RegField;
      Name => "SASS1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RM => { #Structure Type: RegField;
      Name => "SASS1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "44:41", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEA => { #Structure Type: RegField;
      Name => "SASS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "45", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMA => { #Structure Type: RegField;
      Name => "SASS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "49:46", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEB => { #Structure Type: RegField;
      Name => "SASS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "50", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMB => { #Structure Type: RegField;
      Name => "SASS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "54:51", # Excel Formula: =calc_position(F45,E46)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RME => { #Structure Type: RegField;
      Name => "SASU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F46,E47)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RM => { #Structure Type: RegField;
      Name => "SASU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "59:56", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RME => { #Structure Type: RegField;
      Name => "SADU1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RM => { #Structure Type: RegField;
      Name => "SADU1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "64:61", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RA => { #Structure Type: RegField;
      Name => "SADS2P_RA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Assist for Dual port",
      Width => "2",
      Position => "66:65", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_WA => { #Structure Type: RegField;
      Name => "SADU1P_WA",
      RegMem => "RegField",
      Description => "Write-Assist configuration for the SP SADU compiler",
      Width => "3",
      Position => "69:67", # Excel Formula: =calc_position(F51,E52)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "d5",
    },
    SADU1P_WPULSE => { #Structure Type: RegField;
      Name => "SADU1P_WPULSE",
      RegMem => "RegField",
      Description => "Write-Assist-Pulse configuration for the SP SADU compiler",
      Width => "3",
      Position => "72:70", # Excel Formula: =calc_position(F52,E53)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E55:E55,F55)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F54,E55,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C54,A54,G54)
    Description => "Spare register",
    Width => "128", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "Spare register ",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C56,A56,G56)
    Description => "PMRO controller configuration",
    Width => "32", # Excel Formula: =calc_reg_width(E59:E63,F63)
    Type => "Config",
    PmroRstn => { #Structure Type: RegField;
      Name => "PmroRstn",
      RegMem => "RegField",
      Description => "PMRO reset, active low",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F58,E59,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroConfigEn => { #Structure Type: RegField;
      Name => "PmroConfigEn",
      RegMem => "RegField",
      Description => "Enable pmro configuration, when equals to 0 configurations are locked",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroStart => { #Structure Type: RegField;
      Name => "PmroStart",
      RegMem => "RegField",
      Description => "Start the pmro operation",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F60,E61)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroRingEn => { #Structure Type: RegField;
      Name => "PmroRingEn",
      RegMem => "RegField",
      Description => "Determines which PMRO ring to activate, should be configured as one hot",
      Width => "7",
      Position => "9:3", # Excel Formula: =calc_position(F61,E62)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroCntPeriod => { #Structure Type: RegField;
      Name => "PmroCntPeriod",
      RegMem => "RegField",
      Description => "Number of core clock cycles on which PMRO is measured",
      Width => "22",
      Position => "31:10", # Excel Formula: =calc_position(F62,E63)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "h3FFFFF",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C58,A58,G58)
    Description => "PMRO status configuration",
    Width => "23", # Excel Formula: =calc_reg_width(E65:E66,F66)
    Type => "ReadOnly",
    PmroCountOut => { #Structure Type: RegField;
      Name => "PmroCountOut",
      RegMem => "RegField",
      Description => "The ring oscilator counter value.",
      Width => "22",
      Position => "21:0", # Excel Formula: =calc_position(F64,E65,TRUE)
      Type => "Status",
      UsedBy => "pmro",
    },
    PmroDone => { #Structure Type: RegField;
      Name => "PmroDone",
      RegMem => "RegField",
      Description => "Pmro operation done, PmroCountOut is valid.",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F65,E66)
      Type => "Status",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C64,A64,G64)
    Description => "Mirror Bus configurations",
    Width => "11", # Excel Formula: =calc_reg_width(E68:E69,F69)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "Enable Mirror Bus",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "Mirror Bus selector",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C67,A67,G67)
    Description => "Mirror Bus status result",
    Width => "32", # Excel Formula: =calc_reg_width(E71:E71,F71)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "Mirror Bus status result",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F70,E71,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C70,A70,G70)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E73:E73,F73)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F72,E73,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  GeneralInterruptRegister => { #Structure Type: Reg;
    Name => "GeneralInterruptRegister",
    RegMem => "Reg",
    Address => "100",
    Description => "Interrupt",
    Width => "14", # Excel Formula: =calc_reg_width(E8:E21,F21)
    Type => "Interrupt",
    IcsSlice0Interrupt => { #Structure Type: RegField;
      Name => "IcsSlice0Interrupt",
      RegMem => "RegField",
      Description => "ICS slice raised interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Interrupt",
      UsedBy => "EXT",
    },
    IcsSlice1Interrupt => { #Structure Type: RegField;
      Name => "IcsSlice1Interrupt",
      RegMem => "RegField",
      Description => "ICS slice raised interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F8,E9)
      Type => "Interrupt",
      UsedBy => "EXT",
    },
    IcsSlice2Interrupt => { #Structure Type: RegField;
      Name => "IcsSlice2Interrupt",
      RegMem => "RegField",
      Description => "ICS slice raised interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F9,E10)
      Type => "Interrupt",
      UsedBy => "EXT",
    },
    IcsSlice3Interrupt => { #Structure Type: RegField;
      Name => "IcsSlice3Interrupt",
      RegMem => "RegField",
      Description => "ICS slice raised interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F10,E11)
      Type => "Interrupt",
      UsedBy => "EXT",
    },
    IcsSlice4Interrupt => { #Structure Type: RegField;
      Name => "IcsSlice4Interrupt",
      RegMem => "RegField",
      Description => "ICS slice raised interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F11,E12)
      Type => "Interrupt",
      UsedBy => "EXT",
    },
    IcsSlice5Interrupt => { #Structure Type: RegField;
      Name => "IcsSlice5Interrupt",
      RegMem => "RegField",
      Description => "ICS slice raised interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F12,E13)
      Type => "Interrupt",
      UsedBy => "EXT",
    },
    FilbSlice0Interrupt => { #Structure Type: RegField;
      Name => "FilbSlice0Interrupt",
      RegMem => "RegField",
      Description => "FILB slice raised interrupt",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F13,E14)
      Type => "Interrupt",
      UsedBy => "EXT",
    },
    FilbSlice1Interrupt => { #Structure Type: RegField;
      Name => "FilbSlice1Interrupt",
      RegMem => "RegField",
      Description => "FILB slice raised interrupt",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F14,E15)
      Type => "Interrupt",
      UsedBy => "EXT",
    },
    FilbSlice2Interrupt => { #Structure Type: RegField;
      Name => "FilbSlice2Interrupt",
      RegMem => "RegField",
      Description => "FILB slice raised interrupt",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F15,E16)
      Type => "Interrupt",
      UsedBy => "EXT",
    },
    FilbSlice3Interrupt => { #Structure Type: RegField;
      Name => "FilbSlice3Interrupt",
      RegMem => "RegField",
      Description => "FILB slice raised interrupt",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F16,E17)
      Type => "Interrupt",
      UsedBy => "EXT",
    },
    FilbSlice4Interrupt => { #Structure Type: RegField;
      Name => "FilbSlice4Interrupt",
      RegMem => "RegField",
      Description => "FILB slice raised interrupt",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F17,E18)
      Type => "Interrupt",
      UsedBy => "EXT",
    },
    FilbSlice5Interrupt => { #Structure Type: RegField;
      Name => "FilbSlice5Interrupt",
      RegMem => "RegField",
      Description => "FILB slice raised interrupt",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F18,E19)
      Type => "Interrupt",
      UsedBy => "EXT",
    },
    dram_pack_pref_fifo_overf => { #Structure Type: RegField;
      Name => "dram_pack_pref_fifo_overf",
      RegMem => "RegField",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F19,E20)
      Type => "Interrupt",
      UsedBy => "PREF",
    },
    dram_delete_pref_fifo_overf => { #Structure Type: RegField;
      Name => "dram_delete_pref_fifo_overf",
      RegMem => "RegField",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F20,E21)
      Type => "Interrupt",
      UsedBy => "PREF",
    },
  },
  GeneralInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "GeneralInterruptRegisterMask",
    RegMem => "Reg",
    Address => "101",
    Description => "This register masks GeneralInterruptRegister interrupt register",
    Width => "14", # Excel Formula: =calc_reg_width(E8:E21,F21)
    Type => "InterruptMask",
    IcsSlice0InterruptMask => { #Structure Type: RegField;
      Name => "IcsSlice0InterruptMask",
      RegMem => "RegField",
      Description => "This field masks IcsSlice0Interrupt interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    IcsSlice1InterruptMask => { #Structure Type: RegField;
      Name => "IcsSlice1InterruptMask",
      RegMem => "RegField",
      Description => "This field masks IcsSlice1Interrupt interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F8,E9)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    IcsSlice2InterruptMask => { #Structure Type: RegField;
      Name => "IcsSlice2InterruptMask",
      RegMem => "RegField",
      Description => "This field masks IcsSlice2Interrupt interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F9,E10)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    IcsSlice3InterruptMask => { #Structure Type: RegField;
      Name => "IcsSlice3InterruptMask",
      RegMem => "RegField",
      Description => "This field masks IcsSlice3Interrupt interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F10,E11)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    IcsSlice4InterruptMask => { #Structure Type: RegField;
      Name => "IcsSlice4InterruptMask",
      RegMem => "RegField",
      Description => "This field masks IcsSlice4Interrupt interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F11,E12)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    IcsSlice5InterruptMask => { #Structure Type: RegField;
      Name => "IcsSlice5InterruptMask",
      RegMem => "RegField",
      Description => "This field masks IcsSlice5Interrupt interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F12,E13)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    FilbSlice0InterruptMask => { #Structure Type: RegField;
      Name => "FilbSlice0InterruptMask",
      RegMem => "RegField",
      Description => "This field masks FilbSlice0Interrupt interrupt",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F13,E14)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    FilbSlice1InterruptMask => { #Structure Type: RegField;
      Name => "FilbSlice1InterruptMask",
      RegMem => "RegField",
      Description => "This field masks FilbSlice1Interrupt interrupt",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F14,E15)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    FilbSlice2InterruptMask => { #Structure Type: RegField;
      Name => "FilbSlice2InterruptMask",
      RegMem => "RegField",
      Description => "This field masks FilbSlice2Interrupt interrupt",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F15,E16)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    FilbSlice3InterruptMask => { #Structure Type: RegField;
      Name => "FilbSlice3InterruptMask",
      RegMem => "RegField",
      Description => "This field masks FilbSlice3Interrupt interrupt",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F16,E17)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    FilbSlice4InterruptMask => { #Structure Type: RegField;
      Name => "FilbSlice4InterruptMask",
      RegMem => "RegField",
      Description => "This field masks FilbSlice4Interrupt interrupt",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F17,E18)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    FilbSlice5InterruptMask => { #Structure Type: RegField;
      Name => "FilbSlice5InterruptMask",
      RegMem => "RegField",
      Description => "This field masks FilbSlice5Interrupt interrupt",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F18,E19)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    dram_pack_pref_fifo_overfMask => { #Structure Type: RegField;
      Name => "dram_pack_pref_fifo_overfMask",
      RegMem => "RegField",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F19,E20)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    dram_delete_pref_fifo_overfMask => { #Structure Type: RegField;
      Name => "dram_delete_pref_fifo_overfMask",
      RegMem => "RegField",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F20,E21)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  GeneralInterruptRegisterTest => { #Structure Type: Reg; Skip Register;
    Name => "GeneralInterruptRegisterTest",
    RegMem => "Reg",
    Address => "102",
    Description => "This register tests GeneralInterruptRegister interrupt register",
    Width => "14", # Excel Formula: =calc_reg_width(E8:E21,F21)
    Type => "InterruptTest",
    IcsSlice0InterruptTest => { #Structure Type: RegField;
      Name => "IcsSlice0InterruptTest",
      RegMem => "RegField",
      Description => "This field tests IcsSlice0Interrupt interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    IcsSlice1InterruptTest => { #Structure Type: RegField;
      Name => "IcsSlice1InterruptTest",
      RegMem => "RegField",
      Description => "This field tests IcsSlice1Interrupt interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F8,E9)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    IcsSlice2InterruptTest => { #Structure Type: RegField;
      Name => "IcsSlice2InterruptTest",
      RegMem => "RegField",
      Description => "This field tests IcsSlice2Interrupt interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F9,E10)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    IcsSlice3InterruptTest => { #Structure Type: RegField;
      Name => "IcsSlice3InterruptTest",
      RegMem => "RegField",
      Description => "This field tests IcsSlice3Interrupt interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F10,E11)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    IcsSlice4InterruptTest => { #Structure Type: RegField;
      Name => "IcsSlice4InterruptTest",
      RegMem => "RegField",
      Description => "This field tests IcsSlice4Interrupt interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F11,E12)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    IcsSlice5InterruptTest => { #Structure Type: RegField;
      Name => "IcsSlice5InterruptTest",
      RegMem => "RegField",
      Description => "This field tests IcsSlice5Interrupt interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F12,E13)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    FilbSlice0InterruptTest => { #Structure Type: RegField;
      Name => "FilbSlice0InterruptTest",
      RegMem => "RegField",
      Description => "This field tests FilbSlice0Interrupt interrupt",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F13,E14)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    FilbSlice1InterruptTest => { #Structure Type: RegField;
      Name => "FilbSlice1InterruptTest",
      RegMem => "RegField",
      Description => "This field tests FilbSlice1Interrupt interrupt",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F14,E15)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    FilbSlice2InterruptTest => { #Structure Type: RegField;
      Name => "FilbSlice2InterruptTest",
      RegMem => "RegField",
      Description => "This field tests FilbSlice2Interrupt interrupt",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F15,E16)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    FilbSlice3InterruptTest => { #Structure Type: RegField;
      Name => "FilbSlice3InterruptTest",
      RegMem => "RegField",
      Description => "This field tests FilbSlice3Interrupt interrupt",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F16,E17)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    FilbSlice4InterruptTest => { #Structure Type: RegField;
      Name => "FilbSlice4InterruptTest",
      RegMem => "RegField",
      Description => "This field tests FilbSlice4Interrupt interrupt",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F17,E18)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    FilbSlice5InterruptTest => { #Structure Type: RegField;
      Name => "FilbSlice5InterruptTest",
      RegMem => "RegField",
      Description => "This field tests FilbSlice5Interrupt interrupt",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F18,E19)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    dram_pack_pref_fifo_overfTest => { #Structure Type: RegField;
      Name => "dram_pack_pref_fifo_overfTest",
      RegMem => "RegField",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F19,E20)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    dram_delete_pref_fifo_overfTest => { #Structure Type: RegField;
      Name => "dram_delete_pref_fifo_overfTest",
      RegMem => "RegField",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F20,E21)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  CounterReg => { #Structure Type: Reg;
    Name => "CounterReg",
    RegMem => "Reg",
    Address => "103", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "TO BE REMOVED  - no one use it",
    Width => "33", # Excel Formula: =calc_reg_width(E23:E25,F25)
    Type => "External",
    UsedBy => "CNT",
    CounterAddress => { #Structure Type: RegField;
      Name => "CounterAddress",
      RegMem => "RegField",
      Width => "12", # Excel Formula: =calc_field_width_define("ICS_DRAM_QNUM_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "External",
    },
    CounterData => { #Structure Type: RegField;
      Name => "CounterData",
      RegMem => "RegField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "31:12", # Excel Formula: =calc_position(F23,E24)
      Type => "External",
    },
    Wr1Rd0 => { #Structure Type: RegField;
      Name => "Wr1Rd0",
      RegMem => "RegField",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F24,E25)
      Type => "External",
    },
  },
  AlmostFullConf => { #Structure Type: Reg;
    Name => "AlmostFullConf",
    RegMem => "Reg",
    Address => "104", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Width => "48", # Excel Formula: =calc_reg_width(E27:E31,F31)
    Type => "Config",
    DecFifoAlmFullTh => { #Structure Type: RegField;
      Name => "DecFifoAlmFullTh",
      RegMem => "RegField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F26,E27,TRUE)
      Type => "Config",
      UsedBy => "DRAMCNT",
      DefaultValue => "d8",
    },
    return_dram_context_alm_full_cfg => { #Structure Type: RegField;
      Name => "return_dram_context_alm_full_cfg",
      RegMem => "RegField",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "POOL",
      DefaultValue => "d8",
    },
    pre_ics_fifo_alm_full_cfg => { #Structure Type: RegField;
      Name => "pre_ics_fifo_alm_full_cfg",
      RegMem => "RegField",
      Width => "3",
      Position => "10:8", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "POOL",
      DefaultValue => "d2",
    },
    cbt_alm_full_cfg => { #Structure Type: RegField;
      Name => "cbt_alm_full_cfg",
      RegMem => "RegField",
      Width => "5",
      Position => "15:11", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "DRAMARB",
      DefaultValue => "d0",
    },
    global_sms_data_above_th => { #Structure Type: RegField;
      Name => "global_sms_data_above_th",
      RegMem => "RegField",
      Width => "32",
      Position => "47:16", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d999999",
    },
  },
  FifosDebugReg => { #Structure Type: Reg;
    Name => "FifosDebugReg",
    RegMem => "Reg",
    Address => "105", # Excel Formula: =calc_reg_address(C26,A26,G26)
    Width => "6", # Excel Formula: =calc_reg_width(E33:E33,F33)
    Type => "ReadOnly",
    cbt_credit_count => { #Structure Type: RegField;
      Name => "cbt_credit_count",
      RegMem => "RegField",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Status",
      UsedBy => "DRAMARB",
    },
  },
  DramPoolFbmConf => { #Structure Type: Reg;
    Name => "DramPoolFbmConf",
    RegMem => "Reg",
    Address => "106", # Excel Formula: =calc_reg_address(C32,A32,G32)
    Width => "78", # Excel Formula: =calc_reg_width(E35:E37,F37)
    Type => "Config",
    DramPoolFbmTotalFreeBuf => { #Structure Type: RegField;
      Name => "DramPoolFbmTotalFreeBuf",
      RegMem => "RegField",
      Description => "Total number of free buffers in the context allocation free buffer manager",
      Width => "13", # Excel Formula: =calc_field_width_define("CONTEXT_WIDTH") +1
      Position => "12:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "POOL",
      DefaultValue => "d4096",
      InitValueAllModes => "4095",
    },
    DramPoolFbmNotEmptyEntry => { #Structure Type: RegField;
      Name => "DramPoolFbmNotEmptyEntry",
      RegMem => "RegField",
      Description => "Per entry of contextfbmBmp : '1' -this entry contains at least one free buffer",
      Width => "64", # Excel Formula: =K118
      Position => "76:13", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "POOL",
      DefaultValue => "hFFFF_FFFF_FFFF_FFFF",
    },
    DramPoolFbmRstnCfg => { #Structure Type: RegField;
      Name => "DramPoolFbmRstnCfg",
      RegMem => "RegField",
      Description => "Fbm reset by configuration",
      Width => "1",
      Position => "77", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "POOL",
      DefaultValue => "d1",
      InitValueAllModes => "0",
    },
  },
  DebugReg => { #Structure Type: Reg;
    Name => "DebugReg",
    RegMem => "Reg",
    Address => "107", # Excel Formula: =calc_reg_address(C34,A34,G34)
    Width => "1", # Excel Formula: =calc_reg_width(E39:E39,F39)
    Type => "Config",
    EvictEnWhenEligMeterAbove => { #Structure Type: RegField;
      Name => "EvictEnWhenEligMeterAbove",
      RegMem => "RegField",
      Description => "When '1' enable evict to dram even if the eligible meter is abothe threshold",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Config",
      UsedBy => "DRAMARB",
      DefaultValue => "d0",
      InitValueAllModes => "1",
    },
  },
  FifoStatusReg0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 14;
    Name => "FifoStatusReg[6]",
    RegMem => "Reg",
    Address => "108", # Excel Formula: =calc_reg_address(C38,A38,G38)
    Description => "Status",
    Width => "24", # Excel Formula: =calc_reg_width(E41:E45,F45)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    DecFifoStatus0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "DecFifoStatus[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Status",
      UsedBy => "DRAMCNT",
    },
    return_dram_context_status0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 27;
      Name => "return_dram_context_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "9:5", # Excel Formula: =calc_position(F41,E42)
      Type => "Status",
      UsedBy => "POOL",
    },
    pre_ics_fifo_status0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 20;
      Name => "pre_ics_fifo_status[n]",
      RegMem => "RegField",
      Width => "4",
      Position => "13:10", # Excel Formula: =calc_position(F42,E43)
      Type => "Status",
      UsedBy => "POOL",
    },
    dram_pack_pref_fifo_status0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 27;
      Name => "dram_pack_pref_fifo_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "18:14", # Excel Formula: =calc_position(F43,E44)
      Type => "Status",
      UsedBy => "PREF",
    },
    dram_delete_pref_fifo_status0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 29;
      Name => "dram_delete_pref_fifo_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "23:19", # Excel Formula: =calc_position(F44,E45)
      Type => "Status",
      UsedBy => "PREF",
    },
  },
  FifoStatusReg1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 14;
    Name => "FifoStatusReg[6]",
    RegMem => "Reg",
    Address => "109",
    Description => "Status",
    Width => "24", # Excel Formula: =calc_reg_width(E41:E45,F45)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    DecFifoStatus1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "DecFifoStatus[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Status",
      UsedBy => "DRAMCNT",
    },
    return_dram_context_status1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 27;
      Name => "return_dram_context_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "9:5", # Excel Formula: =calc_position(F41,E42)
      Type => "Status",
      UsedBy => "POOL",
    },
    pre_ics_fifo_status1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 20;
      Name => "pre_ics_fifo_status[n]",
      RegMem => "RegField",
      Width => "4",
      Position => "13:10", # Excel Formula: =calc_position(F42,E43)
      Type => "Status",
      UsedBy => "POOL",
    },
    dram_pack_pref_fifo_status1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 27;
      Name => "dram_pack_pref_fifo_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "18:14", # Excel Formula: =calc_position(F43,E44)
      Type => "Status",
      UsedBy => "PREF",
    },
    dram_delete_pref_fifo_status1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 29;
      Name => "dram_delete_pref_fifo_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "23:19", # Excel Formula: =calc_position(F44,E45)
      Type => "Status",
      UsedBy => "PREF",
    },
  },
  FifoStatusReg2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 14;
    Name => "FifoStatusReg[6]",
    RegMem => "Reg",
    Address => "10A",
    Description => "Status",
    Width => "24", # Excel Formula: =calc_reg_width(E41:E45,F45)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    DecFifoStatus2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 14;
      Name => "DecFifoStatus[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Status",
      UsedBy => "DRAMCNT",
    },
    return_dram_context_status2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 27;
      Name => "return_dram_context_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "9:5", # Excel Formula: =calc_position(F41,E42)
      Type => "Status",
      UsedBy => "POOL",
    },
    pre_ics_fifo_status2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 20;
      Name => "pre_ics_fifo_status[n]",
      RegMem => "RegField",
      Width => "4",
      Position => "13:10", # Excel Formula: =calc_position(F42,E43)
      Type => "Status",
      UsedBy => "POOL",
    },
    dram_pack_pref_fifo_status2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 27;
      Name => "dram_pack_pref_fifo_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "18:14", # Excel Formula: =calc_position(F43,E44)
      Type => "Status",
      UsedBy => "PREF",
    },
    dram_delete_pref_fifo_status2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 29;
      Name => "dram_delete_pref_fifo_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "23:19", # Excel Formula: =calc_position(F44,E45)
      Type => "Status",
      UsedBy => "PREF",
    },
  },
  FifoStatusReg3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 14;
    Name => "FifoStatusReg[6]",
    RegMem => "Reg",
    Address => "10B",
    Description => "Status",
    Width => "24", # Excel Formula: =calc_reg_width(E41:E45,F45)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    DecFifoStatus3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 14;
      Name => "DecFifoStatus[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Status",
      UsedBy => "DRAMCNT",
    },
    return_dram_context_status3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 27;
      Name => "return_dram_context_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "9:5", # Excel Formula: =calc_position(F41,E42)
      Type => "Status",
      UsedBy => "POOL",
    },
    pre_ics_fifo_status3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 20;
      Name => "pre_ics_fifo_status[n]",
      RegMem => "RegField",
      Width => "4",
      Position => "13:10", # Excel Formula: =calc_position(F42,E43)
      Type => "Status",
      UsedBy => "POOL",
    },
    dram_pack_pref_fifo_status3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 27;
      Name => "dram_pack_pref_fifo_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "18:14", # Excel Formula: =calc_position(F43,E44)
      Type => "Status",
      UsedBy => "PREF",
    },
    dram_delete_pref_fifo_status3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 29;
      Name => "dram_delete_pref_fifo_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "23:19", # Excel Formula: =calc_position(F44,E45)
      Type => "Status",
      UsedBy => "PREF",
    },
  },
  FifoStatusReg4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 14;
    Name => "FifoStatusReg[6]",
    RegMem => "Reg",
    Address => "10C",
    Description => "Status",
    Width => "24", # Excel Formula: =calc_reg_width(E41:E45,F45)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    DecFifoStatus4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 14;
      Name => "DecFifoStatus[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Status",
      UsedBy => "DRAMCNT",
    },
    return_dram_context_status4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 27;
      Name => "return_dram_context_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "9:5", # Excel Formula: =calc_position(F41,E42)
      Type => "Status",
      UsedBy => "POOL",
    },
    pre_ics_fifo_status4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 20;
      Name => "pre_ics_fifo_status[n]",
      RegMem => "RegField",
      Width => "4",
      Position => "13:10", # Excel Formula: =calc_position(F42,E43)
      Type => "Status",
      UsedBy => "POOL",
    },
    dram_pack_pref_fifo_status4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 27;
      Name => "dram_pack_pref_fifo_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "18:14", # Excel Formula: =calc_position(F43,E44)
      Type => "Status",
      UsedBy => "PREF",
    },
    dram_delete_pref_fifo_status4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 29;
      Name => "dram_delete_pref_fifo_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "23:19", # Excel Formula: =calc_position(F44,E45)
      Type => "Status",
      UsedBy => "PREF",
    },
  },
  FifoStatusReg5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 14;
    Name => "FifoStatusReg[6]",
    RegMem => "Reg",
    Address => "10D",
    Description => "Status",
    Width => "24", # Excel Formula: =calc_reg_width(E41:E45,F45)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    DecFifoStatus5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 14;
      Name => "DecFifoStatus[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Status",
      UsedBy => "DRAMCNT",
    },
    return_dram_context_status5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 27;
      Name => "return_dram_context_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "9:5", # Excel Formula: =calc_position(F41,E42)
      Type => "Status",
      UsedBy => "POOL",
    },
    pre_ics_fifo_status5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 20;
      Name => "pre_ics_fifo_status[n]",
      RegMem => "RegField",
      Width => "4",
      Position => "13:10", # Excel Formula: =calc_position(F42,E43)
      Type => "Status",
      UsedBy => "POOL",
    },
    dram_pack_pref_fifo_status5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 27;
      Name => "dram_pack_pref_fifo_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "18:14", # Excel Formula: =calc_position(F43,E44)
      Type => "Status",
      UsedBy => "PREF",
    },
    dram_delete_pref_fifo_status5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 29;
      Name => "dram_delete_pref_fifo_status[n]",
      RegMem => "RegField",
      Width => "5",
      Position => "23:19", # Excel Formula: =calc_position(F44,E45)
      Type => "Status",
      UsedBy => "PREF",
    },
  },
  DramWriteMeter => { #Structure Type: Reg;
    Name => "DramWriteMeter",
    RegMem => "Reg",
    Address => "10E", # Excel Formula: =calc_reg_address(C40,A40,G40)
    Description => "control eviction of new queues to dram",
    Width => "112", # Excel Formula: =calc_reg_width(E47:E50,F50)
    Type => "Config",
    DramWriteMeterRate => { #Structure Type: RegField;
      Name => "DramWriteMeterRate",
      RegMem => "RegField",
      Description => "aaa",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d1",
    },
    DramWriteMeterIncValue => { #Structure Type: RegField;
      Name => "DramWriteMeterIncValue",
      RegMem => "RegField",
      Description => "aaa",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d1",
      InitValueAllModes => "(frequency <= 1000) ? 1200 * 1000 / (frequency * 8) : 
(frequency <= 1100) ? 1400 * 1000 / (frequency * 8) : 
(frequency <= 1200) ? 1600 * 1000 / (frequency * 8) : 
                                             1800 * 1000 / (frequency * 8)",
    },
    DramWriteMeterMaxBucket => { #Structure Type: RegField;
      Name => "DramWriteMeterMaxBucket",
      RegMem => "RegField",
      Description => "aaa",
      Width => "40",
      Position => "71:32", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "h100000",
      InitValueAllModes => "100*1024",
    },
    DramWriteMeterMaxBucketTh => { #Structure Type: RegField;
      Name => "DramWriteMeterMaxBucketTh",
      RegMem => "RegField",
      Description => "aaa",
      Width => "40",
      Position => "111:72", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "h80000",
      InitValueAllModes => "50*1024",
    },
  },
  DramWriteEligibleMeter => { #Structure Type: Reg;
    Name => "DramWriteEligibleMeter",
    RegMem => "Reg",
    Address => "10F", # Excel Formula: =calc_reg_address(C46,A46,G46)
    Description => "control the rate of traffic to the dram- bucket size ~4MB
rate is 50% - epsilon (on large time average - large bucket to allow bursts)",
    Width => "112", # Excel Formula: =calc_reg_width(E52:E55,F55)
    Type => "Config",
    DramWriteEligMeterRate => { #Structure Type: RegField;
      Name => "DramWriteEligMeterRate",
      RegMem => "RegField",
      Description => "aaa",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F51,E52,TRUE)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d1",
    },
    DramWriteEligMeterIncValue => { #Structure Type: RegField;
      Name => "DramWriteEligMeterIncValue",
      RegMem => "RegField",
      Description => "aaa",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F52,E53)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d1",
      InitValueAllModes => "(frequency <= 1000) ? 1400 * 1000 / (frequency * 8) : 
(frequency <= 1100) ? 1600 * 1000 / (frequency * 8) : 
(frequency <= 1200) ? 1800 * 1000 / (frequency * 8) : 
                                             2000 * 1000 / (frequency * 8)",
    },
    DramWriteEligMeterMaxBucket => { #Structure Type: RegField;
      Name => "DramWriteEligMeterMaxBucket",
      RegMem => "RegField",
      Description => "aaa",
      Width => "40",
      Position => "71:32", # Excel Formula: =calc_position(F53,E54)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "h40000000",
      InitValueAllModes => "24*1024*1024",
    },
    DramWriteEligMeterMaxBucketTh => { #Structure Type: RegField;
      Name => "DramWriteEligMeterMaxBucketTh",
      RegMem => "RegField",
      Description => "aaa",
      Width => "40",
      Position => "111:72", # Excel Formula: =calc_position(F54,E55)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "h10000000",
      InitValueAllModes => "6*1024*1024",
    },
  },
  DramDiscardMeter => { #Structure Type: Reg;
    Name => "DramDiscardMeter",
    RegMem => "Reg",
    Address => "110", # Excel Formula: =calc_reg_address(C51,A51,G51)
    Description => "may decide that packets targetted to the dram are discarded- rate is 50% - epsillon - the idea is to limit the burst allowed by DramWriteEligiblleMeter",
    Width => "112", # Excel Formula: =calc_reg_width(E57:E60,F60)
    Type => "Config",
    DramDiscardMeterRate => { #Structure Type: RegField;
      Name => "DramDiscardMeterRate",
      RegMem => "RegField",
      Description => "aaa",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d16",
      InitValueAllModes => "1",
    },
    DramDiscardMeterIncValue => { #Structure Type: RegField;
      Name => "DramDiscardMeterIncValue",
      RegMem => "RegField",
      Description => "aaa",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F57,E58)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d1",
      InitValueAllModes => "hFFFF",
    },
    DramDiscardMeterMaxBucket => { #Structure Type: RegField;
      Name => "DramDiscardMeterMaxBucket",
      RegMem => "RegField",
      Description => "aaa",
      Width => "40",
      Position => "71:32", # Excel Formula: =calc_position(F58,E59)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "h100000",
      InitValueAllModes => "h00040000000",
    },
    DramDiscardMeterMaxBucketTh => { #Structure Type: RegField;
      Name => "DramDiscardMeterMaxBucketTh",
      RegMem => "RegField",
      Description => "aaa",
      Width => "40",
      Position => "111:72", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "h80000",
      InitValueAllModes => "h00010000000",
    },
  },
  InternalFifoAlmFull => { #Structure Type: Reg;
    Name => "InternalFifoAlmFull",
    RegMem => "Reg",
    Address => "111", # Excel Formula: =calc_reg_address(C56,A56,G56)
    Description => "Packing parameters",
    Width => "8", # Excel Formula: =calc_reg_width(E62:E63,F63)
    Type => "Config",
    DramPackPrefAlmFull => { #Structure Type: RegField;
      Name => "DramPackPrefAlmFull",
      RegMem => "RegField",
      Description => "aaa",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F61,E62,TRUE)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d4",
    },
    DramDelPrefAlmFull => { #Structure Type: RegField;
      Name => "DramDelPrefAlmFull",
      RegMem => "RegField",
      Description => "aaa",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F62,E63)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d3",
    },
  },
  DramContextPoolAlmEmpty => { #Structure Type: Reg;
    Name => "DramContextPoolAlmEmpty",
    RegMem => "Reg",
    Address => "112", # Excel Formula: =calc_reg_address(C61,A61,G61)
    Width => "24", # Excel Formula: =calc_reg_width(E65:E66,F66)
    Type => "Config",
    DramContextPoolAlmEmptyTh => { #Structure Type: RegField;
      Name => "DramContextPoolAlmEmptyTh",
      RegMem => "RegField",
      Description => "Threshold of dram context pool size - below this threshold send indication to voq cgm",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F64,E65,TRUE)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d1000",
      InitValueAllModes => "500",
    },
    DramContextPoolHpVoqTh => { #Structure Type: RegField;
      Name => "DramContextPoolHpVoqTh",
      RegMem => "RegField",
      Description => "Threshold of dram context pool size - below this threshold send indication to ICS enqueue pipe that only high priority VoQs may be evicted to dram",
      Width => "12",
      Position => "23:12", # Excel Formula: =calc_position(F65,E66)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d500",
    },
  },
  DramPoolStat => { #Structure Type: Reg;
    Name => "DramPoolStat",
    RegMem => "Reg",
    Address => "113", # Excel Formula: =calc_reg_address(C64,A64,G64)
    Width => "13", # Excel Formula: =calc_reg_width(E68:E68,F68)
    Type => "ReadOnly",
    DramPoolStatus => { #Structure Type: RegField;
      Name => "DramPoolStatus",
      RegMem => "RegField",
      Width => "13", # Excel Formula: =1+calc_field_width_define("DRAM_QUEUE_WIDTH")
      Position => "12:0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Status",
      UsedBy => "DRAM",
    },
  },
  SmsBufDirectedToDramReg => { #Structure Type: Reg;
    Name => "SmsBufDirectedToDramReg",
    RegMem => "Reg",
    Address => "114", # Excel Formula: =calc_reg_address(C67,A67,G67)
    Width => "19", # Excel Formula: =calc_reg_width(E70:E70,F70)
    Type => "ReadOnly",
    SmsBufDirectedToDram => { #Structure Type: RegField;
      Name => "SmsBufDirectedToDram",
      RegMem => "RegField",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Status",
      UsedBy => "DRAM",
    },
  },
  SmsBufDirectedToDramWmReg => { #Structure Type: Reg;
    Name => "SmsBufDirectedToDramWmReg",
    RegMem => "Reg",
    Address => "115", # Excel Formula: =calc_reg_address(C69,A69,G69)
    Width => "133", # Excel Formula: =calc_reg_width(E72:E78,F78)
    Type => "ReadOnly",
    SmsBufDirectedToDramWmSlice0 => { #Structure Type: RegField;
      Name => "SmsBufDirectedToDramWmSlice0",
      RegMem => "RegField",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F71,E72,TRUE)
      Type => "MaxWmk",
      UsedBy => "DRAM",
    },
    SmsBufDirectedToDramWmSlice1 => { #Structure Type: RegField;
      Name => "SmsBufDirectedToDramWmSlice1",
      RegMem => "RegField",
      Width => "19",
      Position => "37:19", # Excel Formula: =calc_position(F72,E73)
      Type => "MaxWmk",
      UsedBy => "DRAM",
    },
    SmsBufDirectedToDramWmSlice2 => { #Structure Type: RegField;
      Name => "SmsBufDirectedToDramWmSlice2",
      RegMem => "RegField",
      Width => "19",
      Position => "56:38", # Excel Formula: =calc_position(F73,E74)
      Type => "MaxWmk",
      UsedBy => "DRAM",
    },
    SmsBufDirectedToDramWmSlice3 => { #Structure Type: RegField;
      Name => "SmsBufDirectedToDramWmSlice3",
      RegMem => "RegField",
      Width => "19",
      Position => "75:57", # Excel Formula: =calc_position(F74,E75)
      Type => "MaxWmk",
      UsedBy => "DRAM",
    },
    SmsBufDirectedToDramWmSlice4 => { #Structure Type: RegField;
      Name => "SmsBufDirectedToDramWmSlice4",
      RegMem => "RegField",
      Width => "19",
      Position => "94:76", # Excel Formula: =calc_position(F75,E76)
      Type => "MaxWmk",
      UsedBy => "DRAM",
    },
    SmsBufDirectedToDramWmSlice5 => { #Structure Type: RegField;
      Name => "SmsBufDirectedToDramWmSlice5",
      RegMem => "RegField",
      Width => "19",
      Position => "113:95", # Excel Formula: =calc_position(F76,E77)
      Type => "MaxWmk",
      UsedBy => "DRAM",
    },
    SmsBufDirectedToDramWmTotal => { #Structure Type: RegField;
      Name => "SmsBufDirectedToDramWmTotal",
      RegMem => "RegField",
      Width => "19",
      Position => "132:114", # Excel Formula: =calc_position(F77,E78)
      Type => "MaxWmk",
      UsedBy => "DRAM",
    },
  },
  DramGlobalBufferSizeCfg => { #Structure Type: Reg;
    Name => "DramGlobalBufferSizeCfg",
    RegMem => "Reg",
    Address => "116", # Excel Formula: =calc_reg_address(C71,A71,G71)
    Width => "60", # Excel Formula: =calc_reg_width(E80:E80,F80)
    Type => "Config",
    DramGlobalBufferSizeTh => { #Structure Type: RegField;
      Name => "DramGlobalBufferSizeTh",
      RegMem => "RegField",
      Description => "Quantization thresholds for the total amount of DRAM bound SMS Buffers
Packed as {Th2, Th1, Th0}",
      Width => "60", # Excel Formula: =3*20
      Position => "59:0", # Excel Formula: =calc_position(F79,E80,TRUE)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d1000",
      ArrayItemWidth => "20",
      InitValueAllModes => "item == 0 ? 20*1024 :
item == 1 ? 45*1024 : 60*1024",
    },
  },
  FabricRateLimiterCfg => { #Structure Type: Reg;
    Name => "FabricRateLimiterCfg",
    RegMem => "Reg",
    Address => "117", # Excel Formula: =calc_reg_address(C79,A79,G79)
    Description => "FIRL configuration, shapes the entire rate of the device towards the fabric.",
    Width => "64", # Excel Formula: =calc_reg_width(E82:E84,F84)
    Type => "Config",
    FabricRateLimiterMaxThr => { #Structure Type: RegField;
      Name => "FabricRateLimiterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in bytes",
      Width => "20", # Excel Formula: =calc_field_width_define("PKT_SIZE_WIDTH")+6
      Position => "19:0", # Excel Formula: =calc_position(F81,E82,TRUE)
      Type => "Config",
      UsedBy => "TOP",
      DefaultValue => "d30000",
      InitValueAllModes => "10000",
    },
    FabricRateLimiterRate => { #Structure Type: RegField;
      Name => "FabricRateLimiterRate",
      RegMem => "RegField",
      Description => "FIRL shaper total rate, creates token each FabricRateLimiterRate/16 clocks",
      Width => "24",
      Position => "43:20", # Excel Formula: =calc_position(F82,E83)
      Type => "Config",
      UsedBy => "TOP",
      DefaultValue => "d30",
      InitValueAllModes => "frequency*1024*8*16/(6200 * 1000)",
    },
    FabricRateLimiterIncValue => { #Structure Type: RegField;
      Name => "FabricRateLimiterIncValue",
      RegMem => "RegField",
      Description => "FIRL increment value in bytes",
      Width => "20",
      Position => "63:44", # Excel Formula: =calc_position(F83,E84)
      Type => "Config",
      UsedBy => "TOP",
      DefaultValue => "d1024",
      InitValueAllModes => "1024",
    },
  },
  SmsLoadBalancingMeterCfg0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[6]",
    RegMem => "Reg",
    Address => "118", # Excel Formula: =calc_reg_address(C81,A81,G81)
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E86:E87,F87)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Sms0LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d1024",
      InitValueAllModes => "4*1024 - 1",
    },
    Sms0LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F86,E87)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d278",
      InitValueAllModes => "264",
    },
  },
  SmsLoadBalancingMeterCfg1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[6]",
    RegMem => "Reg",
    Address => "119",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E86:E87,F87)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Sms1LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d1024",
      InitValueAllModes => "4*1024 - 1",
    },
    Sms1LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F86,E87)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d278",
      InitValueAllModes => "264",
    },
  },
  SmsLoadBalancingMeterCfg2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[6]",
    RegMem => "Reg",
    Address => "11A",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E86:E87,F87)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Sms2LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d1024",
      InitValueAllModes => "4*1024 - 1",
    },
    Sms2LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F86,E87)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d278",
      InitValueAllModes => "264",
    },
  },
  SmsLoadBalancingMeterCfg3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[6]",
    RegMem => "Reg",
    Address => "11B",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E86:E87,F87)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Sms3LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d1024",
      InitValueAllModes => "4*1024 - 1",
    },
    Sms3LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F86,E87)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d278",
      InitValueAllModes => "264",
    },
  },
  SmsLoadBalancingMeterCfg4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[6]",
    RegMem => "Reg",
    Address => "11C",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E86:E87,F87)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Sms4LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d1024",
      InitValueAllModes => "4*1024 - 1",
    },
    Sms4LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F86,E87)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d278",
      InitValueAllModes => "264",
    },
  },
  SmsLoadBalancingMeterCfg5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 25;
    Name => "SmsLoadBalancingMeterCfg[6]",
    RegMem => "Reg",
    Address => "11D",
    Description => "SLBM configuration, intended to rate limit words on the fabric SMS interfaces.
One config register per SMS interface rate limiter.",
    Width => "32", # Excel Formula: =calc_reg_width(E86:E87,F87)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Sms5LoadBalancingMeterMaxThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in words",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d1024",
      InitValueAllModes => "4*1024 - 1",
    },
    Sms5LoadBalancingMeterRate => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Sms[n]LoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "SLBM total rate, creates token each SmsLoadBalancingMeterRate/256 clocks. 
Each token equals one word.",
      Width => "20",
      Position => "31:12", # Excel Formula: =calc_position(F86,E87)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d278",
      InitValueAllModes => "264",
    },
  },
  LinkLoadBalancingMeterCfg => { #Structure Type: Reg;
    Name => "LinkLoadBalancingMeterCfg",
    RegMem => "Reg",
    Address => "11E", # Excel Formula: =calc_reg_address(C85,A85,G85)
    Description => "LLBM configuration, intended to rate limit each fabric link to 100G.
One configuration register for 64 LLBMs.",
    Width => "50", # Excel Formula: =calc_reg_width(E89:E91,F91)
    Type => "Config",
    LinkLoadBalancingMeterMaxThr => { #Structure Type: RegField;
      Name => "LinkLoadBalancingMeterMaxThr",
      RegMem => "RegField",
      Description => "Max token bucket threshold for the rate limiter in bytes",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F88,E89,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d16384",
      InitValueAllModes => "64*1024 - 1",
    },
    LinkLoadBalancingMeterRate => { #Structure Type: RegField;
      Name => "LinkLoadBalancingMeterRate",
      RegMem => "RegField",
      Description => "LLBM shaper total rate, creates token each LinkLoadBalancingMeterRate/16 clocks",
      Width => "24",
      Position => "39:16", # Excel Formula: =calc_position(F89,E90)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d33",
      InitValueAllModes => "128 * frequency * 16 * 8 / (97 * 1000)",
    },
    LinkLoadBalancingMeterIncValue => { #Structure Type: RegField;
      Name => "LinkLoadBalancingMeterIncValue",
      RegMem => "RegField",
      Description => "LLBM increment value in bytes",
      Width => "10",
      Position => "49:40", # Excel Formula: =calc_position(F90,E91)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d16",
      InitValueAllModes => "128",
    },
  },
  LinkLoadBalancingCounterCfg0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 28;
    Name => "LinkLoadBalancingCounterCfg[2]",
    RegMem => "Reg",
    Address => "11F", # Excel Formula: =calc_reg_address(C88,A88,G88)
    Description => "LLBC configuration, counts amount of traffic per link & context (UC/MC).
One configuration register for UC or MC LLBCs.",
    Width => "66", # Excel Formula: =calc_reg_width(E93:E96,F96)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    LinkLoadBalancingCounter0MaxThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]MaxThr",
      RegMem => "RegField",
      Description => "When a LLBC passes this threshold, all the LLBCs will be decremented by LinkLoadBalancingCounterDecValue.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F92,E93,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d30720",
      InitValueAllModes => "51200",
    },
    LinkLoadBalancingCounter0DecValue => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecValue",
      RegMem => "RegField",
      Description => "Decrement value for passing LLBC max threshold.
DevValue must be lower than MaxThr.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F93,E94)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d10240",
    },
    LinkLoadBalancingCounter0DecayRate => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecayRate",
      RegMem => "RegField",
      Description => "LLBC decay feature - create decay event each LinkLoadBalancingCounter[n]DecayRate/16 clocks",
      Width => "24",
      Position => "55:32", # Excel Formula: =calc_position(F94,E95)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d33",
      InitValueAllModes => "16 * frequency * 1 * 8/(0.5 * 1000)",
    },
    LinkLoadBalancingCounter0DecayValue => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecayValue",
      RegMem => "RegField",
      Description => "Decay value in bytes. 0 disables the decay feature.",
      Width => "10",
      Position => "65:56", # Excel Formula: =calc_position(F95,E96)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d0",
      InitValueAllModes => "1",
    },
  },
  LinkLoadBalancingCounterCfg1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 28;
    Name => "LinkLoadBalancingCounterCfg[2]",
    RegMem => "Reg",
    Address => "120",
    Description => "LLBC configuration, counts amount of traffic per link & context (UC/MC).
One configuration register for UC or MC LLBCs.",
    Width => "66", # Excel Formula: =calc_reg_width(E93:E96,F96)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    LinkLoadBalancingCounter1MaxThr => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]MaxThr",
      RegMem => "RegField",
      Description => "When a LLBC passes this threshold, all the LLBCs will be decremented by LinkLoadBalancingCounterDecValue.",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F92,E93,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d30720",
      InitValueAllModes => "51200",
    },
    LinkLoadBalancingCounter1DecValue => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecValue",
      RegMem => "RegField",
      Description => "Decrement value for passing LLBC max threshold.
DevValue must be lower than MaxThr.",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F93,E94)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d10240",
    },
    LinkLoadBalancingCounter1DecayRate => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecayRate",
      RegMem => "RegField",
      Description => "LLBC decay feature - create decay event each LinkLoadBalancingCounter[n]DecayRate/16 clocks",
      Width => "24",
      Position => "55:32", # Excel Formula: =calc_position(F94,E95)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d33",
      InitValueAllModes => "16 * frequency * 1 * 8/(0.5 * 1000)",
    },
    LinkLoadBalancingCounter1DecayValue => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 25;
      Name => "LinkLoadBalancingCounter[n]DecayValue",
      RegMem => "RegField",
      Description => "Decay value in bytes. 0 disables the decay feature.",
      Width => "10",
      Position => "65:56", # Excel Formula: =calc_position(F95,E96)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d0",
      InitValueAllModes => "1",
    },
  },
  LoadBalancingGeneralCfg => { #Structure Type: Reg;
    Name => "LoadBalancingGeneralCfg",
    RegMem => "Reg",
    Address => "121", # Excel Formula: =calc_reg_address(C92,A92,G92)
    Description => "Load balancing scheme general configuration",
    Width => "74", # Excel Formula: =calc_reg_width(E98:E101,F101)
    Type => "Config",
    HeaderSizePerPacket => { #Structure Type: RegField;
      Name => "HeaderSizePerPacket",
      RegMem => "RegField",
      Description => "This value will be added on top of the packet size for LLBM/LLBC calculation to account for additional fabric header.",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F97,E98,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d16",
      InitValueAllModes => "8",
    },
    LinkSelectionMethodLut => { #Structure Type: RegField;
      Name => "LinkSelectionMethodLut",
      RegMem => "RegField",
      Description => "Decides if to select the link based on SLBM/LLBM or based on LLBC:
0 - Select by SLBM/LLBM
1 - Select by LLBC
Bit is selected using {LLBC_delta_quantized, Max_delay_delta}",
      Width => "64",
      Position => "71:8", # Excel Formula: =calc_position(F98,E99)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "h0f0f0f0f00000000",
      InitValueAllModes => "0",
    },
    SlbmLimitEnable => { #Structure Type: RegField;
      Name => "SlbmLimitEnable",
      RegMem => "RegField",
      Description => "If set, link masking due to SLBM limit reached will be enabled",
      Width => "1",
      Position => "72", # Excel Formula: =calc_position(F99,E100)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d1",
      InitValueAllModes => "0",
    },
    LlbmLimitEnable => { #Structure Type: RegField;
      Name => "LlbmLimitEnable",
      RegMem => "RegField",
      Description => "If set, link masking due to LLBM limit reached will be enabled",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F100,E101)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d1",
      InitValueAllModes => "0",
    },
  },
  SlbmQuantCfg => { #Structure Type: Reg;
    Name => "SlbmQuantCfg",
    RegMem => "Reg",
    Address => "122", # Excel Formula: =calc_reg_address(C97,A97,G97)
    Description => "Load balancing scheme general configuration",
    Width => "180", # Excel Formula: =calc_reg_width(E103:E103,F103)
    Type => "Config",
    SlbmQuantThr => { #Structure Type: RegField;
      Name => "SlbmQuantThr",
      RegMem => "RegField",
      Description => "Thresholds for 16 SLBM quantization regions",
      Width => "180", # Excel Formula: =E86*15
      Position => "179:0", # Excel Formula: =calc_position(F102,E103,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "h3c03803403002c02802402001c01801401000c0080040",
      ArrayItemWidth => "12",
      InitValueAllModes => "item == 0? 0x100 :
item == 1? 0x200:
item == 2? 0x300:
item == 3? 0x400:
item == 4? 0x500:
item == 5? 0x600:
item == 6? 0x700:
item == 7? 0x800:
item == 8? 0x900:
item == 9? 0xa00:
item == 10? 0xb00:
item == 11? 0xc00:
item == 12? 0xd00:
item == 13? 0xe00: 0xf00",
    },
  },
  LlbmQuantCfg => { #Structure Type: Reg;
    Name => "LlbmQuantCfg",
    RegMem => "Reg",
    Address => "123", # Excel Formula: =calc_reg_address(C102,A102,G102)
    Description => "Load balancing scheme general configuration",
    Width => "240", # Excel Formula: =calc_reg_width(E105:E105,F105)
    Type => "Config",
    LlbmQuantThr => { #Structure Type: RegField;
      Name => "LlbmQuantThr",
      RegMem => "RegField",
      Description => "Thresholds for 16 LLBM quantization regions",
      Width => "240", # Excel Formula: =E89*15
      Position => "239:0", # Excel Formula: =calc_position(F104,E105,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "h3c003800340030002c002800240020001c001800140010000c0008000400",
      ArrayItemWidth => "16",
      InitValueAllModes => "item == 0? 0x1000 :
item == 1? 0x2000:
item == 2? 0x3000:
item == 3? 0x4000:
item == 4? 0x5000:
item == 5? 0x6000:
item == 6? 0x7000:
item == 7? 0x8000:
item == 8? 0x9000:
item == 9? 0xa000:
item == 10? 0xb000:
item == 11? 0xc000:
item == 12? 0xd000:
item == 13? 0xe000: 0xf000",
    },
  },
  LlbcQuantCfg => { #Structure Type: Reg;
    Name => "LlbcQuantCfg",
    RegMem => "Reg",
    Address => "124", # Excel Formula: =calc_reg_address(C104,A104,G104)
    Description => "Load balancing scheme general configuration",
    Width => "224", # Excel Formula: =calc_reg_width(E107:E108,F108)
    Type => "Config",
    UcLlbcQuantThr => { #Structure Type: RegField;
      Name => "UcLlbcQuantThr",
      RegMem => "RegField",
      Description => "Thresholds for 8 UC LLBC quantization regions",
      Width => "112", # Excel Formula: =E93*7
      Position => "111:0", # Excel Formula: =calc_position(F106,E107,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "h46003c00320028001e0014000a00",
      ArrayItemWidth => "14",
    },
    McLlbcQuantThr => { #Structure Type: RegField;
      Name => "McLlbcQuantThr",
      RegMem => "RegField",
      Description => "Thresholds for 8 MC LLBC quantization regions",
      Width => "112", # Excel Formula: =E93*7
      Position => "223:112", # Excel Formula: =calc_position(F107,E108)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "h46003c00320028001e0014000a00",
      ArrayItemWidth => "14",
    },
  },
  LinkToSmsIfMap => { #Structure Type: Reg;
    Name => "LinkToSmsIfMap",
    RegMem => "Reg",
    Address => "125", # Excel Formula: =calc_reg_address(C106,A106,G106)
    Description => "Map link to fabric SMS interface by comparing each IFG's last link",
    Width => "36", # Excel Formula: =calc_reg_width(E110:E115,F115)
    Type => "Config",
    SmsIf6MaxLink => { #Structure Type: RegField;
      Name => "SmsIf6MaxLink",
      RegMem => "RegField",
      Description => "Last link of IFG 6",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F109,E110,TRUE)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d11",
    },
    SmsIf7MaxLink => { #Structure Type: RegField;
      Name => "SmsIf7MaxLink",
      RegMem => "RegField",
      Description => "Last link of IFG 7",
      Width => "6",
      Position => "11:6", # Excel Formula: =calc_position(F110,E111)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d19",
    },
    SmsIf8MaxLink => { #Structure Type: RegField;
      Name => "SmsIf8MaxLink",
      RegMem => "RegField",
      Description => "Last link of IFG 8",
      Width => "6",
      Position => "17:12", # Excel Formula: =calc_position(F111,E112)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d27",
    },
    SmsIf9MaxLink => { #Structure Type: RegField;
      Name => "SmsIf9MaxLink",
      RegMem => "RegField",
      Description => "Last link of IFG 9",
      Width => "6",
      Position => "23:18", # Excel Formula: =calc_position(F112,E113)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d39",
    },
    SmsIf10MaxLink => { #Structure Type: RegField;
      Name => "SmsIf10MaxLink",
      RegMem => "RegField",
      Description => "Last link of IFG 10",
      Width => "6",
      Position => "29:24", # Excel Formula: =calc_position(F113,E114)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d51",
    },
    SmsIf11MaxLink => { #Structure Type: RegField;
      Name => "SmsIf11MaxLink",
      RegMem => "RegField",
      Description => "Last link of IFG 11",
      Width => "6",
      Position => "35:30", # Excel Formula: =calc_position(F114,E115)
      Type => "Config",
      UsedBy => "FILB_TOP",
      DefaultValue => "d63",
    },
  },
  MaxDelayEstimationLut => { #Structure Type: Mem;
    Name => "MaxDelayEstimationLut",
    RegMem => "Mem",
    Address => "100000",
    Description => "Max delay estimation LUT",
    Width => "3", # Excel Formula: =calc_mem_width(E117:E117,M116,F117,-1)
    Type => "Config",
    UsedBy => "FILB_TOP",
    MemEntries => "256",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "3",
    MaxDelayEstimation => { #Structure Type: MemField;
      Name => "MaxDelayEstimation",
      RegMem => "MemField",
      Description => "Max delay estimation for selected link, quantized to 3 bit.
Address is {SLBM_quantized_value, LLBM_quantized_value}.
Used to access LinkSelectionMethodLut",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F116,E117,TRUE)
      InitValueAllModes => "(line & 0xf) == 0? 7:
(line & 0xf) == 1? 7:
(line & 0xf) == 2? ( (line & 0xf0) < 13? 7:6 ):
(line & 0xf) == 3? ( (line & 0xf0) < 13? 7:6 ):
(line & 0xf) == 4? ( (line & 0xf0) < 9? 7: (line & 0xf0) < 13? 6:5 ):
(line & 0xf) == 5? ( (line & 0xf0) < 9? 7: (line & 0xf0) < 13? 6:5 ):
(line & 0xf) == 6? ( (line & 0xf0) < 9? 7: (line & 0xf0) < 13? 6:5 ):
(line & 0xf) == 7? ( (line & 0xf0) < 9? 7: (line & 0xf0) < 13? 6:5 ):
(line & 0xf) == 8? ( (line & 0xf0) < 9? 7: (line & 0xf0) < 10? 6: (line & 0xf0) < 13? 5:4 ):
(line & 0xf) == 9? ( (line & 0xf0) < 7? 7: (line & 0xf0) < 10? 6: (line & 0xf0) < 13? 5:4 ):
(line & 0xf) == 10? ( (line & 0xf0) < 7? 7: (line & 0xf0) < 10? 6: (line & 0xf0) < 13? 5:4 ):
(line & 0xf) == 11? ( (line & 0xf0) < 2? 7: (line & 0xf0) < 7? 6: (line & 0xf0) < 10? 5: (line & 0xf0) < 13? 4:3  ):
(line & 0xf) == 12? ( (line & 0xf0) < 7? 6: (line & 0xf0) < 10? 5: (line & 0xf0) < 13? 4:3  ):
(line & 0xf) == 13? ( (line & 0xf0) < 4? 6: (line & 0xf0) < 7? 5: (line & 0xf0) < 10? 4: (line & 0xf0) < 13? 3:2 ):
(line & 0xf) == 14? ( (line & 0xf0) < 4? 5: (line & 0xf0) < 7? 4: (line & 0xf0) < 10? 3: (line & 0xf0) < 13? 2:1 ):
( (line & 0xf0) < 4? 5: (line & 0xf0) < 7? 3: (line & 0xf0) < 10? 2: (line & 0xf0) < 13? 1:0 )",
    },
  },
  DramContextPool => { #Structure Type: Mem;
    Name => "DramContextPool",
    RegMem => "Mem",
    Address => "200000", # Excel Formula: =calc_mem_address(C116,A116,G118,L118)
    Width => "72", # Excel Formula: =calc_mem_width(E119:E119,M118,F119,-1)
    Type => "Dynamic",
    UsedBy => "POOL",
    MemEntries => "64", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")/E119
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    Comments => "Note that FBM memory must be eq3 ",
    MemLogicalWidth => "64",
    DramContextPoolBmp => { #Structure Type: MemField;
      Name => "DramContextPoolBmp",
      RegMem => "MemField",
      Width => "64",
      Position => "63:0", # Excel Formula: =calc_position(F118,E119,TRUE)
      InitValueAllModes => "(line == 0) ? 64'hFFFF_FFFF_FFFF_FFFE :
64'hFFFF_FFFF_FFFF_FFFF",
    },
  },
  DramDecCnt0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 11;
    Name => "DramDecCnt[6]",
    RegMem => "Mem",
    Address => "300000", # Excel Formula: =calc_mem_address(C118,A118,G120,L120)
    Width => "26", # Excel Formula: =calc_mem_width(E121:E121,M120,F121,-1)
    Type => "Dynamic",
    UsedBy => "CNTPIPE",
    MemEntries => "4096", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "20",
    DramDecCntData0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "DramDecCntData[n]",
      RegMem => "MemField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "19:0", # Excel Formula: =calc_position(F120,E121,TRUE)
      InitValueAllModes => "0",
    },
  },
  DramDecCnt1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 11;
    Name => "DramDecCnt[6]",
    RegMem => "Mem",
    Address => "400000",
    Width => "26", # Excel Formula: =calc_mem_width(E121:E121,M120,F121,-1)
    Type => "Dynamic",
    UsedBy => "CNTPIPE",
    MemEntries => "4096", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "20",
    DramDecCntData1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "DramDecCntData[n]",
      RegMem => "MemField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "19:0", # Excel Formula: =calc_position(F120,E121,TRUE)
      InitValueAllModes => "0",
    },
  },
  DramDecCnt2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 11;
    Name => "DramDecCnt[6]",
    RegMem => "Mem",
    Address => "500000",
    Width => "26", # Excel Formula: =calc_mem_width(E121:E121,M120,F121,-1)
    Type => "Dynamic",
    UsedBy => "CNTPIPE",
    MemEntries => "4096", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "20",
    DramDecCntData2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 15;
      Name => "DramDecCntData[n]",
      RegMem => "MemField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "19:0", # Excel Formula: =calc_position(F120,E121,TRUE)
      InitValueAllModes => "0",
    },
  },
  DramDecCnt3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 11;
    Name => "DramDecCnt[6]",
    RegMem => "Mem",
    Address => "600000",
    Width => "26", # Excel Formula: =calc_mem_width(E121:E121,M120,F121,-1)
    Type => "Dynamic",
    UsedBy => "CNTPIPE",
    MemEntries => "4096", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "20",
    DramDecCntData3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 15;
      Name => "DramDecCntData[n]",
      RegMem => "MemField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "19:0", # Excel Formula: =calc_position(F120,E121,TRUE)
      InitValueAllModes => "0",
    },
  },
  DramDecCnt4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 11;
    Name => "DramDecCnt[6]",
    RegMem => "Mem",
    Address => "700000",
    Width => "26", # Excel Formula: =calc_mem_width(E121:E121,M120,F121,-1)
    Type => "Dynamic",
    UsedBy => "CNTPIPE",
    MemEntries => "4096", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "20",
    DramDecCntData4 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 15;
      Name => "DramDecCntData[n]",
      RegMem => "MemField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "19:0", # Excel Formula: =calc_position(F120,E121,TRUE)
      InitValueAllModes => "0",
    },
  },
  DramDecCnt5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 11;
    Name => "DramDecCnt[6]",
    RegMem => "Mem",
    Address => "800000",
    Width => "26", # Excel Formula: =calc_mem_width(E121:E121,M120,F121,-1)
    Type => "Dynamic",
    UsedBy => "CNTPIPE",
    MemEntries => "4096", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "20",
    DramDecCntData5 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 15;
      Name => "DramDecCntData[n]",
      RegMem => "MemField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "19:0", # Excel Formula: =calc_position(F120,E121,TRUE)
      InitValueAllModes => "0",
    },
  },
  DramIncCnt0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 11;
    Name => "DramIncCnt[6]",
    RegMem => "Mem",
    Address => "900000", # Excel Formula: =calc_mem_address(C120,A120,G122,L122)
    Width => "26", # Excel Formula: =calc_mem_width(E123:E123,M122,F123,-1)
    Type => "Dynamic",
    UsedBy => "cntinc: Write,cntinc: Read0 ,cntdec: Read1",
    MemEntries => "4096", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")
    MemWrapper => "2R1W Fast Write",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "20",
    DramIncCntData0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "DramIncCntData[n]",
      RegMem => "MemField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "19:0", # Excel Formula: =calc_position(F122,E123,TRUE)
      InitValueAllModes => "0",
    },
  },
  DramIncCnt1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 11;
    Name => "DramIncCnt[6]",
    RegMem => "Mem",
    Address => "A00000",
    Width => "26", # Excel Formula: =calc_mem_width(E123:E123,M122,F123,-1)
    Type => "Dynamic",
    UsedBy => "cntinc: Write,cntinc: Read0 ,cntdec: Read1",
    MemEntries => "4096", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")
    MemWrapper => "2R1W Fast Write",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "20",
    DramIncCntData1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "DramIncCntData[n]",
      RegMem => "MemField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "19:0", # Excel Formula: =calc_position(F122,E123,TRUE)
      InitValueAllModes => "0",
    },
  },
  DramIncCnt2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 11;
    Name => "DramIncCnt[6]",
    RegMem => "Mem",
    Address => "B00000",
    Width => "26", # Excel Formula: =calc_mem_width(E123:E123,M122,F123,-1)
    Type => "Dynamic",
    UsedBy => "cntinc: Write,cntinc: Read0 ,cntdec: Read1",
    MemEntries => "4096", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")
    MemWrapper => "2R1W Fast Write",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "20",
    DramIncCntData2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 15;
      Name => "DramIncCntData[n]",
      RegMem => "MemField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "19:0", # Excel Formula: =calc_position(F122,E123,TRUE)
      InitValueAllModes => "0",
    },
  },
  DramIncCnt3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 11;
    Name => "DramIncCnt[6]",
    RegMem => "Mem",
    Address => "C00000",
    Width => "26", # Excel Formula: =calc_mem_width(E123:E123,M122,F123,-1)
    Type => "Dynamic",
    UsedBy => "cntinc: Write,cntinc: Read0 ,cntdec: Read1",
    MemEntries => "4096", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")
    MemWrapper => "2R1W Fast Write",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "20",
    DramIncCntData3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 15;
      Name => "DramIncCntData[n]",
      RegMem => "MemField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "19:0", # Excel Formula: =calc_position(F122,E123,TRUE)
      InitValueAllModes => "0",
    },
  },
  DramIncCnt4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 11;
    Name => "DramIncCnt[6]",
    RegMem => "Mem",
    Address => "D00000",
    Width => "26", # Excel Formula: =calc_mem_width(E123:E123,M122,F123,-1)
    Type => "Dynamic",
    UsedBy => "cntinc: Write,cntinc: Read0 ,cntdec: Read1",
    MemEntries => "4096", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")
    MemWrapper => "2R1W Fast Write",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "20",
    DramIncCntData4 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 15;
      Name => "DramIncCntData[n]",
      RegMem => "MemField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "19:0", # Excel Formula: =calc_position(F122,E123,TRUE)
      InitValueAllModes => "0",
    },
  },
  DramIncCnt5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 11;
    Name => "DramIncCnt[6]",
    RegMem => "Mem",
    Address => "E00000",
    Width => "26", # Excel Formula: =calc_mem_width(E123:E123,M122,F123,-1)
    Type => "Dynamic",
    UsedBy => "cntinc: Write,cntinc: Read0 ,cntdec: Read1",
    MemEntries => "4096", # Excel Formula: =calc_field_width_define("NUM_DRAM_QUEUES")
    MemWrapper => "2R1W Fast Write",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,CpuReadEccDisable=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "20",
    DramIncCntData5 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 15;
      Name => "DramIncCntData[n]",
      RegMem => "MemField",
      Width => "20", # Excel Formula: =calc_field_width_define("ICS_DRAM_CNT_WIDTH")
      Position => "19:0", # Excel Formula: =calc_position(F122,E123,TRUE)
      InitValueAllModes => "0",
    },
  },
};
