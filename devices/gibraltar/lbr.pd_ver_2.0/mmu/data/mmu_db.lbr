$block{mmu} = {
  Defines_db => "V:\\design\\mmu\\verilog\\mmu_defines.v",
  ProjectName => "Gibraltar",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "2",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    GeneralInterruptRegisterSummary => { #Structure Type: RegField;
      Name => "GeneralInterruptRegisterSummary",
      RegMem => "RegField",
      Description => "When this bit is set, GeneralInterruptRegister has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt test register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "7",
    Type => "Config",
    sms_data_fifo_mem0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    sms_data_fifo_mem1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    sms_data_fifo_mem2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    sms_data_fifo_mem3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_dbd_req_fifoEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_dbd_req_fifoEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LpmReqIdBucketMapping0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "LpmReqIdBucketMapping0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LpmReqIdBucketMapping1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "LpmReqIdBucketMapping1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "7",
    Type => "Config",
    sms_data_fifo_mem0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    sms_data_fifo_mem1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    sms_data_fifo_mem2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    sms_data_fifo_mem3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_dbd_req_fifoEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_dbd_req_fifoEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LpmReqIdBucketMapping0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "LpmReqIdBucketMapping0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LpmReqIdBucketMapping1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "LpmReqIdBucketMapping1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInitiateRegister",
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "7",
    Type => "Config",
    sms_data_fifo_mem0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    sms_data_fifo_mem1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    sms_data_fifo_mem2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    sms_data_fifo_mem3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_dbd_req_fifoEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_dbd_req_fifoEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LpmReqIdBucketMapping0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "LpmReqIdBucketMapping0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LpmReqIdBucketMapping1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "LpmReqIdBucketMapping1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInitiateRegister",
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "7",
    Type => "Config",
    sms_data_fifo_mem0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    sms_data_fifo_mem1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    sms_data_fifo_mem2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    sms_data_fifo_mem3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_dbd_req_fifoEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_dbd_req_fifoEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LpmReqIdBucketMapping0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "LpmReqIdBucketMapping0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LpmReqIdBucketMapping1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "LpmReqIdBucketMapping1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "7",
    Type => "ReadOnly",
    sms_data_fifo_mem0ErrInt => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    sms_data_fifo_mem1ErrInt => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    sms_data_fifo_mem2ErrInt => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    sms_data_fifo_mem3ErrInt => { #Structure Type: RegField;
      Name => "sms_data_fifo_mem3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_dbd_req_fifoErrInt => { #Structure Type: RegField;
      Name => "mmu_dbd_req_fifoErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    LpmReqIdBucketMapping0ErrInt => { #Structure Type: RegField;
      Name => "LpmReqIdBucketMapping0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    LpmReqIdBucketMapping1ErrInt => { #Structure Type: RegField;
      Name => "LpmReqIdBucketMapping1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "10",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "8",
      Position => "7:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "9:8",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "4",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "3",
      Position => "2:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrDebug",
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_1bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrDebug",
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_2bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "73", # Excel Formula: =calc_reg_width(E25:E53,F53)
    Type => "Config",
    SACR1P_RME => { #Structure Type: RegField;
      Name => "SACR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACR1P_RM => { #Structure Type: RegField;
      Name => "SACR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "4:1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RME => { #Structure Type: RegField;
      Name => "SACU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RM => { #Structure Type: RegField;
      Name => "SACU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "9:6", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RME => { #Structure Type: RegField;
      Name => "SADC1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RM => { #Structure Type: RegField;
      Name => "SADC1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEA => { #Structure Type: RegField;
      Name => "SADR2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMA => { #Structure Type: RegField;
      Name => "SADR2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "19:16", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEB => { #Structure Type: RegField;
      Name => "SADR2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMB => { #Structure Type: RegField;
      Name => "SADR2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "24:21", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEA => { #Structure Type: RegField;
      Name => "SADS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "25", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMA => { #Structure Type: RegField;
      Name => "SADS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "29:26", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEB => { #Structure Type: RegField;
      Name => "SADS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMB => { #Structure Type: RegField;
      Name => "SADS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "34:31", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RME => { #Structure Type: RegField;
      Name => "SASR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "35", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RM => { #Structure Type: RegField;
      Name => "SASR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "39:36", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RME => { #Structure Type: RegField;
      Name => "SASS1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RM => { #Structure Type: RegField;
      Name => "SASS1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "44:41", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEA => { #Structure Type: RegField;
      Name => "SASS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "45", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMA => { #Structure Type: RegField;
      Name => "SASS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "49:46", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEB => { #Structure Type: RegField;
      Name => "SASS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "50", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMB => { #Structure Type: RegField;
      Name => "SASS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "54:51", # Excel Formula: =calc_position(F45,E46)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RME => { #Structure Type: RegField;
      Name => "SASU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F46,E47)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RM => { #Structure Type: RegField;
      Name => "SASU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "59:56", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RME => { #Structure Type: RegField;
      Name => "SADU1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RM => { #Structure Type: RegField;
      Name => "SADU1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "64:61", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RA => { #Structure Type: RegField;
      Name => "SADS2P_RA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Assist for Dual port",
      Width => "2",
      Position => "66:65", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_WA => { #Structure Type: RegField;
      Name => "SADU1P_WA",
      RegMem => "RegField",
      Description => "Write-Assist configuration for the SP SADU compiler",
      Width => "3",
      Position => "69:67", # Excel Formula: =calc_position(F51,E52)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "d5",
    },
    SADU1P_WPULSE => { #Structure Type: RegField;
      Name => "SADU1P_WPULSE",
      RegMem => "RegField",
      Description => "Write-Assist-Pulse configuration for the SP SADU compiler",
      Width => "3",
      Position => "72:70", # Excel Formula: =calc_position(F52,E53)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E55:E55,F55)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F54,E55,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C54,A54,G54)
    Description => "Spare register",
    Width => "128", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "Spare register ",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C56,A56,G56)
    Description => "PMRO controller configuration",
    Width => "32", # Excel Formula: =calc_reg_width(E59:E63,F63)
    Type => "Config",
    PmroRstn => { #Structure Type: RegField;
      Name => "PmroRstn",
      RegMem => "RegField",
      Description => "PMRO reset, active low",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F58,E59,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroConfigEn => { #Structure Type: RegField;
      Name => "PmroConfigEn",
      RegMem => "RegField",
      Description => "Enable pmro configuration, when equals to 0 configurations are locked",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroStart => { #Structure Type: RegField;
      Name => "PmroStart",
      RegMem => "RegField",
      Description => "Start the pmro operation",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F60,E61)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroRingEn => { #Structure Type: RegField;
      Name => "PmroRingEn",
      RegMem => "RegField",
      Description => "Determines which PMRO ring to activate, should be configured as one hot",
      Width => "7",
      Position => "9:3", # Excel Formula: =calc_position(F61,E62)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroCntPeriod => { #Structure Type: RegField;
      Name => "PmroCntPeriod",
      RegMem => "RegField",
      Description => "Number of core clock cycles on which PMRO is measured",
      Width => "22",
      Position => "31:10", # Excel Formula: =calc_position(F62,E63)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "h3FFFFF",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C58,A58,G58)
    Description => "PMRO status configuration",
    Width => "23", # Excel Formula: =calc_reg_width(E65:E66,F66)
    Type => "ReadOnly",
    PmroCountOut => { #Structure Type: RegField;
      Name => "PmroCountOut",
      RegMem => "RegField",
      Description => "The ring oscilator counter value.",
      Width => "22",
      Position => "21:0", # Excel Formula: =calc_position(F64,E65,TRUE)
      Type => "Status",
      UsedBy => "pmro",
    },
    PmroDone => { #Structure Type: RegField;
      Name => "PmroDone",
      RegMem => "RegField",
      Description => "Pmro operation done, PmroCountOut is valid.",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F65,E66)
      Type => "Status",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C64,A64,G64)
    Description => "Mirror Bus configurations",
    Width => "11", # Excel Formula: =calc_reg_width(E68:E69,F69)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "Enable Mirror Bus",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F67,E68,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "Mirror Bus selector",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C67,A67,G67)
    Description => "Mirror Bus status result",
    Width => "32", # Excel Formula: =calc_reg_width(E71:E71,F71)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "Mirror Bus status result",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F70,E71,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C70,A70,G70)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E73:E73,F73)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F72,E73,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  GeneralInterruptRegister => { #Structure Type: Reg;
    Name => "GeneralInterruptRegister",
    RegMem => "Reg",
    Address => "100",
    Description => "Interrupt",
    Width => "29", # Excel Formula: =calc_reg_width(E8:E36,F36)
    Type => "Interrupt",
    HbmChnls01Interrupt => { #Structure Type: RegField;
      Name => "HbmChnls01Interrupt",
      RegMem => "RegField",
      Description => "Interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    HbmChnls23Interrupt => { #Structure Type: RegField;
      Name => "HbmChnls23Interrupt",
      RegMem => "RegField",
      Description => " ",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F8,E9)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    HbmChnls45Interrupt => { #Structure Type: RegField;
      Name => "HbmChnls45Interrupt",
      RegMem => "RegField",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F9,E10)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    HbmChnls67Interrupt => { #Structure Type: RegField;
      Name => "HbmChnls67Interrupt",
      RegMem => "RegField",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F10,E11)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    HbmChnls89Interrupt => { #Structure Type: RegField;
      Name => "HbmChnls89Interrupt",
      RegMem => "RegField",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F11,E12)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    HbmChnls1011Interrupt => { #Structure Type: RegField;
      Name => "HbmChnls1011Interrupt",
      RegMem => "RegField",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F12,E13)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    HbmChnls1213Interrupt => { #Structure Type: RegField;
      Name => "HbmChnls1213Interrupt",
      RegMem => "RegField",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F13,E14)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    HbmChnls1415Interrupt => { #Structure Type: RegField;
      Name => "HbmChnls1415Interrupt",
      RegMem => "RegField",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F14,E15)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    MmuHasErrorBufferInterrupt => { #Structure Type: RegField;
      Name => "MmuHasErrorBufferInterrupt",
      RegMem => "RegField",
      Description => "MMU list of error buffers is not empty",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F15,E16)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    LpmHasErrorBufferInterrupt => { #Structure Type: RegField;
      Name => "LpmHasErrorBufferInterrupt",
      RegMem => "RegField",
      Description => "LPM list of error buffers is not empty",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F16,E17)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    SmsOrderFifoUnderflow => { #Structure Type: RegField;
      Name => "SmsOrderFifoUnderflow",
      RegMem => "RegField",
      Description => "Underflow in ordering FIFO between SMS interfaces in MMU. Fatal error",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F17,E18)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    SmsOrderFifoOverflow => { #Structure Type: RegField;
      Name => "SmsOrderFifoOverflow",
      RegMem => "RegField",
      Description => "Overflow in ordering FIFO between SMS interfaces in MMU. Fatal error",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F18,E19)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    SmsDataFifoOverflow => { #Structure Type: RegField;
      Name => "SmsDataFifoOverflow",
      RegMem => "RegField",
      Description => "Overflow in SMS data FIFO",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F19,E20)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    SmsDataFifoUnderflow => { #Structure Type: RegField;
      Name => "SmsDataFifoUnderflow",
      RegMem => "RegField",
      Description => "Underflow in SMS data FIFO",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F20,E21)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    SmsMetadataFifoOverflow => { #Structure Type: RegField;
      Name => "SmsMetadataFifoOverflow",
      RegMem => "RegField",
      Description => "Overflow in SMS Metadata FIFO",
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F21,E22)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    SmsMetadataFifoUnderflow => { #Structure Type: RegField;
      Name => "SmsMetadataFifoUnderflow",
      RegMem => "RegField",
      Description => "Underflow in SMS Metadata FIFO",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F22,E23)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    DataPackPdFifo0Underflow => { #Structure Type: RegField;
      Name => "DataPackPdFifo0Underflow",
      RegMem => "RegField",
      Description => "Underflow in data pack PD FIFO 0",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F23,E24)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    DataPackPdFifo1Underflow => { #Structure Type: RegField;
      Name => "DataPackPdFifo1Underflow",
      RegMem => "RegField",
      Description => "Underflow in data pack PD FIFO 1",
      Width => "1",
      Position => "17", # Excel Formula: =calc_position(F24,E25)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    DataPackPdFifo0Overflow => { #Structure Type: RegField;
      Name => "DataPackPdFifo0Overflow",
      RegMem => "RegField",
      Description => "Overflow in data pack PD FIFO 0",
      Width => "1",
      Position => "18", # Excel Formula: =calc_position(F25,E26)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    DataPackPdFifo1Overflow => { #Structure Type: RegField;
      Name => "DataPackPdFifo1Overflow",
      RegMem => "RegField",
      Description => "Overflow in data pack PD FIFO 1",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F26,E27)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    Lpm0BypassFifoOverflow => { #Structure Type: RegField;
      Name => "Lpm0BypassFifoOverflow",
      RegMem => "RegField",
      Description => "Overflow in Bypass/Denied FIFO for LPM0",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F27,E28)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    Lpm0BypassFifoUnderflow => { #Structure Type: RegField;
      Name => "Lpm0BypassFifoUnderflow",
      RegMem => "RegField",
      Description => "Underflow in Bypass/Denied FIFO for LPM0",
      Width => "1",
      Position => "21", # Excel Formula: =calc_position(F28,E29)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    Lpm1BypassFifoOverflow => { #Structure Type: RegField;
      Name => "Lpm1BypassFifoOverflow",
      RegMem => "RegField",
      Description => "Overflow in Bypass/Denied FIFO for LPM1",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F29,E30)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    Lpm1BypassFifoUnderflow => { #Structure Type: RegField;
      Name => "Lpm1BypassFifoUnderflow",
      RegMem => "RegField",
      Description => "Underflow in Bypass/Denied FIFO for LPM1",
      Width => "1",
      Position => "23", # Excel Formula: =calc_position(F30,E31)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    Lpm0ArbFifoOverflow => { #Structure Type: RegField;
      Name => "Lpm0ArbFifoOverflow",
      RegMem => "RegField",
      Description => "Overflow in denied-result arb FIFO for LPM0",
      Width => "1",
      Position => "24", # Excel Formula: =calc_position(F31,E32)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    Lpm0ArbFifoUnderflow => { #Structure Type: RegField;
      Name => "Lpm0ArbFifoUnderflow",
      RegMem => "RegField",
      Description => "Underflow in denied-result arb FIFO for LPM0",
      Width => "1",
      Position => "25", # Excel Formula: =calc_position(F32,E33)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    Lpm1ArbFifoOverflow => { #Structure Type: RegField;
      Name => "Lpm1ArbFifoOverflow",
      RegMem => "RegField",
      Description => "Overflow in denied-result arb FIFO for LPM1",
      Width => "1",
      Position => "26", # Excel Formula: =calc_position(F33,E34)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    Lpm1ArbFifoUnderflow => { #Structure Type: RegField;
      Name => "Lpm1ArbFifoUnderflow",
      RegMem => "RegField",
      Description => "Underflow in denied-result arb FIFO for LPM1",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F34,E35)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
    MmuBuffInterrupt => { #Structure Type: RegField;
      Name => "MmuBuffInterrupt",
      RegMem => "RegField",
      Description => "Interrupt from MmuBuff block",
      Width => "1",
      Position => "28", # Excel Formula: =calc_position(F35,E36)
      Type => "Interrupt",
      UsedBy => "mmu",
    },
  },
  GeneralInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "GeneralInterruptRegisterMask",
    RegMem => "Reg",
    Address => "101",
    Description => "This register masks GeneralInterruptRegister interrupt register",
    Width => "29", # Excel Formula: =calc_reg_width(E8:E36,F36)
    Type => "InterruptMask",
    HbmChnls01InterruptMask => { #Structure Type: RegField;
      Name => "HbmChnls01InterruptMask",
      RegMem => "RegField",
      Description => "This field masks HbmChnls01Interrupt interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    HbmChnls23InterruptMask => { #Structure Type: RegField;
      Name => "HbmChnls23InterruptMask",
      RegMem => "RegField",
      Description => "This field masks HbmChnls23Interrupt interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F8,E9)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    HbmChnls45InterruptMask => { #Structure Type: RegField;
      Name => "HbmChnls45InterruptMask",
      RegMem => "RegField",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F9,E10)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    HbmChnls67InterruptMask => { #Structure Type: RegField;
      Name => "HbmChnls67InterruptMask",
      RegMem => "RegField",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F10,E11)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    HbmChnls89InterruptMask => { #Structure Type: RegField;
      Name => "HbmChnls89InterruptMask",
      RegMem => "RegField",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F11,E12)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    HbmChnls1011InterruptMask => { #Structure Type: RegField;
      Name => "HbmChnls1011InterruptMask",
      RegMem => "RegField",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F12,E13)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    HbmChnls1213InterruptMask => { #Structure Type: RegField;
      Name => "HbmChnls1213InterruptMask",
      RegMem => "RegField",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F13,E14)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    HbmChnls1415InterruptMask => { #Structure Type: RegField;
      Name => "HbmChnls1415InterruptMask",
      RegMem => "RegField",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F14,E15)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    MmuHasErrorBufferInterruptMask => { #Structure Type: RegField;
      Name => "MmuHasErrorBufferInterruptMask",
      RegMem => "RegField",
      Description => "This field masks MmuHasErrorBufferInterrupt interrupt",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F15,E16)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    LpmHasErrorBufferInterruptMask => { #Structure Type: RegField;
      Name => "LpmHasErrorBufferInterruptMask",
      RegMem => "RegField",
      Description => "This field masks LpmHasErrorBufferInterrupt interrupt",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F16,E17)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    SmsOrderFifoUnderflowMask => { #Structure Type: RegField;
      Name => "SmsOrderFifoUnderflowMask",
      RegMem => "RegField",
      Description => "This field masks SmsOrderFifoUnderflow interrupt",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F17,E18)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    SmsOrderFifoOverflowMask => { #Structure Type: RegField;
      Name => "SmsOrderFifoOverflowMask",
      RegMem => "RegField",
      Description => "This field masks SmsOrderFifoOverflow interrupt",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F18,E19)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    SmsDataFifoOverflowMask => { #Structure Type: RegField;
      Name => "SmsDataFifoOverflowMask",
      RegMem => "RegField",
      Description => "This field masks SmsDataFifoOverflow interrupt",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F19,E20)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    SmsDataFifoUnderflowMask => { #Structure Type: RegField;
      Name => "SmsDataFifoUnderflowMask",
      RegMem => "RegField",
      Description => "This field masks SmsDataFifoUnderflow interrupt",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F20,E21)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    SmsMetadataFifoOverflowMask => { #Structure Type: RegField;
      Name => "SmsMetadataFifoOverflowMask",
      RegMem => "RegField",
      Description => "This field masks SmsMetadataFifoOverflow interrupt",
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F21,E22)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    SmsMetadataFifoUnderflowMask => { #Structure Type: RegField;
      Name => "SmsMetadataFifoUnderflowMask",
      RegMem => "RegField",
      Description => "This field masks SmsMetadataFifoUnderflow interrupt",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F22,E23)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    DataPackPdFifo0UnderflowMask => { #Structure Type: RegField;
      Name => "DataPackPdFifo0UnderflowMask",
      RegMem => "RegField",
      Description => "This field masks DataPackPdFifo0Underflow interrupt",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F23,E24)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    DataPackPdFifo1UnderflowMask => { #Structure Type: RegField;
      Name => "DataPackPdFifo1UnderflowMask",
      RegMem => "RegField",
      Description => "This field masks DataPackPdFifo1Underflow interrupt",
      Width => "1",
      Position => "17", # Excel Formula: =calc_position(F24,E25)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    DataPackPdFifo0OverflowMask => { #Structure Type: RegField;
      Name => "DataPackPdFifo0OverflowMask",
      RegMem => "RegField",
      Description => "This field masks DataPackPdFifo0Overflow interrupt",
      Width => "1",
      Position => "18", # Excel Formula: =calc_position(F25,E26)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    DataPackPdFifo1OverflowMask => { #Structure Type: RegField;
      Name => "DataPackPdFifo1OverflowMask",
      RegMem => "RegField",
      Description => "This field masks DataPackPdFifo1Overflow interrupt",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F26,E27)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    Lpm0BypassFifoOverflowMask => { #Structure Type: RegField;
      Name => "Lpm0BypassFifoOverflowMask",
      RegMem => "RegField",
      Description => "This field masks Lpm0BypassFifoOverflow interrupt",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F27,E28)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    Lpm0BypassFifoUnderflowMask => { #Structure Type: RegField;
      Name => "Lpm0BypassFifoUnderflowMask",
      RegMem => "RegField",
      Description => "This field masks Lpm0BypassFifoUnderflow interrupt",
      Width => "1",
      Position => "21", # Excel Formula: =calc_position(F28,E29)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    Lpm1BypassFifoOverflowMask => { #Structure Type: RegField;
      Name => "Lpm1BypassFifoOverflowMask",
      RegMem => "RegField",
      Description => "This field masks Lpm1BypassFifoOverflow interrupt",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F29,E30)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    Lpm1BypassFifoUnderflowMask => { #Structure Type: RegField;
      Name => "Lpm1BypassFifoUnderflowMask",
      RegMem => "RegField",
      Description => "This field masks Lpm1BypassFifoUnderflow interrupt",
      Width => "1",
      Position => "23", # Excel Formula: =calc_position(F30,E31)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    Lpm0ArbFifoOverflowMask => { #Structure Type: RegField;
      Name => "Lpm0ArbFifoOverflowMask",
      RegMem => "RegField",
      Description => "This field masks Lpm0ArbFifoOverflow interrupt",
      Width => "1",
      Position => "24", # Excel Formula: =calc_position(F31,E32)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    Lpm0ArbFifoUnderflowMask => { #Structure Type: RegField;
      Name => "Lpm0ArbFifoUnderflowMask",
      RegMem => "RegField",
      Description => "This field masks Lpm0ArbFifoUnderflow interrupt",
      Width => "1",
      Position => "25", # Excel Formula: =calc_position(F32,E33)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    Lpm1ArbFifoOverflowMask => { #Structure Type: RegField;
      Name => "Lpm1ArbFifoOverflowMask",
      RegMem => "RegField",
      Description => "This field masks Lpm1ArbFifoOverflow interrupt",
      Width => "1",
      Position => "26", # Excel Formula: =calc_position(F33,E34)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    Lpm1ArbFifoUnderflowMask => { #Structure Type: RegField;
      Name => "Lpm1ArbFifoUnderflowMask",
      RegMem => "RegField",
      Description => "This field masks Lpm1ArbFifoUnderflow interrupt",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F34,E35)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    MmuBuffInterruptMask => { #Structure Type: RegField;
      Name => "MmuBuffInterruptMask",
      RegMem => "RegField",
      Description => "This field masks MmuBuffInterrupt interrupt",
      Width => "1",
      Position => "28", # Excel Formula: =calc_position(F35,E36)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  GeneralInterruptRegisterTest => { #Structure Type: Reg; Skip Register;
    Name => "GeneralInterruptRegisterTest",
    RegMem => "Reg",
    Address => "102",
    Description => "This register tests GeneralInterruptRegister interrupt register",
    Width => "29", # Excel Formula: =calc_reg_width(E8:E36,F36)
    Type => "InterruptTest",
    HbmChnls01InterruptTest => { #Structure Type: RegField;
      Name => "HbmChnls01InterruptTest",
      RegMem => "RegField",
      Description => "This field tests HbmChnls01Interrupt interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    HbmChnls23InterruptTest => { #Structure Type: RegField;
      Name => "HbmChnls23InterruptTest",
      RegMem => "RegField",
      Description => "This field tests HbmChnls23Interrupt interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F8,E9)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    HbmChnls45InterruptTest => { #Structure Type: RegField;
      Name => "HbmChnls45InterruptTest",
      RegMem => "RegField",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F9,E10)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    HbmChnls67InterruptTest => { #Structure Type: RegField;
      Name => "HbmChnls67InterruptTest",
      RegMem => "RegField",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F10,E11)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    HbmChnls89InterruptTest => { #Structure Type: RegField;
      Name => "HbmChnls89InterruptTest",
      RegMem => "RegField",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F11,E12)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    HbmChnls1011InterruptTest => { #Structure Type: RegField;
      Name => "HbmChnls1011InterruptTest",
      RegMem => "RegField",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F12,E13)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    HbmChnls1213InterruptTest => { #Structure Type: RegField;
      Name => "HbmChnls1213InterruptTest",
      RegMem => "RegField",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F13,E14)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    HbmChnls1415InterruptTest => { #Structure Type: RegField;
      Name => "HbmChnls1415InterruptTest",
      RegMem => "RegField",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F14,E15)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    MmuHasErrorBufferInterruptTest => { #Structure Type: RegField;
      Name => "MmuHasErrorBufferInterruptTest",
      RegMem => "RegField",
      Description => "This field tests MmuHasErrorBufferInterrupt interrupt",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F15,E16)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    LpmHasErrorBufferInterruptTest => { #Structure Type: RegField;
      Name => "LpmHasErrorBufferInterruptTest",
      RegMem => "RegField",
      Description => "This field tests LpmHasErrorBufferInterrupt interrupt",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F16,E17)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    SmsOrderFifoUnderflowTest => { #Structure Type: RegField;
      Name => "SmsOrderFifoUnderflowTest",
      RegMem => "RegField",
      Description => "This field tests SmsOrderFifoUnderflow interrupt",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F17,E18)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    SmsOrderFifoOverflowTest => { #Structure Type: RegField;
      Name => "SmsOrderFifoOverflowTest",
      RegMem => "RegField",
      Description => "This field tests SmsOrderFifoOverflow interrupt",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F18,E19)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    SmsDataFifoOverflowTest => { #Structure Type: RegField;
      Name => "SmsDataFifoOverflowTest",
      RegMem => "RegField",
      Description => "This field tests SmsDataFifoOverflow interrupt",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F19,E20)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    SmsDataFifoUnderflowTest => { #Structure Type: RegField;
      Name => "SmsDataFifoUnderflowTest",
      RegMem => "RegField",
      Description => "This field tests SmsDataFifoUnderflow interrupt",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F20,E21)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    SmsMetadataFifoOverflowTest => { #Structure Type: RegField;
      Name => "SmsMetadataFifoOverflowTest",
      RegMem => "RegField",
      Description => "This field tests SmsMetadataFifoOverflow interrupt",
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F21,E22)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    SmsMetadataFifoUnderflowTest => { #Structure Type: RegField;
      Name => "SmsMetadataFifoUnderflowTest",
      RegMem => "RegField",
      Description => "This field tests SmsMetadataFifoUnderflow interrupt",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F22,E23)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    DataPackPdFifo0UnderflowTest => { #Structure Type: RegField;
      Name => "DataPackPdFifo0UnderflowTest",
      RegMem => "RegField",
      Description => "This field tests DataPackPdFifo0Underflow interrupt",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F23,E24)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    DataPackPdFifo1UnderflowTest => { #Structure Type: RegField;
      Name => "DataPackPdFifo1UnderflowTest",
      RegMem => "RegField",
      Description => "This field tests DataPackPdFifo1Underflow interrupt",
      Width => "1",
      Position => "17", # Excel Formula: =calc_position(F24,E25)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    DataPackPdFifo0OverflowTest => { #Structure Type: RegField;
      Name => "DataPackPdFifo0OverflowTest",
      RegMem => "RegField",
      Description => "This field tests DataPackPdFifo0Overflow interrupt",
      Width => "1",
      Position => "18", # Excel Formula: =calc_position(F25,E26)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    DataPackPdFifo1OverflowTest => { #Structure Type: RegField;
      Name => "DataPackPdFifo1OverflowTest",
      RegMem => "RegField",
      Description => "This field tests DataPackPdFifo1Overflow interrupt",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F26,E27)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Lpm0BypassFifoOverflowTest => { #Structure Type: RegField;
      Name => "Lpm0BypassFifoOverflowTest",
      RegMem => "RegField",
      Description => "This field tests Lpm0BypassFifoOverflow interrupt",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F27,E28)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Lpm0BypassFifoUnderflowTest => { #Structure Type: RegField;
      Name => "Lpm0BypassFifoUnderflowTest",
      RegMem => "RegField",
      Description => "This field tests Lpm0BypassFifoUnderflow interrupt",
      Width => "1",
      Position => "21", # Excel Formula: =calc_position(F28,E29)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Lpm1BypassFifoOverflowTest => { #Structure Type: RegField;
      Name => "Lpm1BypassFifoOverflowTest",
      RegMem => "RegField",
      Description => "This field tests Lpm1BypassFifoOverflow interrupt",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F29,E30)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Lpm1BypassFifoUnderflowTest => { #Structure Type: RegField;
      Name => "Lpm1BypassFifoUnderflowTest",
      RegMem => "RegField",
      Description => "This field tests Lpm1BypassFifoUnderflow interrupt",
      Width => "1",
      Position => "23", # Excel Formula: =calc_position(F30,E31)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Lpm0ArbFifoOverflowTest => { #Structure Type: RegField;
      Name => "Lpm0ArbFifoOverflowTest",
      RegMem => "RegField",
      Description => "This field tests Lpm0ArbFifoOverflow interrupt",
      Width => "1",
      Position => "24", # Excel Formula: =calc_position(F31,E32)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Lpm0ArbFifoUnderflowTest => { #Structure Type: RegField;
      Name => "Lpm0ArbFifoUnderflowTest",
      RegMem => "RegField",
      Description => "This field tests Lpm0ArbFifoUnderflow interrupt",
      Width => "1",
      Position => "25", # Excel Formula: =calc_position(F32,E33)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Lpm1ArbFifoOverflowTest => { #Structure Type: RegField;
      Name => "Lpm1ArbFifoOverflowTest",
      RegMem => "RegField",
      Description => "This field tests Lpm1ArbFifoOverflow interrupt",
      Width => "1",
      Position => "26", # Excel Formula: =calc_position(F33,E34)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Lpm1ArbFifoUnderflowTest => { #Structure Type: RegField;
      Name => "Lpm1ArbFifoUnderflowTest",
      RegMem => "RegField",
      Description => "This field tests Lpm1ArbFifoUnderflow interrupt",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F34,E35)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    MmuBuffInterruptTest => { #Structure Type: RegField;
      Name => "MmuBuffInterruptTest",
      RegMem => "RegField",
      Description => "This field tests MmuBuffInterrupt interrupt",
      Width => "1",
      Position => "28", # Excel Formula: =calc_position(F35,E36)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  MmuParameters => { #Structure Type: Reg;
    Name => "MmuParameters",
    RegMem => "Reg",
    Address => "103", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Parameters of MMU",
    Width => "4", # Excel Formula: =calc_reg_width(E38:E41,F41)
    Type => "Config",
    LargeBurstMode => { #Structure Type: RegField;
      Name => "LargeBurstMode",
      RegMem => "RegField",
      Description => "Use data granularity per channel of 256B instead of 128B. 
0 - MMU writes to channels 256B every access
1 - MMU writes to channels 128B every access
Required for HBM clock speed > 2.0 GHz",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F37,E38,TRUE)
      Type => "Config",
      UsedBy => "alloc",
      DefaultValue => "d0",
    },
    UseDbdErrorMonitor => { #Structure Type: RegField;
      Name => "UseDbdErrorMonitor",
      RegMem => "RegField",
      Description => "Use monitor to check legality of packet data against DBDs, and give error if does not match
0 - Illegal packets will not be marked with error
1 - Illegal packets will be marked with error",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "unpack",
      DefaultValue => "d1",
    },
    ReleaseErrorBuffers => { #Structure Type: RegField;
      Name => "ReleaseErrorBuffers",
      RegMem => "RegField",
      Description => "Release error buffers back into allocation pool
0 - Buffers with error will not be re-allocated
1 - Buffers with error will be re-allocated",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "rd_reorder",
      DefaultValue => "d0",
    },
    UseLpmDoubleBuckets => { #Structure Type: RegField;
      Name => "UseLpmDoubleBuckets",
      RegMem => "RegField",
      Description => "Use buffering scheme for LPM double buckets
0 - Single-bucket buffering scheme is used
1 - Double-bucket buffering scheme is used",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "lpm_dist",
      DefaultValue => "d1",
    },
  },
  MmuDebugConfigs => { #Structure Type: Reg;
    Name => "MmuDebugConfigs",
    RegMem => "Reg",
    Address => "104", # Excel Formula: =calc_reg_address(C37,A37,G37)
    Description => "Type of HBM Die",
    Width => "9", # Excel Formula: =calc_reg_width(E43:E45,F45)
    Type => "Config",
    DramBufferSize => { #Structure Type: RegField;
      Name => "DramBufferSize",
      RegMem => "RegField",
      Description => "Size of DRAM buffer.
 0 - 4kB buffer
 1 - 8kB buffer
4kB DRAM buffer supported only as debug mode",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F42,E43,TRUE)
      Type => "Config",
      UsedBy => "pack",
      DefaultValue => "d1",
    },
    LpmBankCountThreshold => { #Structure Type: RegField;
      Name => "LpmBankCountThreshold",
      RegMem => "RegField",
      Description => "Threshold for counting LPM bank fullness",
      Width => "2",
      Position => "2:1", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "lpm_dist",
      DefaultValue => "d3",
    },
    Sms2MmuCbrDepth => { #Structure Type: RegField;
      Name => "Sms2MmuCbrDepth",
      RegMem => "RegField",
      Description => "Effective depth of SMS2MMU CBR",
      Width => "6",
      Position => "8:3", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "pack",
      DefaultValue => "d32",
    },
  },
  LPMBypassConfig => { #Structure Type: Reg;
    Name => "LPMBypassConfig",
    RegMem => "Reg",
    Address => "105", # Excel Formula: =calc_reg_address(C42,A42,G42)
    Description => "Config for LPM bypass, where LPM lookups will be returned to CDB directly",
    Width => "7", # Excel Formula: =calc_reg_width(E47:E48,F48)
    Type => "Config",
    LpmBypassSumThreshold => { #Structure Type: RegField;
      Name => "LpmBypassSumThreshold",
      RegMem => "RegField",
      Description => "Number of FIFO entries for which lookup will be bypassed. Max of 15. Based on sum of fullness of all FIFOs that can receive the lookup",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "Config",
      UsedBy => "lpm_dist",
      DefaultValue => "d15",
    },
    LpmBypassSingleThreshold => { #Structure Type: RegField;
      Name => "LpmBypassSingleThreshold",
      RegMem => "RegField",
      Description => "Number of FIFO entries for which lookup will be bypassed. Max of 4, which means fifo_full only. Based on fullness of FIFO that is selected to send to",
      Width => "3",
      Position => "6:4", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "lpm_dist",
      DefaultValue => "d4",
    },
  },
  LPMReplicationConfig0 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 21;
    Name => "LPMReplicationConfig[4]",
    RegMem => "Reg",
    Address => "106", # Excel Formula: =calc_reg_address(C46,A46,G46)
    Description => "Offsets added to LPM bucket number in LPM addressing scheme. Used to locate LPM in particular areas of memory, and to do channel load balancing of LPM",
    Width => "22", # Excel Formula: =calc_reg_width(E50:E51,F51)
    Type => "Config",
    ArrayLength => "4",
    ArrayIndex => "0",
    LpmStartBankChannelOffset0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 26;
      Name => "LpmStartBankChannelOffset[n]",
      RegMem => "RegField",
      Description => "Offset for LPM Channel and bank",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F49,E50,TRUE)
      Type => "Config",
      UsedBy => "lpm_dist",
      DefaultValue => "d0",
    },
    LpmStartRowOffset0 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "LpmStartRowOffset[n]",
      RegMem => "RegField",
      Description => "Offset for LPM row start. When LargeBurstMode is set, 2 MSBs must be set to 0",
      Width => "14",
      Position => "21:8", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "lpm_dist",
      DefaultValue => "d0 ",
    },
  },
  LPMReplicationConfig1 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 21;
    Name => "LPMReplicationConfig[4]",
    RegMem => "Reg",
    Address => "107",
    Description => "Offsets added to LPM bucket number in LPM addressing scheme. Used to locate LPM in particular areas of memory, and to do channel load balancing of LPM",
    Width => "22", # Excel Formula: =calc_reg_width(E50:E51,F51)
    Type => "Config",
    ArrayLength => "4",
    ArrayIndex => "1",
    LpmStartBankChannelOffset1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 26;
      Name => "LpmStartBankChannelOffset[n]",
      RegMem => "RegField",
      Description => "Offset for LPM Channel and bank",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F49,E50,TRUE)
      Type => "Config",
      UsedBy => "lpm_dist",
      DefaultValue => "d0",
    },
    LpmStartRowOffset1 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "LpmStartRowOffset[n]",
      RegMem => "RegField",
      Description => "Offset for LPM row start. When LargeBurstMode is set, 2 MSBs must be set to 0",
      Width => "14",
      Position => "21:8", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "lpm_dist",
      DefaultValue => "d0 ",
    },
  },
  LPMReplicationConfig2 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 21;
    Name => "LPMReplicationConfig[4]",
    RegMem => "Reg",
    Address => "108",
    Description => "Offsets added to LPM bucket number in LPM addressing scheme. Used to locate LPM in particular areas of memory, and to do channel load balancing of LPM",
    Width => "22", # Excel Formula: =calc_reg_width(E50:E51,F51)
    Type => "Config",
    ArrayLength => "4",
    ArrayIndex => "2",
    LpmStartBankChannelOffset2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 26;
      Name => "LpmStartBankChannelOffset[n]",
      RegMem => "RegField",
      Description => "Offset for LPM Channel and bank",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F49,E50,TRUE)
      Type => "Config",
      UsedBy => "lpm_dist",
      DefaultValue => "d0",
    },
    LpmStartRowOffset2 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "LpmStartRowOffset[n]",
      RegMem => "RegField",
      Description => "Offset for LPM row start. When LargeBurstMode is set, 2 MSBs must be set to 0",
      Width => "14",
      Position => "21:8", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "lpm_dist",
      DefaultValue => "d0 ",
    },
  },
  LPMReplicationConfig3 => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 21;
    Name => "LPMReplicationConfig[4]",
    RegMem => "Reg",
    Address => "109",
    Description => "Offsets added to LPM bucket number in LPM addressing scheme. Used to locate LPM in particular areas of memory, and to do channel load balancing of LPM",
    Width => "22", # Excel Formula: =calc_reg_width(E50:E51,F51)
    Type => "Config",
    ArrayLength => "4",
    ArrayIndex => "3",
    LpmStartBankChannelOffset3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 26;
      Name => "LpmStartBankChannelOffset[n]",
      RegMem => "RegField",
      Description => "Offset for LPM Channel and bank",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F49,E50,TRUE)
      Type => "Config",
      UsedBy => "lpm_dist",
      DefaultValue => "d0",
    },
    LpmStartRowOffset3 => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "LpmStartRowOffset[n]",
      RegMem => "RegField",
      Description => "Offset for LPM row start. When LargeBurstMode is set, 2 MSBs must be set to 0",
      Width => "14",
      Position => "21:8", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "lpm_dist",
      DefaultValue => "d0 ",
    },
  },
  ErrorBuffers0 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 13;
    Name => "ErrorBuffers[8]",
    RegMem => "Reg",
    Address => "10A", # Excel Formula: =calc_reg_address(C49,A49,G49)
    Description => "DRAM buffer address which got ECC error from HBM. Not returned to buffer pool. Only valid if corresponding bit in ErrorBufferValid register is high. Filled up cyclically and overwritten with new entries",
    Width => "20", # Excel Formula: =calc_reg_width(E53:E53,F53)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "0",
    ErrorBuffer0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "ErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "20",
      Position => "19:0", # Excel Formula: =calc_position(F52,E53,TRUE)
      Type => "Status",
      UsedBy => "mmu_rd_reorder",
    },
  },
  ErrorBuffers1 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 13;
    Name => "ErrorBuffers[8]",
    RegMem => "Reg",
    Address => "10B",
    Description => "DRAM buffer address which got ECC error from HBM. Not returned to buffer pool. Only valid if corresponding bit in ErrorBufferValid register is high. Filled up cyclically and overwritten with new entries",
    Width => "20", # Excel Formula: =calc_reg_width(E53:E53,F53)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "1",
    ErrorBuffer1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "ErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "20",
      Position => "19:0", # Excel Formula: =calc_position(F52,E53,TRUE)
      Type => "Status",
      UsedBy => "mmu_rd_reorder",
    },
  },
  ErrorBuffers2 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 13;
    Name => "ErrorBuffers[8]",
    RegMem => "Reg",
    Address => "10C",
    Description => "DRAM buffer address which got ECC error from HBM. Not returned to buffer pool. Only valid if corresponding bit in ErrorBufferValid register is high. Filled up cyclically and overwritten with new entries",
    Width => "20", # Excel Formula: =calc_reg_width(E53:E53,F53)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "2",
    ErrorBuffer2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 12;
      Name => "ErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "20",
      Position => "19:0", # Excel Formula: =calc_position(F52,E53,TRUE)
      Type => "Status",
      UsedBy => "mmu_rd_reorder",
    },
  },
  ErrorBuffers3 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 13;
    Name => "ErrorBuffers[8]",
    RegMem => "Reg",
    Address => "10D",
    Description => "DRAM buffer address which got ECC error from HBM. Not returned to buffer pool. Only valid if corresponding bit in ErrorBufferValid register is high. Filled up cyclically and overwritten with new entries",
    Width => "20", # Excel Formula: =calc_reg_width(E53:E53,F53)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "3",
    ErrorBuffer3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 12;
      Name => "ErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "20",
      Position => "19:0", # Excel Formula: =calc_position(F52,E53,TRUE)
      Type => "Status",
      UsedBy => "mmu_rd_reorder",
    },
  },
  ErrorBuffers4 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 13;
    Name => "ErrorBuffers[8]",
    RegMem => "Reg",
    Address => "10E",
    Description => "DRAM buffer address which got ECC error from HBM. Not returned to buffer pool. Only valid if corresponding bit in ErrorBufferValid register is high. Filled up cyclically and overwritten with new entries",
    Width => "20", # Excel Formula: =calc_reg_width(E53:E53,F53)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "4",
    ErrorBuffer4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 12;
      Name => "ErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "20",
      Position => "19:0", # Excel Formula: =calc_position(F52,E53,TRUE)
      Type => "Status",
      UsedBy => "mmu_rd_reorder",
    },
  },
  ErrorBuffers5 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 13;
    Name => "ErrorBuffers[8]",
    RegMem => "Reg",
    Address => "10F",
    Description => "DRAM buffer address which got ECC error from HBM. Not returned to buffer pool. Only valid if corresponding bit in ErrorBufferValid register is high. Filled up cyclically and overwritten with new entries",
    Width => "20", # Excel Formula: =calc_reg_width(E53:E53,F53)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "5",
    ErrorBuffer5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 12;
      Name => "ErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "20",
      Position => "19:0", # Excel Formula: =calc_position(F52,E53,TRUE)
      Type => "Status",
      UsedBy => "mmu_rd_reorder",
    },
  },
  ErrorBuffers6 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 13;
    Name => "ErrorBuffers[8]",
    RegMem => "Reg",
    Address => "110",
    Description => "DRAM buffer address which got ECC error from HBM. Not returned to buffer pool. Only valid if corresponding bit in ErrorBufferValid register is high. Filled up cyclically and overwritten with new entries",
    Width => "20", # Excel Formula: =calc_reg_width(E53:E53,F53)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "6",
    ErrorBuffer6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 12;
      Name => "ErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "20",
      Position => "19:0", # Excel Formula: =calc_position(F52,E53,TRUE)
      Type => "Status",
      UsedBy => "mmu_rd_reorder",
    },
  },
  ErrorBuffers7 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 13;
    Name => "ErrorBuffers[8]",
    RegMem => "Reg",
    Address => "111",
    Description => "DRAM buffer address which got ECC error from HBM. Not returned to buffer pool. Only valid if corresponding bit in ErrorBufferValid register is high. Filled up cyclically and overwritten with new entries",
    Width => "20", # Excel Formula: =calc_reg_width(E53:E53,F53)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "7",
    ErrorBuffer7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 12;
      Name => "ErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "20",
      Position => "19:0", # Excel Formula: =calc_position(F52,E53,TRUE)
      Type => "Status",
      UsedBy => "mmu_rd_reorder",
    },
  },
  ErrorBufferValids => { #Structure Type: Reg;
    Name => "ErrorBufferValids",
    RegMem => "Reg",
    Address => "112", # Excel Formula: =calc_reg_address(C52,A52,G52)
    Description => "Valid bits for ErrorBuffers buffers",
    Width => "8", # Excel Formula: =calc_reg_width(E55:E55,F55)
    Type => "ReadOnly",
    ErrorBufferValid => { #Structure Type: RegField;
      Name => "ErrorBufferValid",
      RegMem => "RegField",
      Description => "0 - Error buffer in ErrorBuffers register is not valid
1 - Error buffer in ErrorBuffers register is valid",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F54,E55,TRUE)
      Type => "Event",
      UsedBy => "mmu_rd_reorder",
    },
  },
  LpmErrorBuffers0 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 16;
    Name => "LpmErrorBuffers[8]",
    RegMem => "Reg",
    Address => "113", # Excel Formula: =calc_reg_address(C54,A54,G54)
    Description => "Bucket IDs of LPM buckets that had ECC error. Only valid if corresponding bit in LpmErrorBufferValid is high. Filled up cyclically and overwritten with new entries",
    Width => "19", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "0",
    LpmErrorBuffer0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "LpmErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Status",
      UsedBy => "mmu_lpm_rd_req",
    },
  },
  LpmErrorBuffers1 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 16;
    Name => "LpmErrorBuffers[8]",
    RegMem => "Reg",
    Address => "114",
    Description => "Bucket IDs of LPM buckets that had ECC error. Only valid if corresponding bit in LpmErrorBufferValid is high. Filled up cyclically and overwritten with new entries",
    Width => "19", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "1",
    LpmErrorBuffer1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "LpmErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Status",
      UsedBy => "mmu_lpm_rd_req",
    },
  },
  LpmErrorBuffers2 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 16;
    Name => "LpmErrorBuffers[8]",
    RegMem => "Reg",
    Address => "115",
    Description => "Bucket IDs of LPM buckets that had ECC error. Only valid if corresponding bit in LpmErrorBufferValid is high. Filled up cyclically and overwritten with new entries",
    Width => "19", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "2",
    LpmErrorBuffer2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 15;
      Name => "LpmErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Status",
      UsedBy => "mmu_lpm_rd_req",
    },
  },
  LpmErrorBuffers3 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 16;
    Name => "LpmErrorBuffers[8]",
    RegMem => "Reg",
    Address => "116",
    Description => "Bucket IDs of LPM buckets that had ECC error. Only valid if corresponding bit in LpmErrorBufferValid is high. Filled up cyclically and overwritten with new entries",
    Width => "19", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "3",
    LpmErrorBuffer3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 15;
      Name => "LpmErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Status",
      UsedBy => "mmu_lpm_rd_req",
    },
  },
  LpmErrorBuffers4 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 16;
    Name => "LpmErrorBuffers[8]",
    RegMem => "Reg",
    Address => "117",
    Description => "Bucket IDs of LPM buckets that had ECC error. Only valid if corresponding bit in LpmErrorBufferValid is high. Filled up cyclically and overwritten with new entries",
    Width => "19", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "4",
    LpmErrorBuffer4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 15;
      Name => "LpmErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Status",
      UsedBy => "mmu_lpm_rd_req",
    },
  },
  LpmErrorBuffers5 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 16;
    Name => "LpmErrorBuffers[8]",
    RegMem => "Reg",
    Address => "118",
    Description => "Bucket IDs of LPM buckets that had ECC error. Only valid if corresponding bit in LpmErrorBufferValid is high. Filled up cyclically and overwritten with new entries",
    Width => "19", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "5",
    LpmErrorBuffer5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 15;
      Name => "LpmErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Status",
      UsedBy => "mmu_lpm_rd_req",
    },
  },
  LpmErrorBuffers6 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 16;
    Name => "LpmErrorBuffers[8]",
    RegMem => "Reg",
    Address => "119",
    Description => "Bucket IDs of LPM buckets that had ECC error. Only valid if corresponding bit in LpmErrorBufferValid is high. Filled up cyclically and overwritten with new entries",
    Width => "19", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "6",
    LpmErrorBuffer6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 15;
      Name => "LpmErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Status",
      UsedBy => "mmu_lpm_rd_req",
    },
  },
  LpmErrorBuffers7 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 16;
    Name => "LpmErrorBuffers[8]",
    RegMem => "Reg",
    Address => "11A",
    Description => "Bucket IDs of LPM buckets that had ECC error. Only valid if corresponding bit in LpmErrorBufferValid is high. Filled up cyclically and overwritten with new entries",
    Width => "19", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "ReadOnly",
    ArrayLength => "8",
    ArrayIndex => "7",
    LpmErrorBuffer7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 15;
      Name => "LpmErrorBuffer[n]",
      RegMem => "RegField",
      Description => "Address of error buffer",
      Width => "19",
      Position => "18:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Status",
      UsedBy => "mmu_lpm_rd_req",
    },
  },
  LpmErrorBufferValids => { #Structure Type: Reg;
    Name => "LpmErrorBufferValids",
    RegMem => "Reg",
    Address => "11B", # Excel Formula: =calc_reg_address(C56,A56,G56)
    Description => "Valid bits for ErrorBuffers buffers",
    Width => "8", # Excel Formula: =calc_reg_width(E59:E59,F59)
    Type => "ReadOnly",
    LpmErrorBufferValid => { #Structure Type: RegField;
      Name => "LpmErrorBufferValid",
      RegMem => "RegField",
      Description => "0 - Error buffer in LpmErrorBuffers register is not valid
1 - Error buffer in LpmErrorBuffers register is valid",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F58,E59,TRUE)
      Type => "Event",
      UsedBy => "mmu_lpm_rd_req",
    },
  },
  DebugCounters => { #Structure Type: Reg;
    Name => "DebugCounters",
    RegMem => "Reg",
    Address => "11C", # Excel Formula: =calc_reg_address(C58,A58,G58)
    Description => "Various debug counters",
    Width => "320", # Excel Formula: =calc_reg_width(E61:E72,F72)
    Type => "ReadOnly",
    DbdWriteCounter => { #Structure Type: RegField;
      Name => "DbdWriteCounter",
      RegMem => "RegField",
      Description => "Total Number of DBDs allocated and sent to DVOQ",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F60,E61,TRUE)
      Type => "Counter",
      UsedBy => "mmu_allocator",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    DbdReadCounter => { #Structure Type: RegField;
      Name => "DbdReadCounter",
      RegMem => "RegField",
      Description => "Total Number of DBDs read out and sent back to SMS",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F61,E62)
      Type => "Counter",
      UsedBy => "mmu_rd_reorder",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    DbdReadReqCounter => { #Structure Type: RegField;
      Name => "DbdReadReqCounter",
      RegMem => "RegField",
      Description => "Total Number of DBDs requested by DICS from MMU",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F62,E63)
      Type => "Counter",
      UsedBy => "mmu_rd_req",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    NetworkPacketsWrittenSms0 => { #Structure Type: RegField;
      Name => "NetworkPacketsWrittenSms0",
      RegMem => "RegField",
      Description => "Total Number of network packets (SOPs) received on SMS 0",
      Width => "32",
      Position => "127:96", # Excel Formula: =calc_position(F63,E64)
      Type => "Counter",
      UsedBy => "mmu_data_pack",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    NetworkPacketsWrittenSms1 => { #Structure Type: RegField;
      Name => "NetworkPacketsWrittenSms1",
      RegMem => "RegField",
      Description => "Total Number of network packets (SOPs) received on SMS 1",
      Width => "32",
      Position => "159:128", # Excel Formula: =calc_position(F64,E65)
      Type => "Counter",
      UsedBy => "mmu_data_pack",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    NetworkPacketsReadSms0 => { #Structure Type: RegField;
      Name => "NetworkPacketsReadSms0",
      RegMem => "RegField",
      Description => "Total Number of network packets (SOPs) sent on SMS 0",
      Width => "32",
      Position => "191:160", # Excel Formula: =calc_position(F65,E66)
      Type => "Counter",
      UsedBy => "mmu_data_unpack",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    NetworkPacketsReadSms1 => { #Structure Type: RegField;
      Name => "NetworkPacketsReadSms1",
      RegMem => "RegField",
      Description => "Total Number of network packets (SOPs) sent on SMS 1",
      Width => "32",
      Position => "223:192", # Excel Formula: =calc_position(F66,E67)
      Type => "Counter",
      UsedBy => "mmu_data_unpack",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    ReassemblyPauseCycles => { #Structure Type: RegField;
      Name => "ReassemblyPauseCycles",
      RegMem => "RegField",
      Description => "Number of cycles that reassembly pause is high",
      Width => "16",
      Position => "239:224", # Excel Formula: =calc_position(F67,E68)
      Type => "Counter",
      UsedBy => "mmu_rd_reorder",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    DvoqCbtNotReadyCycles => { #Structure Type: RegField;
      Name => "DvoqCbtNotReadyCycles",
      RegMem => "RegField",
      Description => "Number of cycles that CBT to DVOQ has no credits and wants to send a new DBD",
      Width => "8",
      Position => "247:240", # Excel Formula: =calc_position(F68,E69)
      Type => "Counter",
      UsedBy => "mmu_allocator",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    DicsCbrNotReadyCycles => { #Structure Type: RegField;
      Name => "DicsCbrNotReadyCycles",
      RegMem => "RegField",
      Description => "Number of cycles that CBR from DICS is full ",
      Width => "8",
      Position => "255:248", # Excel Formula: =calc_position(F69,E70)
      Type => "Counter",
      UsedBy => "mmu_rd_req",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Sms0DataFifoFullCycles => { #Structure Type: RegField;
      Name => "Sms0DataFifoFullCycles",
      RegMem => "RegField",
      Description => "Number of cycles that Fifo from SMS0 is full",
      Width => "32",
      Position => "287:256", # Excel Formula: =calc_position(F70,E71)
      Type => "Counter",
      UsedBy => "mmu_data_pack",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Sms1DataFifoFullCycles => { #Structure Type: RegField;
      Name => "Sms1DataFifoFullCycles",
      RegMem => "RegField",
      Description => "Number of cycles that Fifo from SMS1 is full",
      Width => "32",
      Position => "319:288", # Excel Formula: =calc_position(F71,E72)
      Type => "Counter",
      UsedBy => "mmu_data_pack",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmDebugCounters0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 17;
    Name => "LpmDebugCounters[2]",
    RegMem => "Reg",
    Address => "11D", # Excel Formula: =calc_reg_address(C60,A60,G60)
    Description => "Various debug counters for LPM",
    Width => "128", # Excel Formula: =calc_reg_width(E74:E77,F77)
    Type => "ReadOnly",
    ArrayLength => "2",
    ArrayIndex => "0",
    LpmReqCounter0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "LpmReqCounter[n]",
      RegMem => "RegField",
      Description => "Total number of LPM lookups requested, per interface. Measured at input to CBR. Includes bypassed lookups",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    LpmDoubleReqCounter0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 20;
      Name => "LpmDoubleReqCounter[n]",
      RegMem => "RegField",
      Description => "Number of LPM lookups requested, per interface, that access a double bucket. Measured at input to CBR",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F74,E75)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    LpmRespCounter0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "LpmRespCounter[n]",
      RegMem => "RegField",
      Description => "Total number of LPM lookups sent back per interface. Does not include bypassed lookups",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F75,E76)
      Type => "Counter",
      UsedBy => "mmu_lpm_rd_req",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    LpmBypassCounter0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 17;
      Name => "LpmBypassCounter[n]",
      RegMem => "RegField",
      Description => "Number of LPM lookups that are returned to CDB and bypass the MMU",
      Width => "32",
      Position => "127:96", # Excel Formula: =calc_position(F76,E77)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmDebugCounters1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 17;
    Name => "LpmDebugCounters[2]",
    RegMem => "Reg",
    Address => "11E",
    Description => "Various debug counters for LPM",
    Width => "128", # Excel Formula: =calc_reg_width(E74:E77,F77)
    Type => "ReadOnly",
    ArrayLength => "2",
    ArrayIndex => "1",
    LpmReqCounter1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "LpmReqCounter[n]",
      RegMem => "RegField",
      Description => "Total number of LPM lookups requested, per interface. Measured at input to CBR. Includes bypassed lookups",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    LpmDoubleReqCounter1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 20;
      Name => "LpmDoubleReqCounter[n]",
      RegMem => "RegField",
      Description => "Number of LPM lookups requested, per interface, that access a double bucket. Measured at input to CBR",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F74,E75)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    LpmRespCounter1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "LpmRespCounter[n]",
      RegMem => "RegField",
      Description => "Total number of LPM lookups sent back per interface. Does not include bypassed lookups",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F75,E76)
      Type => "Counter",
      UsedBy => "mmu_lpm_rd_req",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    LpmBypassCounter1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 17;
      Name => "LpmBypassCounter[n]",
      RegMem => "RegField",
      Description => "Number of LPM lookups that are returned to CDB and bypass the MMU",
      Width => "32",
      Position => "127:96", # Excel Formula: =calc_position(F76,E77)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters0 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 0; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "11F", # Excel Formula: =calc_reg_address(C73,A73,G73)
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "0",
    LpmBankCyclesAboveThreshold0 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 0; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters1 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 1; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "120",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "1",
    LpmBankCyclesAboveThreshold1 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 1; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters2 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 2; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "121",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "2",
    LpmBankCyclesAboveThreshold2 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 2; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters3 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 3; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "122",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "3",
    LpmBankCyclesAboveThreshold3 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 3; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters4 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 4; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "123",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "4",
    LpmBankCyclesAboveThreshold4 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 4; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters5 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 5; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "124",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "5",
    LpmBankCyclesAboveThreshold5 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 5; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters6 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 6; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "125",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "6",
    LpmBankCyclesAboveThreshold6 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 6; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters7 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 7; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "126",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "7",
    LpmBankCyclesAboveThreshold7 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 7; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters8 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 8; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "127",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "8",
    LpmBankCyclesAboveThreshold8 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 8; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters9 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 9; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "128",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "9",
    LpmBankCyclesAboveThreshold9 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 9; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters10 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 10; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "129",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "10",
    LpmBankCyclesAboveThreshold10 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 10; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters11 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 11; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "12A",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "11",
    LpmBankCyclesAboveThreshold11 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 11; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters12 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 12; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "12B",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "12",
    LpmBankCyclesAboveThreshold12 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 12; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters13 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 13; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "12C",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "13",
    LpmBankCyclesAboveThreshold13 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 13; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters14 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 14; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "12D",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "14",
    LpmBankCyclesAboveThreshold14 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 14; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters15 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 15; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "12E",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "15",
    LpmBankCyclesAboveThreshold15 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 15; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters16 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 16; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "12F",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "16",
    LpmBankCyclesAboveThreshold16 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 16; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters17 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 17; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "130",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "17",
    LpmBankCyclesAboveThreshold17 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 17; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters18 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 18; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "131",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "18",
    LpmBankCyclesAboveThreshold18 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 18; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters19 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 19; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "132",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "19",
    LpmBankCyclesAboveThreshold19 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 19; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters20 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 20; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "133",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "20",
    LpmBankCyclesAboveThreshold20 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 20; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters21 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 21; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "134",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "21",
    LpmBankCyclesAboveThreshold21 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 21; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters22 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 22; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "135",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "22",
    LpmBankCyclesAboveThreshold22 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 22; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters23 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 23; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "136",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "23",
    LpmBankCyclesAboveThreshold23 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 23; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters24 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 24; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "137",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "24",
    LpmBankCyclesAboveThreshold24 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 24; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters25 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 25; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "138",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "25",
    LpmBankCyclesAboveThreshold25 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 25; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters26 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 26; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "139",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "26",
    LpmBankCyclesAboveThreshold26 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 26; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters27 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 27; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "13A",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "27",
    LpmBankCyclesAboveThreshold27 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 27; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters28 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 28; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "13B",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "28",
    LpmBankCyclesAboveThreshold28 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 28; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters29 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 29; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "13C",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "29",
    LpmBankCyclesAboveThreshold29 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 29; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters30 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 30; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "13D",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "30",
    LpmBankCyclesAboveThreshold30 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 30; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters31 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 31; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "13E",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "31",
    LpmBankCyclesAboveThreshold31 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 31; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters32 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 32; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "13F",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "32",
    LpmBankCyclesAboveThreshold32 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 32; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters33 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 33; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "140",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "33",
    LpmBankCyclesAboveThreshold33 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 33; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters34 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 34; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "141",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "34",
    LpmBankCyclesAboveThreshold34 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 34; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters35 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 35; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "142",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "35",
    LpmBankCyclesAboveThreshold35 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 35; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters36 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 36; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "143",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "36",
    LpmBankCyclesAboveThreshold36 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 36; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters37 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 37; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "144",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "37",
    LpmBankCyclesAboveThreshold37 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 37; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters38 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 38; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "145",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "38",
    LpmBankCyclesAboveThreshold38 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 38; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters39 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 39; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "146",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "39",
    LpmBankCyclesAboveThreshold39 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 39; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters40 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 40; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "147",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "40",
    LpmBankCyclesAboveThreshold40 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 40; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters41 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 41; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "148",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "41",
    LpmBankCyclesAboveThreshold41 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 41; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters42 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 42; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "149",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "42",
    LpmBankCyclesAboveThreshold42 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 42; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters43 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 43; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "14A",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "43",
    LpmBankCyclesAboveThreshold43 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 43; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters44 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 44; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "14B",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "44",
    LpmBankCyclesAboveThreshold44 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 44; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters45 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 45; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "14C",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "45",
    LpmBankCyclesAboveThreshold45 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 45; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters46 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 46; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "14D",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "46",
    LpmBankCyclesAboveThreshold46 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 46; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters47 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 47; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "14E",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "47",
    LpmBankCyclesAboveThreshold47 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 47; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters48 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 48; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "14F",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "48",
    LpmBankCyclesAboveThreshold48 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 48; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters49 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 49; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "150",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "49",
    LpmBankCyclesAboveThreshold49 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 49; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters50 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 50; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "151",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "50",
    LpmBankCyclesAboveThreshold50 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 50; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters51 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 51; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "152",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "51",
    LpmBankCyclesAboveThreshold51 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 51; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters52 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 52; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "153",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "52",
    LpmBankCyclesAboveThreshold52 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 52; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters53 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 53; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "154",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "53",
    LpmBankCyclesAboveThreshold53 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 53; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters54 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 54; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "155",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "54",
    LpmBankCyclesAboveThreshold54 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 54; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters55 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 55; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "156",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "55",
    LpmBankCyclesAboveThreshold55 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 55; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters56 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 56; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "157",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "56",
    LpmBankCyclesAboveThreshold56 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 56; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters57 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 57; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "158",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "57",
    LpmBankCyclesAboveThreshold57 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 57; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters58 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 58; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "159",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "58",
    LpmBankCyclesAboveThreshold58 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 58; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters59 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 59; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "15A",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "59",
    LpmBankCyclesAboveThreshold59 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 59; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters60 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 60; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "15B",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "60",
    LpmBankCyclesAboveThreshold60 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 60; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters61 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 61; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "15C",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "61",
    LpmBankCyclesAboveThreshold61 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 61; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters62 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 62; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "15D",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "62",
    LpmBankCyclesAboveThreshold62 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 62; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters63 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 63; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "15E",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "63",
    LpmBankCyclesAboveThreshold63 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 63; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters64 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 64; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "15F",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "64",
    LpmBankCyclesAboveThreshold64 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 64; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters65 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 65; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "160",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "65",
    LpmBankCyclesAboveThreshold65 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 65; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters66 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 66; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "161",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "66",
    LpmBankCyclesAboveThreshold66 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 66; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters67 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 67; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "162",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "67",
    LpmBankCyclesAboveThreshold67 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 67; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters68 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 68; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "163",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "68",
    LpmBankCyclesAboveThreshold68 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 68; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters69 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 69; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "164",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "69",
    LpmBankCyclesAboveThreshold69 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 69; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters70 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 70; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "165",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "70",
    LpmBankCyclesAboveThreshold70 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 70; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters71 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 71; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "166",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "71",
    LpmBankCyclesAboveThreshold71 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 71; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters72 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 72; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "167",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "72",
    LpmBankCyclesAboveThreshold72 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 72; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters73 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 73; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "168",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "73",
    LpmBankCyclesAboveThreshold73 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 73; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters74 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 74; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "169",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "74",
    LpmBankCyclesAboveThreshold74 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 74; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters75 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 75; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "16A",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "75",
    LpmBankCyclesAboveThreshold75 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 75; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters76 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 76; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "16B",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "76",
    LpmBankCyclesAboveThreshold76 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 76; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters77 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 77; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "16C",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "77",
    LpmBankCyclesAboveThreshold77 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 77; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters78 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 78; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "16D",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "78",
    LpmBankCyclesAboveThreshold78 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 78; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters79 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 79; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "16E",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "79",
    LpmBankCyclesAboveThreshold79 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 79; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters80 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 80; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "16F",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "80",
    LpmBankCyclesAboveThreshold80 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 80; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters81 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 81; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "170",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "81",
    LpmBankCyclesAboveThreshold81 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 81; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters82 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 82; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "171",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "82",
    LpmBankCyclesAboveThreshold82 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 82; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters83 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 83; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "172",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "83",
    LpmBankCyclesAboveThreshold83 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 83; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters84 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 84; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "173",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "84",
    LpmBankCyclesAboveThreshold84 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 84; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters85 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 85; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "174",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "85",
    LpmBankCyclesAboveThreshold85 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 85; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters86 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 86; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "175",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "86",
    LpmBankCyclesAboveThreshold86 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 86; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters87 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 87; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "176",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "87",
    LpmBankCyclesAboveThreshold87 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 87; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters88 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 88; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "177",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "88",
    LpmBankCyclesAboveThreshold88 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 88; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters89 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 89; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "178",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "89",
    LpmBankCyclesAboveThreshold89 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 89; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters90 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 90; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "179",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "90",
    LpmBankCyclesAboveThreshold90 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 90; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters91 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 91; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "17A",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "91",
    LpmBankCyclesAboveThreshold91 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 91; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters92 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 92; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "17B",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "92",
    LpmBankCyclesAboveThreshold92 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 92; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters93 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 93; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "17C",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "93",
    LpmBankCyclesAboveThreshold93 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 93; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters94 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 94; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "17D",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "94",
    LpmBankCyclesAboveThreshold94 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 94; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters95 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 95; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "17E",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "95",
    LpmBankCyclesAboveThreshold95 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 95; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters96 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 96; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "17F",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "96",
    LpmBankCyclesAboveThreshold96 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 96; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters97 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 97; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "180",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "97",
    LpmBankCyclesAboveThreshold97 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 97; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters98 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 98; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "181",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "98",
    LpmBankCyclesAboveThreshold98 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 98; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters99 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 99; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "182",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "99",
    LpmBankCyclesAboveThreshold99 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 99; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters100 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 100; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "183",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "100",
    LpmBankCyclesAboveThreshold100 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 100; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters101 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 101; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "184",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "101",
    LpmBankCyclesAboveThreshold101 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 101; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters102 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 102; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "185",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "102",
    LpmBankCyclesAboveThreshold102 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 102; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters103 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 103; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "186",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "103",
    LpmBankCyclesAboveThreshold103 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 103; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters104 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 104; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "187",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "104",
    LpmBankCyclesAboveThreshold104 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 104; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters105 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 105; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "188",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "105",
    LpmBankCyclesAboveThreshold105 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 105; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters106 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 106; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "189",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "106",
    LpmBankCyclesAboveThreshold106 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 106; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters107 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 107; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "18A",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "107",
    LpmBankCyclesAboveThreshold107 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 107; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters108 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 108; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "18B",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "108",
    LpmBankCyclesAboveThreshold108 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 108; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters109 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 109; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "18C",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "109",
    LpmBankCyclesAboveThreshold109 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 109; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters110 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 110; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "18D",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "110",
    LpmBankCyclesAboveThreshold110 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 110; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters111 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 111; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "18E",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "111",
    LpmBankCyclesAboveThreshold111 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 111; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters112 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 112; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "18F",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "112",
    LpmBankCyclesAboveThreshold112 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 112; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters113 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 113; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "190",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "113",
    LpmBankCyclesAboveThreshold113 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 113; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters114 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 114; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "191",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "114",
    LpmBankCyclesAboveThreshold114 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 114; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters115 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 115; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "192",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "115",
    LpmBankCyclesAboveThreshold115 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 115; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters116 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 116; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "193",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "116",
    LpmBankCyclesAboveThreshold116 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 116; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters117 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 117; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "194",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "117",
    LpmBankCyclesAboveThreshold117 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 117; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters118 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 118; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "195",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "118",
    LpmBankCyclesAboveThreshold118 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 118; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters119 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 119; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "196",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "119",
    LpmBankCyclesAboveThreshold119 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 119; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters120 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 120; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "197",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "120",
    LpmBankCyclesAboveThreshold120 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 120; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters121 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 121; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "198",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "121",
    LpmBankCyclesAboveThreshold121 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 121; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters122 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 122; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "199",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "122",
    LpmBankCyclesAboveThreshold122 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 122; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters123 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 123; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "19A",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "123",
    LpmBankCyclesAboveThreshold123 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 123; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters124 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 124; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "19B",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "124",
    LpmBankCyclesAboveThreshold124 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 124; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters125 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 125; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "19C",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "125",
    LpmBankCyclesAboveThreshold125 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 125; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters126 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 126; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "19D",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "126",
    LpmBankCyclesAboveThreshold126 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 126; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters127 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 127; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "19E",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "127",
    LpmBankCyclesAboveThreshold127 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 127; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters128 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 128; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "19F",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "128",
    LpmBankCyclesAboveThreshold128 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 128; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters129 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 129; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1A0",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "129",
    LpmBankCyclesAboveThreshold129 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 129; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters130 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 130; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1A1",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "130",
    LpmBankCyclesAboveThreshold130 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 130; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters131 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 131; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1A2",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "131",
    LpmBankCyclesAboveThreshold131 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 131; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters132 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 132; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1A3",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "132",
    LpmBankCyclesAboveThreshold132 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 132; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters133 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 133; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1A4",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "133",
    LpmBankCyclesAboveThreshold133 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 133; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters134 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 134; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1A5",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "134",
    LpmBankCyclesAboveThreshold134 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 134; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters135 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 135; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1A6",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "135",
    LpmBankCyclesAboveThreshold135 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 135; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters136 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 136; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1A7",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "136",
    LpmBankCyclesAboveThreshold136 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 136; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters137 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 137; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1A8",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "137",
    LpmBankCyclesAboveThreshold137 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 137; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters138 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 138; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1A9",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "138",
    LpmBankCyclesAboveThreshold138 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 138; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters139 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 139; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1AA",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "139",
    LpmBankCyclesAboveThreshold139 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 139; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters140 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 140; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1AB",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "140",
    LpmBankCyclesAboveThreshold140 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 140; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters141 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 141; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1AC",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "141",
    LpmBankCyclesAboveThreshold141 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 141; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters142 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 142; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1AD",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "142",
    LpmBankCyclesAboveThreshold142 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 142; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters143 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 143; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1AE",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "143",
    LpmBankCyclesAboveThreshold143 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 143; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters144 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 144; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1AF",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "144",
    LpmBankCyclesAboveThreshold144 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 144; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters145 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 145; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1B0",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "145",
    LpmBankCyclesAboveThreshold145 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 145; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters146 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 146; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1B1",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "146",
    LpmBankCyclesAboveThreshold146 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 146; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters147 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 147; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1B2",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "147",
    LpmBankCyclesAboveThreshold147 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 147; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters148 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 148; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1B3",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "148",
    LpmBankCyclesAboveThreshold148 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 148; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters149 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 149; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1B4",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "149",
    LpmBankCyclesAboveThreshold149 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 149; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters150 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 150; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1B5",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "150",
    LpmBankCyclesAboveThreshold150 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 150; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters151 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 151; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1B6",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "151",
    LpmBankCyclesAboveThreshold151 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 151; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters152 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 152; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1B7",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "152",
    LpmBankCyclesAboveThreshold152 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 152; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters153 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 153; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1B8",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "153",
    LpmBankCyclesAboveThreshold153 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 153; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters154 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 154; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1B9",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "154",
    LpmBankCyclesAboveThreshold154 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 154; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters155 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 155; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1BA",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "155",
    LpmBankCyclesAboveThreshold155 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 155; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters156 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 156; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1BB",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "156",
    LpmBankCyclesAboveThreshold156 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 156; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters157 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 157; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1BC",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "157",
    LpmBankCyclesAboveThreshold157 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 157; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters158 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 158; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1BD",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "158",
    LpmBankCyclesAboveThreshold158 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 158; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters159 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 159; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1BE",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "159",
    LpmBankCyclesAboveThreshold159 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 159; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters160 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 160; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1BF",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "160",
    LpmBankCyclesAboveThreshold160 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 160; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters161 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 161; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1C0",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "161",
    LpmBankCyclesAboveThreshold161 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 161; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters162 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 162; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1C1",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "162",
    LpmBankCyclesAboveThreshold162 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 162; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters163 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 163; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1C2",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "163",
    LpmBankCyclesAboveThreshold163 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 163; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters164 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 164; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1C3",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "164",
    LpmBankCyclesAboveThreshold164 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 164; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters165 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 165; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1C4",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "165",
    LpmBankCyclesAboveThreshold165 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 165; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters166 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 166; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1C5",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "166",
    LpmBankCyclesAboveThreshold166 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 166; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters167 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 167; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1C6",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "167",
    LpmBankCyclesAboveThreshold167 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 167; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters168 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 168; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1C7",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "168",
    LpmBankCyclesAboveThreshold168 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 168; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters169 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 169; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1C8",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "169",
    LpmBankCyclesAboveThreshold169 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 169; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters170 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 170; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1C9",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "170",
    LpmBankCyclesAboveThreshold170 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 170; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters171 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 171; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1CA",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "171",
    LpmBankCyclesAboveThreshold171 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 171; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters172 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 172; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1CB",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "172",
    LpmBankCyclesAboveThreshold172 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 172; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters173 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 173; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1CC",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "173",
    LpmBankCyclesAboveThreshold173 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 173; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters174 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 174; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1CD",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "174",
    LpmBankCyclesAboveThreshold174 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 174; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters175 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 175; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1CE",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "175",
    LpmBankCyclesAboveThreshold175 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 175; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters176 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 176; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1CF",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "176",
    LpmBankCyclesAboveThreshold176 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 176; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters177 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 177; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1D0",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "177",
    LpmBankCyclesAboveThreshold177 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 177; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters178 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 178; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1D1",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "178",
    LpmBankCyclesAboveThreshold178 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 178; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters179 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 179; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1D2",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "179",
    LpmBankCyclesAboveThreshold179 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 179; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters180 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 180; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1D3",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "180",
    LpmBankCyclesAboveThreshold180 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 180; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters181 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 181; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1D4",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "181",
    LpmBankCyclesAboveThreshold181 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 181; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters182 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 182; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1D5",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "182",
    LpmBankCyclesAboveThreshold182 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 182; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters183 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 183; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1D6",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "183",
    LpmBankCyclesAboveThreshold183 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 183; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters184 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 184; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1D7",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "184",
    LpmBankCyclesAboveThreshold184 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 184; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters185 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 185; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1D8",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "185",
    LpmBankCyclesAboveThreshold185 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 185; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters186 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 186; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1D9",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "186",
    LpmBankCyclesAboveThreshold186 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 186; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters187 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 187; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1DA",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "187",
    LpmBankCyclesAboveThreshold187 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 187; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters188 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 188; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1DB",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "188",
    LpmBankCyclesAboveThreshold188 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 188; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters189 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 189; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1DC",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "189",
    LpmBankCyclesAboveThreshold189 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 189; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters190 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 190; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1DD",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "190",
    LpmBankCyclesAboveThreshold190 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 190; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters191 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 191; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1DE",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "191",
    LpmBankCyclesAboveThreshold191 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 191; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters192 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 192; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1DF",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "192",
    LpmBankCyclesAboveThreshold192 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 192; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters193 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 193; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1E0",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "193",
    LpmBankCyclesAboveThreshold193 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 193; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters194 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 194; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1E1",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "194",
    LpmBankCyclesAboveThreshold194 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 194; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters195 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 195; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1E2",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "195",
    LpmBankCyclesAboveThreshold195 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 195; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters196 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 196; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1E3",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "196",
    LpmBankCyclesAboveThreshold196 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 196; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters197 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 197; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1E4",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "197",
    LpmBankCyclesAboveThreshold197 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 197; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters198 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 198; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1E5",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "198",
    LpmBankCyclesAboveThreshold198 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 198; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters199 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 199; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1E6",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "199",
    LpmBankCyclesAboveThreshold199 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 199; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters200 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 200; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1E7",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "200",
    LpmBankCyclesAboveThreshold200 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 200; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters201 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 201; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1E8",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "201",
    LpmBankCyclesAboveThreshold201 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 201; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters202 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 202; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1E9",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "202",
    LpmBankCyclesAboveThreshold202 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 202; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters203 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 203; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1EA",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "203",
    LpmBankCyclesAboveThreshold203 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 203; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters204 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 204; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1EB",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "204",
    LpmBankCyclesAboveThreshold204 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 204; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters205 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 205; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1EC",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "205",
    LpmBankCyclesAboveThreshold205 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 205; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters206 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 206; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1ED",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "206",
    LpmBankCyclesAboveThreshold206 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 206; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters207 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 207; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1EE",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "207",
    LpmBankCyclesAboveThreshold207 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 207; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters208 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 208; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1EF",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "208",
    LpmBankCyclesAboveThreshold208 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 208; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters209 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 209; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1F0",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "209",
    LpmBankCyclesAboveThreshold209 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 209; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters210 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 210; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1F1",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "210",
    LpmBankCyclesAboveThreshold210 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 210; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters211 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 211; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1F2",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "211",
    LpmBankCyclesAboveThreshold211 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 211; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters212 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 212; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1F3",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "212",
    LpmBankCyclesAboveThreshold212 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 212; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters213 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 213; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1F4",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "213",
    LpmBankCyclesAboveThreshold213 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 213; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters214 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 214; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1F5",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "214",
    LpmBankCyclesAboveThreshold214 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 214; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters215 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 215; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1F6",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "215",
    LpmBankCyclesAboveThreshold215 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 215; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters216 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 216; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1F7",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "216",
    LpmBankCyclesAboveThreshold216 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 216; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters217 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 217; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1F8",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "217",
    LpmBankCyclesAboveThreshold217 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 217; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters218 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 218; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1F9",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "218",
    LpmBankCyclesAboveThreshold218 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 218; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters219 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 219; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1FA",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "219",
    LpmBankCyclesAboveThreshold219 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 219; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters220 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 220; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1FB",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "220",
    LpmBankCyclesAboveThreshold220 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 220; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters221 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 221; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1FC",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "221",
    LpmBankCyclesAboveThreshold221 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 221; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters222 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 222; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1FD",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "222",
    LpmBankCyclesAboveThreshold222 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 222; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters223 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 223; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1FE",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "223",
    LpmBankCyclesAboveThreshold223 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 223; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters224 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 224; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "1FF",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "224",
    LpmBankCyclesAboveThreshold224 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 224; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters225 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 225; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "200",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "225",
    LpmBankCyclesAboveThreshold225 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 225; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters226 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 226; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "201",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "226",
    LpmBankCyclesAboveThreshold226 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 226; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters227 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 227; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "202",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "227",
    LpmBankCyclesAboveThreshold227 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 227; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters228 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 228; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "203",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "228",
    LpmBankCyclesAboveThreshold228 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 228; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters229 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 229; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "204",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "229",
    LpmBankCyclesAboveThreshold229 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 229; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters230 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 230; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "205",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "230",
    LpmBankCyclesAboveThreshold230 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 230; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters231 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 231; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "206",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "231",
    LpmBankCyclesAboveThreshold231 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 231; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters232 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 232; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "207",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "232",
    LpmBankCyclesAboveThreshold232 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 232; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters233 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 233; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "208",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "233",
    LpmBankCyclesAboveThreshold233 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 233; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters234 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 234; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "209",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "234",
    LpmBankCyclesAboveThreshold234 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 234; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters235 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 235; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "20A",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "235",
    LpmBankCyclesAboveThreshold235 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 235; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters236 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 236; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "20B",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "236",
    LpmBankCyclesAboveThreshold236 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 236; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters237 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 237; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "20C",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "237",
    LpmBankCyclesAboveThreshold237 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 237; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters238 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 238; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "20D",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "238",
    LpmBankCyclesAboveThreshold238 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 238; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters239 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 239; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "20E",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "239",
    LpmBankCyclesAboveThreshold239 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 239; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters240 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 240; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "20F",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "240",
    LpmBankCyclesAboveThreshold240 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 240; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters241 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 241; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "210",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "241",
    LpmBankCyclesAboveThreshold241 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 241; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters242 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 242; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "211",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "242",
    LpmBankCyclesAboveThreshold242 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 242; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters243 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 243; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "212",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "243",
    LpmBankCyclesAboveThreshold243 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 243; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters244 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 244; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "213",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "244",
    LpmBankCyclesAboveThreshold244 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 244; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters245 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 245; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "214",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "245",
    LpmBankCyclesAboveThreshold245 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 245; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters246 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 246; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "215",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "246",
    LpmBankCyclesAboveThreshold246 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 246; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters247 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 247; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "216",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "247",
    LpmBankCyclesAboveThreshold247 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 247; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters248 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 248; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "217",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "248",
    LpmBankCyclesAboveThreshold248 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 248; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters249 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 249; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "218",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "249",
    LpmBankCyclesAboveThreshold249 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 249; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters250 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 250; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "219",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "250",
    LpmBankCyclesAboveThreshold250 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 250; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters251 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 251; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "21A",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "251",
    LpmBankCyclesAboveThreshold251 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 251; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters252 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 252; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "21B",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "252",
    LpmBankCyclesAboveThreshold252 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 252; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters253 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 253; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "21C",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "253",
    LpmBankCyclesAboveThreshold253 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 253; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters254 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 254; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "21D",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "254",
    LpmBankCyclesAboveThreshold254 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 254; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  LpmBankCounters255 => { #Structure Type: Reg; ArrayLength: 256; ArrayIndex: 255; ArrayLocationInName: 16;
    Name => "LpmBankCounters[256]",
    RegMem => "Reg",
    Address => "21E",
    Description => "Counters for LPM bank fullness, measured in MMU shadowed FIFOs (which determine denied)",
    Width => "12", # Excel Formula: =calc_reg_width(E79:E79,F79)
    Type => "ReadOnly",
    ArrayLength => "256",
    ArrayIndex => "255",
    LpmBankCyclesAboveThreshold255 => { #Structure Type: RegField; ArrayLength: 256; ArrayIndex: 255; ArrayLocationInName: 28;
      Name => "LpmBankCyclesAboveThreshold[n]",
      RegMem => "RegField",
      Description => "Number of cycles that bank is above LpmBankCountThreshold",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F78,E79,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_dist",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  ErrorCounters => { #Structure Type: Reg;
    Name => "ErrorCounters",
    RegMem => "Reg",
    Address => "21F", # Excel Formula: =calc_reg_address(C78,A78,G78)
    Description => "Various error counters",
    Width => "96", # Excel Formula: =calc_reg_width(E81:E86,F86)
    Type => "ReadOnly",
    LpmErrorCounter => { #Structure Type: RegField;
      Name => "LpmErrorCounter",
      RegMem => "RegField",
      Description => "Counter of LPM lookups returned with errors, shared counter for both LPM interfaces",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F80,E81,TRUE)
      Type => "Counter",
      UsedBy => "mmu_lpm_rd_req",
      AdditionalInfo => "CounterIncrWidth=2",
    },
    DummyPktCounter => { #Structure Type: RegField;
      Name => "DummyPktCounter",
      RegMem => "RegField",
      Description => "Counter of dummy packets sent by MMU to SMS",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F81,E82)
      Type => "Counter",
      UsedBy => "mmu_data_unpack",
      AdditionalInfo => "CounterIncrWidth=2",
    },
    DropPktCounterSms0 => { #Structure Type: RegField;
      Name => "DropPktCounterSms0",
      RegMem => "RegField",
      Description => "Counter of invert_crc packets (SOPs) received by MMU from SMS if 0",
      Width => "16",
      Position => "47:32", # Excel Formula: =calc_position(F82,E83)
      Type => "Counter",
      UsedBy => "mmu_data_pack",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    DropPktCounterSms1 => { #Structure Type: RegField;
      Name => "DropPktCounterSms1",
      RegMem => "RegField",
      Description => "Counter of invert_crc packets (SOPs) received by MMU from SMS if 1",
      Width => "16",
      Position => "63:48", # Excel Formula: =calc_position(F83,E84)
      Type => "Counter",
      UsedBy => "mmu_data_pack",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    MmuMonitorErrorCounter => { #Structure Type: RegField;
      Name => "MmuMonitorErrorCounter",
      RegMem => "RegField",
      Description => "Number of errors logged by MMU monitor logic",
      Width => "16",
      Position => "79:64", # Excel Formula: =calc_position(F84,E85)
      Type => "Counter",
      UsedBy => "mmu_data_unpack",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    ErrorBufferCounter => { #Structure Type: RegField;
      Name => "ErrorBufferCounter",
      RegMem => "RegField",
      Description => "Counter of number of DRAM buffers taken out of use since has an error. Does not account for those buffers added back by CPU",
      Width => "16",
      Position => "95:80", # Excel Formula: =calc_position(F85,E86)
      Type => "Counter",
      UsedBy => "mmu_rd_reorder",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  RateCheckerControl => { #Structure Type: Reg;
    Name => "RateCheckerControl",
    RegMem => "Reg",
    Address => "220", # Excel Formula: =calc_reg_address(C80,A80,G80)
    Description => "Control for MMU rate checker",
    Width => "33", # Excel Formula: =calc_reg_width(E88:E89,F89)
    Type => "Config",
    RateCheckerInterval => { #Structure Type: RegField;
      Name => "RateCheckerInterval",
      RegMem => "RegField",
      Description => "Number of core clock cycles over which to measure rate Value of 0 will mean max value of counter",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F87,E88,TRUE)
      Type => "Config",
      UsedBy => "mmu_allocator",
      DefaultValue => "d16777215",
    },
    RateCheckerGo => { #Structure Type: RegField;
      Name => "RateCheckerGo",
      RegMem => "RegField",
      Description => "Write 0 then 1 to start rate checker (must be done in 2 separate register writes)",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F88,E89)
      Type => "Config",
      UsedBy => "mmu_allocator",
      DefaultValue => "d0",
    },
  },
  RateCheckerResult => { #Structure Type: Reg;
    Name => "RateCheckerResult",
    RegMem => "Reg",
    Address => "221", # Excel Formula: =calc_reg_address(C87,A87,G87)
    Description => "Rate checker result",
    Width => "82", # Excel Formula: =calc_reg_width(E91:E92,F92)
    Type => "ReadOnly",
    RateCheckerBytesWritten => { #Structure Type: RegField;
      Name => "RateCheckerBytesWritten",
      RegMem => "RegField",
      Description => "Bytes written from SMS to HBM in timing interval.If MSB is 1, value of counter is saturated at half of max value",
      Width => "41",
      Position => "40:0", # Excel Formula: =calc_position(F90,E91,TRUE)
      Type => "Counter",
      UsedBy => "mmu_allocator",
      AdditionalInfo => "CounterIncrWidth=9",
    },
    RateCheckerBytesRead => { #Structure Type: RegField;
      Name => "RateCheckerBytesRead",
      RegMem => "RegField",
      Description => "Bytes read from HBM to SMS in timing interval. If MSB is 1, value of counter is saturated at half of max value",
      Width => "41",
      Position => "81:41", # Excel Formula: =calc_position(F91,E92)
      Type => "Counter",
      UsedBy => "mmu_data_unpack",
      AdditionalInfo => "CounterIncrWidth=9",
    },
  },
  debug_data_bus_register => { #Structure Type: Reg;
    Name => "debug_data_bus_register",
    RegMem => "Reg",
    Address => "222", # Excel Formula: =calc_reg_address(C90,A90,G90)
    Description => "debug_data_bus_register",
    Width => "32", # Excel Formula: =calc_reg_width(E94:E94,F94)
    Type => "ReadOnly",
    debug_data_bus => { #Structure Type: RegField;
      Name => "debug_data_bus",
      RegMem => "RegField",
      Description => "debug_data_bus",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F93,E94,TRUE)
      Type => "Status",
      UsedBy => "mmu",
    },
  },
  debug_data_select_register => { #Structure Type: Reg;
    Name => "debug_data_select_register",
    RegMem => "Reg",
    Address => "223", # Excel Formula: =calc_reg_address(C93,A93,G93)
    Description => "debug_data_bus_register",
    Width => "10", # Excel Formula: =calc_reg_width(E96:E96,F96)
    Type => "Config",
    debug_data_select => { #Structure Type: RegField;
      Name => "debug_data_select",
      RegMem => "RegField",
      Description => "debug_data_bus",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F95,E96,TRUE)
      Type => "Config",
      UsedBy => "mmu",
      DefaultValue => "d0",
    },
  },
  sms_data_fifo_mem0 => { #Structure Type: Mem; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "sms_data_fifo_mem[4]",
    RegMem => "Mem",
    Address => "100000",
    Description => "MMU SMS DATA FIFO",
    Width => "620", # Excel Formula: =calc_mem_width(E98:E98,M97,F98,128)
    Type => "Dynamic",
    UsedBy => "pack",
    MemEntries => "48", # Excel Formula: =calc_field_width_define("MMU_SMS_DATA_FIFO_DEPTH")
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteAfterProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "4",
    ArrayIndex => "0",
    MemLogicalWidth => "576",
    sms_data_fifo_mem0Data => { #Structure Type: MemField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "sms_data_fifo_mem[n]Data",
      RegMem => "MemField",
      Width => "576", # Excel Formula: =calc_field_width_define("MMU_SMS_DATA_FIFO_WIDTH")
      Position => "575:0", # Excel Formula: =calc_position(F97,E98,TRUE)
    },
  },
  sms_data_fifo_mem1 => { #Structure Type: Mem; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "sms_data_fifo_mem[4]",
    RegMem => "Mem",
    Address => "200000",
    Description => "MMU SMS DATA FIFO",
    Width => "620", # Excel Formula: =calc_mem_width(E98:E98,M97,F98,128)
    Type => "Dynamic",
    UsedBy => "pack",
    MemEntries => "48", # Excel Formula: =calc_field_width_define("MMU_SMS_DATA_FIFO_DEPTH")
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteAfterProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "4",
    ArrayIndex => "1",
    MemLogicalWidth => "576",
    sms_data_fifo_mem1Data => { #Structure Type: MemField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "sms_data_fifo_mem[n]Data",
      RegMem => "MemField",
      Width => "576", # Excel Formula: =calc_field_width_define("MMU_SMS_DATA_FIFO_WIDTH")
      Position => "575:0", # Excel Formula: =calc_position(F97,E98,TRUE)
    },
  },
  sms_data_fifo_mem2 => { #Structure Type: Mem; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
    Name => "sms_data_fifo_mem[4]",
    RegMem => "Mem",
    Address => "300000",
    Description => "MMU SMS DATA FIFO",
    Width => "620", # Excel Formula: =calc_mem_width(E98:E98,M97,F98,128)
    Type => "Dynamic",
    UsedBy => "pack",
    MemEntries => "48", # Excel Formula: =calc_field_width_define("MMU_SMS_DATA_FIFO_DEPTH")
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteAfterProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "4",
    ArrayIndex => "2",
    MemLogicalWidth => "576",
    sms_data_fifo_mem2Data => { #Structure Type: MemField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "sms_data_fifo_mem[n]Data",
      RegMem => "MemField",
      Width => "576", # Excel Formula: =calc_field_width_define("MMU_SMS_DATA_FIFO_WIDTH")
      Position => "575:0", # Excel Formula: =calc_position(F97,E98,TRUE)
    },
  },
  sms_data_fifo_mem3 => { #Structure Type: Mem; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
    Name => "sms_data_fifo_mem[4]",
    RegMem => "Mem",
    Address => "400000",
    Description => "MMU SMS DATA FIFO",
    Width => "620", # Excel Formula: =calc_mem_width(E98:E98,M97,F98,128)
    Type => "Dynamic",
    UsedBy => "pack",
    MemEntries => "48", # Excel Formula: =calc_field_width_define("MMU_SMS_DATA_FIFO_DEPTH")
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteAfterProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "4",
    ArrayIndex => "3",
    MemLogicalWidth => "576",
    sms_data_fifo_mem3Data => { #Structure Type: MemField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "sms_data_fifo_mem[n]Data",
      RegMem => "MemField",
      Width => "576", # Excel Formula: =calc_field_width_define("MMU_SMS_DATA_FIFO_WIDTH")
      Position => "575:0", # Excel Formula: =calc_position(F97,E98,TRUE)
    },
  },
  mmu_dbd_req_fifo => { #Structure Type: Mem;
    Name => "mmu_dbd_req_fifo",
    RegMem => "Mem",
    Address => "500000", # Excel Formula: =calc_mem_address(C97,A97,G99,L99)
    Description => "MMU FIFO of DBD read requests",
    Width => "89", # Excel Formula: =calc_mem_width(E100:E100,M99,F100,-1)
    Type => "Dynamic",
    UsedBy => "rd_reorder",
    MemEntries => "252",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteAfterProt=1,PortErrPropagate=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "Depth is 32 entires, minus flop prefetch",
    MemLogicalWidth => "81",
    mmu_dbd_req_fifoData => { #Structure Type: MemField;
      Name => "mmu_dbd_req_fifoData",
      RegMem => "MemField",
      Width => "81",
      Position => "80:0", # Excel Formula: =calc_position(F99,E100,TRUE)
      Type => " ",
    },
  },
  LpmReqIdBucketMapping0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 22;
    Name => "LpmReqIdBucketMapping[2]",
    RegMem => "Mem",
    Address => "600000", # Excel Formula: =calc_mem_address(C99,A99,G101,L101)
    Description => "Mapping of LPM Req ID to bucket number, for error tracking",
    Width => "26", # Excel Formula: =calc_mem_width(E102:E102,M101,F102,-1)
    Type => "Dynamic",
    UsedBy => "lpm",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteAfterProt=1,PortErrPropagate=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "Number of entries is number of req ids per LPM
Width is bucket-id width",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "20",
    LpmReqIdBucketMapping0Data => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 22;
      Name => "LpmReqIdBucketMapping[n]Data",
      RegMem => "MemField",
      Width => "20",
      Position => "19:0", # Excel Formula: =calc_position(F101,E102,TRUE)
      Type => " ",
    },
  },
  LpmReqIdBucketMapping1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 22;
    Name => "LpmReqIdBucketMapping[2]",
    RegMem => "Mem",
    Address => "700000",
    Description => "Mapping of LPM Req ID to bucket number, for error tracking",
    Width => "26", # Excel Formula: =calc_mem_width(E102:E102,M101,F102,-1)
    Type => "Dynamic",
    UsedBy => "lpm",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteAfterProt=1,PortErrPropagate=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "Number of entries is number of req ids per LPM
Width is bucket-id width",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "20",
    LpmReqIdBucketMapping1Data => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 22;
      Name => "LpmReqIdBucketMapping[n]Data",
      RegMem => "MemField",
      Width => "20",
      Position => "19:0", # Excel Formula: =calc_position(F101,E102,TRUE)
      Type => " ",
    },
  },
};
