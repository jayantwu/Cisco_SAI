$block{CSS} = {
  Defines_db => "",
  ProjectName => "Gibraltar",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "1",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt test register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "Setting this filed to 1 triggers an assertion of the interrupt that is associated with this test field",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "18",
    Type => "Config",
    DataBusOutMem0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem6Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem6Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem7Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem7Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem8Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem8Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem6Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem6Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem7Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem7Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem8Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem8Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "18",
    Type => "Config",
    DataBusOutMem0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem6Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem6Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem7Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem7Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusOutMem8Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusOutMem8Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem6Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem6Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem7Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem7Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusInMem8Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusInMem8Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInitiateRegister",
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "18",
    Type => "Config",
    DataBusOutMem0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem6Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem6Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem7Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem7Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem8Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem8Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem6Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem6Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem7Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem7Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem8Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem8Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInitiateRegister",
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "18",
    Type => "Config",
    DataBusOutMem0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem6Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem6Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem7Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem7Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusOutMem8Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusOutMem8Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem6Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem6Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem7Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem7Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusInMem8Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DataBusInMem8Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "18",
    Type => "ReadOnly",
    DataBusOutMem0ErrInt => { #Structure Type: RegField;
      Name => "DataBusOutMem0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusOutMem1ErrInt => { #Structure Type: RegField;
      Name => "DataBusOutMem1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusOutMem2ErrInt => { #Structure Type: RegField;
      Name => "DataBusOutMem2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusOutMem3ErrInt => { #Structure Type: RegField;
      Name => "DataBusOutMem3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusOutMem4ErrInt => { #Structure Type: RegField;
      Name => "DataBusOutMem4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusOutMem5ErrInt => { #Structure Type: RegField;
      Name => "DataBusOutMem5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusOutMem6ErrInt => { #Structure Type: RegField;
      Name => "DataBusOutMem6ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusOutMem7ErrInt => { #Structure Type: RegField;
      Name => "DataBusOutMem7ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusOutMem8ErrInt => { #Structure Type: RegField;
      Name => "DataBusOutMem8ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusInMem0ErrInt => { #Structure Type: RegField;
      Name => "DataBusInMem0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusInMem1ErrInt => { #Structure Type: RegField;
      Name => "DataBusInMem1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusInMem2ErrInt => { #Structure Type: RegField;
      Name => "DataBusInMem2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusInMem3ErrInt => { #Structure Type: RegField;
      Name => "DataBusInMem3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "12",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusInMem4ErrInt => { #Structure Type: RegField;
      Name => "DataBusInMem4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "13",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusInMem5ErrInt => { #Structure Type: RegField;
      Name => "DataBusInMem5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "14",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusInMem6ErrInt => { #Structure Type: RegField;
      Name => "DataBusInMem6ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "15",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusInMem7ErrInt => { #Structure Type: RegField;
      Name => "DataBusInMem7ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "16",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusInMem8ErrInt => { #Structure Type: RegField;
      Name => "DataBusInMem8ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "17",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "9",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "7",
      Position => "6:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "8:7",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "6",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "5",
      Position => "4:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrDebug",
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_1bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrDebug",
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_2bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "73", # Excel Formula: =calc_reg_width(E25:E53,F53)
    Type => "Config",
    SACR1P_RME => { #Structure Type: RegField;
      Name => "SACR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACR1P_RM => { #Structure Type: RegField;
      Name => "SACR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "4:1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RME => { #Structure Type: RegField;
      Name => "SACU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SACU2P_RM => { #Structure Type: RegField;
      Name => "SACU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "9:6", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RME => { #Structure Type: RegField;
      Name => "SADC1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADC1P_RM => { #Structure Type: RegField;
      Name => "SADC1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "14:11", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEA => { #Structure Type: RegField;
      Name => "SADR2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMA => { #Structure Type: RegField;
      Name => "SADR2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "19:16", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMEB => { #Structure Type: RegField;
      Name => "SADR2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADR2P_RMB => { #Structure Type: RegField;
      Name => "SADR2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "24:21", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEA => { #Structure Type: RegField;
      Name => "SADS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "25", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMA => { #Structure Type: RegField;
      Name => "SADS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "29:26", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMEB => { #Structure Type: RegField;
      Name => "SADS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "30", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RMB => { #Structure Type: RegField;
      Name => "SADS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "34:31", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RME => { #Structure Type: RegField;
      Name => "SASR1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "35", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASR1P_RM => { #Structure Type: RegField;
      Name => "SASR1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "39:36", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RME => { #Structure Type: RegField;
      Name => "SASS1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS1P_RM => { #Structure Type: RegField;
      Name => "SASS1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "44:41", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEA => { #Structure Type: RegField;
      Name => "SASS2P_RMEA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port A",
      Width => "1",
      Position => "45", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMA => { #Structure Type: RegField;
      Name => "SASS2P_RMA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port A",
      Width => "4",
      Position => "49:46", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMEB => { #Structure Type: RegField;
      Name => "SASS2P_RMEB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable port B",
      Width => "1",
      Position => "50", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASS2P_RMB => { #Structure Type: RegField;
      Name => "SASS2P_RMB",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin port B",
      Width => "4",
      Position => "54:51", # Excel Formula: =calc_position(F45,E46)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RME => { #Structure Type: RegField;
      Name => "SASU2P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "55", # Excel Formula: =calc_position(F46,E47)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SASU2P_RM => { #Structure Type: RegField;
      Name => "SASU2P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "59:56", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RME => { #Structure Type: RegField;
      Name => "SADU1P_RME",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin Enable",
      Width => "1",
      Position => "60", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_RM => { #Structure Type: RegField;
      Name => "SADU1P_RM",
      RegMem => "RegField",
      Description => "MBIST logic - Read Margin",
      Width => "4",
      Position => "64:61", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADS2P_RA => { #Structure Type: RegField;
      Name => "SADS2P_RA",
      RegMem => "RegField",
      Description => "MBIST logic - Read Assist for Dual port",
      Width => "2",
      Position => "66:65", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SADU1P_WA => { #Structure Type: RegField;
      Name => "SADU1P_WA",
      RegMem => "RegField",
      Description => "Write-Assist configuration for the SP SADU compiler",
      Width => "3",
      Position => "69:67", # Excel Formula: =calc_position(F51,E52)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "d5",
    },
    SADU1P_WPULSE => { #Structure Type: RegField;
      Name => "SADU1P_WPULSE",
      RegMem => "RegField",
      Description => "Write-Assist-Pulse configuration for the SP SADU compiler",
      Width => "3",
      Position => "72:70", # Excel Formula: =calc_position(F52,E53)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E55:E55,F55)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F54,E55,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C54,A54,G54)
    Description => "Spare register",
    Width => "128", # Excel Formula: =calc_reg_width(E57:E57,F57)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "Spare register ",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F56,E57,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C56,A56,G56)
    Description => "PMRO controller configuration",
    Width => "39", # Excel Formula: =calc_reg_width(E59:E63,F63)
    Type => "Config",
    PmroExecute => { #Structure Type: RegField;
      Name => "PmroExecute",
      RegMem => "RegField",
      Description => "0->1: execute pmro command.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F58,E59,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroCmd => { #Structure Type: RegField;
      Name => "PmroCmd",
      RegMem => "RegField",
      Description => "Pmro command to execute:
0: reset.
1: write.
2: read.
3: invalid.",
      Width => "2",
      Position => "2:1", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroSbusReset => { #Structure Type: RegField;
      Name => "PmroSbusReset",
      RegMem => "RegField",
      Description => "Reset pmro sbus chain. Need to set to 0 before starting access to pmro registers.",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F60,E61)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroAddr => { #Structure Type: RegField;
      Name => "PmroAddr",
      RegMem => "RegField",
      Description => "PMRO register address:
0 - control register, 8b, def: 0x0.
1 - SVT Configuration Register, 16b, def: 0xFFFF.
2 - LVT Configuration Register, 16b, def: 0xFFFF.
3 - ULVT Configuration Register, 16b, def: 0xFFFF.
4 - Interconnect Configuration Register, 16b, def: 0xFFFF.
5 - Reference Clock Counter Register, 24b, def: 0xFFF000.
6 - Oscillator Counter Register, 24b, def: 0x000000.
7 - SBus ID register, read as 0x0B.
Set to '0' on reset command.",
      Width => "3",
      Position => "6:4", # Excel Formula: =calc_position(F61,E62)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroData => { #Structure Type: RegField;
      Name => "PmroData",
      RegMem => "RegField",
      Description => "PMRO data, set to 0x0 on reset and read command.",
      Width => "32",
      Position => "38:7", # Excel Formula: =calc_position(F62,E63)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C58,A58,G58)
    Description => "PMRO status configuration",
    Width => "34", # Excel Formula: =calc_reg_width(E65:E67,F67)
    Type => "ReadOnly",
    PmroRdata => { #Structure Type: RegField;
      Name => "PmroRdata",
      RegMem => "RegField",
      Description => "Read data from pmro. Valid when PmroFinish=1 and PmroFailed=0.",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F64,E65,TRUE)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFailed => { #Structure Type: RegField;
      Name => "PmroFailed",
      RegMem => "RegField",
      Description => "Pmro command failed. Valid only when PmroFinish=1.",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F65,E66)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFinish => { #Structure Type: RegField;
      Name => "PmroFinish",
      RegMem => "RegField",
      Description => "Pmro command finished.",
      Width => "1",
      Position => "33", # Excel Formula: =calc_position(F66,E67)
      Type => "Event",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C64,A64,G64)
    Description => "Mirror Bus configurations",
    Width => "11", # Excel Formula: =calc_reg_width(E69:E70,F70)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "Enable Mirror Bus",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F68,E69,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "Mirror Bus selector",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F69,E70)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C68,A68,G68)
    Description => "Mirror Bus status result",
    Width => "32", # Excel Formula: =calc_reg_width(E72:E72,F72)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "Mirror Bus status result",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F71,E72,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C71,A71,G71)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E74:E74,F74)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  DataBusOutMem0 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 0; ArrayLocationInName: 14;
    Name => "DataBusOutMem[9]",
    RegMem => "Mem",
    Address => "100000",
    Width => "39", # Excel Formula: =calc_mem_width(E8:E8,M7,F8,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "0",
    MemLogicalWidth => "32",
    DataBusOut0 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 0; ArrayLocationInName: 11;
      Name => "DataBusOut[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F7,E8,TRUE)
    },
  },
  DataBusOutMem1 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 1; ArrayLocationInName: 14;
    Name => "DataBusOutMem[9]",
    RegMem => "Mem",
    Address => "200000",
    Width => "39", # Excel Formula: =calc_mem_width(E8:E8,M7,F8,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "1",
    MemLogicalWidth => "32",
    DataBusOut1 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 1; ArrayLocationInName: 11;
      Name => "DataBusOut[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F7,E8,TRUE)
    },
  },
  DataBusOutMem2 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 2; ArrayLocationInName: 14;
    Name => "DataBusOutMem[9]",
    RegMem => "Mem",
    Address => "300000",
    Width => "39", # Excel Formula: =calc_mem_width(E8:E8,M7,F8,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "2",
    MemLogicalWidth => "32",
    DataBusOut2 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 2; ArrayLocationInName: 11;
      Name => "DataBusOut[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F7,E8,TRUE)
    },
  },
  DataBusOutMem3 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 3; ArrayLocationInName: 14;
    Name => "DataBusOutMem[9]",
    RegMem => "Mem",
    Address => "400000",
    Width => "39", # Excel Formula: =calc_mem_width(E8:E8,M7,F8,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "3",
    MemLogicalWidth => "32",
    DataBusOut3 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 3; ArrayLocationInName: 11;
      Name => "DataBusOut[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F7,E8,TRUE)
    },
  },
  DataBusOutMem4 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 4; ArrayLocationInName: 14;
    Name => "DataBusOutMem[9]",
    RegMem => "Mem",
    Address => "500000",
    Width => "39", # Excel Formula: =calc_mem_width(E8:E8,M7,F8,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "4",
    MemLogicalWidth => "32",
    DataBusOut4 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 4; ArrayLocationInName: 11;
      Name => "DataBusOut[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F7,E8,TRUE)
    },
  },
  DataBusOutMem5 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 5; ArrayLocationInName: 14;
    Name => "DataBusOutMem[9]",
    RegMem => "Mem",
    Address => "600000",
    Width => "39", # Excel Formula: =calc_mem_width(E8:E8,M7,F8,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "5",
    MemLogicalWidth => "32",
    DataBusOut5 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 5; ArrayLocationInName: 11;
      Name => "DataBusOut[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F7,E8,TRUE)
    },
  },
  DataBusOutMem6 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 6; ArrayLocationInName: 14;
    Name => "DataBusOutMem[9]",
    RegMem => "Mem",
    Address => "700000",
    Width => "39", # Excel Formula: =calc_mem_width(E8:E8,M7,F8,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "6",
    MemLogicalWidth => "32",
    DataBusOut6 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 6; ArrayLocationInName: 11;
      Name => "DataBusOut[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F7,E8,TRUE)
    },
  },
  DataBusOutMem7 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 7; ArrayLocationInName: 14;
    Name => "DataBusOutMem[9]",
    RegMem => "Mem",
    Address => "800000",
    Width => "39", # Excel Formula: =calc_mem_width(E8:E8,M7,F8,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "7",
    MemLogicalWidth => "32",
    DataBusOut7 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 7; ArrayLocationInName: 11;
      Name => "DataBusOut[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F7,E8,TRUE)
    },
  },
  DataBusOutMem8 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 8; ArrayLocationInName: 14;
    Name => "DataBusOutMem[9]",
    RegMem => "Mem",
    Address => "900000",
    Width => "39", # Excel Formula: =calc_mem_width(E8:E8,M7,F8,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "8",
    MemLogicalWidth => "32",
    DataBusOut8 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 8; ArrayLocationInName: 11;
      Name => "DataBusOut[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F7,E8,TRUE)
    },
  },
  DataBusInMem0 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 0; ArrayLocationInName: 13;
    Name => "DataBusInMem[9]",
    RegMem => "Mem",
    Address => "A00000", # Excel Formula: =calc_mem_address(C7,A7,G9,L9)
    Width => "39", # Excel Formula: =calc_mem_width(E10:E10,M9,F10,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "0",
    MemLogicalWidth => "32",
    DataBusIn0 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "DataBusIn[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F9,E10,TRUE)
    },
  },
  DataBusInMem1 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 1; ArrayLocationInName: 13;
    Name => "DataBusInMem[9]",
    RegMem => "Mem",
    Address => "B00000",
    Width => "39", # Excel Formula: =calc_mem_width(E10:E10,M9,F10,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "1",
    MemLogicalWidth => "32",
    DataBusIn1 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "DataBusIn[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F9,E10,TRUE)
    },
  },
  DataBusInMem2 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 2; ArrayLocationInName: 13;
    Name => "DataBusInMem[9]",
    RegMem => "Mem",
    Address => "C00000",
    Width => "39", # Excel Formula: =calc_mem_width(E10:E10,M9,F10,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "2",
    MemLogicalWidth => "32",
    DataBusIn2 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 2; ArrayLocationInName: 10;
      Name => "DataBusIn[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F9,E10,TRUE)
    },
  },
  DataBusInMem3 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 3; ArrayLocationInName: 13;
    Name => "DataBusInMem[9]",
    RegMem => "Mem",
    Address => "D00000",
    Width => "39", # Excel Formula: =calc_mem_width(E10:E10,M9,F10,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "3",
    MemLogicalWidth => "32",
    DataBusIn3 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 3; ArrayLocationInName: 10;
      Name => "DataBusIn[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F9,E10,TRUE)
    },
  },
  DataBusInMem4 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 4; ArrayLocationInName: 13;
    Name => "DataBusInMem[9]",
    RegMem => "Mem",
    Address => "E00000",
    Width => "39", # Excel Formula: =calc_mem_width(E10:E10,M9,F10,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "4",
    MemLogicalWidth => "32",
    DataBusIn4 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 4; ArrayLocationInName: 10;
      Name => "DataBusIn[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F9,E10,TRUE)
    },
  },
  DataBusInMem5 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 5; ArrayLocationInName: 13;
    Name => "DataBusInMem[9]",
    RegMem => "Mem",
    Address => "F00000",
    Width => "39", # Excel Formula: =calc_mem_width(E10:E10,M9,F10,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "5",
    MemLogicalWidth => "32",
    DataBusIn5 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 5; ArrayLocationInName: 10;
      Name => "DataBusIn[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F9,E10,TRUE)
    },
  },
  DataBusInMem6 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 6; ArrayLocationInName: 13;
    Name => "DataBusInMem[9]",
    RegMem => "Mem",
    Address => "1000000",
    Width => "39", # Excel Formula: =calc_mem_width(E10:E10,M9,F10,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "6",
    MemLogicalWidth => "32",
    DataBusIn6 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 6; ArrayLocationInName: 10;
      Name => "DataBusIn[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F9,E10,TRUE)
    },
  },
  DataBusInMem7 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 7; ArrayLocationInName: 13;
    Name => "DataBusInMem[9]",
    RegMem => "Mem",
    Address => "1100000",
    Width => "39", # Excel Formula: =calc_mem_width(E10:E10,M9,F10,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "7",
    MemLogicalWidth => "32",
    DataBusIn7 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 7; ArrayLocationInName: 10;
      Name => "DataBusIn[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F9,E10,TRUE)
    },
  },
  DataBusInMem8 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 8; ArrayLocationInName: 13;
    Name => "DataBusInMem[9]",
    RegMem => "Mem",
    Address => "1200000",
    Width => "39", # Excel Formula: =calc_mem_width(E10:E10,M9,F10,-1)
    Type => "Dynamic",
    UsedBy => "CSS",
    MemEntries => "128",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,TwoClocks=Enabled,DisableSameAddressErr=Enabled,EnableNonCpuRdWrSameAddress=Enabled,WriteActivityFactor=5,ReadActivityFactor=5,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "8",
    MemLogicalWidth => "32",
    DataBusIn8 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 8; ArrayLocationInName: 10;
      Name => "DataBusIn[n]",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F9,E10,TRUE)
    },
  },
};
