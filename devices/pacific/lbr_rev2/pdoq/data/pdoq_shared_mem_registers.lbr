$block{PDOQ_SHARED_MEM} = {
  Defines_db => "..\\verilog\\pdoq_defines.v,..\\..\\defines\\pd_fd_defines.v,..\\verilog\\config_pdoq_empd\\pdoq_empd_em_defines.v,..\\..\\defines\\control_common_defines.v",
  ProjectName => "Pacific",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "4",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    PdoqSliceInterruptsSummary => { #Structure Type: RegField;
      Name => "PdoqSliceInterruptsSummary",
      RegMem => "RegField",
      Description => "When this bit is set, PdoqSliceInterrupts has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
    FdoqSliceInterruptsSummary => { #Structure Type: RegField;
      Name => "FdoqSliceInterruptsSummary",
      RegMem => "RegField",
      Description => "When this bit is set, FdoqSliceInterrupts has asserted interrupt",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
    },
    EmpdInterruptsSummary => { #Structure Type: RegField;
      Name => "EmpdInterruptsSummary",
      RegMem => "RegField",
      Description => "When this bit is set, EmpdInterrupts has asserted interrupt",
      Width => "1",
      Position => "3",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks Ecc_1bErrInterrupt",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks Ecc_2bErrInterrupt",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks ParityErrInterrupt",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "29",
    Type => "Config",
    WrReqFifo0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "WrReqFifo0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    WrReqFifo1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "WrReqFifo1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    WrReqFifo2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "WrReqFifo2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    WrReqFifo3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "WrReqFifo3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    WrReqFifo4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "WrReqFifo4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    WrReqFifo5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "WrReqFifo5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdReqFifo0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdReqFifo0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdReqFifo1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdReqFifo1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdReqFifo2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdReqFifo2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdReqFifo3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdReqFifo3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdReqFifo4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdReqFifo4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdReqFifo5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdReqFifo5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdResultFifo0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdResultFifo0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdResultFifo1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdResultFifo1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdResultFifo2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdResultFifo2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdResultFifo3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdResultFifo3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdResultFifo4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdResultFifo4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdResultFifo5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdResultFifo5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PreShrWrFifo0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "PreShrWrFifo0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PreShrWrFifo1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "PreShrWrFifo1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PreShrWrFifo2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "PreShrWrFifo2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PreShrWrFifo3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "PreShrWrFifo3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PreShrWrFifo4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "PreShrWrFifo4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PreShrWrFifo5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "PreShrWrFifo5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramFdllReqFifoEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramFdllReqFifoEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDeleteFdllReqFifoEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDeleteFdllReqFifoEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramFdllReplyFifoEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramFdllReplyFifoEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDeleteFdllReplyFifoEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDeleteFdllReplyFifoEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DpdFifoEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "DpdFifoEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "29",
    Type => "Config",
    WrReqFifo0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "WrReqFifo0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    WrReqFifo1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "WrReqFifo1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    WrReqFifo2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "WrReqFifo2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    WrReqFifo3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "WrReqFifo3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    WrReqFifo4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "WrReqFifo4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    WrReqFifo5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "WrReqFifo5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdReqFifo0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdReqFifo0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdReqFifo1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdReqFifo1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdReqFifo2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdReqFifo2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdReqFifo3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdReqFifo3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdReqFifo4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdReqFifo4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdReqFifo5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdReqFifo5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdResultFifo0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdResultFifo0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdResultFifo1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdResultFifo1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdResultFifo2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdResultFifo2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdResultFifo3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdResultFifo3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdResultFifo4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdResultFifo4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    RdResultFifo5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "RdResultFifo5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PreShrWrFifo0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "PreShrWrFifo0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PreShrWrFifo1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "PreShrWrFifo1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PreShrWrFifo2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "PreShrWrFifo2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PreShrWrFifo3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "PreShrWrFifo3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PreShrWrFifo4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "PreShrWrFifo4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PreShrWrFifo5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "PreShrWrFifo5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramFdllReqFifoEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramFdllReqFifoEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDeleteFdllReqFifoEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDeleteFdllReqFifoEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramFdllReplyFifoEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramFdllReplyFifoEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DramDeleteFdllReplyFifoEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DramDeleteFdllReplyFifoEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DpdFifoEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "DpdFifoEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInitiateRegister",
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "29",
    Type => "Config",
    WrReqFifo0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "WrReqFifo0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    WrReqFifo1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "WrReqFifo1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    WrReqFifo2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "WrReqFifo2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    WrReqFifo3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "WrReqFifo3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    WrReqFifo4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "WrReqFifo4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    WrReqFifo5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "WrReqFifo5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdReqFifo0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RdReqFifo0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdReqFifo1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RdReqFifo1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdReqFifo2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RdReqFifo2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdReqFifo3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RdReqFifo3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdReqFifo4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RdReqFifo4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdReqFifo5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RdReqFifo5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdResultFifo0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RdResultFifo0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdResultFifo1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RdResultFifo1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdResultFifo2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RdResultFifo2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdResultFifo3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RdResultFifo3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdResultFifo4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RdResultFifo4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdResultFifo5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "RdResultFifo5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PreShrWrFifo0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "PreShrWrFifo0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PreShrWrFifo1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "PreShrWrFifo1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PreShrWrFifo2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "PreShrWrFifo2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PreShrWrFifo3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "PreShrWrFifo3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PreShrWrFifo4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "PreShrWrFifo4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PreShrWrFifo5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "PreShrWrFifo5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramFdllReqFifoEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramFdllReqFifoEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDeleteFdllReqFifoEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramDeleteFdllReqFifoEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramFdllReplyFifoEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramFdllReplyFifoEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDeleteFdllReplyFifoEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DramDeleteFdllReplyFifoEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DpdFifoEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "DpdFifoEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInitiateRegister",
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "29",
    Type => "Config",
    WrReqFifo0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "WrReqFifo0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    WrReqFifo1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "WrReqFifo1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    WrReqFifo2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "WrReqFifo2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    WrReqFifo3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "WrReqFifo3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    WrReqFifo4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "WrReqFifo4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    WrReqFifo5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "WrReqFifo5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdReqFifo0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RdReqFifo0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdReqFifo1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RdReqFifo1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdReqFifo2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RdReqFifo2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdReqFifo3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RdReqFifo3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdReqFifo4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RdReqFifo4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdReqFifo5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RdReqFifo5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdResultFifo0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RdResultFifo0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdResultFifo1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RdResultFifo1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdResultFifo2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RdResultFifo2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdResultFifo3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RdResultFifo3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdResultFifo4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RdResultFifo4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    RdResultFifo5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "RdResultFifo5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PreShrWrFifo0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "PreShrWrFifo0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PreShrWrFifo1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "PreShrWrFifo1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PreShrWrFifo2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "PreShrWrFifo2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PreShrWrFifo3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "PreShrWrFifo3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PreShrWrFifo4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "PreShrWrFifo4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PreShrWrFifo5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "PreShrWrFifo5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramFdllReqFifoEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramFdllReqFifoEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDeleteFdllReqFifoEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramDeleteFdllReqFifoEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramFdllReplyFifoEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramFdllReplyFifoEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DramDeleteFdllReplyFifoEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DramDeleteFdllReplyFifoEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DpdFifoEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "DpdFifoEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "29",
    Type => "ReadOnly",
    WrReqFifo0ErrInt => { #Structure Type: RegField;
      Name => "WrReqFifo0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    WrReqFifo1ErrInt => { #Structure Type: RegField;
      Name => "WrReqFifo1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    WrReqFifo2ErrInt => { #Structure Type: RegField;
      Name => "WrReqFifo2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    WrReqFifo3ErrInt => { #Structure Type: RegField;
      Name => "WrReqFifo3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    WrReqFifo4ErrInt => { #Structure Type: RegField;
      Name => "WrReqFifo4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    WrReqFifo5ErrInt => { #Structure Type: RegField;
      Name => "WrReqFifo5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    RdReqFifo0ErrInt => { #Structure Type: RegField;
      Name => "RdReqFifo0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    RdReqFifo1ErrInt => { #Structure Type: RegField;
      Name => "RdReqFifo1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    RdReqFifo2ErrInt => { #Structure Type: RegField;
      Name => "RdReqFifo2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    RdReqFifo3ErrInt => { #Structure Type: RegField;
      Name => "RdReqFifo3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    RdReqFifo4ErrInt => { #Structure Type: RegField;
      Name => "RdReqFifo4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    RdReqFifo5ErrInt => { #Structure Type: RegField;
      Name => "RdReqFifo5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
    RdResultFifo0ErrInt => { #Structure Type: RegField;
      Name => "RdResultFifo0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "12",
      Type => "Status",
      UsedBy => "SER",
    },
    RdResultFifo1ErrInt => { #Structure Type: RegField;
      Name => "RdResultFifo1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "13",
      Type => "Status",
      UsedBy => "SER",
    },
    RdResultFifo2ErrInt => { #Structure Type: RegField;
      Name => "RdResultFifo2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "14",
      Type => "Status",
      UsedBy => "SER",
    },
    RdResultFifo3ErrInt => { #Structure Type: RegField;
      Name => "RdResultFifo3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "15",
      Type => "Status",
      UsedBy => "SER",
    },
    RdResultFifo4ErrInt => { #Structure Type: RegField;
      Name => "RdResultFifo4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "16",
      Type => "Status",
      UsedBy => "SER",
    },
    RdResultFifo5ErrInt => { #Structure Type: RegField;
      Name => "RdResultFifo5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "17",
      Type => "Status",
      UsedBy => "SER",
    },
    PreShrWrFifo0ErrInt => { #Structure Type: RegField;
      Name => "PreShrWrFifo0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "18",
      Type => "Status",
      UsedBy => "SER",
    },
    PreShrWrFifo1ErrInt => { #Structure Type: RegField;
      Name => "PreShrWrFifo1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "19",
      Type => "Status",
      UsedBy => "SER",
    },
    PreShrWrFifo2ErrInt => { #Structure Type: RegField;
      Name => "PreShrWrFifo2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "20",
      Type => "Status",
      UsedBy => "SER",
    },
    PreShrWrFifo3ErrInt => { #Structure Type: RegField;
      Name => "PreShrWrFifo3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "21",
      Type => "Status",
      UsedBy => "SER",
    },
    PreShrWrFifo4ErrInt => { #Structure Type: RegField;
      Name => "PreShrWrFifo4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "22",
      Type => "Status",
      UsedBy => "SER",
    },
    PreShrWrFifo5ErrInt => { #Structure Type: RegField;
      Name => "PreShrWrFifo5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "23",
      Type => "Status",
      UsedBy => "SER",
    },
    DramFdllReqFifoErrInt => { #Structure Type: RegField;
      Name => "DramFdllReqFifoErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "24",
      Type => "Status",
      UsedBy => "SER",
    },
    DramDeleteFdllReqFifoErrInt => { #Structure Type: RegField;
      Name => "DramDeleteFdllReqFifoErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "25",
      Type => "Status",
      UsedBy => "SER",
    },
    DramFdllReplyFifoErrInt => { #Structure Type: RegField;
      Name => "DramFdllReplyFifoErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "26",
      Type => "Status",
      UsedBy => "SER",
    },
    DramDeleteFdllReplyFifoErrInt => { #Structure Type: RegField;
      Name => "DramDeleteFdllReplyFifoErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "27",
      Type => "Status",
      UsedBy => "SER",
    },
    DpdFifoErrInt => { #Structure Type: RegField;
      Name => "DpdFifoErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "28",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "10",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "8",
      Position => "7:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "9:8",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "6",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "5",
      Position => "4:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrDebug",
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_1bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrDebug",
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_2bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  MbistPassStatus => { #Structure Type: Reg; Skip Register;
    Name => "MbistPassStatus",
    RegMem => "Reg",
    Address => "39",
    Description => "MBIST pass status",
    Width => "80",
    Type => "ReadOnly",
    BistDonePassOut => { #Structure Type: RegField;
      Name => "BistDonePassOut",
      RegMem => "RegField",
      Description => "When this bit is set, MBIST passed",
      Width => "80",
      Position => "79:0",
      Type => "Status",
      UsedBy => "MEM",
    },
  },
  MbistFailStatus => { #Structure Type: Reg; Skip Register;
    Name => "MbistFailStatus",
    RegMem => "Reg",
    Address => "3A",
    Description => "MBIST fail status",
    Width => "80",
    Type => "ReadOnly",
    BistDoneFailOut => { #Structure Type: RegField;
      Name => "BistDoneFailOut",
      RegMem => "RegField",
      Description => "When this bit is set, MBIST failed",
      Width => "80",
      Position => "79:0",
      Type => "Status",
      UsedBy => "MEM",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
      DefaultValue => "b0",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "3", # Excel Formula: =calc_reg_width(E25:E27,F27)
    Type => "Config",
    CoreBistRprMode => { #Structure Type: RegField;
      Name => "CoreBistRprMode",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistRun => { #Structure Type: RegField;
      Name => "CoreBistRun",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistPtrnFill => { #Structure Type: RegField;
      Name => "CoreBistPtrnFill",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E29:E29,F29)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C28,A28,G28)
    Description => "Power Down Configuration for the block",
    Width => "128", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C30,A30,G30)
    Width => "39", # Excel Formula: =calc_reg_width(E33:E37,F37)
    Type => "Config",
    PmroExecute => { #Structure Type: RegField;
      Name => "PmroExecute",
      RegMem => "RegField",
      Description => "0->1: execute pmro command.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroCmd => { #Structure Type: RegField;
      Name => "PmroCmd",
      RegMem => "RegField",
      Description => "Pmro command to execute:
0: reset.
1: write.
2: read.
3: invalid.",
      Width => "2",
      Position => "2:1", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroSbusReset => { #Structure Type: RegField;
      Name => "PmroSbusReset",
      RegMem => "RegField",
      Description => "Reset pmro sbus chain. Need to set to 0 before starting access to pmro registers.",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroAddr => { #Structure Type: RegField;
      Name => "PmroAddr",
      RegMem => "RegField",
      Description => "PMRO register address:
0 - control register, 8b, def: 0x0.
1 - SVT Configuration Register, 16b, def: 0xFFFF.
2 - LVT Configuration Register, 16b, def: 0xFFFF.
3 - ULVT Configuration Register, 16b, def: 0xFFFF.
4 - Interconnect Configuration Register, 16b, def: 0xFFFF.
5 - Reference Clock Counter Register, 24b, def: 0xFFF000.
6 - Oscillator Counter Register, 24b, def: 0x000000.
7 - SBus ID register, read as 0x0B.
Set to '0' on reset command.",
      Width => "3",
      Position => "6:4", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroData => { #Structure Type: RegField;
      Name => "PmroData",
      RegMem => "RegField",
      Description => "PMRO data, set to 0x0 on reset and read command.",
      Width => "32",
      Position => "38:7", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C32,A32,G32)
    Width => "34", # Excel Formula: =calc_reg_width(E39:E41,F41)
    Type => "ReadOnly",
    PmroRdata => { #Structure Type: RegField;
      Name => "PmroRdata",
      RegMem => "RegField",
      Description => "Read data from pmro. Valid when PmroFinish=1 and PmroFailed=0.",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFailed => { #Structure Type: RegField;
      Name => "PmroFailed",
      RegMem => "RegField",
      Description => "Pmro command failed. Valid only when PmroFinish=1.",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F39,E40)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFinish => { #Structure Type: RegField;
      Name => "PmroFinish",
      RegMem => "RegField",
      Description => "Pmro command finished.",
      Width => "1",
      Position => "33", # Excel Formula: =calc_position(F40,E41)
      Type => "Event",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C38,A38,G38)
    Description => "aaa",
    Width => "11", # Excel Formula: =calc_reg_width(E43:E44,F44)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "aaa",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F42,E43,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "aaa",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C42,A42,G42)
    Description => "aaa",
    Width => "32", # Excel Formula: =calc_reg_width(E46:E46,F46)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "aaa",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F45,E46,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C45,A45,G45)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E48:E48,F48)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F47,E48,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  PdoqSliceInterrupts => { #Structure Type: Reg;
    Name => "PdoqSliceInterrupts",
    RegMem => "Reg",
    Address => "100",
    Description => "Per PDOQ slice interrupt",
    Width => "6", # Excel Formula: =calc_reg_width(E8:E13,F13)
    Type => "Interrupt",
    PdoqSliceInterrupt0 => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt0",
      RegMem => "RegField",
      Description => "PDOQ slice 0 interrupt summary",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Interrupt",
      UsedBy => "SLICE",
    },
    PdoqSliceInterrupt1 => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt1",
      RegMem => "RegField",
      Description => "PDOQ slice 1 interrupt summary",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F8,E9)
      Type => "Interrupt",
      UsedBy => "SLICE",
    },
    PdoqSliceInterrupt2 => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt2",
      RegMem => "RegField",
      Description => "PDOQ slice 2 interrupt summary",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F9,E10)
      Type => "Interrupt",
      UsedBy => "SLICE",
    },
    PdoqSliceInterrupt3 => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt3",
      RegMem => "RegField",
      Description => "PDOQ slice 3 interrupt summary",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F10,E11)
      Type => "Interrupt",
      UsedBy => "SLICE",
    },
    PdoqSliceInterrupt4 => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt4",
      RegMem => "RegField",
      Description => "PDOQ slice 4 interrupt summary",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F11,E12)
      Type => "Interrupt",
      UsedBy => "SLICE",
    },
    PdoqSliceInterrupt5 => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt5",
      RegMem => "RegField",
      Description => "PDOQ slice 5 interrupt summary",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F12,E13)
      Type => "Interrupt",
      UsedBy => "SLICE",
    },
  },
  PdoqSliceInterruptsMask => { #Structure Type: Reg; Skip Register;
    Name => "PdoqSliceInterruptsMask",
    RegMem => "Reg",
    Address => "101",
    Description => "This register masks PdoqSliceInterrupts interrupt register",
    Width => "6", # Excel Formula: =calc_reg_width(E8:E13,F13)
    Type => "InterruptMask",
    PdoqSliceInterrupt0Mask => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt0Mask",
      RegMem => "RegField",
      Description => "This field masks PdoqSliceInterrupt0 interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    PdoqSliceInterrupt1Mask => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt1Mask",
      RegMem => "RegField",
      Description => "This field masks PdoqSliceInterrupt1 interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F8,E9)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    PdoqSliceInterrupt2Mask => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt2Mask",
      RegMem => "RegField",
      Description => "This field masks PdoqSliceInterrupt2 interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F9,E10)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    PdoqSliceInterrupt3Mask => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt3Mask",
      RegMem => "RegField",
      Description => "This field masks PdoqSliceInterrupt3 interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F10,E11)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    PdoqSliceInterrupt4Mask => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt4Mask",
      RegMem => "RegField",
      Description => "This field masks PdoqSliceInterrupt4 interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F11,E12)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    PdoqSliceInterrupt5Mask => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt5Mask",
      RegMem => "RegField",
      Description => "This field masks PdoqSliceInterrupt5 interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F12,E13)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  PdoqSliceInterruptsTest => { #Structure Type: Reg; Skip Register;
    Name => "PdoqSliceInterruptsTest",
    RegMem => "Reg",
    Address => "102",
    Description => "This register tests PdoqSliceInterrupts interrupt register",
    Width => "6", # Excel Formula: =calc_reg_width(E8:E13,F13)
    Type => "InterruptTest",
    PdoqSliceInterrupt0Test => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt0Test",
      RegMem => "RegField",
      Description => "This field tests PdoqSliceInterrupt0 interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    PdoqSliceInterrupt1Test => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt1Test",
      RegMem => "RegField",
      Description => "This field tests PdoqSliceInterrupt1 interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F8,E9)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    PdoqSliceInterrupt2Test => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt2Test",
      RegMem => "RegField",
      Description => "This field tests PdoqSliceInterrupt2 interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F9,E10)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    PdoqSliceInterrupt3Test => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt3Test",
      RegMem => "RegField",
      Description => "This field tests PdoqSliceInterrupt3 interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F10,E11)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    PdoqSliceInterrupt4Test => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt4Test",
      RegMem => "RegField",
      Description => "This field tests PdoqSliceInterrupt4 interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F11,E12)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    PdoqSliceInterrupt5Test => { #Structure Type: RegField;
      Name => "PdoqSliceInterrupt5Test",
      RegMem => "RegField",
      Description => "This field tests PdoqSliceInterrupt5 interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F12,E13)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  FdoqSliceInterrupts => { #Structure Type: Reg;
    Name => "FdoqSliceInterrupts",
    RegMem => "Reg",
    Address => "103", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Per FDOQ slice interrupt",
    Width => "6", # Excel Formula: =calc_reg_width(E15:E20,F20)
    Type => "Interrupt",
    FdoqSliceInterrupt0 => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt0",
      RegMem => "RegField",
      Description => "FDOQ slice 0 interrupt summary",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "Interrupt",
      UsedBy => "SLICE",
    },
    FdoqSliceInterrupt1 => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt1",
      RegMem => "RegField",
      Description => "FDOQ slice 1 interrupt summary",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F15,E16)
      Type => "Interrupt",
      UsedBy => "SLICE",
    },
    FdoqSliceInterrupt2 => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt2",
      RegMem => "RegField",
      Description => "FDOQ slice 2 interrupt summary",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F16,E17)
      Type => "Interrupt",
      UsedBy => "SLICE",
    },
    FdoqSliceInterrupt3 => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt3",
      RegMem => "RegField",
      Description => "FDOQ slice 3 interrupt summary",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F17,E18)
      Type => "Interrupt",
      UsedBy => "SLICE",
    },
    FdoqSliceInterrupt4 => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt4",
      RegMem => "RegField",
      Description => "FDOQ slice 4 interrupt summary",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F18,E19)
      Type => "Interrupt",
      UsedBy => "SLICE",
    },
    FdoqSliceInterrupt5 => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt5",
      RegMem => "RegField",
      Description => "FDOQ slice 5 interrupt summary",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F19,E20)
      Type => "Interrupt",
      UsedBy => "SLICE",
    },
  },
  FdoqSliceInterruptsMask => { #Structure Type: Reg; Skip Register;
    Name => "FdoqSliceInterruptsMask",
    RegMem => "Reg",
    Address => "104",
    Description => "This register masks FdoqSliceInterrupts interrupt register",
    Width => "6", # Excel Formula: =calc_reg_width(E15:E20,F20)
    Type => "InterruptMask",
    FdoqSliceInterrupt0Mask => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt0Mask",
      RegMem => "RegField",
      Description => "This field masks FdoqSliceInterrupt0 interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    FdoqSliceInterrupt1Mask => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt1Mask",
      RegMem => "RegField",
      Description => "This field masks FdoqSliceInterrupt1 interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F15,E16)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    FdoqSliceInterrupt2Mask => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt2Mask",
      RegMem => "RegField",
      Description => "This field masks FdoqSliceInterrupt2 interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F16,E17)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    FdoqSliceInterrupt3Mask => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt3Mask",
      RegMem => "RegField",
      Description => "This field masks FdoqSliceInterrupt3 interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F17,E18)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    FdoqSliceInterrupt4Mask => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt4Mask",
      RegMem => "RegField",
      Description => "This field masks FdoqSliceInterrupt4 interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F18,E19)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    FdoqSliceInterrupt5Mask => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt5Mask",
      RegMem => "RegField",
      Description => "This field masks FdoqSliceInterrupt5 interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F19,E20)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  FdoqSliceInterruptsTest => { #Structure Type: Reg; Skip Register;
    Name => "FdoqSliceInterruptsTest",
    RegMem => "Reg",
    Address => "105",
    Description => "This register tests FdoqSliceInterrupts interrupt register",
    Width => "6", # Excel Formula: =calc_reg_width(E15:E20,F20)
    Type => "InterruptTest",
    FdoqSliceInterrupt0Test => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt0Test",
      RegMem => "RegField",
      Description => "This field tests FdoqSliceInterrupt0 interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    FdoqSliceInterrupt1Test => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt1Test",
      RegMem => "RegField",
      Description => "This field tests FdoqSliceInterrupt1 interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F15,E16)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    FdoqSliceInterrupt2Test => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt2Test",
      RegMem => "RegField",
      Description => "This field tests FdoqSliceInterrupt2 interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F16,E17)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    FdoqSliceInterrupt3Test => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt3Test",
      RegMem => "RegField",
      Description => "This field tests FdoqSliceInterrupt3 interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F17,E18)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    FdoqSliceInterrupt4Test => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt4Test",
      RegMem => "RegField",
      Description => "This field tests FdoqSliceInterrupt4 interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F18,E19)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    FdoqSliceInterrupt5Test => { #Structure Type: RegField;
      Name => "FdoqSliceInterrupt5Test",
      RegMem => "RegField",
      Description => "This field tests FdoqSliceInterrupt5 interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F19,E20)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  EmpdInterrupts => { #Structure Type: Reg;
    Name => "EmpdInterrupts",
    RegMem => "Reg",
    Address => "106", # Excel Formula: =calc_reg_address(C14,A14,G14)
    Description => "Per Exact match bank interrupt",
    Width => "16", # Excel Formula: =calc_reg_width(E22:E37,F37)
    Type => "Interrupt",
    EmpdInterrupt0 => { #Structure Type: RegField;
      Name => "EmpdInterrupt0",
      RegMem => "RegField",
      Description => "EMPD 0 interrupt summary",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F21,E22,TRUE)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt1 => { #Structure Type: RegField;
      Name => "EmpdInterrupt1",
      RegMem => "RegField",
      Description => "EMPD 1 interrupt summary",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F22,E23)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt2 => { #Structure Type: RegField;
      Name => "EmpdInterrupt2",
      RegMem => "RegField",
      Description => "EMPD 2 interrupt summary",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F23,E24)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt3 => { #Structure Type: RegField;
      Name => "EmpdInterrupt3",
      RegMem => "RegField",
      Description => "EMPD 3 interrupt summary",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F24,E25)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt4 => { #Structure Type: RegField;
      Name => "EmpdInterrupt4",
      RegMem => "RegField",
      Description => "EMPD 4 interrupt summary",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F25,E26)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt5 => { #Structure Type: RegField;
      Name => "EmpdInterrupt5",
      RegMem => "RegField",
      Description => "EMPD 5 interrupt summary",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F26,E27)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt6 => { #Structure Type: RegField;
      Name => "EmpdInterrupt6",
      RegMem => "RegField",
      Description => "EMPD 6 interrupt summary",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F27,E28)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt7 => { #Structure Type: RegField;
      Name => "EmpdInterrupt7",
      RegMem => "RegField",
      Description => "EMPD 7 interrupt summary",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F28,E29)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt8 => { #Structure Type: RegField;
      Name => "EmpdInterrupt8",
      RegMem => "RegField",
      Description => "EMPD 8 interrupt summary",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F29,E30)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt9 => { #Structure Type: RegField;
      Name => "EmpdInterrupt9",
      RegMem => "RegField",
      Description => "EMPD 9 interrupt summary",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F30,E31)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt10 => { #Structure Type: RegField;
      Name => "EmpdInterrupt10",
      RegMem => "RegField",
      Description => "EMPD 10 interrupt summary",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F31,E32)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt11 => { #Structure Type: RegField;
      Name => "EmpdInterrupt11",
      RegMem => "RegField",
      Description => "EMPD 11 interrupt summary",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F32,E33)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt12 => { #Structure Type: RegField;
      Name => "EmpdInterrupt12",
      RegMem => "RegField",
      Description => "EMPD 12 interrupt summary",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F33,E34)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt13 => { #Structure Type: RegField;
      Name => "EmpdInterrupt13",
      RegMem => "RegField",
      Description => "EMPD 13 interrupt summary",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F34,E35)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt14 => { #Structure Type: RegField;
      Name => "EmpdInterrupt14",
      RegMem => "RegField",
      Description => "EMPD 14 interrupt summary",
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F35,E36)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
    EmpdInterrupt15 => { #Structure Type: RegField;
      Name => "EmpdInterrupt15",
      RegMem => "RegField",
      Description => "EMPD 15 interrupt summary",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F36,E37)
      Type => "Interrupt",
      UsedBy => "EMPD",
    },
  },
  EmpdInterruptsMask => { #Structure Type: Reg; Skip Register;
    Name => "EmpdInterruptsMask",
    RegMem => "Reg",
    Address => "107",
    Description => "This register masks EmpdInterrupts interrupt register",
    Width => "16", # Excel Formula: =calc_reg_width(E22:E37,F37)
    Type => "InterruptMask",
    EmpdInterrupt0Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt0Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt0 interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F21,E22,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt1Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt1Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt1 interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F22,E23)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt2Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt2Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt2 interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F23,E24)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt3Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt3Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt3 interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F24,E25)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt4Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt4Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt4 interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F25,E26)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt5Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt5Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt5 interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F26,E27)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt6Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt6Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt6 interrupt",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F27,E28)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt7Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt7Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt7 interrupt",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F28,E29)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt8Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt8Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt8 interrupt",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F29,E30)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt9Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt9Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt9 interrupt",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F30,E31)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt10Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt10Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt10 interrupt",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F31,E32)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt11Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt11Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt11 interrupt",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F32,E33)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt12Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt12Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt12 interrupt",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F33,E34)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt13Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt13Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt13 interrupt",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F34,E35)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt14Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt14Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt14 interrupt",
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F35,E36)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    EmpdInterrupt15Mask => { #Structure Type: RegField;
      Name => "EmpdInterrupt15Mask",
      RegMem => "RegField",
      Description => "This field masks EmpdInterrupt15 interrupt",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F36,E37)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  EmpdInterruptsTest => { #Structure Type: Reg; Skip Register;
    Name => "EmpdInterruptsTest",
    RegMem => "Reg",
    Address => "108",
    Description => "This register tests EmpdInterrupts interrupt register",
    Width => "16", # Excel Formula: =calc_reg_width(E22:E37,F37)
    Type => "InterruptTest",
    EmpdInterrupt0Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt0Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt0 interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F21,E22,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt1Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt1Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt1 interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F22,E23)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt2Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt2Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt2 interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F23,E24)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt3Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt3Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt3 interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F24,E25)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt4Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt4Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt4 interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F25,E26)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt5Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt5Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt5 interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F26,E27)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt6Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt6Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt6 interrupt",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F27,E28)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt7Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt7Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt7 interrupt",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F28,E29)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt8Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt8Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt8 interrupt",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F29,E30)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt9Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt9Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt9 interrupt",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F30,E31)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt10Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt10Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt10 interrupt",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F31,E32)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt11Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt11Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt11 interrupt",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F32,E33)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt12Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt12Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt12 interrupt",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F33,E34)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt13Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt13Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt13 interrupt",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F34,E35)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt14Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt14Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt14 interrupt",
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F35,E36)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    EmpdInterrupt15Test => { #Structure Type: RegField;
      Name => "EmpdInterrupt15Test",
      RegMem => "RegField",
      Description => "This field tests EmpdInterrupt15 interrupt",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F36,E37)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  InternalFifoAlmFull0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 20;
    Name => "InternalFifoAlmFull[6]",
    RegMem => "Reg",
    Address => "109", # Excel Formula: =calc_reg_address(C21,A21,G21)
    Description => "Internal fifos size settings.
This register was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
    Width => "21", # Excel Formula: =calc_reg_width(E39:E42,F42)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    RdReqAlmFullCfg0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 16;
      Name => "RdReqAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    WrReqAlmFullCfg0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 16;
      Name => "WrReqAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    ReorderAlmFullCfg0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "ReorderAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "8",
      Position => "15:8", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    RqmFifoAlmFull0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "RqmFifoAlmFull[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "5",
      Position => "20:16", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d12",
    },
  },
  InternalFifoAlmFull1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 20;
    Name => "InternalFifoAlmFull[6]",
    RegMem => "Reg",
    Address => "10A",
    Description => "Internal fifos size settings.
This register was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
    Width => "21", # Excel Formula: =calc_reg_width(E39:E42,F42)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    RdReqAlmFullCfg1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 16;
      Name => "RdReqAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    WrReqAlmFullCfg1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 16;
      Name => "WrReqAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    ReorderAlmFullCfg1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "ReorderAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "8",
      Position => "15:8", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    RqmFifoAlmFull1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "RqmFifoAlmFull[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "5",
      Position => "20:16", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d12",
    },
  },
  InternalFifoAlmFull2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 20;
    Name => "InternalFifoAlmFull[6]",
    RegMem => "Reg",
    Address => "10B",
    Description => "Internal fifos size settings.
This register was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
    Width => "21", # Excel Formula: =calc_reg_width(E39:E42,F42)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    RdReqAlmFullCfg2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 16;
      Name => "RdReqAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    WrReqAlmFullCfg2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 16;
      Name => "WrReqAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    ReorderAlmFullCfg2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 18;
      Name => "ReorderAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "8",
      Position => "15:8", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    RqmFifoAlmFull2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 15;
      Name => "RqmFifoAlmFull[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "5",
      Position => "20:16", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d12",
    },
  },
  InternalFifoAlmFull3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 20;
    Name => "InternalFifoAlmFull[6]",
    RegMem => "Reg",
    Address => "10C",
    Description => "Internal fifos size settings.
This register was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
    Width => "21", # Excel Formula: =calc_reg_width(E39:E42,F42)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    RdReqAlmFullCfg3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 16;
      Name => "RdReqAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    WrReqAlmFullCfg3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 16;
      Name => "WrReqAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    ReorderAlmFullCfg3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 18;
      Name => "ReorderAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "8",
      Position => "15:8", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    RqmFifoAlmFull3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 15;
      Name => "RqmFifoAlmFull[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "5",
      Position => "20:16", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d12",
    },
  },
  InternalFifoAlmFull4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 20;
    Name => "InternalFifoAlmFull[6]",
    RegMem => "Reg",
    Address => "10D",
    Description => "Internal fifos size settings.
This register was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
    Width => "21", # Excel Formula: =calc_reg_width(E39:E42,F42)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    RdReqAlmFullCfg4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 16;
      Name => "RdReqAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    WrReqAlmFullCfg4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 16;
      Name => "WrReqAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    ReorderAlmFullCfg4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 18;
      Name => "ReorderAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "8",
      Position => "15:8", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    RqmFifoAlmFull4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 15;
      Name => "RqmFifoAlmFull[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "5",
      Position => "20:16", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d12",
    },
  },
  InternalFifoAlmFull5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 20;
    Name => "InternalFifoAlmFull[6]",
    RegMem => "Reg",
    Address => "10E",
    Description => "Internal fifos size settings.
This register was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
    Width => "21", # Excel Formula: =calc_reg_width(E39:E42,F42)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    RdReqAlmFullCfg5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 16;
      Name => "RdReqAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    WrReqAlmFullCfg5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 16;
      Name => "WrReqAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    ReorderAlmFullCfg5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 18;
      Name => "ReorderAlmFullCfg[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "8",
      Position => "15:8", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d1",
    },
    RqmFifoAlmFull5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 15;
      Name => "RqmFifoAlmFull[n]",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "5",
      Position => "20:16", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d12",
    },
  },
  DramPackingConfiguration => { #Structure Type: Reg;
    Name => "DramPackingConfiguration",
    RegMem => "Reg",
    Address => "10F", # Excel Formula: =calc_reg_address(C38,A38,G38)
    Description => "DRAM slice packing configurations - defines DRAM header size per packet for internal data",
    Width => "6", # Excel Formula: =calc_reg_width(E44:E44,F44)
    Type => "Config",
    DramHeaderSize => { #Structure Type: RegField;
      Name => "DramHeaderSize",
      RegMem => "RegField",
      Description => "This constant value is added to each PD size in pack, to get exact DRAM packet size, should not be changed by the user, unless instructed by the designer",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F43,E44,TRUE)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d16",
    },
  },
  DramAlmostFullConfiguration => { #Structure Type: Reg;
    Name => "DramAlmostFullConfiguration",
    RegMem => "Reg",
    Address => "110", # Excel Formula: =calc_reg_address(C43,A43,G43)
    Description => "Internal fifos size settings.
This register was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
    Width => "4", # Excel Formula: =calc_reg_width(E46:E46,F46)
    Type => "Config",
    DramFdllReqAlmFull => { #Structure Type: RegField;
      Name => "DramFdllReqAlmFull",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F45,E46,TRUE)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d1",
    },
  },
  SmsReadRateLimiter => { #Structure Type: Reg;
    Name => "SmsReadRateLimiter",
    RegMem => "Reg",
    Address => "111", # Excel Formula: =calc_reg_address(C45,A45,G45)
    Description => "Limits rate of FD read transactions towards SMS",
    Width => "17", # Excel Formula: =calc_reg_width(E48:E50,F50)
    Type => "Config",
    SmsReadRate => { #Structure Type: RegField;
      Name => "SmsReadRate",
      RegMem => "RegField",
      Description => "The time interval between every two allocations of tokens in units of 1/256 clock cycles. The minimum value is 256.
If P% are required, then use 100*256/P.
For example, to set a rate of 97% with SmsReadRateIncValue=1, set this field to 264",
      Width => "11",
      Position => "10:0", # Excel Formula: =calc_position(F47,E48,TRUE)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d256",
    },
    SmsReadRateIncValue => { #Structure Type: RegField;
      Name => "SmsReadRateIncValue",
      RegMem => "RegField",
      Description => "Number of tokens to create for each limiter event",
      Width => "3",
      Position => "13:11", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d2",
    },
    SmsReadRateMaxBucket => { #Structure Type: RegField;
      Name => "SmsReadRateMaxBucket",
      RegMem => "RegField",
      Description => "Max value of the token bucket",
      Width => "3",
      Position => "16:14", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d4",
    },
  },
  SliceModeConfiguration0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 23;
    Name => "SliceModeConfiguration[6]",
    RegMem => "Reg",
    Address => "112", # Excel Formula: =calc_reg_address(C47,A47,G47)
    Description => "Slice mode configuration",
    Width => "4", # Excel Formula: =calc_reg_width(E52:E52,F52)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    SliceMode0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "SliceMode[n]",
      RegMem => "RegField",
      Description => "Slice mode",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F51,E52,TRUE)
      Type => "Config",
      UsedBy => "CORE",
      DefaultValue => "d8",
    },
  },
  SliceModeConfiguration1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 23;
    Name => "SliceModeConfiguration[6]",
    RegMem => "Reg",
    Address => "113",
    Description => "Slice mode configuration",
    Width => "4", # Excel Formula: =calc_reg_width(E52:E52,F52)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    SliceMode1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "SliceMode[n]",
      RegMem => "RegField",
      Description => "Slice mode",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F51,E52,TRUE)
      Type => "Config",
      UsedBy => "CORE",
      DefaultValue => "d8",
    },
  },
  SliceModeConfiguration2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 23;
    Name => "SliceModeConfiguration[6]",
    RegMem => "Reg",
    Address => "114",
    Description => "Slice mode configuration",
    Width => "4", # Excel Formula: =calc_reg_width(E52:E52,F52)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    SliceMode2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 10;
      Name => "SliceMode[n]",
      RegMem => "RegField",
      Description => "Slice mode",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F51,E52,TRUE)
      Type => "Config",
      UsedBy => "CORE",
      DefaultValue => "d8",
    },
  },
  SliceModeConfiguration3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 23;
    Name => "SliceModeConfiguration[6]",
    RegMem => "Reg",
    Address => "115",
    Description => "Slice mode configuration",
    Width => "4", # Excel Formula: =calc_reg_width(E52:E52,F52)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    SliceMode3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 10;
      Name => "SliceMode[n]",
      RegMem => "RegField",
      Description => "Slice mode",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F51,E52,TRUE)
      Type => "Config",
      UsedBy => "CORE",
      DefaultValue => "d8",
    },
  },
  SliceModeConfiguration4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 23;
    Name => "SliceModeConfiguration[6]",
    RegMem => "Reg",
    Address => "116",
    Description => "Slice mode configuration",
    Width => "4", # Excel Formula: =calc_reg_width(E52:E52,F52)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    SliceMode4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 10;
      Name => "SliceMode[n]",
      RegMem => "RegField",
      Description => "Slice mode",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F51,E52,TRUE)
      Type => "Config",
      UsedBy => "CORE",
      DefaultValue => "d8",
    },
  },
  SliceModeConfiguration5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 23;
    Name => "SliceModeConfiguration[6]",
    RegMem => "Reg",
    Address => "117",
    Description => "Slice mode configuration",
    Width => "4", # Excel Formula: =calc_reg_width(E52:E52,F52)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    SliceMode5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 10;
      Name => "SliceMode[n]",
      RegMem => "RegField",
      Description => "Slice mode",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F51,E52,TRUE)
      Type => "Config",
      UsedBy => "CORE",
      DefaultValue => "d8",
    },
  },
  PdoqLastPdSelCfg => { #Structure Type: Reg;
    Name => "PdoqLastPdSelCfg",
    RegMem => "Reg",
    Address => "118", # Excel Formula: =calc_reg_address(C51,A51,G51)
    Description => "Last packet descriptors bit select configuration at PDOQ in stage",
    Width => "5", # Excel Formula: =calc_reg_width(E54:E54,F54)
    Type => "Config",
    PdoqLastPdSel => { #Structure Type: RegField;
      Name => "PdoqLastPdSel",
      RegMem => "RegField",
      Description => "Selects 32b data of the packet descriptor in some slice, max value is 30. Each 5 data chunks are for each slice.",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F53,E54,TRUE)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "b0",
    },
  },
  PdoqLastPdData => { #Structure Type: Reg;
    Name => "PdoqLastPdData",
    RegMem => "Reg",
    Address => "119", # Excel Formula: =calc_reg_address(C53,A53,G53)
    Description => "Last packet descriptors selected data",
    Width => "32", # Excel Formula: =calc_reg_width(E56:E56,F56)
    Type => "External",
    UsedBy => "shr",
    AdditionalInfo => "ExternalSampleDisable",
    PdoqLastPd => { #Structure Type: RegField;
      Name => "PdoqLastPd",
      RegMem => "RegField",
      Description => "Last packet descriptors selected data",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F55,E56,TRUE)
      Type => "External",
    },
  },
  InternalDebugCfg => { #Structure Type: Reg;
    Name => "InternalDebugCfg",
    RegMem => "Reg",
    Address => "11A", # Excel Formula: =calc_reg_address(C55,A55,G55)
    Description => "Internal fifos size settings.
This register was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
    Width => "17", # Excel Formula: =calc_reg_width(E58:E60,F60)
    Type => "Config",
    FdllCbtAlmFullCfg => { #Structure Type: RegField;
      Name => "FdllCbtAlmFullCfg",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d1",
    },
    SmsCbtAlmFullCfg => { #Structure Type: RegField;
      Name => "SmsCbtAlmFullCfg",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "6",
      Position => "10:5", # Excel Formula: =calc_position(F58,E59)
      Type => "Config",
      UsedBy => "DRAM",
      DefaultValue => "d0",
    },
    EmpdReduceRateCfg => { #Structure Type: RegField;
      Name => "EmpdReduceRateCfg",
      RegMem => "RegField",
      Description => "Internal fifo size configuration.",
      Width => "6",
      Position => "16:11", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "shr",
      DefaultValue => "d0",
    },
  },
  CbtNotReadyCounter => { #Structure Type: Reg;
    Name => "CbtNotReadyCounter",
    RegMem => "Reg",
    Address => "11B", # Excel Formula: =calc_reg_address(C57,A57,G57)
    Description => "Counters of back pressure clocks of the outgoing interfaces of DRAM slice",
    Width => "96", # Excel Formula: =calc_reg_width(E62:E64,F64)
    Type => "ReadOnly",
    FdllCbtNotReadyCnt => { #Structure Type: RegField;
      Name => "FdllCbtNotReadyCnt",
      RegMem => "RegField",
      Description => "Counts back pressure clocks to FDLL interface",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F61,E62,TRUE)
      Type => "Counter",
      UsedBy => "DRAM",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Sms0CbtNotReadyCnt => { #Structure Type: RegField;
      Name => "Sms0CbtNotReadyCnt",
      RegMem => "RegField",
      Description => "Counts back pressure clocks to SMS 0 interface",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F62,E63)
      Type => "Counter",
      UsedBy => "DRAM",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    Sms1CbtNotReadyCnt => { #Structure Type: RegField;
      Name => "Sms1CbtNotReadyCnt",
      RegMem => "RegField",
      Description => "Countsback pressure clocks to SMS 1 interface",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F63,E64)
      Type => "Counter",
      UsedBy => "DRAM",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  DebugPdFieldCfg => { #Structure Type: Reg;
    Name => "DebugPdFieldCfg",
    RegMem => "Reg",
    Address => "11C", # Excel Formula: =calc_reg_address(C61,A61,G61)
    Description => "PD debugger - programmable counter based on any PD field. Programmed each time on some configured slice. For example, the user can count number of PDs at slice 3 with OutColor = 2",
    Width => "295", # Excel Formula: =calc_reg_width(E66:E68,F68)
    Type => "Config",
    DebugPdFieldValue => { #Structure Type: RegField;
      Name => "DebugPdFieldValue",
      RegMem => "RegField",
      Description => "Match value of PD field to account",
      Width => "146", # Excel Formula: =calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")
      Position => "145:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Type => "Config",
      UsedBy => "DBG",
      DefaultValue => "b0",
    },
    DebugPdFieldMask => { #Structure Type: RegField;
      Name => "DebugPdFieldMask",
      RegMem => "RegField",
      Description => "Mask of PD field to account",
      Width => "146", # Excel Formula: =calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")
      Position => "291:146", # Excel Formula: =calc_position(F66,E67)
      Type => "Config",
      UsedBy => "DBG",
      DefaultValue => "b0",
    },
    DebugPdFieldSlice => { #Structure Type: RegField;
      Name => "DebugPdFieldSlice",
      RegMem => "RegField",
      Description => "Slice number for debug",
      Width => "3",
      Position => "294:292", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "DBG",
      DefaultValue => "b0",
    },
  },
  DebugPdFieldStatus => { #Structure Type: Reg;
    Name => "DebugPdFieldStatus",
    RegMem => "Reg",
    Address => "11D", # Excel Formula: =calc_reg_address(C65,A65,G65)
    Description => "PD debug counters",
    Width => "96", # Excel Formula: =calc_reg_width(E70:E72,F72)
    Type => "ReadOnly",
    DebugPdFieldCnt => { #Structure Type: RegField;
      Name => "DebugPdFieldCnt",
      RegMem => "RegField",
      Description => "Match filter counter",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F69,E70,TRUE)
      Type => "Counter",
      UsedBy => "DBG",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    DebugPdTotalPdCnt => { #Structure Type: RegField;
      Name => "DebugPdTotalPdCnt",
      RegMem => "RegField",
      Description => "Total PDs counter",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F70,E71)
      Type => "Counter",
      UsedBy => "DBG",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    DebugPdTotalByteCnt => { #Structure Type: RegField;
      Name => "DebugPdTotalByteCnt",
      RegMem => "RegField",
      Description => "Total PD byte size counter",
      Width => "32",
      Position => "95:64", # Excel Formula: =calc_position(F71,E72)
      Type => "Counter",
      UsedBy => "DBG",
      AdditionalInfo => "CounterIncrWidth=14",
    },
  },
  ShrDebug0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 9;
    Name => "ShrDebug[6]",
    RegMem => "Reg",
    Address => "11E", # Excel Formula: =calc_reg_address(C69,A69,G69)
    Description => "Counters of not idle clocks of the Write and Read request fifos in MMA per slice",
    Width => "32", # Excel Formula: =calc_reg_width(E74:E75,F75)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    WriteNotReadyCnt0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 17;
      Name => "WriteNotReadyCnt[n]",
      RegMem => "RegField",
      Description => "Counts not idle clocks in Write request fifos",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Counter",
      UsedBy => "shr",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    ReadNotReadyCnt0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 16;
      Name => "ReadNotReadyCnt[n]",
      RegMem => "RegField",
      Description => "Counts not idle clocks in Read request fifos",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F74,E75)
      Type => "Counter",
      UsedBy => "shr",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  ShrDebug1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 9;
    Name => "ShrDebug[6]",
    RegMem => "Reg",
    Address => "11F",
    Description => "Counters of not idle clocks of the Write and Read request fifos in MMA per slice",
    Width => "32", # Excel Formula: =calc_reg_width(E74:E75,F75)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    WriteNotReadyCnt1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 17;
      Name => "WriteNotReadyCnt[n]",
      RegMem => "RegField",
      Description => "Counts not idle clocks in Write request fifos",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Counter",
      UsedBy => "shr",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    ReadNotReadyCnt1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 16;
      Name => "ReadNotReadyCnt[n]",
      RegMem => "RegField",
      Description => "Counts not idle clocks in Read request fifos",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F74,E75)
      Type => "Counter",
      UsedBy => "shr",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  ShrDebug2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 9;
    Name => "ShrDebug[6]",
    RegMem => "Reg",
    Address => "120",
    Description => "Counters of not idle clocks of the Write and Read request fifos in MMA per slice",
    Width => "32", # Excel Formula: =calc_reg_width(E74:E75,F75)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    WriteNotReadyCnt2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 17;
      Name => "WriteNotReadyCnt[n]",
      RegMem => "RegField",
      Description => "Counts not idle clocks in Write request fifos",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Counter",
      UsedBy => "shr",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    ReadNotReadyCnt2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 16;
      Name => "ReadNotReadyCnt[n]",
      RegMem => "RegField",
      Description => "Counts not idle clocks in Read request fifos",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F74,E75)
      Type => "Counter",
      UsedBy => "shr",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  ShrDebug3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 9;
    Name => "ShrDebug[6]",
    RegMem => "Reg",
    Address => "121",
    Description => "Counters of not idle clocks of the Write and Read request fifos in MMA per slice",
    Width => "32", # Excel Formula: =calc_reg_width(E74:E75,F75)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    WriteNotReadyCnt3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 17;
      Name => "WriteNotReadyCnt[n]",
      RegMem => "RegField",
      Description => "Counts not idle clocks in Write request fifos",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Counter",
      UsedBy => "shr",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    ReadNotReadyCnt3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 16;
      Name => "ReadNotReadyCnt[n]",
      RegMem => "RegField",
      Description => "Counts not idle clocks in Read request fifos",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F74,E75)
      Type => "Counter",
      UsedBy => "shr",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  ShrDebug4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 9;
    Name => "ShrDebug[6]",
    RegMem => "Reg",
    Address => "122",
    Description => "Counters of not idle clocks of the Write and Read request fifos in MMA per slice",
    Width => "32", # Excel Formula: =calc_reg_width(E74:E75,F75)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    WriteNotReadyCnt4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 17;
      Name => "WriteNotReadyCnt[n]",
      RegMem => "RegField",
      Description => "Counts not idle clocks in Write request fifos",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Counter",
      UsedBy => "shr",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    ReadNotReadyCnt4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 16;
      Name => "ReadNotReadyCnt[n]",
      RegMem => "RegField",
      Description => "Counts not idle clocks in Read request fifos",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F74,E75)
      Type => "Counter",
      UsedBy => "shr",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  ShrDebug5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 9;
    Name => "ShrDebug[6]",
    RegMem => "Reg",
    Address => "123",
    Description => "Counters of not idle clocks of the Write and Read request fifos in MMA per slice",
    Width => "32", # Excel Formula: =calc_reg_width(E74:E75,F75)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    WriteNotReadyCnt5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 17;
      Name => "WriteNotReadyCnt[n]",
      RegMem => "RegField",
      Description => "Counts not idle clocks in Write request fifos",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Counter",
      UsedBy => "shr",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    ReadNotReadyCnt5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 16;
      Name => "ReadNotReadyCnt[n]",
      RegMem => "RegField",
      Description => "Counts not idle clocks in Read request fifos",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F74,E75)
      Type => "Counter",
      UsedBy => "shr",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  DramSliceDebug => { #Structure Type: Reg;
    Name => "DramSliceDebug",
    RegMem => "Reg",
    Address => "124", # Excel Formula: =calc_reg_address(C73,A73,G73)
    Description => "Fifo max watermarks at DRAM slice",
    Width => "24", # Excel Formula: =calc_reg_width(E77:E79,F79)
    Type => "ReadOnly",
    FdllReqFifoWmk => { #Structure Type: RegField;
      Name => "FdllReqFifoWmk",
      RegMem => "RegField",
      Description => "FDLL request fifo max watermark",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F76,E77,TRUE)
      Type => "MaxWmk",
      UsedBy => "DRAM",
    },
    FdllDeleteReqFifoWmk => { #Structure Type: RegField;
      Name => "FdllDeleteReqFifoWmk",
      RegMem => "RegField",
      Description => "FDLL delete request fifo max watermark",
      Width => "8",
      Position => "15:8", # Excel Formula: =calc_position(F77,E78)
      Type => "MaxWmk",
      UsedBy => "DRAM",
    },
    DpdFifoWmk => { #Structure Type: RegField;
      Name => "DpdFifoWmk",
      RegMem => "RegField",
      Description => "Dram packet descriptor fifo max watermark",
      Width => "8",
      Position => "23:16", # Excel Formula: =calc_position(F78,E79)
      Type => "MaxWmk",
      UsedBy => "DRAM",
    },
  },
  WrReqFifo0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 10;
    Name => "WrReqFifo[6]",
    RegMem => "Mem",
    Address => "100000",
    Description => "Write request from slice to EMPD - key and PD. Consists of 16 fifos (1 per EM bank) of 16 entries each",
    Width => "169", # Excel Formula: =calc_mem_width(E81:E81,M80,F81,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "160",
    WrReqFifo0data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "WrReqFifo[n]data",
      RegMem => "MemField",
      Description => "Key and PD",
      Width => "160", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")+calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "159:0", # Excel Formula: =calc_position(F80,E81,TRUE)
    },
  },
  WrReqFifo1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 10;
    Name => "WrReqFifo[6]",
    RegMem => "Mem",
    Address => "200000",
    Description => "Write request from slice to EMPD - key and PD. Consists of 16 fifos (1 per EM bank) of 16 entries each",
    Width => "169", # Excel Formula: =calc_mem_width(E81:E81,M80,F81,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "160",
    WrReqFifo1data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "WrReqFifo[n]data",
      RegMem => "MemField",
      Description => "Key and PD",
      Width => "160", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")+calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "159:0", # Excel Formula: =calc_position(F80,E81,TRUE)
    },
  },
  WrReqFifo2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 10;
    Name => "WrReqFifo[6]",
    RegMem => "Mem",
    Address => "300000",
    Description => "Write request from slice to EMPD - key and PD. Consists of 16 fifos (1 per EM bank) of 16 entries each",
    Width => "169", # Excel Formula: =calc_mem_width(E81:E81,M80,F81,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "160",
    WrReqFifo2data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 10;
      Name => "WrReqFifo[n]data",
      RegMem => "MemField",
      Description => "Key and PD",
      Width => "160", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")+calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "159:0", # Excel Formula: =calc_position(F80,E81,TRUE)
    },
  },
  WrReqFifo3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 10;
    Name => "WrReqFifo[6]",
    RegMem => "Mem",
    Address => "400000",
    Description => "Write request from slice to EMPD - key and PD. Consists of 16 fifos (1 per EM bank) of 16 entries each",
    Width => "169", # Excel Formula: =calc_mem_width(E81:E81,M80,F81,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "160",
    WrReqFifo3data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 10;
      Name => "WrReqFifo[n]data",
      RegMem => "MemField",
      Description => "Key and PD",
      Width => "160", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")+calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "159:0", # Excel Formula: =calc_position(F80,E81,TRUE)
    },
  },
  WrReqFifo4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 10;
    Name => "WrReqFifo[6]",
    RegMem => "Mem",
    Address => "500000",
    Description => "Write request from slice to EMPD - key and PD. Consists of 16 fifos (1 per EM bank) of 16 entries each",
    Width => "169", # Excel Formula: =calc_mem_width(E81:E81,M80,F81,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "160",
    WrReqFifo4data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 10;
      Name => "WrReqFifo[n]data",
      RegMem => "MemField",
      Description => "Key and PD",
      Width => "160", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")+calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "159:0", # Excel Formula: =calc_position(F80,E81,TRUE)
    },
  },
  WrReqFifo5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 10;
    Name => "WrReqFifo[6]",
    RegMem => "Mem",
    Address => "600000",
    Description => "Write request from slice to EMPD - key and PD. Consists of 16 fifos (1 per EM bank) of 16 entries each",
    Width => "169", # Excel Formula: =calc_mem_width(E81:E81,M80,F81,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "160",
    WrReqFifo5data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 10;
      Name => "WrReqFifo[n]data",
      RegMem => "MemField",
      Description => "Key and PD",
      Width => "160", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")+calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "159:0", # Excel Formula: =calc_position(F80,E81,TRUE)
    },
  },
  RdReqFifo0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 10;
    Name => "RdReqFifo[6]",
    RegMem => "Mem",
    Address => "700000", # Excel Formula: =calc_mem_address(C80,A80,G82,L82)
    Description => "Read request from slice to EMPD - key. Consists of 16 fifos (1 per EM bank) of 16 entries each",
    Width => "30", # Excel Formula: =calc_mem_width(E83:E83,M82,F83,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "24",
    RdReqFifo0data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "RdReqFifo[n]data",
      RegMem => "MemField",
      Description => "Key",
      Width => "24", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")
      Position => "23:0", # Excel Formula: =calc_position(F82,E83,TRUE)
    },
  },
  RdReqFifo1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 10;
    Name => "RdReqFifo[6]",
    RegMem => "Mem",
    Address => "800000",
    Description => "Read request from slice to EMPD - key. Consists of 16 fifos (1 per EM bank) of 16 entries each",
    Width => "30", # Excel Formula: =calc_mem_width(E83:E83,M82,F83,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "24",
    RdReqFifo1data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "RdReqFifo[n]data",
      RegMem => "MemField",
      Description => "Key",
      Width => "24", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")
      Position => "23:0", # Excel Formula: =calc_position(F82,E83,TRUE)
    },
  },
  RdReqFifo2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 10;
    Name => "RdReqFifo[6]",
    RegMem => "Mem",
    Address => "900000",
    Description => "Read request from slice to EMPD - key. Consists of 16 fifos (1 per EM bank) of 16 entries each",
    Width => "30", # Excel Formula: =calc_mem_width(E83:E83,M82,F83,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "24",
    RdReqFifo2data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 10;
      Name => "RdReqFifo[n]data",
      RegMem => "MemField",
      Description => "Key",
      Width => "24", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")
      Position => "23:0", # Excel Formula: =calc_position(F82,E83,TRUE)
    },
  },
  RdReqFifo3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 10;
    Name => "RdReqFifo[6]",
    RegMem => "Mem",
    Address => "A00000",
    Description => "Read request from slice to EMPD - key. Consists of 16 fifos (1 per EM bank) of 16 entries each",
    Width => "30", # Excel Formula: =calc_mem_width(E83:E83,M82,F83,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "24",
    RdReqFifo3data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 10;
      Name => "RdReqFifo[n]data",
      RegMem => "MemField",
      Description => "Key",
      Width => "24", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")
      Position => "23:0", # Excel Formula: =calc_position(F82,E83,TRUE)
    },
  },
  RdReqFifo4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 10;
    Name => "RdReqFifo[6]",
    RegMem => "Mem",
    Address => "B00000",
    Description => "Read request from slice to EMPD - key. Consists of 16 fifos (1 per EM bank) of 16 entries each",
    Width => "30", # Excel Formula: =calc_mem_width(E83:E83,M82,F83,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "24",
    RdReqFifo4data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 10;
      Name => "RdReqFifo[n]data",
      RegMem => "MemField",
      Description => "Key",
      Width => "24", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")
      Position => "23:0", # Excel Formula: =calc_position(F82,E83,TRUE)
    },
  },
  RdReqFifo5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 10;
    Name => "RdReqFifo[6]",
    RegMem => "Mem",
    Address => "C00000",
    Description => "Read request from slice to EMPD - key. Consists of 16 fifos (1 per EM bank) of 16 entries each",
    Width => "30", # Excel Formula: =calc_mem_width(E83:E83,M82,F83,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "24",
    RdReqFifo5data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 10;
      Name => "RdReqFifo[n]data",
      RegMem => "MemField",
      Description => "Key",
      Width => "24", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")
      Position => "23:0", # Excel Formula: =calc_position(F82,E83,TRUE)
    },
  },
  RdResultFifo0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 13;
    Name => "RdResultFifo[6]",
    RegMem => "Mem",
    Address => "D00000", # Excel Formula: =calc_mem_address(C82,A82,G84,L84)
    Description => "Read result from EMPD to slice - PD and controls for freeing EM resources after PD is read",
    Width => "198", # Excel Formula: =calc_mem_width(E85:E85,M84,F85,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SamplePhysicalReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,SamplePhysicalWrite=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "189",
    RdResultFifo0data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "RdResultFifo[n]data",
      RegMem => "MemField",
      Description => "PD, EM index, OQ SN, EM buffer, EM bank, EM found",
      Width => "189", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_PAYLOAD_WIDTH")+ 4+calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")+13+1+calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "188:0", # Excel Formula: =calc_position(F84,E85,TRUE)
      Comments => "(buf width) + 4(em eng inedex)+PDOQ_KEY_WIDTH+13(indexof em result)+1(found)+PD_WIDTH",
    },
  },
  RdResultFifo1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 13;
    Name => "RdResultFifo[6]",
    RegMem => "Mem",
    Address => "E00000",
    Description => "Read result from EMPD to slice - PD and controls for freeing EM resources after PD is read",
    Width => "198", # Excel Formula: =calc_mem_width(E85:E85,M84,F85,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SamplePhysicalReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,SamplePhysicalWrite=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "189",
    RdResultFifo1data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "RdResultFifo[n]data",
      RegMem => "MemField",
      Description => "PD, EM index, OQ SN, EM buffer, EM bank, EM found",
      Width => "189", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_PAYLOAD_WIDTH")+ 4+calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")+13+1+calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "188:0", # Excel Formula: =calc_position(F84,E85,TRUE)
      Comments => "(buf width) + 4(em eng inedex)+PDOQ_KEY_WIDTH+13(indexof em result)+1(found)+PD_WIDTH",
    },
  },
  RdResultFifo2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 13;
    Name => "RdResultFifo[6]",
    RegMem => "Mem",
    Address => "F00000",
    Description => "Read result from EMPD to slice - PD and controls for freeing EM resources after PD is read",
    Width => "198", # Excel Formula: =calc_mem_width(E85:E85,M84,F85,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SamplePhysicalReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,SamplePhysicalWrite=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "189",
    RdResultFifo2data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "RdResultFifo[n]data",
      RegMem => "MemField",
      Description => "PD, EM index, OQ SN, EM buffer, EM bank, EM found",
      Width => "189", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_PAYLOAD_WIDTH")+ 4+calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")+13+1+calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "188:0", # Excel Formula: =calc_position(F84,E85,TRUE)
      Comments => "(buf width) + 4(em eng inedex)+PDOQ_KEY_WIDTH+13(indexof em result)+1(found)+PD_WIDTH",
    },
  },
  RdResultFifo3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 13;
    Name => "RdResultFifo[6]",
    RegMem => "Mem",
    Address => "1000000",
    Description => "Read result from EMPD to slice - PD and controls for freeing EM resources after PD is read",
    Width => "198", # Excel Formula: =calc_mem_width(E85:E85,M84,F85,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SamplePhysicalReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,SamplePhysicalWrite=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "189",
    RdResultFifo3data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "RdResultFifo[n]data",
      RegMem => "MemField",
      Description => "PD, EM index, OQ SN, EM buffer, EM bank, EM found",
      Width => "189", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_PAYLOAD_WIDTH")+ 4+calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")+13+1+calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "188:0", # Excel Formula: =calc_position(F84,E85,TRUE)
      Comments => "(buf width) + 4(em eng inedex)+PDOQ_KEY_WIDTH+13(indexof em result)+1(found)+PD_WIDTH",
    },
  },
  RdResultFifo4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 13;
    Name => "RdResultFifo[6]",
    RegMem => "Mem",
    Address => "1100000",
    Description => "Read result from EMPD to slice - PD and controls for freeing EM resources after PD is read",
    Width => "198", # Excel Formula: =calc_mem_width(E85:E85,M84,F85,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SamplePhysicalReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,SamplePhysicalWrite=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "189",
    RdResultFifo4data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "RdResultFifo[n]data",
      RegMem => "MemField",
      Description => "PD, EM index, OQ SN, EM buffer, EM bank, EM found",
      Width => "189", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_PAYLOAD_WIDTH")+ 4+calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")+13+1+calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "188:0", # Excel Formula: =calc_position(F84,E85,TRUE)
      Comments => "(buf width) + 4(em eng inedex)+PDOQ_KEY_WIDTH+13(indexof em result)+1(found)+PD_WIDTH",
    },
  },
  RdResultFifo5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 13;
    Name => "RdResultFifo[6]",
    RegMem => "Mem",
    Address => "1200000",
    Description => "Read result from EMPD to slice - PD and controls for freeing EM resources after PD is read",
    Width => "198", # Excel Formula: =calc_mem_width(E85:E85,M84,F85,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "256", # Excel Formula: =16*16
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SamplePhysicalReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,SamplePhysicalWrite=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "189",
    RdResultFifo5data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "RdResultFifo[n]data",
      RegMem => "MemField",
      Description => "PD, EM index, OQ SN, EM buffer, EM bank, EM found",
      Width => "189", # Excel Formula: =calc_field_width_define("PDOQ_EMPD_EMDB_EM_PAYLOAD_WIDTH")+ 4+calc_field_width_define("PDOQ_EMPD_EMDB_EM_KEY_WIDTH")+13+1+calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "188:0", # Excel Formula: =calc_position(F84,E85,TRUE)
      Comments => "(buf width) + 4(em eng inedex)+PDOQ_KEY_WIDTH+13(indexof em result)+1(found)+PD_WIDTH",
    },
  },
  PreShrWrFifo0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 13;
    Name => "PreShrWrFifo[6]",
    RegMem => "Mem",
    Address => "1300000", # Excel Formula: =calc_mem_address(C84,A84,G86,L86)
    Description => "Fifo for PDs received from TxCGM at PDOQ entrance",
    Width => "145", # Excel Formula: =calc_mem_width(E87:E87,M86,F87,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "48",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "136",
    PreShrWrFifo0data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "PreShrWrFifo[n]data",
      RegMem => "MemField",
      Description => "PDs from TxCGM",
      Width => "136", # Excel Formula: =calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "135:0", # Excel Formula: =calc_position(F86,E87,TRUE)
    },
  },
  PreShrWrFifo1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 13;
    Name => "PreShrWrFifo[6]",
    RegMem => "Mem",
    Address => "1400000",
    Description => "Fifo for PDs received from TxCGM at PDOQ entrance",
    Width => "145", # Excel Formula: =calc_mem_width(E87:E87,M86,F87,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "48",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "136",
    PreShrWrFifo1data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "PreShrWrFifo[n]data",
      RegMem => "MemField",
      Description => "PDs from TxCGM",
      Width => "136", # Excel Formula: =calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "135:0", # Excel Formula: =calc_position(F86,E87,TRUE)
    },
  },
  PreShrWrFifo2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 13;
    Name => "PreShrWrFifo[6]",
    RegMem => "Mem",
    Address => "1500000",
    Description => "Fifo for PDs received from TxCGM at PDOQ entrance",
    Width => "145", # Excel Formula: =calc_mem_width(E87:E87,M86,F87,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "48",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "136",
    PreShrWrFifo2data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "PreShrWrFifo[n]data",
      RegMem => "MemField",
      Description => "PDs from TxCGM",
      Width => "136", # Excel Formula: =calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "135:0", # Excel Formula: =calc_position(F86,E87,TRUE)
    },
  },
  PreShrWrFifo3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 13;
    Name => "PreShrWrFifo[6]",
    RegMem => "Mem",
    Address => "1600000",
    Description => "Fifo for PDs received from TxCGM at PDOQ entrance",
    Width => "145", # Excel Formula: =calc_mem_width(E87:E87,M86,F87,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "48",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "136",
    PreShrWrFifo3data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "PreShrWrFifo[n]data",
      RegMem => "MemField",
      Description => "PDs from TxCGM",
      Width => "136", # Excel Formula: =calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "135:0", # Excel Formula: =calc_position(F86,E87,TRUE)
    },
  },
  PreShrWrFifo4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 13;
    Name => "PreShrWrFifo[6]",
    RegMem => "Mem",
    Address => "1700000",
    Description => "Fifo for PDs received from TxCGM at PDOQ entrance",
    Width => "145", # Excel Formula: =calc_mem_width(E87:E87,M86,F87,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "48",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "136",
    PreShrWrFifo4data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "PreShrWrFifo[n]data",
      RegMem => "MemField",
      Description => "PDs from TxCGM",
      Width => "136", # Excel Formula: =calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "135:0", # Excel Formula: =calc_position(F86,E87,TRUE)
    },
  },
  PreShrWrFifo5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 13;
    Name => "PreShrWrFifo[6]",
    RegMem => "Mem",
    Address => "1800000",
    Description => "Fifo for PDs received from TxCGM at PDOQ entrance",
    Width => "145", # Excel Formula: =calc_mem_width(E87:E87,M86,F87,-1)
    Type => "Dynamic",
    UsedBy => "shr",
    MemEntries => "48",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteBeforeProt=1,PackArrayToBus=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "136",
    PreShrWrFifo5data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "PreShrWrFifo[n]data",
      RegMem => "MemField",
      Description => "PDs from TxCGM",
      Width => "136", # Excel Formula: =calc_field_width_define("TXCGM2PDOQ_DUAL_PD_WIDTH")-calc_field_width_define("OQ_NUMBER_WIDTH")
      Position => "135:0", # Excel Formula: =calc_position(F86,E87,TRUE)
    },
  },
  DramFdllReqFifo => { #Structure Type: Mem;
    Name => "DramFdllReqFifo",
    RegMem => "Mem",
    Address => "1900000", # Excel Formula: =calc_mem_address(C86,A86,G88,L88)
    Description => "DRAM FDLL request fifo - PD and FD",
    Width => "138", # Excel Formula: =calc_mem_width(E89:E89,M88,F89,-1)
    Type => "Dynamic",
    UsedBy => "FDOQ",
    MemEntries => "128", # Excel Formula: =calc_field_width_define("PDOQ_FDOQ_FDLL_LATENCY")
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled",
    Comments => "Width = PD + FD + needs access",
    MemLogicalWidth => "129",
    DramFdllReqFifoData => { #Structure Type: MemField;
      Name => "DramFdllReqFifoData",
      RegMem => "MemField",
      Description => "PD and FD",
      Width => "129", # Excel Formula: =calc_field_width_define("PDVOQ2PDOQ_DRAM_PD_WIDTH")+calc_field_width_define("SOP_WIDTH")+calc_field_width_define("EOP_WIDTH")+calc_field_width_define("FRAGMENT_SIZE_WIDTH")+1
      Position => "128:0", # Excel Formula: =calc_position(F88,E89,TRUE)
    },
  },
  DramDeleteFdllReqFifo => { #Structure Type: Mem;
    Name => "DramDeleteFdllReqFifo",
    RegMem => "Mem",
    Address => "1A00000", # Excel Formula: =calc_mem_address(C88,A88,G90,L90)
    Description => "DRAM FDLL request fifo for deleted PDs - PD and FD",
    Width => "54", # Excel Formula: =calc_mem_width(E91:E91,M90,F91,-1)
    Type => "Dynamic",
    UsedBy => "FDOQ",
    MemEntries => "128", # Excel Formula: =calc_field_width_define("PDOQ_FDOQ_FDLL_LATENCY")
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    Comments => "Width = PD.UCDV + PD.PacketId + PD.CGM Counter Type + FD + needs access",
    MemLogicalWidth => "47",
    DramDeleteFdllReqFifoData => { #Structure Type: MemField;
      Name => "DramDeleteFdllReqFifoData",
      RegMem => "MemField",
      Description => "PD and FD",
      Width => "47", # Excel Formula: =calc_field_width_define("PD_UCDV_WIDTH")+calc_field_width_define("PKT_ID_WIDTH")+calc_field_width_define("CGM_COUNTER_TYPE_WIDTH")+calc_field_width_define("SOP_WIDTH")+calc_field_width_define("EOP_WIDTH")+calc_field_width_define("FRAGMENT_SIZE_WIDTH")+1
      Position => "46:0", # Excel Formula: =calc_position(F90,E91,TRUE)
    },
  },
  DramFdllReplyFifo => { #Structure Type: Mem;
    Name => "DramFdllReplyFifo",
    RegMem => "Mem",
    Address => "1B00000", # Excel Formula: =calc_mem_address(C90,A90,G92,L92)
    Description => "FDLL reply fifo - buffer pointer and found indication",
    Width => "25", # Excel Formula: =calc_mem_width(E93:E93,M92,F93,-1)
    Type => "Dynamic",
    UsedBy => "FDOQ",
    MemEntries => "128", # Excel Formula: =calc_field_width_define("PDOQ_FDOQ_FDLL_LATENCY")
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled",
    MemLogicalWidth => "19",
    DramFdllReplyFifoData => { #Structure Type: MemField;
      Name => "DramFdllReplyFifoData",
      RegMem => "MemField",
      Description => "buffer pointer and found indication",
      Width => "19", # Excel Formula: =calc_field_width_define("SMS_BUFF_PTR_WIDTH")+1
      Position => "18:0", # Excel Formula: =calc_position(F92,E93,TRUE)
    },
  },
  DramDeleteFdllReplyFifo => { #Structure Type: Mem;
    Name => "DramDeleteFdllReplyFifo",
    RegMem => "Mem",
    Address => "1C00000", # Excel Formula: =calc_mem_address(C92,A92,G94,L94)
    Description => "DRAM FDLL reply fifo  for deleted PDs - buffer pointer and found indication",
    Width => "25", # Excel Formula: =calc_mem_width(E95:E95,M94,F95,-1)
    Type => "Dynamic",
    UsedBy => "FDOQ",
    MemEntries => "128", # Excel Formula: =calc_field_width_define("PDOQ_FDOQ_FDLL_LATENCY")
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10,PortErrPropagate=Disabled",
    MemLogicalWidth => "19",
    DramDeleteFdllReplyFifoData => { #Structure Type: MemField;
      Name => "DramDeleteFdllReplyFifoData",
      RegMem => "MemField",
      Description => "buffer pointer and found indication",
      Width => "19", # Excel Formula: =calc_field_width_define("SMS_BUFF_PTR_WIDTH")+1
      Position => "18:0", # Excel Formula: =calc_position(F94,E95,TRUE)
    },
  },
  DpdFifo => { #Structure Type: Mem;
    Name => "DpdFifo",
    RegMem => "Mem",
    Address => "1D00000", # Excel Formula: =calc_mem_address(C94,A94,G96,L96)
    Description => "Dram packet descriptor fifo, absorbs all the PDs of the DRAM packet before transmitting to MMU",
    Width => "38", # Excel Formula: =calc_mem_width(E97:E99,M96,F99,-1)
    Type => "Dynamic",
    UsedBy => "FDOQ",
    MemEntries => "128", # Excel Formula: =calc_field_width_define("PDOQ_FDOQ_FDLL_LATENCY")
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=100,ReadActivityFactor=100,PortErrPropagate=Disabled",
    MemLogicalWidth => "31",
    NumSop => { #Structure Type: MemField;
      Name => "NumSop",
      RegMem => "MemField",
      Description => "Number of packets",
      Width => "5", # Excel Formula: =calc_field_width_define("PDOQ_DRAM_DPD_NUM_SOP_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F96,E97,TRUE)
    },
    Size => { #Structure Type: MemField;
      Name => "Size",
      RegMem => "MemField",
      Description => "Sum of packet sizes in DRAM packet",
      Width => "14", # Excel Formula: =calc_field_width_define("PDOQ_PKT_SIZE_WIDTH")
      Position => "18:5", # Excel Formula: =calc_position(F97,E98)
    },
    CompensationSize => { #Structure Type: MemField;
      Name => "CompensationSize",
      RegMem => "MemField",
      Description => "Sum of sch compensation sizes in DRAM packet",
      Width => "12", # Excel Formula: =calc_field_width_define("DRAM_PKT_COMP_SIZE_WIDTH")
      Position => "30:19", # Excel Formula: =calc_position(F98,E99)
    },
  },
};
