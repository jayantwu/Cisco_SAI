$block{mmu_buff} = {
  Defines_db => "X:\\verilog\\mmu_defines.v",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "1",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks Ecc_1bErrInterrupt",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks Ecc_2bErrInterrupt",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks ParityErrInterrupt",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "16",
    Type => "Config",
    mmu_buffer_allocator0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator6Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator6Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator7Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator7Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator8Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator8Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator9Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator9Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator10Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator10Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator11Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator11Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator12Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator12Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator13Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator13Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator14Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator14Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator15Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator15Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "16",
    Type => "Config",
    mmu_buffer_allocator0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator6Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator6Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator7Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator7Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator8Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator8Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator9Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator9Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator10Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator10Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator11Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator11Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator12Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator12Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator13Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator13Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator14Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator14Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    mmu_buffer_allocator15Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator15Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInitiateRegister",
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "16",
    Type => "Config",
    mmu_buffer_allocator0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator6Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator6Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator7Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator7Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator8Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator8Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator9Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator9Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator10Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator10Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator11Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator11Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator12Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator12Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator13Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator13Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator14Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator14Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator15Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator15Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInitiateRegister",
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "16",
    Type => "Config",
    mmu_buffer_allocator0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator6Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator6Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator7Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator7Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator8Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator8Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator9Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator9Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator10Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator10Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator11Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator11Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator12Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator12Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator13Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator13Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator14Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator14Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    mmu_buffer_allocator15Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator15Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "16",
    Type => "ReadOnly",
    mmu_buffer_allocator0ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator1ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator2ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator3ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator4ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator5ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator6ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator6ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator7ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator7ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator8ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator8ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator9ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator9ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator10ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator10ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator11ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator11ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator12ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator12ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "12",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator13ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator13ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "13",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator14ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator14ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "14",
      Type => "Status",
      UsedBy => "SER",
    },
    mmu_buffer_allocator15ErrInt => { #Structure Type: RegField;
      Name => "mmu_buffer_allocator15ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "15",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "11",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "9",
      Position => "8:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "10:9",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "5",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "4",
      Position => "3:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrDebug",
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_1bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrDebug",
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_2bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  MbistPassStatus => { #Structure Type: Reg; Skip Register;
    Name => "MbistPassStatus",
    RegMem => "Reg",
    Address => "39",
    Description => "MBIST pass status",
    Width => "32",
    Type => "ReadOnly",
    BistDonePassOut => { #Structure Type: RegField;
      Name => "BistDonePassOut",
      RegMem => "RegField",
      Description => "When this bit is set, MBIST passed",
      Width => "32",
      Position => "31:0",
      Type => "Status",
      UsedBy => "MEM",
    },
  },
  MbistFailStatus => { #Structure Type: Reg; Skip Register;
    Name => "MbistFailStatus",
    RegMem => "Reg",
    Address => "3A",
    Description => "MBIST fail status",
    Width => "32",
    Type => "ReadOnly",
    BistDoneFailOut => { #Structure Type: RegField;
      Name => "BistDoneFailOut",
      RegMem => "RegField",
      Description => "When this bit is set, MBIST failed",
      Width => "32",
      Position => "31:0",
      Type => "Status",
      UsedBy => "MEM",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
      DefaultValue => "b0",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "3", # Excel Formula: =calc_reg_width(E25:E27,F27)
    Type => "Config",
    CoreBistRprMode => { #Structure Type: RegField;
      Name => "CoreBistRprMode",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistRun => { #Structure Type: RegField;
      Name => "CoreBistRun",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistPtrnFill => { #Structure Type: RegField;
      Name => "CoreBistPtrnFill",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E29:E29,F29)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C28,A28,G28)
    Description => "Power Down Configuration for the block",
    Width => "128", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C30,A30,G30)
    Width => "39", # Excel Formula: =calc_reg_width(E33:E37,F37)
    Type => "Config",
    PmroExecute => { #Structure Type: RegField;
      Name => "PmroExecute",
      RegMem => "RegField",
      Description => "0->1: execute pmro command.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroCmd => { #Structure Type: RegField;
      Name => "PmroCmd",
      RegMem => "RegField",
      Description => "Pmro command to execute:
0: reset.
1: write.
2: read.
3: invalid.",
      Width => "2",
      Position => "2:1", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroSbusReset => { #Structure Type: RegField;
      Name => "PmroSbusReset",
      RegMem => "RegField",
      Description => "Reset pmro sbus chain. Need to set to 0 before starting access to pmro registers.",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroAddr => { #Structure Type: RegField;
      Name => "PmroAddr",
      RegMem => "RegField",
      Description => "PMRO register address:
0 - control register, 8b, def: 0x0.
1 - SVT Configuration Register, 16b, def: 0xFFFF.
2 - LVT Configuration Register, 16b, def: 0xFFFF.
3 - ULVT Configuration Register, 16b, def: 0xFFFF.
4 - Interconnect Configuration Register, 16b, def: 0xFFFF.
5 - Reference Clock Counter Register, 24b, def: 0xFFF000.
6 - Oscillator Counter Register, 24b, def: 0x000000.
7 - SBus ID register, read as 0x0B.
Set to '0' on reset command.",
      Width => "3",
      Position => "6:4", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroData => { #Structure Type: RegField;
      Name => "PmroData",
      RegMem => "RegField",
      Description => "PMRO data, set to 0x0 on reset and read command.",
      Width => "32",
      Position => "38:7", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C32,A32,G32)
    Width => "34", # Excel Formula: =calc_reg_width(E39:E41,F41)
    Type => "ReadOnly",
    PmroRdata => { #Structure Type: RegField;
      Name => "PmroRdata",
      RegMem => "RegField",
      Description => "Read data from pmro. Valid when PmroFinish=1 and PmroFailed=0.",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFailed => { #Structure Type: RegField;
      Name => "PmroFailed",
      RegMem => "RegField",
      Description => "Pmro command failed. Valid only when PmroFinish=1.",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F39,E40)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFinish => { #Structure Type: RegField;
      Name => "PmroFinish",
      RegMem => "RegField",
      Description => "Pmro command finished.",
      Width => "1",
      Position => "33", # Excel Formula: =calc_position(F40,E41)
      Type => "Event",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C38,A38,G38)
    Description => "aaa",
    Width => "11", # Excel Formula: =calc_reg_width(E43:E44,F44)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "aaa",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F42,E43,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "aaa",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C42,A42,G42)
    Description => "aaa",
    Width => "32", # Excel Formula: =calc_reg_width(E46:E46,F46)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "aaa",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F45,E46,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C45,A45,G45)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E48:E48,F48)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F47,E48,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  BufferAllocMode0 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 0; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "100",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "0",
    FlexibleBufferAlloc0 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 0; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode1 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 1; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "101",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "1",
    FlexibleBufferAlloc1 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 1; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode2 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 2; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "102",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "2",
    FlexibleBufferAlloc2 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 2; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode3 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 3; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "103",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "3",
    FlexibleBufferAlloc3 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 3; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode4 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 4; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "104",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "4",
    FlexibleBufferAlloc4 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 4; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode5 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 5; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "105",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "5",
    FlexibleBufferAlloc5 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 5; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode6 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 6; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "106",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "6",
    FlexibleBufferAlloc6 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 6; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode7 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 7; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "107",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "7",
    FlexibleBufferAlloc7 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 7; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode8 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 8; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "108",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "8",
    FlexibleBufferAlloc8 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 8; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode9 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 9; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "109",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "9",
    FlexibleBufferAlloc9 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 9; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode10 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 10; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "10A",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "10",
    FlexibleBufferAlloc10 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 10; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode11 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 11; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "10B",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "11",
    FlexibleBufferAlloc11 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 11; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode12 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 12; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "10C",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "12",
    FlexibleBufferAlloc12 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 12; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode13 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 13; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "10D",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "13",
    FlexibleBufferAlloc13 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 13; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode14 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 14; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "10E",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "14",
    FlexibleBufferAlloc14 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 14; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  BufferAllocMode15 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 15; ArrayLocationInName: 16;
    Name => "BufferAllocMode[16]",
    RegMem => "Reg",
    Address => "10F",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    ArrayLength => "16",
    ArrayIndex => "15",
    FlexibleBufferAlloc15 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 15; ArrayLocationInName: 20;
      Name => "FlexibleBufferAlloc[n]",
      RegMem => "RegField",
      Description => "If set, all buffer allocation memories work in flexible mode, where CPU MUST configure them before starting to work with MMU",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "mmu_buffer_allocator",
      DefaultValue => "d0",
    },
  },
  CpuOccupyBuffers0 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 0; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "110", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "0",
    TotalFreeBuffers0 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 0; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines0 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 0; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers1 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 1; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "111",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "1",
    TotalFreeBuffers1 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 1; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines1 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 1; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers2 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 2; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "112",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "2",
    TotalFreeBuffers2 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 2; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines2 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 2; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers3 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 3; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "113",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "3",
    TotalFreeBuffers3 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 3; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines3 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 3; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers4 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 4; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "114",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "4",
    TotalFreeBuffers4 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 4; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines4 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 4; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers5 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 5; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "115",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "5",
    TotalFreeBuffers5 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 5; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines5 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 5; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers6 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 6; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "116",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "6",
    TotalFreeBuffers6 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 6; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines6 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 6; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers7 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 7; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "117",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "7",
    TotalFreeBuffers7 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 7; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines7 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 7; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers8 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 8; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "118",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "8",
    TotalFreeBuffers8 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 8; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines8 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 8; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers9 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 9; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "119",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "9",
    TotalFreeBuffers9 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 9; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines9 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 9; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers10 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 10; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "11A",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "10",
    TotalFreeBuffers10 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 10; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines10 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 10; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers11 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 11; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "11B",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "11",
    TotalFreeBuffers11 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 11; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines11 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 11; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers12 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 12; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "11C",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "12",
    TotalFreeBuffers12 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 12; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines12 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 12; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers13 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 13; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "11D",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "13",
    TotalFreeBuffers13 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 13; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines13 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 13; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers14 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 14; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "11E",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "14",
    TotalFreeBuffers14 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 14; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines14 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 14; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  CpuOccupyBuffers15 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 15; ArrayLocationInName: 17;
    Name => "CpuOccupyBuffers[16]",
    RegMem => "Reg",
    Address => "11F",
    Description => "CPU designates certain buffers not be used by buffer allocator by doing CPU write to buffer allocator memories. Afterwards, CPU must write 1 or 0 per memory line if there are available buffers in that line. Also, total number of free buffers in that memory must be configured
Note that register writes are completed in 0 time, so no need to poll for ready",
    Width => "529", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "External",
    UsedBy => "mmu_buffer_allocator",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "15",
    TotalFreeBuffers15 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 15; ArrayLocationInName: 17;
      Name => "TotalFreeBuffers[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "External",
    },
    ValidMemoryLines15 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 15; ArrayLocationInName: 17;
      Name => "ValidMemoryLines[n]",
      RegMem => "RegField",
      Description => "One bit for each memory row whether has any free buffers",
      Width => "512",
      Position => "528:17", # Excel Formula: =calc_position(F10,E11)
      Type => "External",
      DocName => " ",
    },
  },
  BufferAllocStatus0 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 0; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "120", # Excel Formula: =calc_reg_address(C9,A9,G9)
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "0",
    FreeBuffersLeft0 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 0; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus1 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 1; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "121",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "1",
    FreeBuffersLeft1 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 1; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus2 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 2; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "122",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "2",
    FreeBuffersLeft2 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 2; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus3 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 3; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "123",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "3",
    FreeBuffersLeft3 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 3; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus4 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 4; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "124",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "4",
    FreeBuffersLeft4 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 4; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus5 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 5; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "125",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "5",
    FreeBuffersLeft5 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 5; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus6 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 6; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "126",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "6",
    FreeBuffersLeft6 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 6; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus7 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 7; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "127",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "7",
    FreeBuffersLeft7 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 7; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus8 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 8; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "128",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "8",
    FreeBuffersLeft8 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 8; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus9 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 9; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "129",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "9",
    FreeBuffersLeft9 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 9; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus10 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 10; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "12A",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "10",
    FreeBuffersLeft10 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 10; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus11 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 11; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "12B",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "11",
    FreeBuffersLeft11 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 11; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus12 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 12; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "12C",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "12",
    FreeBuffersLeft12 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 12; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus13 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 13; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "12D",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "13",
    FreeBuffersLeft13 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 13; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus14 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 14; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "12E",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "14",
    FreeBuffersLeft14 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 14; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  BufferAllocStatus15 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 15; ArrayLocationInName: 18;
    Name => "BufferAllocStatus[16]",
    RegMem => "Reg",
    Address => "12F",
    Description => "Total # of free buffers remaining per buffer allocator memory",
    Width => "17", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "ReadOnly",
    ArrayLength => "16",
    ArrayIndex => "15",
    FreeBuffersLeft15 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 15; ArrayLocationInName: 16;
      Name => "FreeBuffersLeft[n]",
      RegMem => "RegField",
      Description => "Total # of free buffers in that memory (max of 64k)",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Status",
      UsedBy => "mmu_buffer_allocator",
    },
  },
  CpuOverrideBuffers0 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "130", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "0",
    CpuBuffer0 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer0 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers1 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "131",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "1",
    CpuBuffer1 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer1 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers2 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 2; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "132",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "2",
    CpuBuffer2 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 2; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer2 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 2; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers3 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 3; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "133",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "3",
    CpuBuffer3 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 3; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer3 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 3; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers4 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 4; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "134",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "4",
    CpuBuffer4 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 4; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer4 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 4; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers5 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 5; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "135",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "5",
    CpuBuffer5 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 5; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer5 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 5; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers6 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 6; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "136",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "6",
    CpuBuffer6 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 6; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer6 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 6; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers7 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 7; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "137",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "7",
    CpuBuffer7 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 7; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer7 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 7; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers8 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 8; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "138",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "8",
    CpuBuffer8 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 8; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer8 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 8; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers9 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 9; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "139",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "9",
    CpuBuffer9 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 9; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer9 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 9; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers10 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 10; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "13A",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "10",
    CpuBuffer10 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 10; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer10 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 10; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers11 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 11; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "13B",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "11",
    CpuBuffer11 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 11; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer11 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 11; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers12 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 12; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "13C",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "12",
    CpuBuffer12 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 12; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer12 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 12; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers13 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 13; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "13D",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "13",
    CpuBuffer13 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 13; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer13 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 13; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers14 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 14; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "13E",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "14",
    CpuBuffer14 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 14; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer14 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 14; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  CpuOverrideBuffers15 => { #Structure Type: Reg; ArrayLength: 16; ArrayIndex: 15; ArrayLocationInName: 19;
    Name => "CpuOverrideBuffers[16]",
    RegMem => "Reg",
    Address => "13F",
    Description => "CPU access to free up buffers in the free buffer allocator.
The 4 LSbs of the buffer number serve as selector for buffer allocator , and the other 16b are written here",
    Width => "17", # Excel Formula: =calc_reg_width(E15:E16,F16)
    Type => "External",
    UsedBy => "mmu_cpu_if",
    AdditionalInfo => "ExternalBackdoorWriteEnable",
    ArrayLength => "16",
    ArrayIndex => "15",
    CpuBuffer15 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 15; ArrayLocationInName: 10;
      Name => "CpuBuffer[n]",
      RegMem => "RegField",
      Description => "Buffer # to free",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "External",
    },
    CpuFreeBuffer15 => { #Structure Type: RegField; ArrayLength: 16; ArrayIndex: 15; ArrayLocationInName: 14;
      Name => "CpuFreeBuffer[n]",
      RegMem => "RegField",
      Description => "Free the buffer above. Write 1 to issue command. Do not need to wait for it to be cleared",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F15,E16)
      Type => "External",
    },
  },
  mmu_buffer_allocator0 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 0; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "100000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "0",
    MemLogicalWidth => "128",
    mmu_buffer_allocator0Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 0; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator1 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 1; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "200000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "1",
    MemLogicalWidth => "128",
    mmu_buffer_allocator1Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 1; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator2 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 2; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "300000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "2",
    MemLogicalWidth => "128",
    mmu_buffer_allocator2Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 2; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator3 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 3; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "400000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "3",
    MemLogicalWidth => "128",
    mmu_buffer_allocator3Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 3; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator4 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 4; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "500000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "4",
    MemLogicalWidth => "128",
    mmu_buffer_allocator4Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 4; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator5 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 5; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "600000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "5",
    MemLogicalWidth => "128",
    mmu_buffer_allocator5Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 5; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator6 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 6; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "700000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "6",
    MemLogicalWidth => "128",
    mmu_buffer_allocator6Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 6; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator7 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 7; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "800000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "7",
    MemLogicalWidth => "128",
    mmu_buffer_allocator7Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 7; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator8 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 8; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "900000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "8",
    MemLogicalWidth => "128",
    mmu_buffer_allocator8Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 8; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator9 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 9; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "A00000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "9",
    MemLogicalWidth => "128",
    mmu_buffer_allocator9Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 9; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator10 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 10; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "B00000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "10",
    MemLogicalWidth => "128",
    mmu_buffer_allocator10Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 10; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator11 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 11; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "C00000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "11",
    MemLogicalWidth => "128",
    mmu_buffer_allocator11Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 11; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator12 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 12; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "D00000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "12",
    MemLogicalWidth => "128",
    mmu_buffer_allocator12Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 12; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator13 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 13; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "E00000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "13",
    MemLogicalWidth => "128",
    mmu_buffer_allocator13Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 13; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator14 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 14; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "F00000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "14",
    MemLogicalWidth => "128",
    mmu_buffer_allocator14Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 14; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
  mmu_buffer_allocator15 => { #Structure Type: Mem; ArrayLength: 16; ArrayIndex: 15; ArrayLocationInName: 21;
    Name => "mmu_buffer_allocator[16]",
    RegMem => "Mem",
    Address => "1000000",
    Description => "MMU Free buffer allocator memories",
    Width => "137", # Excel Formula: =calc_mem_width(E18:E18,M17,F18,-1)
    Type => "Dynamic",
    UsedBy => "alloc",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=10,ReadActivityFactor=10",
    ArrayLength => "16",
    ArrayIndex => "15",
    MemLogicalWidth => "128",
    mmu_buffer_allocator15Data => { #Structure Type: MemField; ArrayLength: 16; ArrayIndex: 15; ArrayLocationInName: 21;
      Name => "mmu_buffer_allocator[n]Data",
      RegMem => "MemField",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F17,E18,TRUE)
    },
  },
};
