$block{cdb_top} = {
  Defines_db => "../sna_defines.v",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "2",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    interrupt_summery_arraySummary => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, interrupt_summery_array has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "This field masks Ecc_1bErrInterrupt",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "This field masks Ecc_2bErrInterrupt",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "This field masks ParityErrInterrupt",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "31",
    Type => "Config",
    slb_pipe_psn_table0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slb_pipe_psn_table1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slb_pipe_psn_table2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slb_pipe_psn_table3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slb_pipe_psn_table4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slb_pipe_psn_table5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slb_central_context_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier6Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier7Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier8Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier9Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier10Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier11Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier12Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier13Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier14Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier15Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier16Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier17Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier18Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier19Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier20Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier21Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier22Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier23Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "31",
    Type => "Config",
    slb_pipe_psn_table0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slb_pipe_psn_table1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slb_pipe_psn_table2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slb_pipe_psn_table3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slb_pipe_psn_table4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slb_pipe_psn_table5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slb_central_context_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier6Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier7Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier8Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier9Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier10Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier11Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier12Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier13Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier14Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier15Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier16Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier17Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier18Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier19Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier20Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier21Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier22Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbOrPlbEgressFlowTableVerifier23Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "31",
    Type => "Config",
    slb_pipe_psn_table0Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slb_pipe_psn_table1Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slb_pipe_psn_table2Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slb_pipe_psn_table3Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slb_pipe_psn_table4Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slb_pipe_psn_table5Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slb_central_context_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier0Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier1Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier2Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier3Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier4Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier5Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier6Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier7Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier8Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier9Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier10Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier11Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier12Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier13Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier14Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier15Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier16Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier17Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier18Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier19Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier20Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier21Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier22Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier23Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "31",
    Type => "Config",
    slb_pipe_psn_table0Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slb_pipe_psn_table1Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slb_pipe_psn_table2Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slb_pipe_psn_table3Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slb_pipe_psn_table4Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slb_pipe_psn_table5Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slb_central_context_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier0Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier1Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier2Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier3Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier4Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier5Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier6Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier7Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier8Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier9Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier10Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier11Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier12Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier13Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier14Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier15Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier16Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier17Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier18Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier19Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier20Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier21Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier22Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbOrPlbEgressFlowTableVerifier23Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "31",
    Type => "ReadOnly",
    slb_pipe_psn_table0ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    slb_pipe_psn_table1ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    slb_pipe_psn_table2ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    slb_pipe_psn_table3ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    slb_pipe_psn_table4ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    slb_pipe_psn_table5ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    slb_central_context_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier0ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier1ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier2ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier3ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier4ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier5ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "12",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier6ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "13",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier7ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "14",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier8ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "15",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier9ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "16",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier10ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "17",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier11ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "18",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier12ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "19",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier13ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "20",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier14ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "21",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier15ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "22",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier16ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "23",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier17ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "24",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier18ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "25",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier19ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "26",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier20ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "27",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier21ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "28",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier22ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "29",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbOrPlbEgressFlowTableVerifier23ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "30",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "14",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "12",
      Position => "11:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "13:12",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "6",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "5",
      Position => "4:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  MbistStatus => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "39",
    Description => "MBIST pass fail status",
    Width => "184",
    Type => "ReadOnly",
    BistDonePassOut => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, MBIST passed",
      Width => "92",
      Position => "91:0",
      Type => "Status",
      UsedBy => "MEM",
    },
    BistDoneFailOut => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, MBIST failed",
      Width => "92",
      Position => "183:92",
      Type => "Status",
      UsedBy => "MEM",
    },
  },
  TcamBistStatus => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "3A",
    Description => "TCAM BIST pass fail status",
    Width => "48",
    Type => "ReadOnly",
    TcamBistDonePassOut => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, TCAM BIST passed",
      Width => "24",
      Position => "23:0",
      Type => "Status",
      UsedBy => "TCAM",
    },
    TcamBistDoneFailOut => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, TCAM BIST failed",
      Width => "24",
      Position => "47:24",
      Type => "Status",
      UsedBy => "TCAM",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
      DefaultValue => "b0",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "3", # Excel Formula: =calc_reg_width(E25:E27,F27)
    Type => "Config",
    CoreBistRprMode => { #Structure Type: RegField;
      Name => "CoreBistRprMode",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistRun => { #Structure Type: RegField;
      Name => "CoreBistRun",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistPtrnFill => { #Structure Type: RegField;
      Name => "CoreBistPtrnFill",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E29:E29,F29)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C28,A28,G28)
    Description => "Power Down Configuration for the block",
    Width => "128", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C30,A30,G30)
    Width => "39", # Excel Formula: =calc_reg_width(E33:E37,F37)
    Type => "Config",
    PmroExecute => { #Structure Type: RegField;
      Name => "PmroExecute",
      RegMem => "RegField",
      Description => "0->1: execute pmro command.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroCmd => { #Structure Type: RegField;
      Name => "PmroCmd",
      RegMem => "RegField",
      Description => "Pmro command to execute:
0: reset.
1: write.
2: read.
3: invalid.",
      Width => "2",
      Position => "2:1", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroSbusReset => { #Structure Type: RegField;
      Name => "PmroSbusReset",
      RegMem => "RegField",
      Description => "Reset pmro sbus chain. Need to set to 0 before starting access to pmro registers.",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroAddr => { #Structure Type: RegField;
      Name => "PmroAddr",
      RegMem => "RegField",
      Description => "PMRO register address:
0 - control register, 8b, def: 0x0.
1 - SVT Configuration Register, 16b, def: 0xFFFF.
2 - LVT Configuration Register, 16b, def: 0xFFFF.
3 - ULVT Configuration Register, 16b, def: 0xFFFF.
4 - Interconnect Configuration Register, 16b, def: 0xFFFF.
5 - Reference Clock Counter Register, 24b, def: 0xFFF000.
6 - Oscillator Counter Register, 24b, def: 0x000000.
7 - SBus ID register, read as 0x0B.
Set to '0' on reset command.",
      Width => "3",
      Position => "6:4", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroData => { #Structure Type: RegField;
      Name => "PmroData",
      RegMem => "RegField",
      Description => "PMRO data, set to 0x0 on reset and read command.",
      Width => "32",
      Position => "38:7", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C32,A32,G32)
    Width => "34", # Excel Formula: =calc_reg_width(E39:E41,F41)
    Type => "ReadOnly",
    PmroRdata => { #Structure Type: RegField;
      Name => "PmroRdata",
      RegMem => "RegField",
      Description => "Read data from pmro. Valid when PmroFinish=1 and PmroFailed=0.",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFailed => { #Structure Type: RegField;
      Name => "PmroFailed",
      RegMem => "RegField",
      Description => "Pmro command failed. Valid only when PmroFinish=1.",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F39,E40)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFinish => { #Structure Type: RegField;
      Name => "PmroFinish",
      RegMem => "RegField",
      Description => "Pmro command finished.",
      Width => "1",
      Position => "33", # Excel Formula: =calc_position(F40,E41)
      Type => "Event",
      UsedBy => "pmro",
    },
  },
  init_done_status_register => { #Structure Type: Reg;
    Name => "init_done_status_register",
    RegMem => "Reg",
    Address => "100",
    Description => "init_done_status_reg",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "ReadOnly",
    init_done_status_r => { #Structure Type: RegField;
      Name => "init_done_status_r",
      RegMem => "RegField",
      Description => "init_done_status_reg",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Status",
      UsedBy => "sna",
    },
  },
  select_rxpp_number_per_each_slice_sna => { #Structure Type: Reg;
    Name => "select_rxpp_number_per_each_slice_sna",
    RegMem => "Reg",
    Address => "101", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "select_rxpp_number_per_each_slice_sna",
    Width => "21", # Excel Formula: =calc_reg_width(E10:E18,F18)
    Type => "Config",
    Comments => "msb is timer_is_active
lsbs are {Cache-group-id, Next-group-size}.
Cpu-write-cmd will start the timer if not currently running",
    selected_rxpp_to_slice_sna0 => { #Structure Type: RegField;
      Name => "selected_rxpp_to_slice_sna0",
      RegMem => "RegField",
      Description => "0..5 (without duplicated with other slice)
7 for not valid",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d0",
    },
    selected_rxpp_to_slice_sna1 => { #Structure Type: RegField;
      Name => "selected_rxpp_to_slice_sna1",
      RegMem => "RegField",
      Description => "0..5 (without duplicated with other slice)
7 for not valid",
      Width => "3",
      Position => "5:3", # Excel Formula: =calc_position(F10,E11)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d1",
    },
    selected_rxpp_to_slice_sna2 => { #Structure Type: RegField;
      Name => "selected_rxpp_to_slice_sna2",
      RegMem => "RegField",
      Description => "0..5 (without duplicated with other slice)
7 for not valid",
      Width => "3",
      Position => "8:6", # Excel Formula: =calc_position(F11,E12)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d2",
    },
    selected_slice_sna_to_rxpp0 => { #Structure Type: RegField;
      Name => "selected_slice_sna_to_rxpp0",
      RegMem => "RegField",
      Description => "0/1/2 (without duplicated with other slice)
3 for not valid",
      Width => "2",
      Position => "10:9", # Excel Formula: =calc_position(F12,E13)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d0",
    },
    selected_slice_sna_to_rxpp1 => { #Structure Type: RegField;
      Name => "selected_slice_sna_to_rxpp1",
      RegMem => "RegField",
      Description => "0/1/2 (without duplicated with other slice)
3 for not valid",
      Width => "2",
      Position => "12:11", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d1",
    },
    selected_slice_sna_to_rxpp2 => { #Structure Type: RegField;
      Name => "selected_slice_sna_to_rxpp2",
      RegMem => "RegField",
      Description => "0/1/2 (without duplicated with other slice)
3 for not valid",
      Width => "2",
      Position => "14:13", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d2",
    },
    selected_slice_sna_to_rxpp3 => { #Structure Type: RegField;
      Name => "selected_slice_sna_to_rxpp3",
      RegMem => "RegField",
      Description => "0/1/2 (without duplicated with other slice)
3 for not valid",
      Width => "2",
      Position => "16:15", # Excel Formula: =calc_position(F15,E16)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d3",
    },
    selected_slice_sna_to_rxpp4 => { #Structure Type: RegField;
      Name => "selected_slice_sna_to_rxpp4",
      RegMem => "RegField",
      Description => "0/1/2 (without duplicated with other slice)
3 for not valid",
      Width => "2",
      Position => "18:17", # Excel Formula: =calc_position(F16,E17)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d3",
    },
    selected_slice_sna_to_rxpp5 => { #Structure Type: RegField;
      Name => "selected_slice_sna_to_rxpp5",
      RegMem => "RegField",
      Description => "0/1/2 (without duplicated with other slice)
3 for not valid",
      Width => "2",
      Position => "20:19", # Excel Formula: =calc_position(F17,E18)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d3",
    },
  },
  slb_or_pld_logic => { #Structure Type: Reg;
    Name => "slb_or_pld_logic",
    RegMem => "Reg",
    Address => "102", # Excel Formula: =calc_reg_address(C9,A9,G9)
    Description => "slb_or_pld_logic",
    Width => "1", # Excel Formula: =calc_reg_width(E20:E20,F20)
    Type => "Config",
    Comments => "msb is timer_is_active
lsbs are {Cache-group-id, Next-group-size}.
Cpu-write-cmd will start the timer if not currently running",
    use_slb_logic => { #Structure Type: RegField;
      Name => "use_slb_logic",
      RegMem => "RegField",
      Description => "When set, slb-logic will be done in the central-sna. Otherwise plb-logic will be done",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F19,E20,TRUE)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d0",
    },
  },
  plb_use_source_identifier_as_reorder_context_reg => { #Structure Type: Reg;
    Name => "plb_use_source_identifier_as_reorder_context_reg",
    RegMem => "Reg",
    Address => "103", # Excel Formula: =calc_reg_address(C19,A19,G19)
    Description => "plb_use_source_identifier_as_reorder_context_reg",
    Width => "1", # Excel Formula: =calc_reg_width(E22:E22,F22)
    Type => "Config",
    Comments => "msb is timer_is_active
lsbs are {Cache-group-id, Next-group-size}.
Cpu-write-cmd will start the timer if not currently running",
    plb_use_source_identifier_as_reorder_context => { #Structure Type: RegField;
      Name => "plb_use_source_identifier_as_reorder_context",
      RegMem => "RegField",
      Description => "When set, and sna-mode is 'SN-PLB', plb-reorder-context is the source-identifier ",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F21,E22,TRUE)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "b1",
    },
  },
  slb_clock_offset_and_thresholds_registers => { #Structure Type: Reg;
    Name => "slb_clock_offset_and_thresholds_registers",
    RegMem => "Reg",
    Address => "104", # Excel Formula: =calc_reg_address(C21,A21,G21)
    Description => "slb_clock_threshold_register",
    Width => "18", # Excel Formula: =calc_reg_width(E24:E27,F27)
    Type => "Config",
    slb_local_segment_aging_clock_offset => { #Structure Type: RegField;
      Name => "slb_local_segment_aging_clock_offset",
      RegMem => "RegField",
      Description => "offset out of 32  bits clocks-counter - For local-sos-time",
      Width => "5", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_CLK_OFFSET_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d17",
      Comments => "default value is 17 (dec). If rate is 1.2Ghz, than each count will be i.e. ~110usec (0.833ns*2^17)",
    },
    slb_local_segment_aging_threshold_time => { #Structure Type: RegField;
      Name => "slb_local_segment_aging_threshold_time",
      RegMem => "RegField",
      Description => "local-sos threshold time (in accordance to slb_local_sos_clock_offset)",
      Width => "4", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_TIME_STAMP_WIDTH")
      Position => "8:5", # Excel Formula: =calc_position(F24,E25)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d5",
      Comments => "default value is 5 (dec) i.e. ~550usec if the clock-offset = 17 (dec)
NOTE1: Min-segment-length = 2*Skew
NOTE2: Max-segment-length = 4*Skew
NOTE3: Max-segment-length+Skew = 5*Skew
NOTE4: This threshold supposed to be about ~5*Skew. Default value is picked for the case of Skew=100usec.",
    },
    slb_central_context_aging_clock_offset => { #Structure Type: RegField;
      Name => "slb_central_context_aging_clock_offset",
      RegMem => "RegField",
      Description => "offset out of 32  bits clocks-counter - For Global-sos-time (Aging)",
      Width => "5", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_CLK_OFFSET_WIDTH")
      Position => "13:9", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d18",
      Comments => "default value is 18 (dec). If rate is 1.2Ghz, than each count will be i.e. ~220usec (0.833ns*2^18)",
    },
    slb_central_context_aging_threshold_time => { #Structure Type: RegField;
      Name => "slb_central_context_aging_threshold_time",
      RegMem => "RegField",
      Description => "global-sos threshold time (in accordance to slb_aging_clock_offset)",
      Width => "4", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_TIME_STAMP_WIDTH")
      Position => "17:14", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d5",
      Comments => "default value is 5 (dec) i.e. ~1100usec if the clock-offset = 18 (dec)
NOTE1: Min-segment-length = 2*Skew
NOTE2: Max-segment-length = 4*Skew
NOTE3: Max-segment-length+Skew = 5*Skew
NOTE4: This threshold supposed to be about ~10*Skew. Default value is picked for the case of Skew=100usec.",
    },
  },
  efdb_bypass_cfg_regs => { #Structure Type: Reg;
    Name => "efdb_bypass_cfg_regs",
    RegMem => "Reg",
    Address => "105", # Excel Formula: =calc_reg_address(C23,A23,G23)
    Description => "plb_use_source_identifier_as_reorder_context_reg",
    Width => "5", # Excel Formula: =calc_reg_width(E29:E30,F30)
    Type => "Config",
    Comments => "msb is timer_is_active
lsbs are {Cache-group-id, Next-group-size}.
Cpu-write-cmd will start the timer if not currently running",
    enable_slow_pop_when_emdb_delete_request => { #Structure Type: RegField;
      Name => "enable_slow_pop_when_emdb_delete_request",
      RegMem => "RegField",
      Description => "When set, each efdb-delete command will cause slow-pop from the efdb-bypass",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "b0",
    },
    num_of_cycle_between_each_pop_in_slow_pop_mode => { #Structure Type: RegField;
      Name => "num_of_cycle_between_each_pop_in_slow_pop_mode",
      RegMem => "RegField",
      Description => "By default pop is done every 2 cycles. If enable_slow_pop is set, each delete-request from the efdb will cause slowness in pop",
      Width => "4",
      Position => "4:1", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d10",
    },
  },
  slb_counters => { #Structure Type: Reg;
    Name => "slb_counters",
    RegMem => "Reg",
    Address => "106", # Excel Formula: =calc_reg_address(C28,A28,G28)
    Description => "slb_counters",
    Width => "40", # Excel Formula: =calc_reg_width(E32:E35,F35)
    Type => "ReadOnly",
    efdb_bypass_push_not_succeeded => { #Structure Type: RegField;
      Name => "efdb_bypass_push_not_succeeded",
      RegMem => "RegField",
      Description => "set when:
1. No ready free reorder-context-id
2. Trying to push duplicates flow-sig to the efdb-bypass
3. efdb_bypass is almost-full",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F31,E32,TRUE)
      Type => "Counter",
      UsedBy => "sna",
      DefaultValue => "d0",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    slb_efdb_bypass_fifo_almost_full => { #Structure Type: RegField;
      Name => "slb_efdb_bypass_fifo_almost_full",
      RegMem => "RegField",
      Description => "slb_efdb_bypass_fifo_almost_full",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F32,E33)
      Type => "Counter",
      UsedBy => "sna",
      DefaultValue => "d0",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    slb_central_sos_fifo_almost_full => { #Structure Type: RegField;
      Name => "slb_central_sos_fifo_almost_full",
      RegMem => "RegField",
      Description => "slb_central_fifo_almost_full",
      Width => "10",
      Position => "29:20", # Excel Formula: =calc_position(F33,E34)
      Type => "Counter",
      UsedBy => "sna",
      DefaultValue => "d0",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    slb_efdb_table_insert_not_succeeded => { #Structure Type: RegField;
      Name => "slb_efdb_table_insert_not_succeeded",
      RegMem => "RegField",
      Description => "slb_efdb_table_insert_not_succeeded",
      Width => "10",
      Position => "39:30", # Excel Formula: =calc_position(F34,E35)
      Type => "Counter",
      UsedBy => "sna",
      DefaultValue => "d0",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  slb_max_number_of_packets_in_segment => { #Structure Type: Reg;
    Name => "slb_max_number_of_packets_in_segment",
    RegMem => "Reg",
    Address => "107", # Excel Formula: =calc_reg_address(C31,A31,G31)
    Description => "slb_max_number_of_packets_in_segment",
    Width => "18", # Excel Formula: =calc_reg_width(E37:E37,F37)
    Type => "Config",
    slb_max_num_of_packets_in_segment => { #Structure Type: RegField;
      Name => "slb_max_num_of_packets_in_segment",
      RegMem => "RegField",
      Description => "slb_max_num_of_packets_in_segment",
      Width => "18",
      Position => "17:0", # Excel Formula: =calc_position(F36,E37,TRUE)
      Type => "Config",
      UsedBy => "sna",
      DefaultValue => "d600",
    },
  },
  plb_efdb_access => { #Structure Type: Reg;
    Name => "plb_efdb_access",
    RegMem => "Reg",
    Address => "108", # Excel Formula: =calc_reg_address(C36,A36,G36)
    Description => "plb_efdb_cpu_access",
    Width => "51", # Excel Formula: =calc_reg_width(E39:E43,F43)
    Type => "External",
    UsedBy => "sna",
    plb_efdb_access_valid_r => { #Structure Type: RegField;
      Name => "plb_efdb_access_valid_r",
      RegMem => "RegField",
      Address => "1",
      Description => "Set on cpu-wr
Reset by design when efdb-access is done",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "External",
    },
    plb_efdb_access_qi_cmd_r => { #Structure Type: RegField;
      Name => "plb_efdb_access_qi_cmd_r",
      RegMem => "RegField",
      Address => "1",
      Description => "quick-insert when set, Delete when reset",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F39,E40)
      Type => "External",
    },
    plb_efdb_access_insert_or_delete_succeeded_r => { #Structure Type: RegField;
      Name => "plb_efdb_access_insert_or_delete_succeeded_r",
      RegMem => "RegField",
      Address => "1",
      Description => "set by design when Quick-insert/Delete suceeded",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F40,E41)
      Type => "External",
    },
    plb_efdb_access_key_r => { #Structure Type: RegField;
      Name => "plb_efdb_access_key_r",
      RegMem => "RegField",
      Address => "1",
      Description => "key to be inserted to the efdb (when QI)",
      Width => "36", # Excel Formula: =calc_field_width_define("RXPP_SNA_FLOW_SIGNATURE_WIDTH")
      Position => "38:3", # Excel Formula: =calc_position(F41,E42)
      Type => "External",
    },
    plb_efdb_access_pld_r => { #Structure Type: RegField;
      Name => "plb_efdb_access_pld_r",
      RegMem => "RegField",
      Address => "1",
      Description => "payload to be inserted to the efdb (when QI). Payload is Reorder-context-ID",
      Width => "12", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_REORDER_CONTEXT_ID_WIDTH")
      Position => "50:39", # Excel Formula: =calc_position(F42,E43)
      Type => "External",
    },
  },
  interrupt_summery_array => { #Structure Type: Reg;
    Name => "interrupt_summery_array",
    RegMem => "Reg",
    Address => "109", # Excel Formula: =calc_reg_address(C38,A38,G38)
    Description => "interrupt_summery_array",
    Width => "2", # Excel Formula: =calc_reg_width(E45:E46,F46)
    Type => "Interrupt",
    efdb_table_duplicate_entry => { #Structure Type: RegField;
      Name => "efdb_table_duplicate_entry",
      RegMem => "RegField",
      Description => "efdb_duplicate_entry",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F44,E45,TRUE)
      Type => "Interrupt",
      UsedBy => "sna",
    },
    efdb_table_plb_miss => { #Structure Type: RegField;
      Name => "efdb_table_plb_miss",
      RegMem => "RegField",
      Description => "set if efdb-miss in PLB mode",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F45,E46)
      Type => "Interrupt",
      UsedBy => "sna",
    },
  },
  interrupt_summery_arrayMask => { #Structure Type: Reg; Skip Register;
    Name => "interrupt_summery_arrayMask",
    RegMem => "Reg",
    Address => "10A",
    Description => "This register masks interrupt_summery_array interrupt register",
    Width => "2", # Excel Formula: =calc_reg_width(E45:E46,F46)
    Type => "InterruptMask",
    DefaultValue => "b1",
    efdb_table_duplicate_entryMask => { #Structure Type: RegField;
      Name => "efdb_table_duplicate_entryMask",
      RegMem => "RegField",
      Description => "This field masks efdb_table_duplicate_entry interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F44,E45,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    efdb_table_plb_missMask => { #Structure Type: RegField;
      Name => "efdb_table_plb_missMask",
      RegMem => "RegField",
      Description => "This field masks efdb_table_plb_miss interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F45,E46)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  interrupt_summery_arrayTest => { #Structure Type: Reg; Skip Register;
    Name => "interrupt_summery_arrayTest",
    RegMem => "Reg",
    Address => "10B",
    Description => "This register tests interrupt_summery_array interrupt register",
    Width => "2", # Excel Formula: =calc_reg_width(E45:E46,F46)
    Type => "InterruptTest",
    DefaultValue => "b0",
    efdb_table_duplicate_entryTest => { #Structure Type: RegField;
      Name => "efdb_table_duplicate_entryTest",
      RegMem => "RegField",
      Description => "This field tests efdb_table_duplicate_entry interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F44,E45,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    efdb_table_plb_missTest => { #Structure Type: RegField;
      Name => "efdb_table_plb_missTest",
      RegMem => "RegField",
      Description => "This field tests efdb_table_plb_miss interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F45,E46)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  SlbOrPlbEgressFlowTable0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 24;
    Name => "SlbOrPlbEgressFlowTable[6]",
    RegMem => "Mem",
    Address => "100000",
    Description => "Egress flow table. Key is Extended-flow-signature (36 bits)",
    Width => "12", # Excel Formula: =calc_mem_width(E48:E48,M47,F48,-1)
    Type => "DocOnly",
    UsedBy => "sna",
    MemEntries => "8192", # Excel Formula: =2^13
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=36,SourceIdWidth=1,NumberOfBanks=4,NumberOfCamEntries=64,QuickInsert=Enabled,BinSize=4,NumberOfParallelBanks=4,VerifierSampleReadAccess=1,VerifierSampleReadBeforeProt=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled,ValidSampleReadBeforeProt=1",
    Comments => "2bits Source-ID is:
on SLB-Mode: SSN
On PLB-Mode: TBD",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "12",
    slb_or_plb_egress_flow_table0_field => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 29;
      Name => "slb_or_plb_egress_flow_table[n]_field",
      RegMem => "MemField",
      Description => "Context-ID",
      Width => "12", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_REORDER_CONTEXT_ID_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F47,E48,TRUE)
    },
  },
  SlbOrPlbEgressFlowTable1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 24;
    Name => "SlbOrPlbEgressFlowTable[6]",
    RegMem => "Mem",
    Address => "200000",
    Description => "Egress flow table. Key is Extended-flow-signature (36 bits)",
    Width => "12", # Excel Formula: =calc_mem_width(E48:E48,M47,F48,-1)
    Type => "DocOnly",
    UsedBy => "sna",
    MemEntries => "8192", # Excel Formula: =2^13
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=36,SourceIdWidth=1,NumberOfBanks=4,NumberOfCamEntries=64,QuickInsert=Enabled,BinSize=4,NumberOfParallelBanks=4,VerifierSampleReadAccess=1,VerifierSampleReadBeforeProt=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled,ValidSampleReadBeforeProt=1",
    Comments => "2bits Source-ID is:
on SLB-Mode: SSN
On PLB-Mode: TBD",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "12",
    slb_or_plb_egress_flow_table1_field => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 29;
      Name => "slb_or_plb_egress_flow_table[n]_field",
      RegMem => "MemField",
      Description => "Context-ID",
      Width => "12", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_REORDER_CONTEXT_ID_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F47,E48,TRUE)
    },
  },
  SlbOrPlbEgressFlowTable2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 24;
    Name => "SlbOrPlbEgressFlowTable[6]",
    RegMem => "Mem",
    Address => "300000",
    Description => "Egress flow table. Key is Extended-flow-signature (36 bits)",
    Width => "12", # Excel Formula: =calc_mem_width(E48:E48,M47,F48,-1)
    Type => "DocOnly",
    UsedBy => "sna",
    MemEntries => "8192", # Excel Formula: =2^13
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=36,SourceIdWidth=1,NumberOfBanks=4,NumberOfCamEntries=64,QuickInsert=Enabled,BinSize=4,NumberOfParallelBanks=4,VerifierSampleReadAccess=1,VerifierSampleReadBeforeProt=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled,ValidSampleReadBeforeProt=1",
    Comments => "2bits Source-ID is:
on SLB-Mode: SSN
On PLB-Mode: TBD",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "12",
    slb_or_plb_egress_flow_table2_field => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 29;
      Name => "slb_or_plb_egress_flow_table[n]_field",
      RegMem => "MemField",
      Description => "Context-ID",
      Width => "12", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_REORDER_CONTEXT_ID_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F47,E48,TRUE)
    },
  },
  SlbOrPlbEgressFlowTable3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 24;
    Name => "SlbOrPlbEgressFlowTable[6]",
    RegMem => "Mem",
    Address => "400000",
    Description => "Egress flow table. Key is Extended-flow-signature (36 bits)",
    Width => "12", # Excel Formula: =calc_mem_width(E48:E48,M47,F48,-1)
    Type => "DocOnly",
    UsedBy => "sna",
    MemEntries => "8192", # Excel Formula: =2^13
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=36,SourceIdWidth=1,NumberOfBanks=4,NumberOfCamEntries=64,QuickInsert=Enabled,BinSize=4,NumberOfParallelBanks=4,VerifierSampleReadAccess=1,VerifierSampleReadBeforeProt=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled,ValidSampleReadBeforeProt=1",
    Comments => "2bits Source-ID is:
on SLB-Mode: SSN
On PLB-Mode: TBD",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "12",
    slb_or_plb_egress_flow_table3_field => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 29;
      Name => "slb_or_plb_egress_flow_table[n]_field",
      RegMem => "MemField",
      Description => "Context-ID",
      Width => "12", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_REORDER_CONTEXT_ID_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F47,E48,TRUE)
    },
  },
  SlbOrPlbEgressFlowTable4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 24;
    Name => "SlbOrPlbEgressFlowTable[6]",
    RegMem => "Mem",
    Address => "500000",
    Description => "Egress flow table. Key is Extended-flow-signature (36 bits)",
    Width => "12", # Excel Formula: =calc_mem_width(E48:E48,M47,F48,-1)
    Type => "DocOnly",
    UsedBy => "sna",
    MemEntries => "8192", # Excel Formula: =2^13
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=36,SourceIdWidth=1,NumberOfBanks=4,NumberOfCamEntries=64,QuickInsert=Enabled,BinSize=4,NumberOfParallelBanks=4,VerifierSampleReadAccess=1,VerifierSampleReadBeforeProt=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled,ValidSampleReadBeforeProt=1",
    Comments => "2bits Source-ID is:
on SLB-Mode: SSN
On PLB-Mode: TBD",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "12",
    slb_or_plb_egress_flow_table4_field => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 29;
      Name => "slb_or_plb_egress_flow_table[n]_field",
      RegMem => "MemField",
      Description => "Context-ID",
      Width => "12", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_REORDER_CONTEXT_ID_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F47,E48,TRUE)
    },
  },
  SlbOrPlbEgressFlowTable5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 24;
    Name => "SlbOrPlbEgressFlowTable[6]",
    RegMem => "Mem",
    Address => "600000",
    Description => "Egress flow table. Key is Extended-flow-signature (36 bits)",
    Width => "12", # Excel Formula: =calc_mem_width(E48:E48,M47,F48,-1)
    Type => "DocOnly",
    UsedBy => "sna",
    MemEntries => "8192", # Excel Formula: =2^13
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=36,SourceIdWidth=1,NumberOfBanks=4,NumberOfCamEntries=64,QuickInsert=Enabled,BinSize=4,NumberOfParallelBanks=4,VerifierSampleReadAccess=1,VerifierSampleReadBeforeProt=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled,ValidSampleReadBeforeProt=1",
    Comments => "2bits Source-ID is:
on SLB-Mode: SSN
On PLB-Mode: TBD",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "12",
    slb_or_plb_egress_flow_table5_field => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 29;
      Name => "slb_or_plb_egress_flow_table[n]_field",
      RegMem => "MemField",
      Description => "Context-ID",
      Width => "12", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_REORDER_CONTEXT_ID_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F47,E48,TRUE)
    },
  },
  slb_pipe_psn_table0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "slb_pipe_psn_table[6]",
    RegMem => "Mem",
    Address => "700000", # Excel Formula: =calc_mem_address(C47,A47,G49,L49)
    Description => "slb-psn-memory",
    Width => "96", # Excel Formula: =calc_mem_width(E50:E57,M49,F57,-1)
    Type => "Dynamic",
    UsedBy => "sna",
    MemEntries => "4096", # Excel Formula: =2^12
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "88",
    pipe0_local_psn_0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_0",
      RegMem => "MemField",
      Description => "PSN of SSN-0 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "17:0", # Excel Formula: =calc_position(F49,E50,TRUE)
    },
    pipe0_local_psn_1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_1",
      RegMem => "MemField",
      Description => "PSN of SSN-1 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "35:18", # Excel Formula: =calc_position(F50,E51)
    },
    pipe0_local_psn_2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_2",
      RegMem => "MemField",
      Description => "PSN of SSN-2 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "53:36", # Excel Formula: =calc_position(F51,E52)
    },
    pipe0_local_psn_3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_3",
      RegMem => "MemField",
      Description => "PSN of SSN-3 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "71:54", # Excel Formula: =calc_position(F52,E53)
    },
    pipe0_local_last_sos_time_0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_0",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-0 in this pipe",
      Width => "4",
      Position => "75:72", # Excel Formula: =calc_position(F53,E54)
    },
    pipe0_local_last_sos_time_1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_1",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-1 in this pipe",
      Width => "4",
      Position => "79:76", # Excel Formula: =calc_position(F54,E55)
    },
    pipe0_local_last_sos_time_2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_2",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-2 in this pipe",
      Width => "4",
      Position => "83:80", # Excel Formula: =calc_position(F55,E56)
    },
    pipe0_local_last_sos_time_3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_3",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-3 in this pipe",
      Width => "4",
      Position => "87:84", # Excel Formula: =calc_position(F56,E57)
    },
  },
  slb_pipe_psn_table1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "slb_pipe_psn_table[6]",
    RegMem => "Mem",
    Address => "800000",
    Description => "slb-psn-memory",
    Width => "96", # Excel Formula: =calc_mem_width(E50:E57,M49,F57,-1)
    Type => "Dynamic",
    UsedBy => "sna",
    MemEntries => "4096", # Excel Formula: =2^12
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "88",
    pipe1_local_psn_0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_0",
      RegMem => "MemField",
      Description => "PSN of SSN-0 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "17:0", # Excel Formula: =calc_position(F49,E50,TRUE)
    },
    pipe1_local_psn_1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_1",
      RegMem => "MemField",
      Description => "PSN of SSN-1 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "35:18", # Excel Formula: =calc_position(F50,E51)
    },
    pipe1_local_psn_2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_2",
      RegMem => "MemField",
      Description => "PSN of SSN-2 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "53:36", # Excel Formula: =calc_position(F51,E52)
    },
    pipe1_local_psn_3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_3",
      RegMem => "MemField",
      Description => "PSN of SSN-3 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "71:54", # Excel Formula: =calc_position(F52,E53)
    },
    pipe1_local_last_sos_time_0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_0",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-0 in this pipe",
      Width => "4",
      Position => "75:72", # Excel Formula: =calc_position(F53,E54)
    },
    pipe1_local_last_sos_time_1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_1",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-1 in this pipe",
      Width => "4",
      Position => "79:76", # Excel Formula: =calc_position(F54,E55)
    },
    pipe1_local_last_sos_time_2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_2",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-2 in this pipe",
      Width => "4",
      Position => "83:80", # Excel Formula: =calc_position(F55,E56)
    },
    pipe1_local_last_sos_time_3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_3",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-3 in this pipe",
      Width => "4",
      Position => "87:84", # Excel Formula: =calc_position(F56,E57)
    },
  },
  slb_pipe_psn_table2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 19;
    Name => "slb_pipe_psn_table[6]",
    RegMem => "Mem",
    Address => "900000",
    Description => "slb-psn-memory",
    Width => "96", # Excel Formula: =calc_mem_width(E50:E57,M49,F57,-1)
    Type => "Dynamic",
    UsedBy => "sna",
    MemEntries => "4096", # Excel Formula: =2^12
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "88",
    pipe2_local_psn_0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_0",
      RegMem => "MemField",
      Description => "PSN of SSN-0 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "17:0", # Excel Formula: =calc_position(F49,E50,TRUE)
    },
    pipe2_local_psn_1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_1",
      RegMem => "MemField",
      Description => "PSN of SSN-1 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "35:18", # Excel Formula: =calc_position(F50,E51)
    },
    pipe2_local_psn_2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_2",
      RegMem => "MemField",
      Description => "PSN of SSN-2 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "53:36", # Excel Formula: =calc_position(F51,E52)
    },
    pipe2_local_psn_3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_3",
      RegMem => "MemField",
      Description => "PSN of SSN-3 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "71:54", # Excel Formula: =calc_position(F52,E53)
    },
    pipe2_local_last_sos_time_0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_0",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-0 in this pipe",
      Width => "4",
      Position => "75:72", # Excel Formula: =calc_position(F53,E54)
    },
    pipe2_local_last_sos_time_1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_1",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-1 in this pipe",
      Width => "4",
      Position => "79:76", # Excel Formula: =calc_position(F54,E55)
    },
    pipe2_local_last_sos_time_2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_2",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-2 in this pipe",
      Width => "4",
      Position => "83:80", # Excel Formula: =calc_position(F55,E56)
    },
    pipe2_local_last_sos_time_3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_3",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-3 in this pipe",
      Width => "4",
      Position => "87:84", # Excel Formula: =calc_position(F56,E57)
    },
  },
  slb_pipe_psn_table3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 19;
    Name => "slb_pipe_psn_table[6]",
    RegMem => "Mem",
    Address => "A00000",
    Description => "slb-psn-memory",
    Width => "96", # Excel Formula: =calc_mem_width(E50:E57,M49,F57,-1)
    Type => "Dynamic",
    UsedBy => "sna",
    MemEntries => "4096", # Excel Formula: =2^12
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "88",
    pipe3_local_psn_0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_0",
      RegMem => "MemField",
      Description => "PSN of SSN-0 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "17:0", # Excel Formula: =calc_position(F49,E50,TRUE)
    },
    pipe3_local_psn_1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_1",
      RegMem => "MemField",
      Description => "PSN of SSN-1 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "35:18", # Excel Formula: =calc_position(F50,E51)
    },
    pipe3_local_psn_2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_2",
      RegMem => "MemField",
      Description => "PSN of SSN-2 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "53:36", # Excel Formula: =calc_position(F51,E52)
    },
    pipe3_local_psn_3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_3",
      RegMem => "MemField",
      Description => "PSN of SSN-3 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "71:54", # Excel Formula: =calc_position(F52,E53)
    },
    pipe3_local_last_sos_time_0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_0",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-0 in this pipe",
      Width => "4",
      Position => "75:72", # Excel Formula: =calc_position(F53,E54)
    },
    pipe3_local_last_sos_time_1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_1",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-1 in this pipe",
      Width => "4",
      Position => "79:76", # Excel Formula: =calc_position(F54,E55)
    },
    pipe3_local_last_sos_time_2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_2",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-2 in this pipe",
      Width => "4",
      Position => "83:80", # Excel Formula: =calc_position(F55,E56)
    },
    pipe3_local_last_sos_time_3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_3",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-3 in this pipe",
      Width => "4",
      Position => "87:84", # Excel Formula: =calc_position(F56,E57)
    },
  },
  slb_pipe_psn_table4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 19;
    Name => "slb_pipe_psn_table[6]",
    RegMem => "Mem",
    Address => "B00000",
    Description => "slb-psn-memory",
    Width => "96", # Excel Formula: =calc_mem_width(E50:E57,M49,F57,-1)
    Type => "Dynamic",
    UsedBy => "sna",
    MemEntries => "4096", # Excel Formula: =2^12
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "88",
    pipe4_local_psn_0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_0",
      RegMem => "MemField",
      Description => "PSN of SSN-0 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "17:0", # Excel Formula: =calc_position(F49,E50,TRUE)
    },
    pipe4_local_psn_1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_1",
      RegMem => "MemField",
      Description => "PSN of SSN-1 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "35:18", # Excel Formula: =calc_position(F50,E51)
    },
    pipe4_local_psn_2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_2",
      RegMem => "MemField",
      Description => "PSN of SSN-2 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "53:36", # Excel Formula: =calc_position(F51,E52)
    },
    pipe4_local_psn_3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_3",
      RegMem => "MemField",
      Description => "PSN of SSN-3 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "71:54", # Excel Formula: =calc_position(F52,E53)
    },
    pipe4_local_last_sos_time_0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_0",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-0 in this pipe",
      Width => "4",
      Position => "75:72", # Excel Formula: =calc_position(F53,E54)
    },
    pipe4_local_last_sos_time_1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_1",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-1 in this pipe",
      Width => "4",
      Position => "79:76", # Excel Formula: =calc_position(F54,E55)
    },
    pipe4_local_last_sos_time_2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_2",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-2 in this pipe",
      Width => "4",
      Position => "83:80", # Excel Formula: =calc_position(F55,E56)
    },
    pipe4_local_last_sos_time_3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_3",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-3 in this pipe",
      Width => "4",
      Position => "87:84", # Excel Formula: =calc_position(F56,E57)
    },
  },
  slb_pipe_psn_table5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 19;
    Name => "slb_pipe_psn_table[6]",
    RegMem => "Mem",
    Address => "C00000",
    Description => "slb-psn-memory",
    Width => "96", # Excel Formula: =calc_mem_width(E50:E57,M49,F57,-1)
    Type => "Dynamic",
    UsedBy => "sna",
    MemEntries => "4096", # Excel Formula: =2^12
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "88",
    pipe5_local_psn_0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_0",
      RegMem => "MemField",
      Description => "PSN of SSN-0 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "17:0", # Excel Formula: =calc_position(F49,E50,TRUE)
    },
    pipe5_local_psn_1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_1",
      RegMem => "MemField",
      Description => "PSN of SSN-1 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "35:18", # Excel Formula: =calc_position(F50,E51)
    },
    pipe5_local_psn_2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_2",
      RegMem => "MemField",
      Description => "PSN of SSN-2 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "53:36", # Excel Formula: =calc_position(F51,E52)
    },
    pipe5_local_psn_3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 5;
      Name => "pipe[n]_local_psn_3",
      RegMem => "MemField",
      Description => "PSN of SSN-3 in this pipe",
      Width => "18", # Excel Formula: =calc_field_width_define("CDB_TOP_SLB_SEGMENT_PSN_WIDTH")
      Position => "71:54", # Excel Formula: =calc_position(F52,E53)
    },
    pipe5_local_last_sos_time_0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_0",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-0 in this pipe",
      Width => "4",
      Position => "75:72", # Excel Formula: =calc_position(F53,E54)
    },
    pipe5_local_last_sos_time_1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_1",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-1 in this pipe",
      Width => "4",
      Position => "79:76", # Excel Formula: =calc_position(F54,E55)
    },
    pipe5_local_last_sos_time_2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_2",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-2 in this pipe",
      Width => "4",
      Position => "83:80", # Excel Formula: =calc_position(F55,E56)
    },
    pipe5_local_last_sos_time_3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 5;
      Name => "pipe[n]_local_last_sos_time_3",
      RegMem => "MemField",
      Description => "Time from last SOS of SSN-3 in this pipe",
      Width => "4",
      Position => "87:84", # Excel Formula: =calc_position(F56,E57)
    },
  },
  slb_central_context_table => { #Structure Type: Mem;
    Name => "slb_central_context_table",
    RegMem => "Mem",
    Address => "D00000", # Excel Formula: =calc_mem_address(C49,A49,G58,L58)
    Description => "slb_central_context_table",
    Width => "25", # Excel Formula: =calc_mem_width(E59:E61,M58,F61,-1)
    Type => "Dynamic",
    UsedBy => "sna",
    MemEntries => "4096", # Excel Formula: =2^12
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "19",
    EM_Index => { #Structure Type: MemField;
      Name => "EM_Index",
      RegMem => "MemField",
      Description => "EM_Index",
      Width => "14", # Excel Formula: =2+9+2+1
      Position => "13:0", # Excel Formula: =calc_position(F58,E59,TRUE)
      Comments => "Width is:
Num-of-banks-width +
Bin-index-width + 
Bank-depth-width +
1 //Use-cam-bit",
    },
    Last_sos_time => { #Structure Type: MemField;
      Name => "Last_sos_time",
      RegMem => "MemField",
      Description => "Last-SOS-time",
      Width => "4",
      Position => "17:14", # Excel Formula: =calc_position(F59,E60)
    },
    Valid => { #Structure Type: MemField;
      Name => "Valid",
      RegMem => "MemField",
      Description => "when set, context-is-valid",
      Width => "1",
      Position => "18", # Excel Formula: =calc_position(F60,E61)
    },
  },
  SlbOrPlbEgressFlowTableVerifier0 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 0; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "E00000", # Excel Formula: =calc_mem_address(C58,A58,G62,L62)
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "0",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier0Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 0; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier1 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 1; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "F00000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "1",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier1Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 1; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier2 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 2; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1000000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "2",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier2Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 2; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier3 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 3; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1100000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "3",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier3Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 3; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier4 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 4; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1200000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "4",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier4Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 4; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier5 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 5; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1300000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "5",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier5Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 5; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier6 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 6; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1400000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "6",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier6Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 6; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier7 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 7; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1500000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "7",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier7Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 7; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier8 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 8; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1600000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "8",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier8Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 8; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier9 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 9; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1700000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "9",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier9Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 9; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier10 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 10; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1800000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "10",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier10Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 10; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier11 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 11; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1900000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "11",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier11Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 11; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier12 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 12; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1A00000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "12",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier12Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 12; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier13 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 13; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1B00000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "13",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier13Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 13; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier14 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 14; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1C00000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "14",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier14Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 14; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier15 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 15; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1D00000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "15",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier15Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 15; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier16 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 16; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1E00000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "16",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier16Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 16; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier17 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 17; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "1F00000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "17",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier17Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 17; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier18 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 18; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "2000000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "18",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier18Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 18; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier19 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 19; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "2100000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "19",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier19Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 19; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier20 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 20; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "2200000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "20",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier20Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 20; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier21 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 21; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "2300000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "21",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier21Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 21; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier22 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 22; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "2400000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "22",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier22Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 22; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableVerifier23 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 23; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTableVerifier[24]",
    RegMem => "Mem",
    Address => "2500000",
    Width => "184", # Excel Formula: =calc_mem_width(E63:E63,M62,F63,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1P WriteMask",
    MemProtect => "ExtECC",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadAccess=1,SampleReadBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "23",
    MemLogicalWidth => "184",
    SlbOrPlbEgressFlowTableVerifier23Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 23; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "184",
      Position => "183:0", # Excel Formula: =calc_position(F62,E63,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid0 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 0; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "2600000", # Excel Formula: =calc_mem_address(C62,A62,G64,L64)
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "0",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid0Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 0; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid1 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 1; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "2700000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "1",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid1Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 1; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid2 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 2; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "2800000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "2",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid2Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 2; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid3 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 3; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "2900000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "3",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid3Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 3; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid4 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 4; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "2A00000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "4",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid4Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 4; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid5 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 5; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "2B00000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "5",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid5Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 5; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid6 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 6; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "2C00000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "6",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid6Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 6; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid7 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 7; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "2D00000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "7",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid7Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 7; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid8 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 8; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "2E00000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "8",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid8Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 8; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid9 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 9; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "2F00000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "9",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid9Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 9; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid10 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 10; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3000000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "10",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid10Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 10; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid11 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 11; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3100000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "11",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid11Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 11; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid12 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 12; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3200000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "12",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid12Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 12; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid13 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 13; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3300000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "13",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid13Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 13; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid14 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 14; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3400000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "14",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid14Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 14; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid15 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 15; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3500000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "15",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid15Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 15; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid16 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 16; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3600000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "16",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid16Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 16; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid17 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 17; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3700000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "17",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid17Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 17; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid18 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 18; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3800000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "18",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid18Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 18; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid19 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 19; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3900000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "19",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid19Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 19; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid20 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 20; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3A00000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "20",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid20Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 20; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid21 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 21; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3B00000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "21",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid21Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 21; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid22 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 22; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3C00000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "22",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid22Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 22; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTableValid23 => { #Structure Type: Mem; ArrayLength: 24; ArrayIndex: 23; ArrayLocationInName: 29; Skip Register;
    Name => "SlbOrPlbEgressFlowTableValid[24]",
    RegMem => "Mem",
    Address => "3D00000",
    Width => "4", # Excel Formula: =calc_mem_width(E65:E65,M64,F65,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "512",
    MemWrapper => "1R1W WriteMask",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=1,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "23",
    MemLogicalWidth => "4",
    SlbOrPlbEgressFlowTableValid23Data => { #Structure Type: MemField; ArrayLength: 24; ArrayIndex: 23; ArrayLocationInName: 29;
      Name => "SlbOrPlbEgressFlowTableValid[n]Data",
      RegMem => "MemField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F64,E65,TRUE)
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg0 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 0; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "10C", # Excel Formula: =calc_reg_address(C44,A44,G44)
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "0",
    SlbOrPlbEgressFlowTableActiveBanks0 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 0; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey0 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 0; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc0 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 0; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg1 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 1; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "10D",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "1",
    SlbOrPlbEgressFlowTableActiveBanks1 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 1; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey1 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 1; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc1 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 1; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg2 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 2; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "10E",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "2",
    SlbOrPlbEgressFlowTableActiveBanks2 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 2; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey2 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 2; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc2 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 2; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg3 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 3; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "10F",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "3",
    SlbOrPlbEgressFlowTableActiveBanks3 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 3; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey3 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 3; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc3 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 3; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg4 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 4; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "110",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "4",
    SlbOrPlbEgressFlowTableActiveBanks4 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 4; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey4 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 4; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc4 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 4; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg5 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 5; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "111",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "5",
    SlbOrPlbEgressFlowTableActiveBanks5 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 5; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey5 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 5; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc5 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 5; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg6 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 6; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "112",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "6",
    SlbOrPlbEgressFlowTableActiveBanks6 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 6; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey6 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 6; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc6 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 6; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg7 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 7; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "113",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "7",
    SlbOrPlbEgressFlowTableActiveBanks7 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 7; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey7 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 7; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc7 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 7; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg8 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 8; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "114",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "8",
    SlbOrPlbEgressFlowTableActiveBanks8 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 8; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey8 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 8; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc8 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 8; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg9 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 9; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "115",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "9",
    SlbOrPlbEgressFlowTableActiveBanks9 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 9; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey9 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 9; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc9 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 9; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg10 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 10; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "116",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "10",
    SlbOrPlbEgressFlowTableActiveBanks10 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 10; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey10 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 10; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc10 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 10; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg11 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 11; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "117",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "11",
    SlbOrPlbEgressFlowTableActiveBanks11 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 11; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey11 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 11; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc11 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 11; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg12 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 12; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "118",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "12",
    SlbOrPlbEgressFlowTableActiveBanks12 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 12; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey12 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 12; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc12 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 12; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg13 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 13; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "119",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "13",
    SlbOrPlbEgressFlowTableActiveBanks13 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 13; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey13 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 13; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc13 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 13; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg14 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 14; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "11A",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "14",
    SlbOrPlbEgressFlowTableActiveBanks14 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 14; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey14 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 14; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc14 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 14; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg15 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 15; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "11B",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "15",
    SlbOrPlbEgressFlowTableActiveBanks15 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 15; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey15 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 15; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc15 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 15; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg16 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 16; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "11C",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "16",
    SlbOrPlbEgressFlowTableActiveBanks16 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 16; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey16 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 16; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc16 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 16; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg17 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 17; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "11D",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "17",
    SlbOrPlbEgressFlowTableActiveBanks17 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 17; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey17 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 17; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc17 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 17; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg18 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 18; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "11E",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "18",
    SlbOrPlbEgressFlowTableActiveBanks18 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 18; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey18 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 18; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc18 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 18; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg19 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 19; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "11F",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "19",
    SlbOrPlbEgressFlowTableActiveBanks19 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 19; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey19 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 19; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc19 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 19; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg20 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 20; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "120",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "20",
    SlbOrPlbEgressFlowTableActiveBanks20 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 20; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey20 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 20; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc20 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 20; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg21 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 21; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "121",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "21",
    SlbOrPlbEgressFlowTableActiveBanks21 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 21; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey21 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 21; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc21 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 21; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg22 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 22; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "122",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "22",
    SlbOrPlbEgressFlowTableActiveBanks22 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 22; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey22 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 22; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc22 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 22; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerBankReg23 => { #Structure Type: Reg; ArrayLength: 24; ArrayIndex: 23; ArrayLocationInName: 34; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerBankReg[24]",
    RegMem => "Reg",
    Address => "123",
    Width => "74", # Excel Formula: =calc_reg_width(E67:E69,F69)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "24",
    ArrayIndex => "23",
    SlbOrPlbEgressFlowTableActiveBanks23 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 23; ArrayLocationInName: 35;
      Name => "SlbOrPlbEgressFlowTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "d1",
    },
    SlbOrPlbEgressFlowTableHashKey23 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 23; ArrayLocationInName: 31;
      Name => "SlbOrPlbEgressFlowTableHashKey[n]",
      RegMem => "RegField",
      Width => "72",
      Position => "72:1", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableUsePrimitiveCrc23 => { #Structure Type: RegField; ArrayLength: 24; ArrayIndex: 23; ArrayLocationInName: 39;
      Name => "SlbOrPlbEgressFlowTableUsePrimitiveCrc[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "73", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerEmReg0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerEmReg[6]",
    RegMem => "Reg",
    Address => "124", # Excel Formula: =calc_reg_address(C66,A66,G66)
    Width => "33", # Excel Formula: =calc_reg_width(E71:E73,F73)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "0",
    SlbOrPlbEgressFlowTableKeyWidth0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F70,E71,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableAutoBubbleReq0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 37;
      Name => "SlbOrPlbEgressFlowTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F71,E72)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableBubbleReqThreshold0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 42;
      Name => "SlbOrPlbEgressFlowTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F72,E73)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerEmReg1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerEmReg[6]",
    RegMem => "Reg",
    Address => "125",
    Width => "33", # Excel Formula: =calc_reg_width(E71:E73,F73)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "1",
    SlbOrPlbEgressFlowTableKeyWidth1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F70,E71,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableAutoBubbleReq1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 37;
      Name => "SlbOrPlbEgressFlowTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F71,E72)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableBubbleReqThreshold1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 42;
      Name => "SlbOrPlbEgressFlowTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F72,E73)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerEmReg2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerEmReg[6]",
    RegMem => "Reg",
    Address => "126",
    Width => "33", # Excel Formula: =calc_reg_width(E71:E73,F73)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "2",
    SlbOrPlbEgressFlowTableKeyWidth2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F70,E71,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableAutoBubbleReq2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 37;
      Name => "SlbOrPlbEgressFlowTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F71,E72)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableBubbleReqThreshold2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 42;
      Name => "SlbOrPlbEgressFlowTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F72,E73)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerEmReg3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerEmReg[6]",
    RegMem => "Reg",
    Address => "127",
    Width => "33", # Excel Formula: =calc_reg_width(E71:E73,F73)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "3",
    SlbOrPlbEgressFlowTableKeyWidth3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F70,E71,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableAutoBubbleReq3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 37;
      Name => "SlbOrPlbEgressFlowTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F71,E72)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableBubbleReqThreshold3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 42;
      Name => "SlbOrPlbEgressFlowTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F72,E73)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerEmReg4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerEmReg[6]",
    RegMem => "Reg",
    Address => "128",
    Width => "33", # Excel Formula: =calc_reg_width(E71:E73,F73)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "4",
    SlbOrPlbEgressFlowTableKeyWidth4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F70,E71,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableAutoBubbleReq4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 37;
      Name => "SlbOrPlbEgressFlowTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F71,E72)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableBubbleReqThreshold4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 42;
      Name => "SlbOrPlbEgressFlowTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F72,E73)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTablePerEmReg5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 32; Skip Register;
    Name => "SlbOrPlbEgressFlowTablePerEmReg[6]",
    RegMem => "Reg",
    Address => "129",
    Width => "33", # Excel Formula: =calc_reg_width(E71:E73,F73)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "5",
    SlbOrPlbEgressFlowTableKeyWidth5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 32;
      Name => "SlbOrPlbEgressFlowTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F70,E71,TRUE)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableAutoBubbleReq5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 37;
      Name => "SlbOrPlbEgressFlowTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F71,E72)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
    SlbOrPlbEgressFlowTableBubbleReqThreshold5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 42;
      Name => "SlbOrPlbEgressFlowTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F72,E73)
      Type => "Config",
      UsedBy => "SlbOrPlbEgressFlowTable",
      DefaultValue => "h0",
    },
  },
  SlbOrPlbEgressFlowTableCam0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 27; Skip Register;
    Name => "SlbOrPlbEgressFlowTableCam[6]",
    RegMem => "Mem",
    Address => "3E00000", # Excel Formula: =calc_mem_address(C64,A64,G74,L74)
    Width => "49", # Excel Formula: =calc_mem_width(E75:E77,"None",F77,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "64",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=12,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "49",
    SlbOrPlbEgressFlowTableCam0_key => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_key",
      RegMem => "MemField",
      Width => "36",
      Position => "35:0", # Excel Formula: =calc_position(F74,E75,TRUE)
    },
    SlbOrPlbEgressFlowTableCam0_payload => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_payload",
      RegMem => "MemField",
      Width => "12",
      Position => "47:36", # Excel Formula: =calc_position(F75,E76)
    },
    SlbOrPlbEgressFlowTableCam0_valid => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "48", # Excel Formula: =calc_position(F76,E77)
    },
  },
  SlbOrPlbEgressFlowTableCam1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 27; Skip Register;
    Name => "SlbOrPlbEgressFlowTableCam[6]",
    RegMem => "Mem",
    Address => "3F00000",
    Width => "49", # Excel Formula: =calc_mem_width(E75:E77,"None",F77,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "64",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=12,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "49",
    SlbOrPlbEgressFlowTableCam1_key => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_key",
      RegMem => "MemField",
      Width => "36",
      Position => "35:0", # Excel Formula: =calc_position(F74,E75,TRUE)
    },
    SlbOrPlbEgressFlowTableCam1_payload => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_payload",
      RegMem => "MemField",
      Width => "12",
      Position => "47:36", # Excel Formula: =calc_position(F75,E76)
    },
    SlbOrPlbEgressFlowTableCam1_valid => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "48", # Excel Formula: =calc_position(F76,E77)
    },
  },
  SlbOrPlbEgressFlowTableCam2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 27; Skip Register;
    Name => "SlbOrPlbEgressFlowTableCam[6]",
    RegMem => "Mem",
    Address => "4000000",
    Width => "49", # Excel Formula: =calc_mem_width(E75:E77,"None",F77,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "64",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=12,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "49",
    SlbOrPlbEgressFlowTableCam2_key => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_key",
      RegMem => "MemField",
      Width => "36",
      Position => "35:0", # Excel Formula: =calc_position(F74,E75,TRUE)
    },
    SlbOrPlbEgressFlowTableCam2_payload => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_payload",
      RegMem => "MemField",
      Width => "12",
      Position => "47:36", # Excel Formula: =calc_position(F75,E76)
    },
    SlbOrPlbEgressFlowTableCam2_valid => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "48", # Excel Formula: =calc_position(F76,E77)
    },
  },
  SlbOrPlbEgressFlowTableCam3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 27; Skip Register;
    Name => "SlbOrPlbEgressFlowTableCam[6]",
    RegMem => "Mem",
    Address => "4100000",
    Width => "49", # Excel Formula: =calc_mem_width(E75:E77,"None",F77,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "64",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=12,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "49",
    SlbOrPlbEgressFlowTableCam3_key => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_key",
      RegMem => "MemField",
      Width => "36",
      Position => "35:0", # Excel Formula: =calc_position(F74,E75,TRUE)
    },
    SlbOrPlbEgressFlowTableCam3_payload => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_payload",
      RegMem => "MemField",
      Width => "12",
      Position => "47:36", # Excel Formula: =calc_position(F75,E76)
    },
    SlbOrPlbEgressFlowTableCam3_valid => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "48", # Excel Formula: =calc_position(F76,E77)
    },
  },
  SlbOrPlbEgressFlowTableCam4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 27; Skip Register;
    Name => "SlbOrPlbEgressFlowTableCam[6]",
    RegMem => "Mem",
    Address => "4200000",
    Width => "49", # Excel Formula: =calc_mem_width(E75:E77,"None",F77,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "64",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=12,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "49",
    SlbOrPlbEgressFlowTableCam4_key => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_key",
      RegMem => "MemField",
      Width => "36",
      Position => "35:0", # Excel Formula: =calc_position(F74,E75,TRUE)
    },
    SlbOrPlbEgressFlowTableCam4_payload => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_payload",
      RegMem => "MemField",
      Width => "12",
      Position => "47:36", # Excel Formula: =calc_position(F75,E76)
    },
    SlbOrPlbEgressFlowTableCam4_valid => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "48", # Excel Formula: =calc_position(F76,E77)
    },
  },
  SlbOrPlbEgressFlowTableCam5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 27; Skip Register;
    Name => "SlbOrPlbEgressFlowTableCam[6]",
    RegMem => "Mem",
    Address => "4300000",
    Width => "49", # Excel Formula: =calc_mem_width(E75:E77,"None",F77,-1)
    Type => "Dynamic",
    UsedBy => "SlbOrPlbEgressFlowTable",
    MemEntries => "64",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=12,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "49",
    SlbOrPlbEgressFlowTableCam5_key => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_key",
      RegMem => "MemField",
      Width => "36",
      Position => "35:0", # Excel Formula: =calc_position(F74,E75,TRUE)
    },
    SlbOrPlbEgressFlowTableCam5_payload => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_payload",
      RegMem => "MemField",
      Width => "12",
      Position => "47:36", # Excel Formula: =calc_position(F75,E76)
    },
    SlbOrPlbEgressFlowTableCam5_valid => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 27;
      Name => "SlbOrPlbEgressFlowTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "48", # Excel Formula: =calc_position(F76,E77)
    },
  },
};
