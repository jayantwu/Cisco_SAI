$block{res} = {
  Defines_db => "../idb_defines.v",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    idb_interruptsSummary => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, idb_interrupts has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
    EmResponseInterruptSummary => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, EmResponseInterrupt has asserted interrupt",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "This field masks Ecc_1bErrInterrupt",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "This field masks Ecc_2bErrInterrupt",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "This field masks ParityErrInterrupt",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "36",
    Type => "Config",
    protection_table0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    protection_table1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    protection_table2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    protection_table3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_native_fec_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_native_fec_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    native_l2_and_l3_lp_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_native_frr_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_native_frr_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    path_tunnel_dlp_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_native_lb_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_native_lb_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_native_lb_prev_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_native_lb_prev_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_native_lb_consistence_cache_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_native_lb_consistence_cache_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_path_lb_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_path_lb_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_path_lb_prev_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_path_lb_prev_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_path_lb_consistence_cache_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_path_lb_consistence_cache_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_port_npp_lb_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_port_npp_lb_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_port_npp_lb_prev_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_port_npp_lb_prev_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_port_npp_lb_consistence_cache_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_port_npp_lb_consistence_cache_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_port_dsp_lb_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_port_dsp_lb_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_port_dsp_lb_prev_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_port_dsp_lb_prev_group_size_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "31",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_port_dsp_lb_consistence_cache_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "32",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_port_dsp_lb_consistence_cache_tableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "33",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_top_path_bypass_fifoEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "34",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_top_path_bypass_fifoEcc_1bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "35",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "36",
    Type => "Config",
    protection_table0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    protection_table1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    protection_table2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    protection_table3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_native_fec_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_native_fec_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    native_l2_and_l3_lp_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_native_frr_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_native_frr_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    path_tunnel_dlp_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_native_lb_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_native_lb_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_native_lb_prev_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_native_lb_prev_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_native_lb_consistence_cache_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_native_lb_consistence_cache_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_path_lb_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_path_lb_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_path_lb_prev_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_path_lb_prev_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_path_lb_consistence_cache_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_path_lb_consistence_cache_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_port_npp_lb_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_port_npp_lb_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_port_npp_lb_prev_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_port_npp_lb_prev_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_port_npp_lb_consistence_cache_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_port_npp_lb_consistence_cache_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_port_dsp_lb_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_port_dsp_lb_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_port_dsp_lb_prev_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_port_dsp_lb_prev_group_size_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "31",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_port_dsp_lb_consistence_cache_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "32",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_port_dsp_lb_consistence_cache_tableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "33",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice0_top_path_bypass_fifoEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "34",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    slice1_top_path_bypass_fifoEcc_2bErrInterruptMask => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "35",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "36",
    Type => "Config",
    protection_table0Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    protection_table1Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    protection_table2Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    protection_table3Ecc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_native_fec_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_native_fec_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    native_l2_and_l3_lp_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_native_frr_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_native_frr_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    path_tunnel_dlp_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_native_lb_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_native_lb_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_native_lb_prev_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_native_lb_prev_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_native_lb_consistence_cache_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_native_lb_consistence_cache_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_path_lb_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_path_lb_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_path_lb_prev_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_path_lb_prev_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_path_lb_consistence_cache_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_path_lb_consistence_cache_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_port_npp_lb_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_port_npp_lb_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_port_npp_lb_prev_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_port_npp_lb_prev_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_port_npp_lb_consistence_cache_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_port_npp_lb_consistence_cache_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_port_dsp_lb_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_port_dsp_lb_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_port_dsp_lb_prev_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_port_dsp_lb_prev_group_size_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "31",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_port_dsp_lb_consistence_cache_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "32",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_port_dsp_lb_consistence_cache_tableEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "33",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_top_path_bypass_fifoEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "34",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_top_path_bypass_fifoEcc_1bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "35",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "36",
    Type => "Config",
    protection_table0Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    protection_table1Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    protection_table2Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    protection_table3Ecc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_native_fec_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_native_fec_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    native_l2_and_l3_lp_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_native_frr_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_native_frr_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    path_tunnel_dlp_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_native_lb_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_native_lb_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_native_lb_prev_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_native_lb_prev_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_native_lb_consistence_cache_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_native_lb_consistence_cache_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_path_lb_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_path_lb_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_path_lb_prev_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_path_lb_prev_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_path_lb_consistence_cache_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_path_lb_consistence_cache_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_port_npp_lb_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_port_npp_lb_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_port_npp_lb_prev_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_port_npp_lb_prev_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_port_npp_lb_consistence_cache_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_port_npp_lb_consistence_cache_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_port_dsp_lb_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_port_dsp_lb_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_port_dsp_lb_prev_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_port_dsp_lb_prev_group_size_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "31",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_port_dsp_lb_consistence_cache_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "32",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_port_dsp_lb_consistence_cache_tableEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "33",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice0_top_path_bypass_fifoEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "34",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    slice1_top_path_bypass_fifoEcc_2bErrInitiate => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "35",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "36",
    Type => "ReadOnly",
    protection_table0ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    protection_table1ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    protection_table2ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    protection_table3ErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_native_fec_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_native_fec_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    native_l2_and_l3_lp_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_native_frr_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_native_frr_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    path_tunnel_dlp_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_native_lb_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_native_lb_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_native_lb_prev_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "12",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_native_lb_prev_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "13",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_native_lb_consistence_cache_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "14",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_native_lb_consistence_cache_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "15",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_path_lb_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "16",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_path_lb_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "17",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_path_lb_prev_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "18",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_path_lb_prev_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "19",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_path_lb_consistence_cache_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "20",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_path_lb_consistence_cache_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "21",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_port_npp_lb_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "22",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_port_npp_lb_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "23",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_port_npp_lb_prev_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "24",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_port_npp_lb_prev_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "25",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_port_npp_lb_consistence_cache_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "26",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_port_npp_lb_consistence_cache_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "27",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_port_dsp_lb_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "28",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_port_dsp_lb_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "29",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_port_dsp_lb_prev_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "30",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_port_dsp_lb_prev_group_size_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "31",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_port_dsp_lb_consistence_cache_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "32",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_port_dsp_lb_consistence_cache_tableErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "33",
      Type => "Status",
      UsedBy => "SER",
    },
    slice0_top_path_bypass_fifoErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "34",
      Type => "Status",
      UsedBy => "SER",
    },
    slice1_top_path_bypass_fifoErrInt => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "35",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "18",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "16",
      Position => "15:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "17:16",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "7",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "6",
      Position => "5:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  MbistStatus => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "39",
    Description => "MBIST pass fail status",
    Width => "222",
    Type => "ReadOnly",
    BistDonePassOut => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, MBIST passed",
      Width => "111",
      Position => "110:0",
      Type => "Status",
      UsedBy => "MEM",
    },
    BistDoneFailOut => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, MBIST failed",
      Width => "111",
      Position => "221:111",
      Type => "Status",
      UsedBy => "MEM",
    },
  },
  TcamBistStatus => { #Structure Type: Reg; Skip Register;
    RegMem => "Reg",
    Address => "3A",
    Description => "TCAM BIST pass fail status",
    Width => "64",
    Type => "ReadOnly",
    TcamBistDonePassOut => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, TCAM BIST passed",
      Width => "32",
      Position => "31:0",
      Type => "Status",
      UsedBy => "TCAM",
    },
    TcamBistDoneFailOut => { #Structure Type: RegField;
      RegMem => "RegField",
      Description => "When this bit is set, TCAM BIST failed",
      Width => "32",
      Position => "63:32",
      Type => "Status",
      UsedBy => "TCAM",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
      DefaultValue => "b0",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "3", # Excel Formula: =calc_reg_width(E25:E27,F27)
    Type => "Config",
    CoreBistRprMode => { #Structure Type: RegField;
      Name => "CoreBistRprMode",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistRun => { #Structure Type: RegField;
      Name => "CoreBistRun",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistPtrnFill => { #Structure Type: RegField;
      Name => "CoreBistPtrnFill",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E29:E29,F29)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  init_done_status_register => { #Structure Type: Reg;
    Name => "init_done_status_register",
    RegMem => "Reg",
    Address => "100",
    Description => "idb_init_done_status_reg",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "ReadOnly",
    init_done_status_reg => { #Structure Type: RegField;
      Name => "init_done_status_reg",
      RegMem => "RegField",
      Description => "idb_init_done_status_reg",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Status",
      UsedBy => "res",
      Comments => "default value is 10 (dec) i.e. ~1usec",
    },
  },
  npp_ranges => { #Structure Type: Reg;
    Name => "npp_ranges",
    RegMem => "Reg",
    Address => "101", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "NPP Ranges are in 1K multiples (so that Ext-NPP-Range <= 16))",
    Width => "15", # Excel Formula: =calc_reg_width(E10:E12,F12)
    Type => "Config",
    dsp_range => { #Structure Type: RegField;
      Name => "dsp_range",
      RegMem => "RegField",
      Description => "0:DSP-Range are directly mapped to DSP",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_CACHE_CLK_OFFSET_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d4",
      Comments => "default value is 10 (dec) i.e. ~1usec",
    },
    dspa_range => { #Structure Type: RegField;
      Name => "dspa_range",
      RegMem => "RegField",
      Description => "DSP-Range:DSPA-Range are directly mapped to DSPA",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_CACHE_CLK_OFFSET_WIDTH")
      Position => "9:5", # Excel Formula: =calc_position(F10,E11)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d8",
      Comments => "default value is 10 (dec) i.e. ~1usec",
    },
    ext_npp_range => { #Structure Type: RegField;
      Name => "ext_npp_range",
      RegMem => "RegField",
      Description => "DSPA-Range:Ext-NPP-Range are either NPPA or Ext-NPP.",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_CACHE_CLK_OFFSET_WIDTH")
      Position => "14:10", # Excel Formula: =calc_position(F11,E12)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d16",
      Comments => "default value is 10 (dec) i.e. ~1usec",
    },
  },
  lb_Consistence_cache_clock_offset_register => { #Structure Type: Reg;
    Name => "lb_Consistence_cache_clock_offset_register",
    RegMem => "Reg",
    Address => "102", # Excel Formula: =calc_reg_address(C9,A9,G9)
    Description => "Consistence_cache_clock_scale_time",
    Width => "5", # Excel Formula: =calc_reg_width(E14:E14,F14)
    Type => "Config",
    lb_Consistence_cache_clock_offset => { #Structure Type: RegField;
      Name => "lb_Consistence_cache_clock_offset",
      RegMem => "RegField",
      Description => "Consistence_cache_clock_scale_time",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_CACHE_CLK_OFFSET_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F13,E14,TRUE)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d10",
      Comments => "default value is 10 (dec) i.e. ~1usec",
    },
  },
  lb_Consistence_cache_clock_threshold_register => { #Structure Type: Reg;
    Name => "lb_Consistence_cache_clock_threshold_register",
    RegMem => "Reg",
    Address => "103", # Excel Formula: =calc_reg_address(C13,A13,G13)
    Description => "Consistence_cache_clock_update_time_register",
    Width => "10", # Excel Formula: =calc_reg_width(E16:E16,F16)
    Type => "Config",
    lb_Consistence_cache_clock_threshold => { #Structure Type: RegField;
      Name => "lb_Consistence_cache_clock_threshold",
      RegMem => "RegField",
      Description => "Consistence_cache_clock_update_time",
      Width => "10", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_CACHE_TS_WIDTH")
      Position => "9:0", # Excel Formula: =calc_position(F15,E16,TRUE)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d1000",
      Comments => "default value is 1000 (dec) i.e. ~1msec if the clock-offset = 10 (dec)",
    },
  },
  lb_Consistence_cache_timer_duration_register => { #Structure Type: Reg;
    Name => "lb_Consistence_cache_timer_duration_register",
    RegMem => "Reg",
    Address => "104", # Excel Formula: =calc_reg_address(C15,A15,G15)
    Description => "Consistence_cache_timer_duration_register",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    lb_Consistence_cache_timer_duration => { #Structure Type: RegField;
      Name => "lb_Consistence_cache_timer_duration",
      RegMem => "RegField",
      Description => "Consistence_cache_timer_duration",
      Width => "32", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_TIMER_WIDTH")
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d1000000",
      Comments => "default value is 1000000 (dec) i.e. ~1msec",
    },
  },
  slice0_native_lb_Consistency_Cache_Attributes => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_native_lb_Consistency_Cache_Attributes",
    RegMem => "Reg",
    Address => "105", # Excel Formula: =calc_reg_address(C17,A17,G17)
    Description => "Consistency_Cache_Attributes",
    Width => "32", # Excel Formula: =calc_reg_width(E20:E23,F23)
    Type => "Config",
    Comments => "msb is timer_is_active
lsbs are {Cache-group-id, Next-group-size}.
Cpu-write-cmd will start the timer if not currently running",
    ArrayLength => "2",
    ArrayIndex => "0",
    slice0_native_lb_Cache_group_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_native_lb_Cache_group_id_r",
      RegMem => "RegField",
      Description => "Cache group id",
      Width => "13", # Excel Formula: =calc_field_width_define("RES_L2_DLPA_OR_ECMP_WIDTH")
      Position => "12:0", # Excel Formula: =calc_position(F19,E20,TRUE)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice0_native_lb_Cache_group_size_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_native_lb_Cache_group_size_r",
      RegMem => "RegField",
      Description => "Next group size to be written in the prev-group-size-table",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "21:13", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice0_native_lb_Removed_member_id_valid_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_native_lb_Removed_member_id_valid_r",
      RegMem => "RegField",
      Description => "Removed member ID field is valid. If valid it means that the group-size decreased by one",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F21,E22)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "b0",
    },
    slice0_native_lb_Removed_member_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_native_lb_Removed_member_id_r",
      RegMem => "RegField",
      Description => "Removed member ID",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "31:23", # Excel Formula: =calc_position(F22,E23)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
  },
  slice1_native_lb_Consistency_Cache_Attributes => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_native_lb_Consistency_Cache_Attributes",
    RegMem => "Reg",
    Address => "106",
    Description => "Consistency_Cache_Attributes",
    Width => "32", # Excel Formula: =calc_reg_width(E20:E23,F23)
    Type => "Config",
    Comments => "msb is timer_is_active
lsbs are {Cache-group-id, Next-group-size}.
Cpu-write-cmd will start the timer if not currently running",
    ArrayLength => "2",
    ArrayIndex => "1",
    slice1_native_lb_Cache_group_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_native_lb_Cache_group_id_r",
      RegMem => "RegField",
      Description => "Cache group id",
      Width => "13", # Excel Formula: =calc_field_width_define("RES_L2_DLPA_OR_ECMP_WIDTH")
      Position => "12:0", # Excel Formula: =calc_position(F19,E20,TRUE)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice1_native_lb_Cache_group_size_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_native_lb_Cache_group_size_r",
      RegMem => "RegField",
      Description => "Next group size to be written in the prev-group-size-table",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "21:13", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice1_native_lb_Removed_member_id_valid_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_native_lb_Removed_member_id_valid_r",
      RegMem => "RegField",
      Description => "Removed member ID field is valid. If valid it means that the group-size decreased by one",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F21,E22)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "b0",
    },
    slice1_native_lb_Removed_member_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_native_lb_Removed_member_id_r",
      RegMem => "RegField",
      Description => "Removed member ID",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "31:23", # Excel Formula: =calc_position(F22,E23)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
  },
  slice0_native_lb_Consistence_cache_count => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_native_lb_Consistence_cache_count",
    RegMem => "Reg",
    Address => "107", # Excel Formula: =calc_reg_address(C19,A19,G19)
    Description => "Number of elements currently in cache",
    Width => "12", # Excel Formula: =calc_reg_width(E25:E25,F25)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "0",
    slice0_native_lb_Consistence_cache_count_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_native_lb_Consistence_cache_count_r",
      RegMem => "RegField",
      Description => "counts number of elements currently in cache. Can be zeroize by CPU when cpu-cache-empting",
      Width => "12", # Excel Formula: =calc_field_width_define("RES_LB_KEY_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "External",
      Comments => "counts number of valid members currently in cache",
    },
  },
  slice1_native_lb_Consistence_cache_count => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_native_lb_Consistence_cache_count",
    RegMem => "Reg",
    Address => "108",
    Description => "Number of elements currently in cache",
    Width => "12", # Excel Formula: =calc_reg_width(E25:E25,F25)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "1",
    slice1_native_lb_Consistence_cache_count_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_native_lb_Consistence_cache_count_r",
      RegMem => "RegField",
      Description => "counts number of elements currently in cache. Can be zeroize by CPU when cpu-cache-empting",
      Width => "12", # Excel Formula: =calc_field_width_define("RES_LB_KEY_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "External",
      Comments => "counts number of valid members currently in cache",
    },
  },
  slice0_native_lb_Consistence_timer_value => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_native_lb_Consistence_timer_value",
    RegMem => "Reg",
    Address => "109", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "current Timer-value",
    Width => "32", # Excel Formula: =calc_reg_width(E27:E27,F27)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "0",
    slice0_native_lb_Consistence_timer_value_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_native_lb_Consistence_timer_value_r",
      RegMem => "RegField",
      Description => "holds the current timer value. If equals 0 it mean the timer is not currently active",
      Width => "32", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_TIMER_WIDTH")
      Position => "31:0", # Excel Formula: =calc_position(F26,E27,TRUE)
      Type => "External",
    },
  },
  slice1_native_lb_Consistence_timer_value => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_native_lb_Consistence_timer_value",
    RegMem => "Reg",
    Address => "10A",
    Description => "current Timer-value",
    Width => "32", # Excel Formula: =calc_reg_width(E27:E27,F27)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "1",
    slice1_native_lb_Consistence_timer_value_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_native_lb_Consistence_timer_value_r",
      RegMem => "RegField",
      Description => "holds the current timer value. If equals 0 it mean the timer is not currently active",
      Width => "32", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_TIMER_WIDTH")
      Position => "31:0", # Excel Formula: =calc_position(F26,E27,TRUE)
      Type => "External",
    },
  },
  slice0_path_lb_Consistency_Cache_Attributes => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_path_lb_Consistency_Cache_Attributes",
    RegMem => "Reg",
    Address => "10B", # Excel Formula: =calc_reg_address(C26,A26,G26)
    Description => "Consistency_Cache_Attributes",
    Width => "32", # Excel Formula: =calc_reg_width(E29:E32,F32)
    Type => "Config",
    Comments => "msb is timer_is_active
lsbs are {Cache-group-id, Next-group-size}.
Cpu-write-cmd will start the timer if not currently running",
    ArrayLength => "2",
    ArrayIndex => "0",
    slice0_path_lb_Cache_group_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_path_lb_Cache_group_id_r",
      RegMem => "RegField",
      Description => "Cache group id",
      Width => "13", # Excel Formula: =calc_field_width_define("RES_TUNNEL_ECMP_WIDTH")
      Position => "12:0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice0_path_lb_Cache_group_size_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_path_lb_Cache_group_size_r",
      RegMem => "RegField",
      Description => "Next group size to be written in the prev-group-size-table",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "21:13", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice0_path_lb_Removed_member_id_valid_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_path_lb_Removed_member_id_valid_r",
      RegMem => "RegField",
      Description => "Removed member ID field is valid. If valid it means that the group-size decreased by one",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "b0",
    },
    slice0_path_lb_Removed_member_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_path_lb_Removed_member_id_r",
      RegMem => "RegField",
      Description => "Removed member ID",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "31:23", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
  },
  slice1_path_lb_Consistency_Cache_Attributes => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_path_lb_Consistency_Cache_Attributes",
    RegMem => "Reg",
    Address => "10C",
    Description => "Consistency_Cache_Attributes",
    Width => "32", # Excel Formula: =calc_reg_width(E29:E32,F32)
    Type => "Config",
    Comments => "msb is timer_is_active
lsbs are {Cache-group-id, Next-group-size}.
Cpu-write-cmd will start the timer if not currently running",
    ArrayLength => "2",
    ArrayIndex => "1",
    slice1_path_lb_Cache_group_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_path_lb_Cache_group_id_r",
      RegMem => "RegField",
      Description => "Cache group id",
      Width => "13", # Excel Formula: =calc_field_width_define("RES_TUNNEL_ECMP_WIDTH")
      Position => "12:0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice1_path_lb_Cache_group_size_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_path_lb_Cache_group_size_r",
      RegMem => "RegField",
      Description => "Next group size to be written in the prev-group-size-table",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "21:13", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice1_path_lb_Removed_member_id_valid_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_path_lb_Removed_member_id_valid_r",
      RegMem => "RegField",
      Description => "Removed member ID field is valid. If valid it means that the group-size decreased by one",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "b0",
    },
    slice1_path_lb_Removed_member_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_path_lb_Removed_member_id_r",
      RegMem => "RegField",
      Description => "Removed member ID",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "31:23", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
  },
  slice0_path_lb_Consistence_cache_count => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_path_lb_Consistence_cache_count",
    RegMem => "Reg",
    Address => "10D", # Excel Formula: =calc_reg_address(C28,A28,G28)
    Description => "Number of elements currently in cache",
    Width => "12", # Excel Formula: =calc_reg_width(E34:E34,F34)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "0",
    slice0_path_lb_Consistence_cache_count_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_path_lb_Consistence_cache_count_r",
      RegMem => "RegField",
      Description => "counts number of elements currently in cache. Can be zeroize by CPU when cpu-cache-empting",
      Width => "12", # Excel Formula: =calc_field_width_define("RES_LB_KEY_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F33,E34,TRUE)
      Type => "External",
      Comments => "counts number of valid members currently in cache",
    },
  },
  slice1_path_lb_Consistence_cache_count => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_path_lb_Consistence_cache_count",
    RegMem => "Reg",
    Address => "10E",
    Description => "Number of elements currently in cache",
    Width => "12", # Excel Formula: =calc_reg_width(E34:E34,F34)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "1",
    slice1_path_lb_Consistence_cache_count_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_path_lb_Consistence_cache_count_r",
      RegMem => "RegField",
      Description => "counts number of elements currently in cache. Can be zeroize by CPU when cpu-cache-empting",
      Width => "12", # Excel Formula: =calc_field_width_define("RES_LB_KEY_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F33,E34,TRUE)
      Type => "External",
      Comments => "counts number of valid members currently in cache",
    },
  },
  slice0_path_lb_Consistence_timer_value => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_path_lb_Consistence_timer_value",
    RegMem => "Reg",
    Address => "10F", # Excel Formula: =calc_reg_address(C33,A33,G33)
    Description => "current Timer-value",
    Width => "32", # Excel Formula: =calc_reg_width(E36:E36,F36)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "0",
    slice0_path_lb_Consistence_timer_value_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_path_lb_Consistence_timer_value_r",
      RegMem => "RegField",
      Description => "holds the current timer value. If equals 0 it mean the timer is not currently active",
      Width => "32", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_TIMER_WIDTH")
      Position => "31:0", # Excel Formula: =calc_position(F35,E36,TRUE)
      Type => "External",
    },
  },
  slice1_path_lb_Consistence_timer_value => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_path_lb_Consistence_timer_value",
    RegMem => "Reg",
    Address => "110",
    Description => "current Timer-value",
    Width => "32", # Excel Formula: =calc_reg_width(E36:E36,F36)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "1",
    slice1_path_lb_Consistence_timer_value_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_path_lb_Consistence_timer_value_r",
      RegMem => "RegField",
      Description => "holds the current timer value. If equals 0 it mean the timer is not currently active",
      Width => "32", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_TIMER_WIDTH")
      Position => "31:0", # Excel Formula: =calc_position(F35,E36,TRUE)
      Type => "External",
    },
  },
  slice0_port_npp_lb_Consistency_Cache_Attributes => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_port_npp_lb_Consistency_Cache_Attributes",
    RegMem => "Reg",
    Address => "111", # Excel Formula: =calc_reg_address(C35,A35,G35)
    Description => "Consistency_Cache_Attributes",
    Width => "32", # Excel Formula: =calc_reg_width(E38:E41,F41)
    Type => "Config",
    Comments => "msb is timer_is_active
lsbs are {Cache-group-id, Next-group-size}.
Cpu-write-cmd will start the timer if not currently running",
    ArrayLength => "2",
    ArrayIndex => "0",
    slice0_port_npp_lb_Cache_group_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_port_npp_lb_Cache_group_id_r",
      RegMem => "RegField",
      Description => "Cache group id",
      Width => "13", # Excel Formula: =calc_field_width_define("RES_NPP_LB_GROUP_ID_WIDTH")
      Position => "12:0", # Excel Formula: =calc_position(F37,E38,TRUE)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice0_port_npp_lb_Cache_group_size_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_port_npp_lb_Cache_group_size_r",
      RegMem => "RegField",
      Description => "Next group size to be written in the prev-group-size-table",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "21:13", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice0_port_npp_lb_Removed_member_id_valid_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_port_npp_lb_Removed_member_id_valid_r",
      RegMem => "RegField",
      Description => "Removed member ID field is valid. If valid it means that the group-size decreased by one",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "b0",
    },
    slice0_port_npp_lb_Removed_member_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_port_npp_lb_Removed_member_id_r",
      RegMem => "RegField",
      Description => "Removed member ID",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "31:23", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
  },
  slice1_port_npp_lb_Consistency_Cache_Attributes => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_port_npp_lb_Consistency_Cache_Attributes",
    RegMem => "Reg",
    Address => "112",
    Description => "Consistency_Cache_Attributes",
    Width => "32", # Excel Formula: =calc_reg_width(E38:E41,F41)
    Type => "Config",
    Comments => "msb is timer_is_active
lsbs are {Cache-group-id, Next-group-size}.
Cpu-write-cmd will start the timer if not currently running",
    ArrayLength => "2",
    ArrayIndex => "1",
    slice1_port_npp_lb_Cache_group_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_port_npp_lb_Cache_group_id_r",
      RegMem => "RegField",
      Description => "Cache group id",
      Width => "13", # Excel Formula: =calc_field_width_define("RES_NPP_LB_GROUP_ID_WIDTH")
      Position => "12:0", # Excel Formula: =calc_position(F37,E38,TRUE)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice1_port_npp_lb_Cache_group_size_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_port_npp_lb_Cache_group_size_r",
      RegMem => "RegField",
      Description => "Next group size to be written in the prev-group-size-table",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "21:13", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice1_port_npp_lb_Removed_member_id_valid_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_port_npp_lb_Removed_member_id_valid_r",
      RegMem => "RegField",
      Description => "Removed member ID field is valid. If valid it means that the group-size decreased by one",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F39,E40)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "b0",
    },
    slice1_port_npp_lb_Removed_member_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_port_npp_lb_Removed_member_id_r",
      RegMem => "RegField",
      Description => "Removed member ID",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "31:23", # Excel Formula: =calc_position(F40,E41)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
  },
  slice0_port_npp_lb_Consistence_cache_count => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_port_npp_lb_Consistence_cache_count",
    RegMem => "Reg",
    Address => "113", # Excel Formula: =calc_reg_address(C37,A37,G37)
    Description => "Number of elements currently in cache",
    Width => "12", # Excel Formula: =calc_reg_width(E43:E43,F43)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "0",
    slice0_port_npp_lb_Consistence_cache_count_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_port_npp_lb_Consistence_cache_count_r",
      RegMem => "RegField",
      Description => "counts number of elements currently in cache",
      Width => "12", # Excel Formula: =calc_field_width_define("RES_LB_KEY_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F42,E43,TRUE)
      Type => "External",
      Comments => "counts number of valid members currently in cache",
    },
  },
  slice1_port_npp_lb_Consistence_cache_count => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_port_npp_lb_Consistence_cache_count",
    RegMem => "Reg",
    Address => "114",
    Description => "Number of elements currently in cache",
    Width => "12", # Excel Formula: =calc_reg_width(E43:E43,F43)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "1",
    slice1_port_npp_lb_Consistence_cache_count_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_port_npp_lb_Consistence_cache_count_r",
      RegMem => "RegField",
      Description => "counts number of elements currently in cache",
      Width => "12", # Excel Formula: =calc_field_width_define("RES_LB_KEY_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F42,E43,TRUE)
      Type => "External",
      Comments => "counts number of valid members currently in cache",
    },
  },
  slice0_port_npp_lb_Consistence_timer_value => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_port_npp_lb_Consistence_timer_value",
    RegMem => "Reg",
    Address => "115", # Excel Formula: =calc_reg_address(C42,A42,G42)
    Description => "current Timer-value",
    Width => "32", # Excel Formula: =calc_reg_width(E45:E45,F45)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "0",
    slice0_port_npp_lb_Consistence_timer_value_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_port_npp_lb_Consistence_timer_value_r",
      RegMem => "RegField",
      Description => "holds the current timer value. If equals 0 it mean the timer is not currently active",
      Width => "32", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_TIMER_WIDTH")
      Position => "31:0", # Excel Formula: =calc_position(F44,E45,TRUE)
      Type => "External",
    },
  },
  slice1_port_npp_lb_Consistence_timer_value => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_port_npp_lb_Consistence_timer_value",
    RegMem => "Reg",
    Address => "116",
    Description => "current Timer-value",
    Width => "32", # Excel Formula: =calc_reg_width(E45:E45,F45)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "1",
    slice1_port_npp_lb_Consistence_timer_value_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_port_npp_lb_Consistence_timer_value_r",
      RegMem => "RegField",
      Description => "holds the current timer value. If equals 0 it mean the timer is not currently active",
      Width => "32", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_TIMER_WIDTH")
      Position => "31:0", # Excel Formula: =calc_position(F44,E45,TRUE)
      Type => "External",
    },
  },
  slice0_port_dsp_lb_Consistency_Cache_Attributes => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_port_dsp_lb_Consistency_Cache_Attributes",
    RegMem => "Reg",
    Address => "117", # Excel Formula: =calc_reg_address(C44,A44,G44)
    Description => "Consistency_Cache_Attributes",
    Width => "32", # Excel Formula: =calc_reg_width(E47:E50,F50)
    Type => "Config",
    Comments => "msb is timer_is_active
lsbs are {Cache-group-id, Next-group-size}.
Cpu-write-cmd will start the timer if not currently running",
    ArrayLength => "2",
    ArrayIndex => "0",
    slice0_port_dsp_lb_Cache_group_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_port_dsp_lb_Cache_group_id_r",
      RegMem => "RegField",
      Description => "Cache group id",
      Width => "13", # Excel Formula: =calc_field_width_define("RES_DSPA_WIDTH")
      Position => "12:0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice0_port_dsp_lb_Cache_group_size_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_port_dsp_lb_Cache_group_size_r",
      RegMem => "RegField",
      Description => "Next group size to be written in the prev-group-size-table",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "21:13", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice0_port_dsp_lb_Removed_member_id_valid_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_port_dsp_lb_Removed_member_id_valid_r",
      RegMem => "RegField",
      Description => "Removed member ID field is valid. If valid it means that the group-size decreased by one",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "b0",
    },
    slice0_port_dsp_lb_Removed_member_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_port_dsp_lb_Removed_member_id_r",
      RegMem => "RegField",
      Description => "Removed member ID",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "31:23", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
  },
  slice1_port_dsp_lb_Consistency_Cache_Attributes => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_port_dsp_lb_Consistency_Cache_Attributes",
    RegMem => "Reg",
    Address => "118",
    Description => "Consistency_Cache_Attributes",
    Width => "32", # Excel Formula: =calc_reg_width(E47:E50,F50)
    Type => "Config",
    Comments => "msb is timer_is_active
lsbs are {Cache-group-id, Next-group-size}.
Cpu-write-cmd will start the timer if not currently running",
    ArrayLength => "2",
    ArrayIndex => "1",
    slice1_port_dsp_lb_Cache_group_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_port_dsp_lb_Cache_group_id_r",
      RegMem => "RegField",
      Description => "Cache group id",
      Width => "13", # Excel Formula: =calc_field_width_define("RES_DSPA_WIDTH")
      Position => "12:0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice1_port_dsp_lb_Cache_group_size_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_port_dsp_lb_Cache_group_size_r",
      RegMem => "RegField",
      Description => "Next group size to be written in the prev-group-size-table",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "21:13", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
    slice1_port_dsp_lb_Removed_member_id_valid_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_port_dsp_lb_Removed_member_id_valid_r",
      RegMem => "RegField",
      Description => "Removed member ID field is valid. If valid it means that the group-size decreased by one",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "b0",
    },
    slice1_port_dsp_lb_Removed_member_id_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_port_dsp_lb_Removed_member_id_r",
      RegMem => "RegField",
      Description => "Removed member ID",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "31:23", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "res",
      DefaultValue => "d0",
    },
  },
  slice0_port_dsp_lb_Consistence_cache_count => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_port_dsp_lb_Consistence_cache_count",
    RegMem => "Reg",
    Address => "119", # Excel Formula: =calc_reg_address(C46,A46,G46)
    Description => "Number of elements currently in cache",
    Width => "12", # Excel Formula: =calc_reg_width(E52:E52,F52)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "0",
    slice0_port_dsp_lb_Consistence_cache_count_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_port_dsp_lb_Consistence_cache_count_r",
      RegMem => "RegField",
      Description => "counts number of elements currently in cache",
      Width => "12", # Excel Formula: =calc_field_width_define("RES_LB_KEY_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F51,E52,TRUE)
      Type => "External",
      Comments => "counts number of valid members currently in cache",
    },
  },
  slice1_port_dsp_lb_Consistence_cache_count => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_port_dsp_lb_Consistence_cache_count",
    RegMem => "Reg",
    Address => "11A",
    Description => "Number of elements currently in cache",
    Width => "12", # Excel Formula: =calc_reg_width(E52:E52,F52)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "1",
    slice1_port_dsp_lb_Consistence_cache_count_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_port_dsp_lb_Consistence_cache_count_r",
      RegMem => "RegField",
      Description => "counts number of elements currently in cache",
      Width => "12", # Excel Formula: =calc_field_width_define("RES_LB_KEY_WIDTH")
      Position => "11:0", # Excel Formula: =calc_position(F51,E52,TRUE)
      Type => "External",
      Comments => "counts number of valid members currently in cache",
    },
  },
  slice0_port_dsp_lb_Consistence_timer_value => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_port_dsp_lb_Consistence_timer_value",
    RegMem => "Reg",
    Address => "11B", # Excel Formula: =calc_reg_address(C51,A51,G51)
    Description => "current Timer-value",
    Width => "32", # Excel Formula: =calc_reg_width(E54:E54,F54)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "0",
    slice0_port_dsp_lb_Consistence_timer_value_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_port_dsp_lb_Consistence_timer_value_r",
      RegMem => "RegField",
      Description => "holds the current timer value. If equals 0 it mean the timer is not currently active",
      Width => "32", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_TIMER_WIDTH")
      Position => "31:0", # Excel Formula: =calc_position(F53,E54,TRUE)
      Type => "External",
    },
  },
  slice1_port_dsp_lb_Consistence_timer_value => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_port_dsp_lb_Consistence_timer_value",
    RegMem => "Reg",
    Address => "11C",
    Description => "current Timer-value",
    Width => "32", # Excel Formula: =calc_reg_width(E54:E54,F54)
    Type => "External",
    UsedBy => "res",
    ArrayLength => "2",
    ArrayIndex => "1",
    slice1_port_dsp_lb_Consistence_timer_value_r => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_port_dsp_lb_Consistence_timer_value_r",
      RegMem => "RegField",
      Description => "holds the current timer value. If equals 0 it mean the timer is not currently active",
      Width => "32", # Excel Formula: =calc_field_width_define("RES_LB_CONSISTENCE_TIMER_WIDTH")
      Position => "31:0", # Excel Formula: =calc_position(F53,E54,TRUE)
      Type => "External",
    },
  },
  idb_interrupts => { #Structure Type: Reg;
    Name => "idb_interrupts",
    RegMem => "Reg",
    Address => "11D", # Excel Formula: =calc_reg_address(C53,A53,G53)
    Description => "idb_interrupts",
    Width => "21", # Excel Formula: =calc_reg_width(E56:E76,F76)
    Type => "Interrupt",
    slice0_native_lb_member_table_em_miss => { #Structure Type: RegField;
      Name => "slice0_native_lb_member_table_em_miss",
      RegMem => "RegField",
      Description => "1' if no hit in the native-path-lb-emdb",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F55,E56,TRUE)
      Type => "Interrupt",
      UsedBy => "res",
    },
    slice0_path_lb_member_table_em_miss => { #Structure Type: RegField;
      Name => "slice0_path_lb_member_table_em_miss",
      RegMem => "RegField",
      Description => "1' if no hit in the npp-lag-lb-emdb",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F56,E57)
      Type => "Interrupt",
      UsedBy => "res",
    },
    slice0_port_npp_lb_member_table_em_miss => { #Structure Type: RegField;
      Name => "slice0_port_npp_lb_member_table_em_miss",
      RegMem => "RegField",
      Description => "1' if no hit in the native-path-lb-emdb",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F57,E58)
      Type => "Interrupt",
      UsedBy => "res",
    },
    slice0_port_dsp_lb_member_table_em_miss => { #Structure Type: RegField;
      Name => "slice0_port_dsp_lb_member_table_em_miss",
      RegMem => "RegField",
      Description => "1' if no hit in the npp-lag-lb-emdb",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F58,E59)
      Type => "Interrupt",
      UsedBy => "res",
    },
    slice0_native_protection_table_type_not_valid => { #Structure Type: RegField;
      Name => "slice0_native_protection_table_type_not_valid",
      RegMem => "RegField",
      Description => "set when protection-type is 1+1",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F59,E60)
      Type => "Interrupt",
      UsedBy => "res",
    },
    slice0_path_protection_table_type_not_valid => { #Structure Type: RegField;
      Name => "slice0_path_protection_table_type_not_valid",
      RegMem => "RegField",
      Description => "set when protection-type is 1+1",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F60,E61)
      Type => "Interrupt",
      UsedBy => "res",
    },
    slice1_native_lb_member_table_em_miss => { #Structure Type: RegField;
      Name => "slice1_native_lb_member_table_em_miss",
      RegMem => "RegField",
      Description => "1' if no hit in the native-path-lb-emdb",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F61,E62)
      Type => "Interrupt",
      UsedBy => "res",
    },
    slice1_path_lb_member_table_em_miss => { #Structure Type: RegField;
      Name => "slice1_path_lb_member_table_em_miss",
      RegMem => "RegField",
      Description => "1' if no hit in the npp-lag-lb-emdb",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F62,E63)
      Type => "Interrupt",
      UsedBy => "res",
    },
    slice1_port_npp_lb_member_table_em_miss => { #Structure Type: RegField;
      Name => "slice1_port_npp_lb_member_table_em_miss",
      RegMem => "RegField",
      Description => "1' if no hit in the native-path-lb-emdb",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F63,E64)
      Type => "Interrupt",
      UsedBy => "res",
    },
    slice1_port_dsp_lb_member_table_em_miss => { #Structure Type: RegField;
      Name => "slice1_port_dsp_lb_member_table_em_miss",
      RegMem => "RegField",
      Description => "1' if no hit in the npp-lag-lb-emdb",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F64,E65)
      Type => "Interrupt",
      UsedBy => "res",
    },
    slice1_native_protection_table_type_not_valid => { #Structure Type: RegField;
      Name => "slice1_native_protection_table_type_not_valid",
      RegMem => "RegField",
      Description => "set when protection-type is 1+1",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F65,E66)
      Type => "Interrupt",
      UsedBy => "res",
    },
    slice1_path_protection_table_type_not_valid => { #Structure Type: RegField;
      Name => "slice1_path_protection_table_type_not_valid",
      RegMem => "RegField",
      Description => "set when protection-type is 1+1",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F66,E67)
      Type => "Interrupt",
      UsedBy => "res",
    },
    type_decoding_error_native_fec_logic_id_0 => { #Structure Type: RegField;
      Name => "type_decoding_error_native_fec_logic_id_0",
      RegMem => "RegField",
      Description => "set when (vb_size + vb_shift > entry_width)",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F67,E68)
      Type => "Interrupt",
      UsedBy => "res",
    },
    type_decoding_error_native_lb_logic_id_1 => { #Structure Type: RegField;
      Name => "type_decoding_error_native_lb_logic_id_1",
      RegMem => "RegField",
      Description => "set when (vb_size + vb_shift > entry_width)",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F68,E69)
      Type => "Interrupt",
      UsedBy => "res",
    },
    type_decoding_error_native_l2_lp_logic_id_2 => { #Structure Type: RegField;
      Name => "type_decoding_error_native_l2_lp_logic_id_2",
      RegMem => "RegField",
      Description => "set when (vb_size + vb_shift > entry_width)",
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F69,E70)
      Type => "Interrupt",
      UsedBy => "res",
    },
    type_decoding_error_native_l3_lp_logic_id_3 => { #Structure Type: RegField;
      Name => "type_decoding_error_native_l3_lp_logic_id_3",
      RegMem => "RegField",
      Description => "set when (vb_size + vb_shift > entry_width)",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F70,E71)
      Type => "Interrupt",
      UsedBy => "res",
    },
    type_decoding_error_native_frr_logic_id_4 => { #Structure Type: RegField;
      Name => "type_decoding_error_native_frr_logic_id_4",
      RegMem => "RegField",
      Description => "set when (vb_size + vb_shift > entry_width)",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F71,E72)
      Type => "Interrupt",
      UsedBy => "res",
    },
    type_decoding_error_path_lb_logic_id_5 => { #Structure Type: RegField;
      Name => "type_decoding_error_path_lb_logic_id_5",
      RegMem => "RegField",
      Description => "set when (vb_size + vb_shift > entry_width)",
      Width => "1",
      Position => "17", # Excel Formula: =calc_position(F72,E73)
      Type => "Interrupt",
      UsedBy => "res",
    },
    type_decoding_error_path_tunnel_dlp_logic_id_6 => { #Structure Type: RegField;
      Name => "type_decoding_error_path_tunnel_dlp_logic_id_6",
      RegMem => "RegField",
      Description => "set when (vb_size + vb_shift > entry_width)",
      Width => "1",
      Position => "18", # Excel Formula: =calc_position(F73,E74)
      Type => "Interrupt",
      UsedBy => "res",
    },
    type_decoding_error_port_npp_lb_logic_id_7 => { #Structure Type: RegField;
      Name => "type_decoding_error_port_npp_lb_logic_id_7",
      RegMem => "RegField",
      Description => "set when (vb_size + vb_shift > entry_width)",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F74,E75)
      Type => "Interrupt",
      UsedBy => "res",
    },
    type_decoding_error_port_dsp_lb_logic_id_8 => { #Structure Type: RegField;
      Name => "type_decoding_error_port_dsp_lb_logic_id_8",
      RegMem => "RegField",
      Description => "set when (vb_size + vb_shift > entry_width)",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F75,E76)
      Type => "Interrupt",
      UsedBy => "res",
    },
  },
  idb_interruptsMask => { #Structure Type: Reg; Skip Register;
    Name => "idb_interruptsMask",
    RegMem => "Reg",
    Address => "11E",
    Description => "This register masks idb_interrupts interrupt register",
    Width => "21", # Excel Formula: =calc_reg_width(E56:E76,F76)
    Type => "InterruptMask",
    DefaultValue => "b0",
    slice0_native_lb_member_table_em_missMask => { #Structure Type: RegField;
      Name => "slice0_native_lb_member_table_em_missMask",
      RegMem => "RegField",
      Description => "This field masks slice0_native_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F55,E56,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice0_path_lb_member_table_em_missMask => { #Structure Type: RegField;
      Name => "slice0_path_lb_member_table_em_missMask",
      RegMem => "RegField",
      Description => "This field masks slice0_path_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F56,E57)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice0_port_npp_lb_member_table_em_missMask => { #Structure Type: RegField;
      Name => "slice0_port_npp_lb_member_table_em_missMask",
      RegMem => "RegField",
      Description => "This field masks slice0_port_npp_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F57,E58)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice0_port_dsp_lb_member_table_em_missMask => { #Structure Type: RegField;
      Name => "slice0_port_dsp_lb_member_table_em_missMask",
      RegMem => "RegField",
      Description => "This field masks slice0_port_dsp_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F58,E59)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice0_native_protection_table_type_not_validMask => { #Structure Type: RegField;
      Name => "slice0_native_protection_table_type_not_validMask",
      RegMem => "RegField",
      Description => "This field masks slice0_native_protection_table_type_not_valid interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F59,E60)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice0_path_protection_table_type_not_validMask => { #Structure Type: RegField;
      Name => "slice0_path_protection_table_type_not_validMask",
      RegMem => "RegField",
      Description => "This field masks slice0_path_protection_table_type_not_valid interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F60,E61)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice1_native_lb_member_table_em_missMask => { #Structure Type: RegField;
      Name => "slice1_native_lb_member_table_em_missMask",
      RegMem => "RegField",
      Description => "This field masks slice1_native_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F61,E62)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice1_path_lb_member_table_em_missMask => { #Structure Type: RegField;
      Name => "slice1_path_lb_member_table_em_missMask",
      RegMem => "RegField",
      Description => "This field masks slice1_path_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F62,E63)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice1_port_npp_lb_member_table_em_missMask => { #Structure Type: RegField;
      Name => "slice1_port_npp_lb_member_table_em_missMask",
      RegMem => "RegField",
      Description => "This field masks slice1_port_npp_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F63,E64)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice1_port_dsp_lb_member_table_em_missMask => { #Structure Type: RegField;
      Name => "slice1_port_dsp_lb_member_table_em_missMask",
      RegMem => "RegField",
      Description => "This field masks slice1_port_dsp_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F64,E65)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice1_native_protection_table_type_not_validMask => { #Structure Type: RegField;
      Name => "slice1_native_protection_table_type_not_validMask",
      RegMem => "RegField",
      Description => "This field masks slice1_native_protection_table_type_not_valid interrupt",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F65,E66)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice1_path_protection_table_type_not_validMask => { #Structure Type: RegField;
      Name => "slice1_path_protection_table_type_not_validMask",
      RegMem => "RegField",
      Description => "This field masks slice1_path_protection_table_type_not_valid interrupt",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F66,E67)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_native_fec_logic_id_0Mask => { #Structure Type: RegField;
      Name => "type_decoding_error_native_fec_logic_id_0Mask",
      RegMem => "RegField",
      Description => "This field masks type_decoding_error_native_fec_logic_id_0 interrupt",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F67,E68)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_native_lb_logic_id_1Mask => { #Structure Type: RegField;
      Name => "type_decoding_error_native_lb_logic_id_1Mask",
      RegMem => "RegField",
      Description => "This field masks type_decoding_error_native_lb_logic_id_1 interrupt",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F68,E69)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_native_l2_lp_logic_id_2Mask => { #Structure Type: RegField;
      Name => "type_decoding_error_native_l2_lp_logic_id_2Mask",
      RegMem => "RegField",
      Description => "This field masks type_decoding_error_native_l2_lp_logic_id_2 interrupt",
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F69,E70)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_native_l3_lp_logic_id_3Mask => { #Structure Type: RegField;
      Name => "type_decoding_error_native_l3_lp_logic_id_3Mask",
      RegMem => "RegField",
      Description => "This field masks type_decoding_error_native_l3_lp_logic_id_3 interrupt",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F70,E71)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_native_frr_logic_id_4Mask => { #Structure Type: RegField;
      Name => "type_decoding_error_native_frr_logic_id_4Mask",
      RegMem => "RegField",
      Description => "This field masks type_decoding_error_native_frr_logic_id_4 interrupt",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F71,E72)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_path_lb_logic_id_5Mask => { #Structure Type: RegField;
      Name => "type_decoding_error_path_lb_logic_id_5Mask",
      RegMem => "RegField",
      Description => "This field masks type_decoding_error_path_lb_logic_id_5 interrupt",
      Width => "1",
      Position => "17", # Excel Formula: =calc_position(F72,E73)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_path_tunnel_dlp_logic_id_6Mask => { #Structure Type: RegField;
      Name => "type_decoding_error_path_tunnel_dlp_logic_id_6Mask",
      RegMem => "RegField",
      Description => "This field masks type_decoding_error_path_tunnel_dlp_logic_id_6 interrupt",
      Width => "1",
      Position => "18", # Excel Formula: =calc_position(F73,E74)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_port_npp_lb_logic_id_7Mask => { #Structure Type: RegField;
      Name => "type_decoding_error_port_npp_lb_logic_id_7Mask",
      RegMem => "RegField",
      Description => "This field masks type_decoding_error_port_npp_lb_logic_id_7 interrupt",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F74,E75)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_port_dsp_lb_logic_id_8Mask => { #Structure Type: RegField;
      Name => "type_decoding_error_port_dsp_lb_logic_id_8Mask",
      RegMem => "RegField",
      Description => "This field masks type_decoding_error_port_dsp_lb_logic_id_8 interrupt",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F75,E76)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  idb_interruptsTest => { #Structure Type: Reg; Skip Register;
    Name => "idb_interruptsTest",
    RegMem => "Reg",
    Address => "11F",
    Description => "This register tests idb_interrupts interrupt register",
    Width => "21", # Excel Formula: =calc_reg_width(E56:E76,F76)
    Type => "InterruptTest",
    DefaultValue => "b0",
    slice0_native_lb_member_table_em_missTest => { #Structure Type: RegField;
      Name => "slice0_native_lb_member_table_em_missTest",
      RegMem => "RegField",
      Description => "This field tests slice0_native_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F55,E56,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice0_path_lb_member_table_em_missTest => { #Structure Type: RegField;
      Name => "slice0_path_lb_member_table_em_missTest",
      RegMem => "RegField",
      Description => "This field tests slice0_path_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F56,E57)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice0_port_npp_lb_member_table_em_missTest => { #Structure Type: RegField;
      Name => "slice0_port_npp_lb_member_table_em_missTest",
      RegMem => "RegField",
      Description => "This field tests slice0_port_npp_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F57,E58)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice0_port_dsp_lb_member_table_em_missTest => { #Structure Type: RegField;
      Name => "slice0_port_dsp_lb_member_table_em_missTest",
      RegMem => "RegField",
      Description => "This field tests slice0_port_dsp_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F58,E59)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice0_native_protection_table_type_not_validTest => { #Structure Type: RegField;
      Name => "slice0_native_protection_table_type_not_validTest",
      RegMem => "RegField",
      Description => "This field tests slice0_native_protection_table_type_not_valid interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F59,E60)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice0_path_protection_table_type_not_validTest => { #Structure Type: RegField;
      Name => "slice0_path_protection_table_type_not_validTest",
      RegMem => "RegField",
      Description => "This field tests slice0_path_protection_table_type_not_valid interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F60,E61)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice1_native_lb_member_table_em_missTest => { #Structure Type: RegField;
      Name => "slice1_native_lb_member_table_em_missTest",
      RegMem => "RegField",
      Description => "This field tests slice1_native_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F61,E62)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice1_path_lb_member_table_em_missTest => { #Structure Type: RegField;
      Name => "slice1_path_lb_member_table_em_missTest",
      RegMem => "RegField",
      Description => "This field tests slice1_path_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F62,E63)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice1_port_npp_lb_member_table_em_missTest => { #Structure Type: RegField;
      Name => "slice1_port_npp_lb_member_table_em_missTest",
      RegMem => "RegField",
      Description => "This field tests slice1_port_npp_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F63,E64)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice1_port_dsp_lb_member_table_em_missTest => { #Structure Type: RegField;
      Name => "slice1_port_dsp_lb_member_table_em_missTest",
      RegMem => "RegField",
      Description => "This field tests slice1_port_dsp_lb_member_table_em_miss interrupt",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F64,E65)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice1_native_protection_table_type_not_validTest => { #Structure Type: RegField;
      Name => "slice1_native_protection_table_type_not_validTest",
      RegMem => "RegField",
      Description => "This field tests slice1_native_protection_table_type_not_valid interrupt",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F65,E66)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    slice1_path_protection_table_type_not_validTest => { #Structure Type: RegField;
      Name => "slice1_path_protection_table_type_not_validTest",
      RegMem => "RegField",
      Description => "This field tests slice1_path_protection_table_type_not_valid interrupt",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F66,E67)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_native_fec_logic_id_0Test => { #Structure Type: RegField;
      Name => "type_decoding_error_native_fec_logic_id_0Test",
      RegMem => "RegField",
      Description => "This field tests type_decoding_error_native_fec_logic_id_0 interrupt",
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F67,E68)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_native_lb_logic_id_1Test => { #Structure Type: RegField;
      Name => "type_decoding_error_native_lb_logic_id_1Test",
      RegMem => "RegField",
      Description => "This field tests type_decoding_error_native_lb_logic_id_1 interrupt",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F68,E69)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_native_l2_lp_logic_id_2Test => { #Structure Type: RegField;
      Name => "type_decoding_error_native_l2_lp_logic_id_2Test",
      RegMem => "RegField",
      Description => "This field tests type_decoding_error_native_l2_lp_logic_id_2 interrupt",
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F69,E70)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_native_l3_lp_logic_id_3Test => { #Structure Type: RegField;
      Name => "type_decoding_error_native_l3_lp_logic_id_3Test",
      RegMem => "RegField",
      Description => "This field tests type_decoding_error_native_l3_lp_logic_id_3 interrupt",
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F70,E71)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_native_frr_logic_id_4Test => { #Structure Type: RegField;
      Name => "type_decoding_error_native_frr_logic_id_4Test",
      RegMem => "RegField",
      Description => "This field tests type_decoding_error_native_frr_logic_id_4 interrupt",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F71,E72)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_path_lb_logic_id_5Test => { #Structure Type: RegField;
      Name => "type_decoding_error_path_lb_logic_id_5Test",
      RegMem => "RegField",
      Description => "This field tests type_decoding_error_path_lb_logic_id_5 interrupt",
      Width => "1",
      Position => "17", # Excel Formula: =calc_position(F72,E73)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_path_tunnel_dlp_logic_id_6Test => { #Structure Type: RegField;
      Name => "type_decoding_error_path_tunnel_dlp_logic_id_6Test",
      RegMem => "RegField",
      Description => "This field tests type_decoding_error_path_tunnel_dlp_logic_id_6 interrupt",
      Width => "1",
      Position => "18", # Excel Formula: =calc_position(F73,E74)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_port_npp_lb_logic_id_7Test => { #Structure Type: RegField;
      Name => "type_decoding_error_port_npp_lb_logic_id_7Test",
      RegMem => "RegField",
      Description => "This field tests type_decoding_error_port_npp_lb_logic_id_7 interrupt",
      Width => "1",
      Position => "19", # Excel Formula: =calc_position(F74,E75)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    type_decoding_error_port_dsp_lb_logic_id_8Test => { #Structure Type: RegField;
      Name => "type_decoding_error_port_dsp_lb_logic_id_8Test",
      RegMem => "RegField",
      Description => "This field tests type_decoding_error_port_dsp_lb_logic_id_8 interrupt",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F75,E76)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  dest_decoding => { #Structure Type: Mem;
    Name => "dest_decoding",
    RegMem => "Mem",
    Address => "100000",
    Description => "destination_decoding",
    Width => "6", # Excel Formula: =calc_mem_width(E78:E79,M77,F79,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "32",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "6",
    next_stage => { #Structure Type: MemField;
      Name => "next_stage",
      RegMem => "MemField",
      Description => "next_stage",
      Width => "2", # Excel Formula: =calc_field_width_define("RES_STAGE_WIDTH")
      Position => "1:0", # Excel Formula: =calc_position(F77,E78,TRUE)
    },
    next_logic_id => { #Structure Type: MemField;
      Name => "next_logic_id",
      RegMem => "MemField",
      Description => "next_logic_id",
      Width => "4", # Excel Formula: =calc_field_width_define("RES_LOGIC_ID_WIDTH")
      Position => "5:2", # Excel Formula: =calc_position(F78,E79)
    },
  },
  type_decoding_native_fec_logic_id_0 => { #Structure Type: Mem;
    Name => "type_decoding_native_fec_logic_id_0",
    RegMem => "Mem",
    Address => "200000", # Excel Formula: =calc_mem_address(C77,A77,G80,L80)
    Description => "Native-Fec type decoding table",
    Width => "22", # Excel Formula: =calc_mem_width(E81:E84,M80,F84,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "16", # Excel Formula: =2^calc_field_width_define("RES_NATIVE_SUBSTAGE_0_TYPE_WIDTH")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    dest_size => { #Structure Type: MemField;
      Name => "dest_size",
      RegMem => "MemField",
      Description => "Destination width (according to Dest-encoding).  
For exampe:  for L2-DLP, Width  = 18",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_SIZE_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F80,E81,TRUE)
    },
    dest_mask => { #Structure Type: MemField;
      Name => "dest_mask",
      RegMem => "MemField",
      Description => "Destination mask (according to Dest-encoding).  
For exampe:  for L2-DLP, Mask  = 5'b10000",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_MASK_WIDTH")
      Position => "9:5", # Excel Formula: =calc_position(F81,E82)
    },
    vb_shift => { #Structure Type: MemField;
      Name => "vb_shift",
      RegMem => "MemField",
      Description => "Shift offset from the table-output-data-field",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SHIFT_WIDTH")
      Position => "15:10", # Excel Formula: =calc_position(F82,E83)
    },
    vb_size => { #Structure Type: MemField;
      Name => "vb_size",
      RegMem => "MemField",
      Description => "Number of valid bits of the output-data-field ",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SIZE_WIDTH")
      Position => "21:16", # Excel Formula: =calc_position(F83,E84)
    },
  },
  type_decoding_native_lb_logic_id_1 => { #Structure Type: Mem;
    Name => "type_decoding_native_lb_logic_id_1",
    RegMem => "Mem",
    Address => "300000", # Excel Formula: =calc_mem_address(C80,A80,G85,L85)
    Description => "Native-LB type decoding table",
    Width => "22", # Excel Formula: =calc_mem_width(E86:E89,M85,F89,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "16", # Excel Formula: =2^calc_field_width_define("RES_NATIVE_SUBSTAGE_1_TYPE_WIDTH")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    dest_size => { #Structure Type: MemField;
      Name => "dest_size",
      RegMem => "MemField",
      Description => "Destination width (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_SIZE_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F85,E86,TRUE)
    },
    dest_mask => { #Structure Type: MemField;
      Name => "dest_mask",
      RegMem => "MemField",
      Description => "Destination mask (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_MASK_WIDTH")
      Position => "9:5", # Excel Formula: =calc_position(F86,E87)
    },
    vb_shift => { #Structure Type: MemField;
      Name => "vb_shift",
      RegMem => "MemField",
      Description => "Shift offset from the table-output-data-field",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SHIFT_WIDTH")
      Position => "15:10", # Excel Formula: =calc_position(F87,E88)
    },
    vb_size => { #Structure Type: MemField;
      Name => "vb_size",
      RegMem => "MemField",
      Description => "Number of valid bits of the output-data-field ",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SIZE_WIDTH")
      Position => "21:16", # Excel Formula: =calc_position(F88,E89)
    },
  },
  type_decoding_native_l2_lp_logic_id_2 => { #Structure Type: Mem;
    Name => "type_decoding_native_l2_lp_logic_id_2",
    RegMem => "Mem",
    Address => "400000", # Excel Formula: =calc_mem_address(C85,A85,G90,L90)
    Description => "Native-L2-LP type decoding table",
    Width => "22", # Excel Formula: =calc_mem_width(E91:E94,M90,F94,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "16", # Excel Formula: =2^calc_field_width_define("RES_NATIVE_SUBSTAGE_2_TYPE_WIDTH")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    dest_size => { #Structure Type: MemField;
      Name => "dest_size",
      RegMem => "MemField",
      Description => "Destination width (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_SIZE_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F90,E91,TRUE)
    },
    dest_mask => { #Structure Type: MemField;
      Name => "dest_mask",
      RegMem => "MemField",
      Description => "Destination mask (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_MASK_WIDTH")
      Position => "9:5", # Excel Formula: =calc_position(F91,E92)
    },
    vb_shift => { #Structure Type: MemField;
      Name => "vb_shift",
      RegMem => "MemField",
      Description => "Shift offset from the table-output-data-field",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SHIFT_WIDTH")
      Position => "15:10", # Excel Formula: =calc_position(F92,E93)
    },
    vb_size => { #Structure Type: MemField;
      Name => "vb_size",
      RegMem => "MemField",
      Description => "Number of valid bits of the output-data-field ",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SIZE_WIDTH")
      Position => "21:16", # Excel Formula: =calc_position(F93,E94)
    },
  },
  type_decoding_native_l3_lp_logic_id_3 => { #Structure Type: Mem;
    Name => "type_decoding_native_l3_lp_logic_id_3",
    RegMem => "Mem",
    Address => "500000", # Excel Formula: =calc_mem_address(C90,A90,G95,L95)
    Description => "Native-L3-LP type decoding table",
    Width => "22", # Excel Formula: =calc_mem_width(E96:E99,M95,F99,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "16", # Excel Formula: =2^calc_field_width_define("RES_NATIVE_SUBSTAGE_2_TYPE_WIDTH")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    dest_size => { #Structure Type: MemField;
      Name => "dest_size",
      RegMem => "MemField",
      Description => "Destination width (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_SIZE_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F95,E96,TRUE)
    },
    dest_mask => { #Structure Type: MemField;
      Name => "dest_mask",
      RegMem => "MemField",
      Description => "Destination mask (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_MASK_WIDTH")
      Position => "9:5", # Excel Formula: =calc_position(F96,E97)
    },
    vb_shift => { #Structure Type: MemField;
      Name => "vb_shift",
      RegMem => "MemField",
      Description => "Shift offset from the table-output-data-field",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SHIFT_WIDTH")
      Position => "15:10", # Excel Formula: =calc_position(F97,E98)
    },
    vb_size => { #Structure Type: MemField;
      Name => "vb_size",
      RegMem => "MemField",
      Description => "Number of valid bits of the output-data-field ",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SIZE_WIDTH")
      Position => "21:16", # Excel Formula: =calc_position(F98,E99)
    },
  },
  type_decoding_native_frr_logic_id_4 => { #Structure Type: Mem;
    Name => "type_decoding_native_frr_logic_id_4",
    RegMem => "Mem",
    Address => "600000", # Excel Formula: =calc_mem_address(C95,A95,G100,L100)
    Description => "Native-FRR type decoding table",
    Width => "22", # Excel Formula: =calc_mem_width(E101:E104,M100,F104,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "16", # Excel Formula: =2^calc_field_width_define("RES_NATIVE_SUBSTAGE_2_TYPE_WIDTH")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    dest_size => { #Structure Type: MemField;
      Name => "dest_size",
      RegMem => "MemField",
      Description => "Destination width (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_SIZE_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
    dest_mask => { #Structure Type: MemField;
      Name => "dest_mask",
      RegMem => "MemField",
      Description => "Destination mask (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_MASK_WIDTH")
      Position => "9:5", # Excel Formula: =calc_position(F101,E102)
    },
    vb_shift => { #Structure Type: MemField;
      Name => "vb_shift",
      RegMem => "MemField",
      Description => "Shift offset from the table-output-data-field",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SHIFT_WIDTH")
      Position => "15:10", # Excel Formula: =calc_position(F102,E103)
    },
    vb_size => { #Structure Type: MemField;
      Name => "vb_size",
      RegMem => "MemField",
      Description => "Number of valid bits of the output-data-field ",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SIZE_WIDTH")
      Position => "21:16", # Excel Formula: =calc_position(F103,E104)
    },
  },
  type_decoding_path_lb_logic_id_5 => { #Structure Type: Mem;
    Name => "type_decoding_path_lb_logic_id_5",
    RegMem => "Mem",
    Address => "700000", # Excel Formula: =calc_mem_address(C100,A100,G105,L105)
    Description => "Path-LB type decoding table",
    Width => "22", # Excel Formula: =calc_mem_width(E106:E109,M105,F109,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "8", # Excel Formula: =2^calc_field_width_define("RES_PATH_SUBSTAGE_0_TYPE_WIDTH")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    dest_size => { #Structure Type: MemField;
      Name => "dest_size",
      RegMem => "MemField",
      Description => "Destination width (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_SIZE_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F105,E106,TRUE)
    },
    dest_mask => { #Structure Type: MemField;
      Name => "dest_mask",
      RegMem => "MemField",
      Description => "Destination mask (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_MASK_WIDTH")
      Position => "9:5", # Excel Formula: =calc_position(F106,E107)
    },
    vb_shift => { #Structure Type: MemField;
      Name => "vb_shift",
      RegMem => "MemField",
      Description => "Shift offset from the table-output-data-field",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SHIFT_WIDTH")
      Position => "15:10", # Excel Formula: =calc_position(F107,E108)
    },
    vb_size => { #Structure Type: MemField;
      Name => "vb_size",
      RegMem => "MemField",
      Description => "Number of valid bits of the output-data-field ",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SIZE_WIDTH")
      Position => "21:16", # Excel Formula: =calc_position(F108,E109)
    },
  },
  type_decoding_path_tunnel_dlp_logic_id_6 => { #Structure Type: Mem;
    Name => "type_decoding_path_tunnel_dlp_logic_id_6",
    RegMem => "Mem",
    Address => "800000", # Excel Formula: =calc_mem_address(C105,A105,G110,L110)
    Description => "Path-Tunnel-DLP type decoding table",
    Width => "22", # Excel Formula: =calc_mem_width(E111:E114,M110,F114,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "8", # Excel Formula: =2^calc_field_width_define("RES_PATH_SUBSTAGE_1_TYPE_WIDTH")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    dest_size => { #Structure Type: MemField;
      Name => "dest_size",
      RegMem => "MemField",
      Description => "Destination width (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_SIZE_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F110,E111,TRUE)
    },
    dest_mask => { #Structure Type: MemField;
      Name => "dest_mask",
      RegMem => "MemField",
      Description => "Destination mask (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_MASK_WIDTH")
      Position => "9:5", # Excel Formula: =calc_position(F111,E112)
    },
    vb_shift => { #Structure Type: MemField;
      Name => "vb_shift",
      RegMem => "MemField",
      Description => "Shift offset from the table-output-data-field",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SHIFT_WIDTH")
      Position => "15:10", # Excel Formula: =calc_position(F112,E113)
    },
    vb_size => { #Structure Type: MemField;
      Name => "vb_size",
      RegMem => "MemField",
      Description => "Number of valid bits of the output-data-field ",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SIZE_WIDTH")
      Position => "21:16", # Excel Formula: =calc_position(F113,E114)
    },
  },
  type_decoding_port_npp_lb_logic_id_7 => { #Structure Type: Mem;
    Name => "type_decoding_port_npp_lb_logic_id_7",
    RegMem => "Mem",
    Address => "900000", # Excel Formula: =calc_mem_address(C110,A110,G115,L115)
    Description => "NPP-LB type decoding table",
    Width => "22", # Excel Formula: =calc_mem_width(E116:E119,M115,F119,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "4", # Excel Formula: =2^calc_field_width_define("RES_PORT_SUBSTAGE_0_TYPE_WIDTH")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    dest_size => { #Structure Type: MemField;
      Name => "dest_size",
      RegMem => "MemField",
      Description => "Destination width (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_SIZE_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F115,E116,TRUE)
    },
    dest_mask => { #Structure Type: MemField;
      Name => "dest_mask",
      RegMem => "MemField",
      Description => "Destination mask (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_MASK_WIDTH")
      Position => "9:5", # Excel Formula: =calc_position(F116,E117)
    },
    vb_shift => { #Structure Type: MemField;
      Name => "vb_shift",
      RegMem => "MemField",
      Description => "Shift offset from the table-output-data-field",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SHIFT_WIDTH")
      Position => "15:10", # Excel Formula: =calc_position(F117,E118)
    },
    vb_size => { #Structure Type: MemField;
      Name => "vb_size",
      RegMem => "MemField",
      Description => "Number of valid bits of the output-data-field ",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SIZE_WIDTH")
      Position => "21:16", # Excel Formula: =calc_position(F118,E119)
    },
  },
  type_decoding_port_dsp_lb_logic_id_8 => { #Structure Type: Mem;
    Name => "type_decoding_port_dsp_lb_logic_id_8",
    RegMem => "Mem",
    Address => "A00000", # Excel Formula: =calc_mem_address(C115,A115,G120,L120)
    Description => "LAG-DSP type decoding table",
    Width => "22", # Excel Formula: =calc_mem_width(E121:E124,M120,F124,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "2", # Excel Formula: =2^calc_field_width_define("RES_PORT_SUBSTAGE_1_TYPE_WIDTH")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    dest_size => { #Structure Type: MemField;
      Name => "dest_size",
      RegMem => "MemField",
      Description => "Destination width (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_SIZE_WIDTH")
      Position => "4:0", # Excel Formula: =calc_position(F120,E121,TRUE)
    },
    dest_mask => { #Structure Type: MemField;
      Name => "dest_mask",
      RegMem => "MemField",
      Description => "Destination mask (according to Dest-encoding).  ",
      Width => "5", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_DEST_MASK_WIDTH")
      Position => "9:5", # Excel Formula: =calc_position(F121,E122)
    },
    vb_shift => { #Structure Type: MemField;
      Name => "vb_shift",
      RegMem => "MemField",
      Description => "Shift offset from the table-output-data-field",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SHIFT_WIDTH")
      Position => "15:10", # Excel Formula: =calc_position(F122,E123)
    },
    vb_size => { #Structure Type: MemField;
      Name => "vb_size",
      RegMem => "MemField",
      Description => "Number of valid bits of the output-data-field ",
      Width => "6", # Excel Formula: =calc_field_width_define("RES_TYPE_DECODING_VB_SIZE_WIDTH")
      Position => "21:16", # Excel Formula: =calc_position(F123,E124)
    },
  },
  protection_table0 => { #Structure Type: Mem; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 17;
    Name => "protection_table[4]",
    RegMem => "Mem",
    Address => "B00000", # Excel Formula: =calc_mem_address(C120,A120,G125,L125)
    Description => "protection_tables:
0: Native-slice-0
1: Path-slice-0
2: Native-slice-1
3: Path-slice-1",
    Width => "13", # Excel Formula: =calc_mem_width(E126:E126,M125,F126,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "4",
    ArrayIndex => "0",
    MemLogicalWidth => "8",
    protection_table_field0 => { #Structure Type: MemField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 23;
      Name => "protection_table_field[n]",
      RegMem => "MemField",
      Description => "protection_table_field[n]",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F125,E126,TRUE)
    },
  },
  protection_table1 => { #Structure Type: Mem; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 17;
    Name => "protection_table[4]",
    RegMem => "Mem",
    Address => "C00000",
    Description => "protection_tables:
0: Native-slice-0
1: Path-slice-0
2: Native-slice-1
3: Path-slice-1",
    Width => "13", # Excel Formula: =calc_mem_width(E126:E126,M125,F126,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "4",
    ArrayIndex => "1",
    MemLogicalWidth => "8",
    protection_table_field1 => { #Structure Type: MemField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 23;
      Name => "protection_table_field[n]",
      RegMem => "MemField",
      Description => "protection_table_field[n]",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F125,E126,TRUE)
    },
  },
  protection_table2 => { #Structure Type: Mem; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 17;
    Name => "protection_table[4]",
    RegMem => "Mem",
    Address => "D00000",
    Description => "protection_tables:
0: Native-slice-0
1: Path-slice-0
2: Native-slice-1
3: Path-slice-1",
    Width => "13", # Excel Formula: =calc_mem_width(E126:E126,M125,F126,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "4",
    ArrayIndex => "2",
    MemLogicalWidth => "8",
    protection_table_field2 => { #Structure Type: MemField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 23;
      Name => "protection_table_field[n]",
      RegMem => "MemField",
      Description => "protection_table_field[n]",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F125,E126,TRUE)
    },
  },
  protection_table3 => { #Structure Type: Mem; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 17;
    Name => "protection_table[4]",
    RegMem => "Mem",
    Address => "E00000",
    Description => "protection_tables:
0: Native-slice-0
1: Path-slice-0
2: Native-slice-1
3: Path-slice-1",
    Width => "13", # Excel Formula: =calc_mem_width(E126:E126,M125,F126,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "4",
    ArrayIndex => "3",
    MemLogicalWidth => "8",
    protection_table_field3 => { #Structure Type: MemField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 23;
      Name => "protection_table_field[n]",
      RegMem => "MemField",
      Description => "protection_table_field[n]",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F125,E126,TRUE)
    },
  },
  slice0_native_fec_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_native_fec_table",
    RegMem => "Mem",
    Address => "F00000", # Excel Formula: =calc_mem_address(C125,A125,G127,L127)
    Description => "slice[2]_native_fec_table",
    Width => "63", # Excel Formula: =calc_mem_width(E128:E128,M127,F128,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "4096", # Excel Formula: =2^12
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "56",
    fec_pld0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 8;
      Name => "fec_pld[n]",
      RegMem => "MemField",
      Description => "fec_pld[n]",
      Width => "56",
      Position => "55:0", # Excel Formula: =calc_position(F127,E128,TRUE)
    },
  },
  slice1_native_fec_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_native_fec_table",
    RegMem => "Mem",
    Address => "1000000",
    Description => "slice[2]_native_fec_table",
    Width => "63", # Excel Formula: =calc_mem_width(E128:E128,M127,F128,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "4096", # Excel Formula: =2^12
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "56",
    fec_pld1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 8;
      Name => "fec_pld[n]",
      RegMem => "MemField",
      Description => "fec_pld[n]",
      Width => "56",
      Position => "55:0", # Excel Formula: =calc_position(F127,E128,TRUE)
    },
  },
  Slice0NativeLbMemberTable => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "Slice[2]NativeLbMemberTable",
    RegMem => "Mem",
    Address => "F00000", # Excel Formula: =calc_mem_address(C127,A127,G129,L129)
    Description => "lb_native_db",
    Width => "49", # Excel Formula: =calc_mem_width(E130:E130,M129,F130,-1)
    Type => "DocOnly",
    UsedBy => "res",
    MemEntries => "16384", # Excel Formula: =2^14
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=30,SourceIdWidth=1,NumberOfBanks=4,NumberOfCamEntries=32,NumberOfParallelBanks=4,VerifierSampleReadBeforeProt=2,VerifierSamplePhysicalMem=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled",
    Comments => "Key is {LB-GID[N-1], LB-GID(13), LB-Key(16)}",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "49",
    native_lb_member_info0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 22;
      Name => "native_lb_member_info[n]",
      RegMem => "MemField",
      Description => "native_lb_member_info[n]",
      Width => "49",
      Position => "48:0", # Excel Formula: =calc_position(F129,E130,TRUE)
    },
  },
  Slice1NativeLbMemberTable => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "Slice[2]NativeLbMemberTable",
    RegMem => "Mem",
    Address => "1000000",
    Description => "lb_native_db",
    Width => "49", # Excel Formula: =calc_mem_width(E130:E130,M129,F130,-1)
    Type => "DocOnly",
    UsedBy => "res",
    MemEntries => "16384", # Excel Formula: =2^14
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=30,SourceIdWidth=1,NumberOfBanks=4,NumberOfCamEntries=32,NumberOfParallelBanks=4,VerifierSampleReadBeforeProt=2,VerifierSamplePhysicalMem=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled",
    Comments => "Key is {LB-GID[N-1], LB-GID(13), LB-Key(16)}",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "49",
    native_lb_member_info1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 22;
      Name => "native_lb_member_info[n]",
      RegMem => "MemField",
      Description => "native_lb_member_info[n]",
      Width => "49",
      Position => "48:0", # Excel Formula: =calc_position(F129,E130,TRUE)
    },
  },
  native_l2_and_l3_lp_table => { #Structure Type: Mem;
    Name => "native_l2_and_l3_lp_table",
    RegMem => "Mem",
    Address => "1100000", # Excel Formula: =calc_mem_address(C129,A129,G131,L131)
    Description => "native_l2_and_l3_lp_table",
    Width => "106", # Excel Formula: =calc_mem_width(E132:E132,M131,F132,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "65536", # Excel Formula: =2^16
    MemWrapper => "2R1W Slow Write",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=3,SamplePhysicalMem=2,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "98",
    lp_pld => { #Structure Type: MemField;
      Name => "lp_pld",
      RegMem => "MemField",
      Description => "lp_pld",
      Width => "98",
      Position => "97:0", # Excel Formula: =calc_position(F131,E132,TRUE)
    },
  },
  slice0_native_frr_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_native_frr_table",
    RegMem => "Mem",
    Address => "1200000", # Excel Formula: =calc_mem_address(C131,A131,G133,L133)
    Description => "slice[2]_native_frr_table",
    Width => "127", # Excel Formula: =calc_mem_width(E134:E134,M133,F134,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "256", # Excel Formula: =2^8
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SamplePhysicalMem=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "119",
    frr_pld0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 8;
      Name => "frr_pld[n]",
      RegMem => "MemField",
      Description => "frr_pld[n]",
      Width => "119",
      Position => "118:0", # Excel Formula: =calc_position(F133,E134,TRUE)
    },
  },
  slice1_native_frr_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_native_frr_table",
    RegMem => "Mem",
    Address => "1300000",
    Description => "slice[2]_native_frr_table",
    Width => "127", # Excel Formula: =calc_mem_width(E134:E134,M133,F134,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "256", # Excel Formula: =2^8
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SamplePhysicalMem=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "119",
    frr_pld1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 8;
      Name => "frr_pld[n]",
      RegMem => "MemField",
      Description => "frr_pld[n]",
      Width => "119",
      Position => "118:0", # Excel Formula: =calc_position(F133,E134,TRUE)
    },
  },
  Slice0PathLbMemberTable => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "Slice[2]PathLbMemberTable",
    RegMem => "Mem",
    Address => "1200000", # Excel Formula: =calc_mem_address(C133,A133,G135,L135)
    Description => "lb_path_db",
    Width => "29", # Excel Formula: =calc_mem_width(E136:E136,M135,F136,-1)
    Type => "DocOnly",
    UsedBy => "res",
    MemEntries => "16384", # Excel Formula: =2^14
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=30,SourceIdWidth=1,NumberOfBanks=4,NumberOfCamEntries=32,NumberOfParallelBanks=4,VerifierSampleReadBeforeProt=2,VerifierSamplePhysicalMem=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled",
    Comments => "Key is {LB-GID[N-1], LB-GID(13), LB-Key(16)}",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "29",
    path_lb_member_info0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 20;
      Name => "path_lb_member_info[n]",
      RegMem => "MemField",
      Description => "path_lb_member_info[n]",
      Width => "29",
      Position => "28:0", # Excel Formula: =calc_position(F135,E136,TRUE)
    },
  },
  Slice1PathLbMemberTable => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "Slice[2]PathLbMemberTable",
    RegMem => "Mem",
    Address => "1300000",
    Description => "lb_path_db",
    Width => "29", # Excel Formula: =calc_mem_width(E136:E136,M135,F136,-1)
    Type => "DocOnly",
    UsedBy => "res",
    MemEntries => "16384", # Excel Formula: =2^14
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=30,SourceIdWidth=1,NumberOfBanks=4,NumberOfCamEntries=32,NumberOfParallelBanks=4,VerifierSampleReadBeforeProt=2,VerifierSamplePhysicalMem=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled",
    Comments => "Key is {LB-GID[N-1], LB-GID(13), LB-Key(16)}",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "29",
    path_lb_member_info1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 20;
      Name => "path_lb_member_info[n]",
      RegMem => "MemField",
      Description => "path_lb_member_info[n]",
      Width => "29",
      Position => "28:0", # Excel Formula: =calc_position(F135,E136,TRUE)
    },
  },
  path_tunnel_dlp_table => { #Structure Type: Mem;
    Name => "path_tunnel_dlp_table",
    RegMem => "Mem",
    Address => "1400000", # Excel Formula: =calc_mem_address(C135,A135,G137,L137)
    Description => "path_tunnel_dlp_table",
    Width => "92", # Excel Formula: =calc_mem_width(E138:E138,M137,F138,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^13
    MemWrapper => "2R1W Slow Write",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=2,SamplePhysicalMem=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "84",
    tunnel_dlp_pld => { #Structure Type: MemField;
      Name => "tunnel_dlp_pld",
      RegMem => "MemField",
      Description => "tunnel_dlp_pld",
      Width => "84",
      Position => "83:0", # Excel Formula: =calc_position(F137,E138,TRUE)
    },
  },
  Slice0PortNppLbMemberTable => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "Slice[2]PortNppLbMemberTable",
    RegMem => "Mem",
    Address => "1400000", # Excel Formula: =calc_mem_address(C137,A137,G139,L139)
    Description => "lb_npp_db",
    Width => "16", # Excel Formula: =calc_mem_width(E140:E140,M139,F140,-1)
    Type => "DocOnly",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^13
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=30,SourceIdWidth=1,NumberOfBanks=4,NumberOfCamEntries=32,NumberOfParallelBanks=4,VerifierSampleReadBeforeProt=2,VerifierSamplePhysicalMem=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled",
    Comments => "Key is {LB-GID[N-1], LB-GID(13), LB-Key(16)}",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "16",
    port_npp_lb_member_info0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 24;
      Name => "port_npp_lb_member_info[n]",
      RegMem => "MemField",
      Description => "port_npp_lb_member_info[n]",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F139,E140,TRUE)
    },
  },
  Slice1PortNppLbMemberTable => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "Slice[2]PortNppLbMemberTable",
    RegMem => "Mem",
    Address => "1500000",
    Description => "lb_npp_db",
    Width => "16", # Excel Formula: =calc_mem_width(E140:E140,M139,F140,-1)
    Type => "DocOnly",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^13
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=30,SourceIdWidth=1,NumberOfBanks=4,NumberOfCamEntries=32,NumberOfParallelBanks=4,VerifierSampleReadBeforeProt=2,VerifierSamplePhysicalMem=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled",
    Comments => "Key is {LB-GID[N-1], LB-GID(13), LB-Key(16)}",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "16",
    port_npp_lb_member_info1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 24;
      Name => "port_npp_lb_member_info[n]",
      RegMem => "MemField",
      Description => "port_npp_lb_member_info[n]",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F139,E140,TRUE)
    },
  },
  Slice0PortDspLbMemberTable => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "Slice[2]PortDspLbMemberTable",
    RegMem => "Mem",
    Address => "1400000", # Excel Formula: =calc_mem_address(C139,A139,G141,L141)
    Description => "lb_dsp_db",
    Width => "15", # Excel Formula: =calc_mem_width(E142:E142,M141,F142,-1)
    Type => "DocOnly",
    UsedBy => "res",
    MemEntries => "12288", # Excel Formula: =2^13 + 2^12
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=30,SourceIdWidth=1,NumberOfBanks=3,NumberOfCamEntries=32,NumberOfParallelBanks=3,VerifierSampleReadBeforeProt=2,VerifierSamplePhysicalMem=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled",
    Comments => "Key is {LB-GID[N-1], LB-GID(13), LB-Key(16)}",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "15",
    port_dsp_lb_member_info0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 24;
      Name => "port_dsp_lb_member_info[n]",
      RegMem => "MemField",
      Description => "port_dsp_lb_member_info[n]",
      Width => "15",
      Position => "14:0", # Excel Formula: =calc_position(F141,E142,TRUE)
    },
  },
  Slice1PortDspLbMemberTable => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "Slice[2]PortDspLbMemberTable",
    RegMem => "Mem",
    Address => "1500000",
    Description => "lb_dsp_db",
    Width => "15", # Excel Formula: =calc_mem_width(E142:E142,M141,F142,-1)
    Type => "DocOnly",
    UsedBy => "res",
    MemEntries => "12288", # Excel Formula: =2^13 + 2^12
    MemWrapper => "EM",
    MemProtect => "None",
    AdditionalInfo => "KeyWidth=30,SourceIdWidth=1,NumberOfBanks=3,NumberOfCamEntries=32,NumberOfParallelBanks=3,VerifierSampleReadBeforeProt=2,VerifierSamplePhysicalMem=1,VerifierCpuReadAccess=Enabled,VerifierCpuWriteAccess=Enabled",
    Comments => "Key is {LB-GID[N-1], LB-GID(13), LB-Key(16)}",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "15",
    port_dsp_lb_member_info1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 24;
      Name => "port_dsp_lb_member_info[n]",
      RegMem => "MemField",
      Description => "port_dsp_lb_member_info[n]",
      Width => "15",
      Position => "14:0", # Excel Formula: =calc_position(F141,E142,TRUE)
    },
  },
  slice0_native_lb_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_native_lb_group_size_table",
    RegMem => "Mem",
    Address => "1600000", # Excel Formula: =calc_mem_address(C141,A141,G143,L143)
    Description => "lb_native_group_size_table",
    Width => "15", # Excel Formula: =calc_mem_width(E144:E145,M143,F145,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_L2_DLPA_OR_ECMP_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "10",
    enable_consistence_a0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
      Name => "enable_consistence_a[n]",
      RegMem => "MemField",
      Description => "enable_consistence[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F143,E144,TRUE)
    },
    group_size_a0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "group_size_a[n]",
      RegMem => "MemField",
      Description => "group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F144,E145)
    },
  },
  slice1_native_lb_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_native_lb_group_size_table",
    RegMem => "Mem",
    Address => "1700000",
    Description => "lb_native_group_size_table",
    Width => "15", # Excel Formula: =calc_mem_width(E144:E145,M143,F145,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_L2_DLPA_OR_ECMP_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "10",
    enable_consistence_a1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
      Name => "enable_consistence_a[n]",
      RegMem => "MemField",
      Description => "enable_consistence[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F143,E144,TRUE)
    },
    group_size_a1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "group_size_a[n]",
      RegMem => "MemField",
      Description => "group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F144,E145)
    },
  },
  slice0_native_lb_prev_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_native_lb_prev_group_size_table",
    RegMem => "Mem",
    Address => "1800000", # Excel Formula: =calc_mem_address(C143,A143,G146,L146)
    Description => "lb_native_prev_group_size_table",
    Width => "14", # Excel Formula: =calc_mem_width(E147:E147,M146,F147,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_L2_DLPA_OR_ECMP_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "9",
    prev_group_size_a0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "prev_group_size_a[n]",
      RegMem => "MemField",
      Description => "group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "8:0", # Excel Formula: =calc_position(F146,E147,TRUE)
    },
  },
  slice1_native_lb_prev_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_native_lb_prev_group_size_table",
    RegMem => "Mem",
    Address => "1900000",
    Description => "lb_native_prev_group_size_table",
    Width => "14", # Excel Formula: =calc_mem_width(E147:E147,M146,F147,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_L2_DLPA_OR_ECMP_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "9",
    prev_group_size_a1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "prev_group_size_a[n]",
      RegMem => "MemField",
      Description => "group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "8:0", # Excel Formula: =calc_position(F146,E147,TRUE)
    },
  },
  slice0_native_lb_consistence_cache_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_native_lb_consistence_cache_table",
    RegMem => "Mem",
    Address => "1A00000", # Excel Formula: =calc_mem_address(C146,A146,G148,L148)
    Description => "lb_native_consistence_cache_table",
    Width => "26", # Excel Formula: =calc_mem_width(E149:E151,M148,F151,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "4096", # Excel Formula: =2^calc_field_width_define("RES_LB_KEY_WIDTH")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "20",
    valid_a0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 8;
      Name => "valid_a[n]",
      RegMem => "MemField",
      Description => "valid[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F148,E149,TRUE)
    },
    cache_member_id_a0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "cache_member_id_a[n]",
      RegMem => "MemField",
      Description => "cache_member_id[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F149,E150)
    },
    time_stamp_a0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "time_stamp_a[n]",
      RegMem => "MemField",
      Description => "time_stamp[n]",
      Width => "10", # Excel Formula: = calc_field_width_define("RES_LB_CONSISTENCE_CACHE_TS_WIDTH")
      Position => "19:10", # Excel Formula: =calc_position(F150,E151)
    },
  },
  slice1_native_lb_consistence_cache_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_native_lb_consistence_cache_table",
    RegMem => "Mem",
    Address => "1B00000",
    Description => "lb_native_consistence_cache_table",
    Width => "26", # Excel Formula: =calc_mem_width(E149:E151,M148,F151,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "4096", # Excel Formula: =2^calc_field_width_define("RES_LB_KEY_WIDTH")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "20",
    valid_a1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 8;
      Name => "valid_a[n]",
      RegMem => "MemField",
      Description => "valid[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F148,E149,TRUE)
    },
    cache_member_id_a1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "cache_member_id_a[n]",
      RegMem => "MemField",
      Description => "cache_member_id[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F149,E150)
    },
    time_stamp_a1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "time_stamp_a[n]",
      RegMem => "MemField",
      Description => "time_stamp[n]",
      Width => "10", # Excel Formula: = calc_field_width_define("RES_LB_CONSISTENCE_CACHE_TS_WIDTH")
      Position => "19:10", # Excel Formula: =calc_position(F150,E151)
    },
  },
  slice0_path_lb_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_path_lb_group_size_table",
    RegMem => "Mem",
    Address => "1C00000", # Excel Formula: =calc_mem_address(C148,A148,G152,L152)
    Description => "lb_path_group_size_table",
    Width => "15", # Excel Formula: =calc_mem_width(E153:E154,M152,F154,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_TUNNEL_ECMP_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "10",
    enable_consistence_b0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
      Name => "enable_consistence_b[n]",
      RegMem => "MemField",
      Description => "enable_consistence[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F152,E153,TRUE)
    },
    group_size_b0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "group_size_b[n]",
      RegMem => "MemField",
      Description => "group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F153,E154)
    },
  },
  slice1_path_lb_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_path_lb_group_size_table",
    RegMem => "Mem",
    Address => "1D00000",
    Description => "lb_path_group_size_table",
    Width => "15", # Excel Formula: =calc_mem_width(E153:E154,M152,F154,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_TUNNEL_ECMP_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "10",
    enable_consistence_b1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
      Name => "enable_consistence_b[n]",
      RegMem => "MemField",
      Description => "enable_consistence[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F152,E153,TRUE)
    },
    group_size_b1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "group_size_b[n]",
      RegMem => "MemField",
      Description => "group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F153,E154)
    },
  },
  slice0_path_lb_prev_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_path_lb_prev_group_size_table",
    RegMem => "Mem",
    Address => "1E00000", # Excel Formula: =calc_mem_address(C152,A152,G155,L155)
    Description => "lb_path_prev_group_size_table",
    Width => "14", # Excel Formula: =calc_mem_width(E156:E156,M155,F156,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_TUNNEL_ECMP_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "9",
    prev_group_size_b0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "prev_group_size_b[n]",
      RegMem => "MemField",
      Description => "prev_group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "8:0", # Excel Formula: =calc_position(F155,E156,TRUE)
    },
  },
  slice1_path_lb_prev_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_path_lb_prev_group_size_table",
    RegMem => "Mem",
    Address => "1F00000",
    Description => "lb_path_prev_group_size_table",
    Width => "14", # Excel Formula: =calc_mem_width(E156:E156,M155,F156,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_TUNNEL_ECMP_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "9",
    prev_group_size_b1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "prev_group_size_b[n]",
      RegMem => "MemField",
      Description => "prev_group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "8:0", # Excel Formula: =calc_position(F155,E156,TRUE)
    },
  },
  slice0_path_lb_consistence_cache_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_path_lb_consistence_cache_table",
    RegMem => "Mem",
    Address => "2000000", # Excel Formula: =calc_mem_address(C155,A155,G157,L157)
    Description => "lb_path_consistence_cache_table",
    Width => "26", # Excel Formula: =calc_mem_width(E158:E160,M157,F160,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "4096", # Excel Formula: =2^calc_field_width_define("RES_LB_KEY_WIDTH")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "20",
    valid_b0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 8;
      Name => "valid_b[n]",
      RegMem => "MemField",
      Description => "valid[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F157,E158,TRUE)
    },
    cache_member_id_b0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "cache_member_id_b[n]",
      RegMem => "MemField",
      Description => "cache_member_id[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F158,E159)
    },
    time_stamp_b0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "time_stamp_b[n]",
      RegMem => "MemField",
      Description => "time_stamp[n]",
      Width => "10", # Excel Formula: = calc_field_width_define("RES_LB_CONSISTENCE_CACHE_TS_WIDTH")
      Position => "19:10", # Excel Formula: =calc_position(F159,E160)
    },
  },
  slice1_path_lb_consistence_cache_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_path_lb_consistence_cache_table",
    RegMem => "Mem",
    Address => "2100000",
    Description => "lb_path_consistence_cache_table",
    Width => "26", # Excel Formula: =calc_mem_width(E158:E160,M157,F160,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "4096", # Excel Formula: =2^calc_field_width_define("RES_LB_KEY_WIDTH")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "20",
    valid_b1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 8;
      Name => "valid_b[n]",
      RegMem => "MemField",
      Description => "valid[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F157,E158,TRUE)
    },
    cache_member_id_b1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "cache_member_id_b[n]",
      RegMem => "MemField",
      Description => "cache_member_id[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F158,E159)
    },
    time_stamp_b1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "time_stamp_b[n]",
      RegMem => "MemField",
      Description => "time_stamp[n]",
      Width => "10", # Excel Formula: = calc_field_width_define("RES_LB_CONSISTENCE_CACHE_TS_WIDTH")
      Position => "19:10", # Excel Formula: =calc_position(F159,E160)
    },
  },
  slice0_port_npp_lb_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_port_npp_lb_group_size_table",
    RegMem => "Mem",
    Address => "2200000", # Excel Formula: =calc_mem_address(C157,A157,G161,L161)
    Description => "lb_port_npp_group_size_table",
    Width => "15", # Excel Formula: =calc_mem_width(E162:E163,M161,F163,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_NPP_LB_GROUP_ID_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "10",
    enable_consistence_c0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
      Name => "enable_consistence_c[n]",
      RegMem => "MemField",
      Description => "enable_consistence[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F161,E162,TRUE)
    },
    group_size_c0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "group_size_c[n]",
      RegMem => "MemField",
      Description => "group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F162,E163)
    },
  },
  slice1_port_npp_lb_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_port_npp_lb_group_size_table",
    RegMem => "Mem",
    Address => "2300000",
    Description => "lb_port_npp_group_size_table",
    Width => "15", # Excel Formula: =calc_mem_width(E162:E163,M161,F163,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_NPP_LB_GROUP_ID_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "10",
    enable_consistence_c1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
      Name => "enable_consistence_c[n]",
      RegMem => "MemField",
      Description => "enable_consistence[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F161,E162,TRUE)
    },
    group_size_c1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "group_size_c[n]",
      RegMem => "MemField",
      Description => "group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F162,E163)
    },
  },
  slice0_port_npp_lb_prev_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_port_npp_lb_prev_group_size_table",
    RegMem => "Mem",
    Address => "2400000", # Excel Formula: =calc_mem_address(C161,A161,G164,L164)
    Description => "lb_port_npp_prev_group_size_table",
    Width => "14", # Excel Formula: =calc_mem_width(E165:E165,M164,F165,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_NPP_LB_GROUP_ID_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "9",
    prev_group_size_c0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "prev_group_size_c[n]",
      RegMem => "MemField",
      Description => "prev_group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "8:0", # Excel Formula: =calc_position(F164,E165,TRUE)
    },
  },
  slice1_port_npp_lb_prev_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_port_npp_lb_prev_group_size_table",
    RegMem => "Mem",
    Address => "2500000",
    Description => "lb_port_npp_prev_group_size_table",
    Width => "14", # Excel Formula: =calc_mem_width(E165:E165,M164,F165,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_NPP_LB_GROUP_ID_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "9",
    prev_group_size_c1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "prev_group_size_c[n]",
      RegMem => "MemField",
      Description => "prev_group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "8:0", # Excel Formula: =calc_position(F164,E165,TRUE)
    },
  },
  slice0_port_npp_lb_consistence_cache_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_port_npp_lb_consistence_cache_table",
    RegMem => "Mem",
    Address => "2600000", # Excel Formula: =calc_mem_address(C164,A164,G166,L166)
    Description => "lb_port_npp_consistence_cache_table",
    Width => "26", # Excel Formula: =calc_mem_width(E167:E169,M166,F169,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "4096", # Excel Formula: =2^calc_field_width_define("RES_LB_KEY_WIDTH")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "20",
    valid_c0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 8;
      Name => "valid_c[n]",
      RegMem => "MemField",
      Description => "valid[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F166,E167,TRUE)
    },
    cache_member_id_c0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "cache_member_id_c[n]",
      RegMem => "MemField",
      Description => "cache_member_id[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F167,E168)
    },
    time_stamp_c0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "time_stamp_c[n]",
      RegMem => "MemField",
      Description => "time_stamp[n]",
      Width => "10", # Excel Formula: = calc_field_width_define("RES_LB_CONSISTENCE_CACHE_TS_WIDTH")
      Position => "19:10", # Excel Formula: =calc_position(F168,E169)
    },
  },
  slice1_port_npp_lb_consistence_cache_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_port_npp_lb_consistence_cache_table",
    RegMem => "Mem",
    Address => "2700000",
    Description => "lb_port_npp_consistence_cache_table",
    Width => "26", # Excel Formula: =calc_mem_width(E167:E169,M166,F169,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "4096", # Excel Formula: =2^calc_field_width_define("RES_LB_KEY_WIDTH")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "20",
    valid_c1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 8;
      Name => "valid_c[n]",
      RegMem => "MemField",
      Description => "valid[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F166,E167,TRUE)
    },
    cache_member_id_c1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "cache_member_id_c[n]",
      RegMem => "MemField",
      Description => "cache_member_id[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F167,E168)
    },
    time_stamp_c1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "time_stamp_c[n]",
      RegMem => "MemField",
      Description => "time_stamp[n]",
      Width => "10", # Excel Formula: = calc_field_width_define("RES_LB_CONSISTENCE_CACHE_TS_WIDTH")
      Position => "19:10", # Excel Formula: =calc_position(F168,E169)
    },
  },
  slice0_port_dsp_lb_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_port_dsp_lb_group_size_table",
    RegMem => "Mem",
    Address => "2800000", # Excel Formula: =calc_mem_address(C166,A166,G170,L170)
    Description => "lb_port_dsp_group_size_table",
    Width => "15", # Excel Formula: =calc_mem_width(E171:E172,M170,F172,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_DSPA_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "10",
    enable_consistence_d0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 21;
      Name => "enable_consistence_d[n]",
      RegMem => "MemField",
      Description => "enable_consistence[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F170,E171,TRUE)
    },
    group_size_d0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "group_size_d[n]",
      RegMem => "MemField",
      Description => "group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F171,E172)
    },
  },
  slice1_port_dsp_lb_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_port_dsp_lb_group_size_table",
    RegMem => "Mem",
    Address => "2900000",
    Description => "lb_port_dsp_group_size_table",
    Width => "15", # Excel Formula: =calc_mem_width(E171:E172,M170,F172,-1)
    Type => "Config",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_DSPA_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "10",
    enable_consistence_d1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 21;
      Name => "enable_consistence_d[n]",
      RegMem => "MemField",
      Description => "enable_consistence[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F170,E171,TRUE)
    },
    group_size_d1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "group_size_d[n]",
      RegMem => "MemField",
      Description => "group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F171,E172)
    },
  },
  slice0_port_dsp_lb_prev_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_port_dsp_lb_prev_group_size_table",
    RegMem => "Mem",
    Address => "2A00000", # Excel Formula: =calc_mem_address(C170,A170,G173,L173)
    Description => "lb_port_dsp_prev_group_size_table",
    Width => "14", # Excel Formula: =calc_mem_width(E174:E174,M173,F174,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_DSPA_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "9",
    prev_group_size_d0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "prev_group_size_d[n]",
      RegMem => "MemField",
      Description => "prev_group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "8:0", # Excel Formula: =calc_position(F173,E174,TRUE)
    },
  },
  slice1_port_dsp_lb_prev_group_size_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_port_dsp_lb_prev_group_size_table",
    RegMem => "Mem",
    Address => "2B00000",
    Description => "lb_port_dsp_prev_group_size_table",
    Width => "14", # Excel Formula: =calc_mem_width(E174:E174,M173,F174,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "8192", # Excel Formula: =2^calc_field_width_define("RES_DSPA_WIDTH")
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "9",
    prev_group_size_d1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "prev_group_size_d[n]",
      RegMem => "MemField",
      Description => "prev_group_size[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "8:0", # Excel Formula: =calc_position(F173,E174,TRUE)
    },
  },
  slice0_port_dsp_lb_consistence_cache_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_port_dsp_lb_consistence_cache_table",
    RegMem => "Mem",
    Address => "2C00000", # Excel Formula: =calc_mem_address(C173,A173,G175,L175)
    Description => "lb_port_dsp_consistence_cache_table",
    Width => "26", # Excel Formula: =calc_mem_width(E176:E178,M175,F178,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "4096", # Excel Formula: =2^calc_field_width_define("RES_LB_KEY_WIDTH")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "20",
    valid_d0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 8;
      Name => "valid_d[n]",
      RegMem => "MemField",
      Description => "valid[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F175,E176,TRUE)
    },
    cache_member_id_d0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 18;
      Name => "cache_member_id_d[n]",
      RegMem => "MemField",
      Description => "cache_member_id[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F176,E177)
    },
    time_stamp_d0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "time_stamp_d[n]",
      RegMem => "MemField",
      Description => "time_stamp[n]",
      Width => "10", # Excel Formula: = calc_field_width_define("RES_LB_CONSISTENCE_CACHE_TS_WIDTH")
      Position => "19:10", # Excel Formula: =calc_position(F177,E178)
    },
  },
  slice1_port_dsp_lb_consistence_cache_table => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_port_dsp_lb_consistence_cache_table",
    RegMem => "Mem",
    Address => "2D00000",
    Description => "lb_port_dsp_consistence_cache_table",
    Width => "26", # Excel Formula: =calc_mem_width(E176:E178,M175,F178,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "4096", # Excel Formula: =2^calc_field_width_define("RES_LB_KEY_WIDTH")
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "20",
    valid_d1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 8;
      Name => "valid_d[n]",
      RegMem => "MemField",
      Description => "valid[n]",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F175,E176,TRUE)
    },
    cache_member_id_d1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 18;
      Name => "cache_member_id_d[n]",
      RegMem => "MemField",
      Description => "cache_member_id[n]",
      Width => "9", # Excel Formula: =calc_field_width_define("RES_LB_GROUP_SIZE_WIDTH")
      Position => "9:1", # Excel Formula: =calc_position(F176,E177)
    },
    time_stamp_d1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "time_stamp_d[n]",
      RegMem => "MemField",
      Description => "time_stamp[n]",
      Width => "10", # Excel Formula: = calc_field_width_define("RES_LB_CONSISTENCE_CACHE_TS_WIDTH")
      Position => "19:10", # Excel Formula: =calc_position(F177,E178)
    },
  },
  slice0_top_path_bypass_fifo => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
    Name => "slice[2]_top_path_bypass_fifo",
    RegMem => "Mem",
    Address => "2E00000", # Excel Formula: =calc_mem_address(C175,A175,G179,L179)
    Description => "top_slice[2]_top_path_bypass_fifo",
    Width => "51", # Excel Formula: =calc_mem_width(E180:E180,M179,F180,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "124",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "depth is 128, but because this is a RAM-FIFO with PREFETCH_EN 
and memory-read-latency of 3, the depth is (128-(3+1))=124",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "44",
    slice0_top_path_bypass_fifo_field => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "slice[n]_top_path_bypass_fifo_field",
      RegMem => "MemField",
      Description => "top_slice[n]_top_path_bypass_fifo_field",
      Width => "44", # Excel Formula: = calc_field_width_define("RES_DEST_WIDTH") + calc_field_width_define("RES_LB_KEY_WIDTH") + calc_field_width_define("IDB_SDB_SRC_ID_WIDTH")
      Position => "43:0", # Excel Formula: =calc_position(F179,E180,TRUE)
    },
  },
  slice1_top_path_bypass_fifo => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
    Name => "slice[2]_top_path_bypass_fifo",
    RegMem => "Mem",
    Address => "2F00000",
    Description => "top_slice[2]_top_path_bypass_fifo",
    Width => "51", # Excel Formula: =calc_mem_width(E180:E180,M179,F180,-1)
    Type => "Dynamic",
    UsedBy => "res",
    MemEntries => "124",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "depth is 128, but because this is a RAM-FIFO with PREFETCH_EN 
and memory-read-latency of 3, the depth is (128-(3+1))=124",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "44",
    slice1_top_path_bypass_fifo_field => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "slice[n]_top_path_bypass_fifo_field",
      RegMem => "MemField",
      Description => "top_slice[n]_top_path_bypass_fifo_field",
      Width => "44", # Excel Formula: = calc_field_width_define("RES_DEST_WIDTH") + calc_field_width_define("RES_LB_KEY_WIDTH") + calc_field_width_define("IDB_SDB_SRC_ID_WIDTH")
      Position => "43:0", # Excel Formula: =calc_position(F179,E180,TRUE)
    },
  },
  SliceNativeLbMemberTableVerifier0 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 33; Skip Register;
    Name => "SliceNativeLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3000000", # Excel Formula: =calc_mem_address(C179,A179,G181,L181)
    Width => "76", # Excel Formula: =calc_mem_width(E182:E182,M181,F182,-1)
    Type => "Dynamic",
    UsedBy => "SliceNativeLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "0",
    MemLogicalWidth => "76",
    SliceNativeLbMemberTableVerifier0Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 33;
      Name => "SliceNativeLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "76",
      Position => "75:0", # Excel Formula: =calc_position(F181,E182,TRUE)
    },
  },
  SliceNativeLbMemberTableVerifier1 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 33; Skip Register;
    Name => "SliceNativeLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3100000",
    Width => "76", # Excel Formula: =calc_mem_width(E182:E182,M181,F182,-1)
    Type => "Dynamic",
    UsedBy => "SliceNativeLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "1",
    MemLogicalWidth => "76",
    SliceNativeLbMemberTableVerifier1Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 33;
      Name => "SliceNativeLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "76",
      Position => "75:0", # Excel Formula: =calc_position(F181,E182,TRUE)
    },
  },
  SliceNativeLbMemberTableVerifier2 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 33; Skip Register;
    Name => "SliceNativeLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3200000",
    Width => "76", # Excel Formula: =calc_mem_width(E182:E182,M181,F182,-1)
    Type => "Dynamic",
    UsedBy => "SliceNativeLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "2",
    MemLogicalWidth => "76",
    SliceNativeLbMemberTableVerifier2Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 33;
      Name => "SliceNativeLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "76",
      Position => "75:0", # Excel Formula: =calc_position(F181,E182,TRUE)
    },
  },
  SliceNativeLbMemberTableVerifier3 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 33; Skip Register;
    Name => "SliceNativeLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3300000",
    Width => "76", # Excel Formula: =calc_mem_width(E182:E182,M181,F182,-1)
    Type => "Dynamic",
    UsedBy => "SliceNativeLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "3",
    MemLogicalWidth => "76",
    SliceNativeLbMemberTableVerifier3Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 33;
      Name => "SliceNativeLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "76",
      Position => "75:0", # Excel Formula: =calc_position(F181,E182,TRUE)
    },
  },
  SliceNativeLbMemberTableVerifier4 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 33; Skip Register;
    Name => "SliceNativeLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3400000",
    Width => "76", # Excel Formula: =calc_mem_width(E182:E182,M181,F182,-1)
    Type => "Dynamic",
    UsedBy => "SliceNativeLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "4",
    MemLogicalWidth => "76",
    SliceNativeLbMemberTableVerifier4Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 33;
      Name => "SliceNativeLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "76",
      Position => "75:0", # Excel Formula: =calc_position(F181,E182,TRUE)
    },
  },
  SliceNativeLbMemberTableVerifier5 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 33; Skip Register;
    Name => "SliceNativeLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3500000",
    Width => "76", # Excel Formula: =calc_mem_width(E182:E182,M181,F182,-1)
    Type => "Dynamic",
    UsedBy => "SliceNativeLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "5",
    MemLogicalWidth => "76",
    SliceNativeLbMemberTableVerifier5Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 33;
      Name => "SliceNativeLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "76",
      Position => "75:0", # Excel Formula: =calc_position(F181,E182,TRUE)
    },
  },
  SliceNativeLbMemberTableVerifier6 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 33; Skip Register;
    Name => "SliceNativeLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3600000",
    Width => "76", # Excel Formula: =calc_mem_width(E182:E182,M181,F182,-1)
    Type => "Dynamic",
    UsedBy => "SliceNativeLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "6",
    MemLogicalWidth => "76",
    SliceNativeLbMemberTableVerifier6Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 33;
      Name => "SliceNativeLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "76",
      Position => "75:0", # Excel Formula: =calc_position(F181,E182,TRUE)
    },
  },
  SliceNativeLbMemberTableVerifier7 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 33; Skip Register;
    Name => "SliceNativeLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3700000",
    Width => "76", # Excel Formula: =calc_mem_width(E182:E182,M181,F182,-1)
    Type => "Dynamic",
    UsedBy => "SliceNativeLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "7",
    MemLogicalWidth => "76",
    SliceNativeLbMemberTableVerifier7Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 33;
      Name => "SliceNativeLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "76",
      Position => "75:0", # Excel Formula: =calc_position(F181,E182,TRUE)
    },
  },
  SliceNativeLbMemberTablePerBankReg0 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 35; Skip Register;
    Name => "SliceNativeLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "120", # Excel Formula: =calc_reg_address(C55,A55,G55)
    Width => "61", # Excel Formula: =calc_reg_width(E184:E185,F185)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "0",
    SliceNativeLbMemberTableActiveBanks0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 36;
      Name => "SliceNativeLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F183,E184,TRUE)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "d1",
    },
    SliceNativeLbMemberTableHashKey0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 32;
      Name => "SliceNativeLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F184,E185)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SliceNativeLbMemberTablePerBankReg1 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 35; Skip Register;
    Name => "SliceNativeLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "121",
    Width => "61", # Excel Formula: =calc_reg_width(E184:E185,F185)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "1",
    SliceNativeLbMemberTableActiveBanks1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 36;
      Name => "SliceNativeLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F183,E184,TRUE)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "d1",
    },
    SliceNativeLbMemberTableHashKey1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 32;
      Name => "SliceNativeLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F184,E185)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SliceNativeLbMemberTablePerBankReg2 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 35; Skip Register;
    Name => "SliceNativeLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "122",
    Width => "61", # Excel Formula: =calc_reg_width(E184:E185,F185)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "2",
    SliceNativeLbMemberTableActiveBanks2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 36;
      Name => "SliceNativeLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F183,E184,TRUE)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "d1",
    },
    SliceNativeLbMemberTableHashKey2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 32;
      Name => "SliceNativeLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F184,E185)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SliceNativeLbMemberTablePerBankReg3 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 35; Skip Register;
    Name => "SliceNativeLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "123",
    Width => "61", # Excel Formula: =calc_reg_width(E184:E185,F185)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "3",
    SliceNativeLbMemberTableActiveBanks3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 36;
      Name => "SliceNativeLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F183,E184,TRUE)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "d1",
    },
    SliceNativeLbMemberTableHashKey3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 32;
      Name => "SliceNativeLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F184,E185)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SliceNativeLbMemberTablePerBankReg4 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 35; Skip Register;
    Name => "SliceNativeLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "124",
    Width => "61", # Excel Formula: =calc_reg_width(E184:E185,F185)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "4",
    SliceNativeLbMemberTableActiveBanks4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 36;
      Name => "SliceNativeLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F183,E184,TRUE)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "d1",
    },
    SliceNativeLbMemberTableHashKey4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 32;
      Name => "SliceNativeLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F184,E185)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SliceNativeLbMemberTablePerBankReg5 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 35; Skip Register;
    Name => "SliceNativeLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "125",
    Width => "61", # Excel Formula: =calc_reg_width(E184:E185,F185)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "5",
    SliceNativeLbMemberTableActiveBanks5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 36;
      Name => "SliceNativeLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F183,E184,TRUE)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "d1",
    },
    SliceNativeLbMemberTableHashKey5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 32;
      Name => "SliceNativeLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F184,E185)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SliceNativeLbMemberTablePerBankReg6 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 35; Skip Register;
    Name => "SliceNativeLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "126",
    Width => "61", # Excel Formula: =calc_reg_width(E184:E185,F185)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "6",
    SliceNativeLbMemberTableActiveBanks6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 36;
      Name => "SliceNativeLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F183,E184,TRUE)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "d1",
    },
    SliceNativeLbMemberTableHashKey6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 32;
      Name => "SliceNativeLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F184,E185)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SliceNativeLbMemberTablePerBankReg7 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 35; Skip Register;
    Name => "SliceNativeLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "127",
    Width => "61", # Excel Formula: =calc_reg_width(E184:E185,F185)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "7",
    SliceNativeLbMemberTableActiveBanks7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 36;
      Name => "SliceNativeLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F183,E184,TRUE)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "d1",
    },
    SliceNativeLbMemberTableHashKey7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 32;
      Name => "SliceNativeLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F184,E185)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SliceNativeLbMemberTablePerEmReg0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 33; Skip Register;
    Name => "SliceNativeLbMemberTablePerEmReg[2]",
    RegMem => "Reg",
    Address => "128", # Excel Formula: =calc_reg_address(C183,A183,G183)
    Width => "33", # Excel Formula: =calc_reg_width(E187:E189,F189)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    SliceNativeLbMemberTableKeyWidth0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 33;
      Name => "SliceNativeLbMemberTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F186,E187,TRUE)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
    SliceNativeLbMemberTableAutoBubbleReq0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 38;
      Name => "SliceNativeLbMemberTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F187,E188)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
    SliceNativeLbMemberTableBubbleReqThreshold0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 43;
      Name => "SliceNativeLbMemberTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F188,E189)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SliceNativeLbMemberTablePerEmReg1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 33; Skip Register;
    Name => "SliceNativeLbMemberTablePerEmReg[2]",
    RegMem => "Reg",
    Address => "129",
    Width => "33", # Excel Formula: =calc_reg_width(E187:E189,F189)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    SliceNativeLbMemberTableKeyWidth1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 33;
      Name => "SliceNativeLbMemberTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F186,E187,TRUE)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
    SliceNativeLbMemberTableAutoBubbleReq1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 38;
      Name => "SliceNativeLbMemberTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F187,E188)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
    SliceNativeLbMemberTableBubbleReqThreshold1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 43;
      Name => "SliceNativeLbMemberTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F188,E189)
      Type => "Config",
      UsedBy => "SliceNativeLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SliceNativeLbMemberTableAccessRegister0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 39; Skip Register;
    Name => "SliceNativeLbMemberTableAccessRegister[2]",
    RegMem => "Reg",
    Address => "12A", # Excel Formula: =calc_reg_address(C186,A186,G186)
    Width => "100", # Excel Formula: =calc_reg_width(E191:E191,F191)
    Type => "External",
    UsedBy => "em_top",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    SliceNativeLbMemberTableAccessReg0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 34;
      Name => "SliceNativeLbMemberTableAccessReg[n]",
      RegMem => "RegField",
      Width => "100",
      Position => "99:0", # Excel Formula: =calc_position(F190,E191,TRUE)
      Type => "External",
    },
  },
  SliceNativeLbMemberTableAccessRegister1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 39; Skip Register;
    Name => "SliceNativeLbMemberTableAccessRegister[2]",
    RegMem => "Reg",
    Address => "12B",
    Width => "100", # Excel Formula: =calc_reg_width(E191:E191,F191)
    Type => "External",
    UsedBy => "em_top",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    SliceNativeLbMemberTableAccessReg1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 34;
      Name => "SliceNativeLbMemberTableAccessReg[n]",
      RegMem => "RegField",
      Width => "100",
      Position => "99:0", # Excel Formula: =calc_position(F190,E191,TRUE)
      Type => "External",
    },
  },
  SliceNativeLbMemberTableResponseRegister0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 41; Skip Register;
    Name => "SliceNativeLbMemberTableResponseRegister[2]",
    RegMem => "Reg",
    Address => "12C", # Excel Formula: =calc_reg_address(C190,A190,G190)
    Width => "100", # Excel Formula: =calc_reg_width(E193:E194,F194)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    SliceNativeLbMemberTableResponseValid0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 38;
      Name => "SliceNativeLbMemberTableResponseValid[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F192,E193,TRUE)
      Type => "Event",
      UsedBy => "emdb",
    },
    SliceNativeLbMemberTableResponseReg0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 36;
      Name => "SliceNativeLbMemberTableResponseReg[n]",
      RegMem => "RegField",
      Width => "99",
      Position => "99:1", # Excel Formula: =calc_position(F193,E194)
      Type => "Capture",
      UsedBy => "emdb",
    },
  },
  SliceNativeLbMemberTableResponseRegister1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 41; Skip Register;
    Name => "SliceNativeLbMemberTableResponseRegister[2]",
    RegMem => "Reg",
    Address => "12D",
    Width => "100", # Excel Formula: =calc_reg_width(E193:E194,F194)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    SliceNativeLbMemberTableResponseValid1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 38;
      Name => "SliceNativeLbMemberTableResponseValid[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F192,E193,TRUE)
      Type => "Event",
      UsedBy => "emdb",
    },
    SliceNativeLbMemberTableResponseReg1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 36;
      Name => "SliceNativeLbMemberTableResponseReg[n]",
      RegMem => "RegField",
      Width => "99",
      Position => "99:1", # Excel Formula: =calc_position(F193,E194)
      Type => "Capture",
      UsedBy => "emdb",
    },
  },
  SliceNativeLbMemberTableCam0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 28; Skip Register;
    Name => "SliceNativeLbMemberTableCam[2]",
    RegMem => "Mem",
    Address => "3800000", # Excel Formula: =calc_mem_address(C181,A181,G195,L195)
    Width => "80", # Excel Formula: =calc_mem_width(E196:E198,M195,F198,-1)
    Type => "Dynamic",
    UsedBy => "SliceNativeLbMemberTable",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=49,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "80",
    SliceNativeLbMemberTableCam0_key => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 28;
      Name => "SliceNativeLbMemberTableCam[n]_key",
      RegMem => "MemField",
      Width => "30",
      Position => "29:0", # Excel Formula: =calc_position(F195,E196,TRUE)
    },
    SliceNativeLbMemberTableCam0_payload => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 28;
      Name => "SliceNativeLbMemberTableCam[n]_payload",
      RegMem => "MemField",
      Width => "49",
      Position => "78:30", # Excel Formula: =calc_position(F196,E197)
    },
    SliceNativeLbMemberTableCam0_valid => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 28;
      Name => "SliceNativeLbMemberTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "79", # Excel Formula: =calc_position(F197,E198)
    },
  },
  SliceNativeLbMemberTableCam1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 28; Skip Register;
    Name => "SliceNativeLbMemberTableCam[2]",
    RegMem => "Mem",
    Address => "3900000",
    Width => "80", # Excel Formula: =calc_mem_width(E196:E198,M195,F198,-1)
    Type => "Dynamic",
    UsedBy => "SliceNativeLbMemberTable",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=49,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "80",
    SliceNativeLbMemberTableCam1_key => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 28;
      Name => "SliceNativeLbMemberTableCam[n]_key",
      RegMem => "MemField",
      Width => "30",
      Position => "29:0", # Excel Formula: =calc_position(F195,E196,TRUE)
    },
    SliceNativeLbMemberTableCam1_payload => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 28;
      Name => "SliceNativeLbMemberTableCam[n]_payload",
      RegMem => "MemField",
      Width => "49",
      Position => "78:30", # Excel Formula: =calc_position(F196,E197)
    },
    SliceNativeLbMemberTableCam1_valid => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 28;
      Name => "SliceNativeLbMemberTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "79", # Excel Formula: =calc_position(F197,E198)
    },
  },
  SlicePathLbMemberTableVerifier0 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 31; Skip Register;
    Name => "SlicePathLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3A00000", # Excel Formula: =calc_mem_address(C195,A195,G199,L199)
    Width => "55", # Excel Formula: =calc_mem_width(E200:E200,M199,F200,-1)
    Type => "Dynamic",
    UsedBy => "SlicePathLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "0",
    MemLogicalWidth => "55",
    SlicePathLbMemberTableVerifier0Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 31;
      Name => "SlicePathLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "55",
      Position => "54:0", # Excel Formula: =calc_position(F199,E200,TRUE)
    },
  },
  SlicePathLbMemberTableVerifier1 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 31; Skip Register;
    Name => "SlicePathLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3B00000",
    Width => "55", # Excel Formula: =calc_mem_width(E200:E200,M199,F200,-1)
    Type => "Dynamic",
    UsedBy => "SlicePathLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "1",
    MemLogicalWidth => "55",
    SlicePathLbMemberTableVerifier1Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 31;
      Name => "SlicePathLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "55",
      Position => "54:0", # Excel Formula: =calc_position(F199,E200,TRUE)
    },
  },
  SlicePathLbMemberTableVerifier2 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 31; Skip Register;
    Name => "SlicePathLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3C00000",
    Width => "55", # Excel Formula: =calc_mem_width(E200:E200,M199,F200,-1)
    Type => "Dynamic",
    UsedBy => "SlicePathLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "2",
    MemLogicalWidth => "55",
    SlicePathLbMemberTableVerifier2Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 31;
      Name => "SlicePathLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "55",
      Position => "54:0", # Excel Formula: =calc_position(F199,E200,TRUE)
    },
  },
  SlicePathLbMemberTableVerifier3 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 31; Skip Register;
    Name => "SlicePathLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3D00000",
    Width => "55", # Excel Formula: =calc_mem_width(E200:E200,M199,F200,-1)
    Type => "Dynamic",
    UsedBy => "SlicePathLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "3",
    MemLogicalWidth => "55",
    SlicePathLbMemberTableVerifier3Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 31;
      Name => "SlicePathLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "55",
      Position => "54:0", # Excel Formula: =calc_position(F199,E200,TRUE)
    },
  },
  SlicePathLbMemberTableVerifier4 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 31; Skip Register;
    Name => "SlicePathLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3E00000",
    Width => "55", # Excel Formula: =calc_mem_width(E200:E200,M199,F200,-1)
    Type => "Dynamic",
    UsedBy => "SlicePathLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "4",
    MemLogicalWidth => "55",
    SlicePathLbMemberTableVerifier4Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 31;
      Name => "SlicePathLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "55",
      Position => "54:0", # Excel Formula: =calc_position(F199,E200,TRUE)
    },
  },
  SlicePathLbMemberTableVerifier5 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 31; Skip Register;
    Name => "SlicePathLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "3F00000",
    Width => "55", # Excel Formula: =calc_mem_width(E200:E200,M199,F200,-1)
    Type => "Dynamic",
    UsedBy => "SlicePathLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "5",
    MemLogicalWidth => "55",
    SlicePathLbMemberTableVerifier5Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 31;
      Name => "SlicePathLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "55",
      Position => "54:0", # Excel Formula: =calc_position(F199,E200,TRUE)
    },
  },
  SlicePathLbMemberTableVerifier6 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 31; Skip Register;
    Name => "SlicePathLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "4000000",
    Width => "55", # Excel Formula: =calc_mem_width(E200:E200,M199,F200,-1)
    Type => "Dynamic",
    UsedBy => "SlicePathLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "6",
    MemLogicalWidth => "55",
    SlicePathLbMemberTableVerifier6Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 31;
      Name => "SlicePathLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "55",
      Position => "54:0", # Excel Formula: =calc_position(F199,E200,TRUE)
    },
  },
  SlicePathLbMemberTableVerifier7 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 31; Skip Register;
    Name => "SlicePathLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "4100000",
    Width => "55", # Excel Formula: =calc_mem_width(E200:E200,M199,F200,-1)
    Type => "Dynamic",
    UsedBy => "SlicePathLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "7",
    MemLogicalWidth => "55",
    SlicePathLbMemberTableVerifier7Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 31;
      Name => "SlicePathLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "55",
      Position => "54:0", # Excel Formula: =calc_position(F199,E200,TRUE)
    },
  },
  SlicePathLbMemberTablePerBankReg0 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 33; Skip Register;
    Name => "SlicePathLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "12E", # Excel Formula: =calc_reg_address(C192,A192,G192)
    Width => "61", # Excel Formula: =calc_reg_width(E202:E203,F203)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "0",
    SlicePathLbMemberTableActiveBanks0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 34;
      Name => "SlicePathLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F201,E202,TRUE)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePathLbMemberTableHashKey0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 30;
      Name => "SlicePathLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePathLbMemberTablePerBankReg1 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 33; Skip Register;
    Name => "SlicePathLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "12F",
    Width => "61", # Excel Formula: =calc_reg_width(E202:E203,F203)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "1",
    SlicePathLbMemberTableActiveBanks1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 34;
      Name => "SlicePathLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F201,E202,TRUE)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePathLbMemberTableHashKey1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 30;
      Name => "SlicePathLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePathLbMemberTablePerBankReg2 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 33; Skip Register;
    Name => "SlicePathLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "130",
    Width => "61", # Excel Formula: =calc_reg_width(E202:E203,F203)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "2",
    SlicePathLbMemberTableActiveBanks2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 34;
      Name => "SlicePathLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F201,E202,TRUE)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePathLbMemberTableHashKey2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 30;
      Name => "SlicePathLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePathLbMemberTablePerBankReg3 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 33; Skip Register;
    Name => "SlicePathLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "131",
    Width => "61", # Excel Formula: =calc_reg_width(E202:E203,F203)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "3",
    SlicePathLbMemberTableActiveBanks3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 34;
      Name => "SlicePathLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F201,E202,TRUE)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePathLbMemberTableHashKey3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 30;
      Name => "SlicePathLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePathLbMemberTablePerBankReg4 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 33; Skip Register;
    Name => "SlicePathLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "132",
    Width => "61", # Excel Formula: =calc_reg_width(E202:E203,F203)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "4",
    SlicePathLbMemberTableActiveBanks4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 34;
      Name => "SlicePathLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F201,E202,TRUE)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePathLbMemberTableHashKey4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 30;
      Name => "SlicePathLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePathLbMemberTablePerBankReg5 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 33; Skip Register;
    Name => "SlicePathLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "133",
    Width => "61", # Excel Formula: =calc_reg_width(E202:E203,F203)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "5",
    SlicePathLbMemberTableActiveBanks5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 34;
      Name => "SlicePathLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F201,E202,TRUE)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePathLbMemberTableHashKey5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 30;
      Name => "SlicePathLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePathLbMemberTablePerBankReg6 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 33; Skip Register;
    Name => "SlicePathLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "134",
    Width => "61", # Excel Formula: =calc_reg_width(E202:E203,F203)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "6",
    SlicePathLbMemberTableActiveBanks6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 34;
      Name => "SlicePathLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F201,E202,TRUE)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePathLbMemberTableHashKey6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 30;
      Name => "SlicePathLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePathLbMemberTablePerBankReg7 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 33; Skip Register;
    Name => "SlicePathLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "135",
    Width => "61", # Excel Formula: =calc_reg_width(E202:E203,F203)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "7",
    SlicePathLbMemberTableActiveBanks7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 34;
      Name => "SlicePathLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F201,E202,TRUE)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePathLbMemberTableHashKey7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 30;
      Name => "SlicePathLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F202,E203)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePathLbMemberTablePerEmReg0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 31; Skip Register;
    Name => "SlicePathLbMemberTablePerEmReg[2]",
    RegMem => "Reg",
    Address => "136", # Excel Formula: =calc_reg_address(C201,A201,G201)
    Width => "33", # Excel Formula: =calc_reg_width(E205:E207,F207)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    SlicePathLbMemberTableKeyWidth0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 31;
      Name => "SlicePathLbMemberTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F204,E205,TRUE)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
    SlicePathLbMemberTableAutoBubbleReq0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 36;
      Name => "SlicePathLbMemberTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F205,E206)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
    SlicePathLbMemberTableBubbleReqThreshold0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 41;
      Name => "SlicePathLbMemberTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F206,E207)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePathLbMemberTablePerEmReg1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 31; Skip Register;
    Name => "SlicePathLbMemberTablePerEmReg[2]",
    RegMem => "Reg",
    Address => "137",
    Width => "33", # Excel Formula: =calc_reg_width(E205:E207,F207)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    SlicePathLbMemberTableKeyWidth1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 31;
      Name => "SlicePathLbMemberTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F204,E205,TRUE)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
    SlicePathLbMemberTableAutoBubbleReq1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 36;
      Name => "SlicePathLbMemberTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F205,E206)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
    SlicePathLbMemberTableBubbleReqThreshold1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 41;
      Name => "SlicePathLbMemberTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F206,E207)
      Type => "Config",
      UsedBy => "SlicePathLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePathLbMemberTableAccessRegister0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 37; Skip Register;
    Name => "SlicePathLbMemberTableAccessRegister[2]",
    RegMem => "Reg",
    Address => "138", # Excel Formula: =calc_reg_address(C204,A204,G204)
    Width => "80", # Excel Formula: =calc_reg_width(E209:E209,F209)
    Type => "External",
    UsedBy => "em_top",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    SlicePathLbMemberTableAccessReg0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 32;
      Name => "SlicePathLbMemberTableAccessReg[n]",
      RegMem => "RegField",
      Width => "80",
      Position => "79:0", # Excel Formula: =calc_position(F208,E209,TRUE)
      Type => "External",
    },
  },
  SlicePathLbMemberTableAccessRegister1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 37; Skip Register;
    Name => "SlicePathLbMemberTableAccessRegister[2]",
    RegMem => "Reg",
    Address => "139",
    Width => "80", # Excel Formula: =calc_reg_width(E209:E209,F209)
    Type => "External",
    UsedBy => "em_top",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    SlicePathLbMemberTableAccessReg1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 32;
      Name => "SlicePathLbMemberTableAccessReg[n]",
      RegMem => "RegField",
      Width => "80",
      Position => "79:0", # Excel Formula: =calc_position(F208,E209,TRUE)
      Type => "External",
    },
  },
  SlicePathLbMemberTableResponseRegister0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 39; Skip Register;
    Name => "SlicePathLbMemberTableResponseRegister[2]",
    RegMem => "Reg",
    Address => "13A", # Excel Formula: =calc_reg_address(C208,A208,G208)
    Width => "80", # Excel Formula: =calc_reg_width(E211:E212,F212)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    SlicePathLbMemberTableResponseValid0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 36;
      Name => "SlicePathLbMemberTableResponseValid[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F210,E211,TRUE)
      Type => "Event",
      UsedBy => "emdb",
    },
    SlicePathLbMemberTableResponseReg0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 34;
      Name => "SlicePathLbMemberTableResponseReg[n]",
      RegMem => "RegField",
      Width => "79",
      Position => "79:1", # Excel Formula: =calc_position(F211,E212)
      Type => "Capture",
      UsedBy => "emdb",
    },
  },
  SlicePathLbMemberTableResponseRegister1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 39; Skip Register;
    Name => "SlicePathLbMemberTableResponseRegister[2]",
    RegMem => "Reg",
    Address => "13B",
    Width => "80", # Excel Formula: =calc_reg_width(E211:E212,F212)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    SlicePathLbMemberTableResponseValid1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 36;
      Name => "SlicePathLbMemberTableResponseValid[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F210,E211,TRUE)
      Type => "Event",
      UsedBy => "emdb",
    },
    SlicePathLbMemberTableResponseReg1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 34;
      Name => "SlicePathLbMemberTableResponseReg[n]",
      RegMem => "RegField",
      Width => "79",
      Position => "79:1", # Excel Formula: =calc_position(F211,E212)
      Type => "Capture",
      UsedBy => "emdb",
    },
  },
  SlicePathLbMemberTableCam0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 26; Skip Register;
    Name => "SlicePathLbMemberTableCam[2]",
    RegMem => "Mem",
    Address => "4200000", # Excel Formula: =calc_mem_address(C199,A199,G213,L213)
    Width => "60", # Excel Formula: =calc_mem_width(E214:E216,M213,F216,-1)
    Type => "Dynamic",
    UsedBy => "SlicePathLbMemberTable",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=29,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "60",
    SlicePathLbMemberTableCam0_key => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 26;
      Name => "SlicePathLbMemberTableCam[n]_key",
      RegMem => "MemField",
      Width => "30",
      Position => "29:0", # Excel Formula: =calc_position(F213,E214,TRUE)
    },
    SlicePathLbMemberTableCam0_payload => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 26;
      Name => "SlicePathLbMemberTableCam[n]_payload",
      RegMem => "MemField",
      Width => "29",
      Position => "58:30", # Excel Formula: =calc_position(F214,E215)
    },
    SlicePathLbMemberTableCam0_valid => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 26;
      Name => "SlicePathLbMemberTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "59", # Excel Formula: =calc_position(F215,E216)
    },
  },
  SlicePathLbMemberTableCam1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 26; Skip Register;
    Name => "SlicePathLbMemberTableCam[2]",
    RegMem => "Mem",
    Address => "4300000",
    Width => "60", # Excel Formula: =calc_mem_width(E214:E216,M213,F216,-1)
    Type => "Dynamic",
    UsedBy => "SlicePathLbMemberTable",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=29,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "60",
    SlicePathLbMemberTableCam1_key => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 26;
      Name => "SlicePathLbMemberTableCam[n]_key",
      RegMem => "MemField",
      Width => "30",
      Position => "29:0", # Excel Formula: =calc_position(F213,E214,TRUE)
    },
    SlicePathLbMemberTableCam1_payload => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 26;
      Name => "SlicePathLbMemberTableCam[n]_payload",
      RegMem => "MemField",
      Width => "29",
      Position => "58:30", # Excel Formula: =calc_position(F214,E215)
    },
    SlicePathLbMemberTableCam1_valid => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 26;
      Name => "SlicePathLbMemberTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "59", # Excel Formula: =calc_position(F215,E216)
    },
  },
  SlicePortNppLbMemberTableVerifier0 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortNppLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "4400000", # Excel Formula: =calc_mem_address(C213,A213,G217,L217)
    Width => "43", # Excel Formula: =calc_mem_width(E218:E218,M217,F218,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortNppLbMemberTable",
    MemEntries => "2048",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "0",
    MemLogicalWidth => "43",
    SlicePortNppLbMemberTableVerifier0Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 34;
      Name => "SlicePortNppLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "43",
      Position => "42:0", # Excel Formula: =calc_position(F217,E218,TRUE)
    },
  },
  SlicePortNppLbMemberTableVerifier1 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortNppLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "4500000",
    Width => "43", # Excel Formula: =calc_mem_width(E218:E218,M217,F218,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortNppLbMemberTable",
    MemEntries => "2048",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "1",
    MemLogicalWidth => "43",
    SlicePortNppLbMemberTableVerifier1Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 34;
      Name => "SlicePortNppLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "43",
      Position => "42:0", # Excel Formula: =calc_position(F217,E218,TRUE)
    },
  },
  SlicePortNppLbMemberTableVerifier2 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortNppLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "4600000",
    Width => "43", # Excel Formula: =calc_mem_width(E218:E218,M217,F218,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortNppLbMemberTable",
    MemEntries => "2048",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "2",
    MemLogicalWidth => "43",
    SlicePortNppLbMemberTableVerifier2Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 34;
      Name => "SlicePortNppLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "43",
      Position => "42:0", # Excel Formula: =calc_position(F217,E218,TRUE)
    },
  },
  SlicePortNppLbMemberTableVerifier3 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortNppLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "4700000",
    Width => "43", # Excel Formula: =calc_mem_width(E218:E218,M217,F218,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortNppLbMemberTable",
    MemEntries => "2048",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "3",
    MemLogicalWidth => "43",
    SlicePortNppLbMemberTableVerifier3Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 34;
      Name => "SlicePortNppLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "43",
      Position => "42:0", # Excel Formula: =calc_position(F217,E218,TRUE)
    },
  },
  SlicePortNppLbMemberTableVerifier4 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortNppLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "4800000",
    Width => "43", # Excel Formula: =calc_mem_width(E218:E218,M217,F218,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortNppLbMemberTable",
    MemEntries => "2048",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "4",
    MemLogicalWidth => "43",
    SlicePortNppLbMemberTableVerifier4Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 34;
      Name => "SlicePortNppLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "43",
      Position => "42:0", # Excel Formula: =calc_position(F217,E218,TRUE)
    },
  },
  SlicePortNppLbMemberTableVerifier5 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortNppLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "4900000",
    Width => "43", # Excel Formula: =calc_mem_width(E218:E218,M217,F218,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortNppLbMemberTable",
    MemEntries => "2048",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "5",
    MemLogicalWidth => "43",
    SlicePortNppLbMemberTableVerifier5Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 34;
      Name => "SlicePortNppLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "43",
      Position => "42:0", # Excel Formula: =calc_position(F217,E218,TRUE)
    },
  },
  SlicePortNppLbMemberTableVerifier6 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortNppLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "4A00000",
    Width => "43", # Excel Formula: =calc_mem_width(E218:E218,M217,F218,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortNppLbMemberTable",
    MemEntries => "2048",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "6",
    MemLogicalWidth => "43",
    SlicePortNppLbMemberTableVerifier6Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 34;
      Name => "SlicePortNppLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "43",
      Position => "42:0", # Excel Formula: =calc_position(F217,E218,TRUE)
    },
  },
  SlicePortNppLbMemberTableVerifier7 => { #Structure Type: Mem; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortNppLbMemberTableVerifier[8]",
    RegMem => "Mem",
    Address => "4B00000",
    Width => "43", # Excel Formula: =calc_mem_width(E218:E218,M217,F218,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortNppLbMemberTable",
    MemEntries => "2048",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "7",
    MemLogicalWidth => "43",
    SlicePortNppLbMemberTableVerifier7Data => { #Structure Type: MemField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 34;
      Name => "SlicePortNppLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "43",
      Position => "42:0", # Excel Formula: =calc_position(F217,E218,TRUE)
    },
  },
  SlicePortNppLbMemberTablePerBankReg0 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortNppLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "13C", # Excel Formula: =calc_reg_address(C210,A210,G210)
    Width => "61", # Excel Formula: =calc_reg_width(E220:E221,F221)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "0",
    SlicePortNppLbMemberTableActiveBanks0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 37;
      Name => "SlicePortNppLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F219,E220,TRUE)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortNppLbMemberTableHashKey0 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 0; ArrayLocationInName: 33;
      Name => "SlicePortNppLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F220,E221)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortNppLbMemberTablePerBankReg1 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortNppLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "13D",
    Width => "61", # Excel Formula: =calc_reg_width(E220:E221,F221)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "1",
    SlicePortNppLbMemberTableActiveBanks1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 37;
      Name => "SlicePortNppLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F219,E220,TRUE)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortNppLbMemberTableHashKey1 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 1; ArrayLocationInName: 33;
      Name => "SlicePortNppLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F220,E221)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortNppLbMemberTablePerBankReg2 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortNppLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "13E",
    Width => "61", # Excel Formula: =calc_reg_width(E220:E221,F221)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "2",
    SlicePortNppLbMemberTableActiveBanks2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 37;
      Name => "SlicePortNppLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F219,E220,TRUE)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortNppLbMemberTableHashKey2 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 2; ArrayLocationInName: 33;
      Name => "SlicePortNppLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F220,E221)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortNppLbMemberTablePerBankReg3 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortNppLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "13F",
    Width => "61", # Excel Formula: =calc_reg_width(E220:E221,F221)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "3",
    SlicePortNppLbMemberTableActiveBanks3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 37;
      Name => "SlicePortNppLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F219,E220,TRUE)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortNppLbMemberTableHashKey3 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 3; ArrayLocationInName: 33;
      Name => "SlicePortNppLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F220,E221)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortNppLbMemberTablePerBankReg4 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortNppLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "140",
    Width => "61", # Excel Formula: =calc_reg_width(E220:E221,F221)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "4",
    SlicePortNppLbMemberTableActiveBanks4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 37;
      Name => "SlicePortNppLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F219,E220,TRUE)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortNppLbMemberTableHashKey4 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 4; ArrayLocationInName: 33;
      Name => "SlicePortNppLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F220,E221)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortNppLbMemberTablePerBankReg5 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortNppLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "141",
    Width => "61", # Excel Formula: =calc_reg_width(E220:E221,F221)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "5",
    SlicePortNppLbMemberTableActiveBanks5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 37;
      Name => "SlicePortNppLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F219,E220,TRUE)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortNppLbMemberTableHashKey5 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 5; ArrayLocationInName: 33;
      Name => "SlicePortNppLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F220,E221)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortNppLbMemberTablePerBankReg6 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortNppLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "142",
    Width => "61", # Excel Formula: =calc_reg_width(E220:E221,F221)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "6",
    SlicePortNppLbMemberTableActiveBanks6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 37;
      Name => "SlicePortNppLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F219,E220,TRUE)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortNppLbMemberTableHashKey6 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 6; ArrayLocationInName: 33;
      Name => "SlicePortNppLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F220,E221)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortNppLbMemberTablePerBankReg7 => { #Structure Type: Reg; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortNppLbMemberTablePerBankReg[8]",
    RegMem => "Reg",
    Address => "143",
    Width => "61", # Excel Formula: =calc_reg_width(E220:E221,F221)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "8",
    ArrayIndex => "7",
    SlicePortNppLbMemberTableActiveBanks7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 37;
      Name => "SlicePortNppLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F219,E220,TRUE)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortNppLbMemberTableHashKey7 => { #Structure Type: RegField; ArrayLength: 8; ArrayIndex: 7; ArrayLocationInName: 33;
      Name => "SlicePortNppLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F220,E221)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortNppLbMemberTablePerEmReg0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortNppLbMemberTablePerEmReg[2]",
    RegMem => "Reg",
    Address => "144", # Excel Formula: =calc_reg_address(C219,A219,G219)
    Width => "33", # Excel Formula: =calc_reg_width(E223:E225,F225)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    SlicePortNppLbMemberTableKeyWidth0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 34;
      Name => "SlicePortNppLbMemberTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F222,E223,TRUE)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
    SlicePortNppLbMemberTableAutoBubbleReq0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 39;
      Name => "SlicePortNppLbMemberTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F223,E224)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
    SlicePortNppLbMemberTableBubbleReqThreshold0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 44;
      Name => "SlicePortNppLbMemberTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F224,E225)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortNppLbMemberTablePerEmReg1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortNppLbMemberTablePerEmReg[2]",
    RegMem => "Reg",
    Address => "145",
    Width => "33", # Excel Formula: =calc_reg_width(E223:E225,F225)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    SlicePortNppLbMemberTableKeyWidth1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 34;
      Name => "SlicePortNppLbMemberTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F222,E223,TRUE)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
    SlicePortNppLbMemberTableAutoBubbleReq1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 39;
      Name => "SlicePortNppLbMemberTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F223,E224)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
    SlicePortNppLbMemberTableBubbleReqThreshold1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 44;
      Name => "SlicePortNppLbMemberTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F224,E225)
      Type => "Config",
      UsedBy => "SlicePortNppLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortNppLbMemberTableAccessRegister0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 40; Skip Register;
    Name => "SlicePortNppLbMemberTableAccessRegister[2]",
    RegMem => "Reg",
    Address => "146", # Excel Formula: =calc_reg_address(C222,A222,G222)
    Width => "66", # Excel Formula: =calc_reg_width(E227:E227,F227)
    Type => "External",
    UsedBy => "em_top",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    SlicePortNppLbMemberTableAccessReg0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 35;
      Name => "SlicePortNppLbMemberTableAccessReg[n]",
      RegMem => "RegField",
      Width => "66",
      Position => "65:0", # Excel Formula: =calc_position(F226,E227,TRUE)
      Type => "External",
    },
  },
  SlicePortNppLbMemberTableAccessRegister1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 40; Skip Register;
    Name => "SlicePortNppLbMemberTableAccessRegister[2]",
    RegMem => "Reg",
    Address => "147",
    Width => "66", # Excel Formula: =calc_reg_width(E227:E227,F227)
    Type => "External",
    UsedBy => "em_top",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    SlicePortNppLbMemberTableAccessReg1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 35;
      Name => "SlicePortNppLbMemberTableAccessReg[n]",
      RegMem => "RegField",
      Width => "66",
      Position => "65:0", # Excel Formula: =calc_position(F226,E227,TRUE)
      Type => "External",
    },
  },
  SlicePortNppLbMemberTableResponseRegister0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 42; Skip Register;
    Name => "SlicePortNppLbMemberTableResponseRegister[2]",
    RegMem => "Reg",
    Address => "148", # Excel Formula: =calc_reg_address(C226,A226,G226)
    Width => "66", # Excel Formula: =calc_reg_width(E229:E230,F230)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    SlicePortNppLbMemberTableResponseValid0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 39;
      Name => "SlicePortNppLbMemberTableResponseValid[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F228,E229,TRUE)
      Type => "Event",
      UsedBy => "emdb",
    },
    SlicePortNppLbMemberTableResponseReg0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 37;
      Name => "SlicePortNppLbMemberTableResponseReg[n]",
      RegMem => "RegField",
      Width => "65",
      Position => "65:1", # Excel Formula: =calc_position(F229,E230)
      Type => "Capture",
      UsedBy => "emdb",
    },
  },
  SlicePortNppLbMemberTableResponseRegister1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 42; Skip Register;
    Name => "SlicePortNppLbMemberTableResponseRegister[2]",
    RegMem => "Reg",
    Address => "149",
    Width => "66", # Excel Formula: =calc_reg_width(E229:E230,F230)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    SlicePortNppLbMemberTableResponseValid1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 39;
      Name => "SlicePortNppLbMemberTableResponseValid[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F228,E229,TRUE)
      Type => "Event",
      UsedBy => "emdb",
    },
    SlicePortNppLbMemberTableResponseReg1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 37;
      Name => "SlicePortNppLbMemberTableResponseReg[n]",
      RegMem => "RegField",
      Width => "65",
      Position => "65:1", # Excel Formula: =calc_position(F229,E230)
      Type => "Capture",
      UsedBy => "emdb",
    },
  },
  SlicePortNppLbMemberTableCam0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 29; Skip Register;
    Name => "SlicePortNppLbMemberTableCam[2]",
    RegMem => "Mem",
    Address => "4C00000", # Excel Formula: =calc_mem_address(C217,A217,G231,L231)
    Width => "47", # Excel Formula: =calc_mem_width(E232:E234,M231,F234,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortNppLbMemberTable",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=16,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "47",
    SlicePortNppLbMemberTableCam0_key => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 29;
      Name => "SlicePortNppLbMemberTableCam[n]_key",
      RegMem => "MemField",
      Width => "30",
      Position => "29:0", # Excel Formula: =calc_position(F231,E232,TRUE)
    },
    SlicePortNppLbMemberTableCam0_payload => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 29;
      Name => "SlicePortNppLbMemberTableCam[n]_payload",
      RegMem => "MemField",
      Width => "16",
      Position => "45:30", # Excel Formula: =calc_position(F232,E233)
    },
    SlicePortNppLbMemberTableCam0_valid => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 29;
      Name => "SlicePortNppLbMemberTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "46", # Excel Formula: =calc_position(F233,E234)
    },
  },
  SlicePortNppLbMemberTableCam1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 29; Skip Register;
    Name => "SlicePortNppLbMemberTableCam[2]",
    RegMem => "Mem",
    Address => "4D00000",
    Width => "47", # Excel Formula: =calc_mem_width(E232:E234,M231,F234,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortNppLbMemberTable",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=16,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "47",
    SlicePortNppLbMemberTableCam1_key => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 29;
      Name => "SlicePortNppLbMemberTableCam[n]_key",
      RegMem => "MemField",
      Width => "30",
      Position => "29:0", # Excel Formula: =calc_position(F231,E232,TRUE)
    },
    SlicePortNppLbMemberTableCam1_payload => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 29;
      Name => "SlicePortNppLbMemberTableCam[n]_payload",
      RegMem => "MemField",
      Width => "16",
      Position => "45:30", # Excel Formula: =calc_position(F232,E233)
    },
    SlicePortNppLbMemberTableCam1_valid => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 29;
      Name => "SlicePortNppLbMemberTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "46", # Excel Formula: =calc_position(F233,E234)
    },
  },
  SlicePortDspLbMemberTableVerifier0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortDspLbMemberTableVerifier[6]",
    RegMem => "Mem",
    Address => "4E00000", # Excel Formula: =calc_mem_address(C231,A231,G235,L235)
    Width => "41", # Excel Formula: =calc_mem_width(E236:E236,M235,F236,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortDspLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "41",
    SlicePortDspLbMemberTableVerifier0Data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 34;
      Name => "SlicePortDspLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "41",
      Position => "40:0", # Excel Formula: =calc_position(F235,E236,TRUE)
    },
  },
  SlicePortDspLbMemberTableVerifier1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortDspLbMemberTableVerifier[6]",
    RegMem => "Mem",
    Address => "4F00000",
    Width => "41", # Excel Formula: =calc_mem_width(E236:E236,M235,F236,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortDspLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "41",
    SlicePortDspLbMemberTableVerifier1Data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 34;
      Name => "SlicePortDspLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "41",
      Position => "40:0", # Excel Formula: =calc_position(F235,E236,TRUE)
    },
  },
  SlicePortDspLbMemberTableVerifier2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortDspLbMemberTableVerifier[6]",
    RegMem => "Mem",
    Address => "5000000",
    Width => "41", # Excel Formula: =calc_mem_width(E236:E236,M235,F236,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortDspLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "41",
    SlicePortDspLbMemberTableVerifier2Data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 34;
      Name => "SlicePortDspLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "41",
      Position => "40:0", # Excel Formula: =calc_position(F235,E236,TRUE)
    },
  },
  SlicePortDspLbMemberTableVerifier3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortDspLbMemberTableVerifier[6]",
    RegMem => "Mem",
    Address => "5100000",
    Width => "41", # Excel Formula: =calc_mem_width(E236:E236,M235,F236,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortDspLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "41",
    SlicePortDspLbMemberTableVerifier3Data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 34;
      Name => "SlicePortDspLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "41",
      Position => "40:0", # Excel Formula: =calc_position(F235,E236,TRUE)
    },
  },
  SlicePortDspLbMemberTableVerifier4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortDspLbMemberTableVerifier[6]",
    RegMem => "Mem",
    Address => "5200000",
    Width => "41", # Excel Formula: =calc_mem_width(E236:E236,M235,F236,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortDspLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "41",
    SlicePortDspLbMemberTableVerifier4Data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 34;
      Name => "SlicePortDspLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "41",
      Position => "40:0", # Excel Formula: =calc_position(F235,E236,TRUE)
    },
  },
  SlicePortDspLbMemberTableVerifier5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortDspLbMemberTableVerifier[6]",
    RegMem => "Mem",
    Address => "5300000",
    Width => "41", # Excel Formula: =calc_mem_width(E236:E236,M235,F236,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortDspLbMemberTable",
    MemEntries => "4096",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "PackArrayToBus=Enabled,SampleReadBeforeProt=2,SamplePhysicalMem=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "41",
    SlicePortDspLbMemberTableVerifier5Data => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 34;
      Name => "SlicePortDspLbMemberTableVerifier[n]Data",
      RegMem => "MemField",
      Width => "41",
      Position => "40:0", # Excel Formula: =calc_position(F235,E236,TRUE)
    },
  },
  SlicePortDspLbMemberTablePerBankReg0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortDspLbMemberTablePerBankReg[6]",
    RegMem => "Reg",
    Address => "14A", # Excel Formula: =calc_reg_address(C228,A228,G228)
    Width => "61", # Excel Formula: =calc_reg_width(E238:E239,F239)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "0",
    SlicePortDspLbMemberTableActiveBanks0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 37;
      Name => "SlicePortDspLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F237,E238,TRUE)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortDspLbMemberTableHashKey0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 33;
      Name => "SlicePortDspLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F238,E239)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortDspLbMemberTablePerBankReg1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortDspLbMemberTablePerBankReg[6]",
    RegMem => "Reg",
    Address => "14B",
    Width => "61", # Excel Formula: =calc_reg_width(E238:E239,F239)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "1",
    SlicePortDspLbMemberTableActiveBanks1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 37;
      Name => "SlicePortDspLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F237,E238,TRUE)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortDspLbMemberTableHashKey1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 33;
      Name => "SlicePortDspLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F238,E239)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortDspLbMemberTablePerBankReg2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortDspLbMemberTablePerBankReg[6]",
    RegMem => "Reg",
    Address => "14C",
    Width => "61", # Excel Formula: =calc_reg_width(E238:E239,F239)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "2",
    SlicePortDspLbMemberTableActiveBanks2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 37;
      Name => "SlicePortDspLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F237,E238,TRUE)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortDspLbMemberTableHashKey2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 33;
      Name => "SlicePortDspLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F238,E239)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortDspLbMemberTablePerBankReg3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortDspLbMemberTablePerBankReg[6]",
    RegMem => "Reg",
    Address => "14D",
    Width => "61", # Excel Formula: =calc_reg_width(E238:E239,F239)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "3",
    SlicePortDspLbMemberTableActiveBanks3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 37;
      Name => "SlicePortDspLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F237,E238,TRUE)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortDspLbMemberTableHashKey3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 33;
      Name => "SlicePortDspLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F238,E239)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortDspLbMemberTablePerBankReg4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortDspLbMemberTablePerBankReg[6]",
    RegMem => "Reg",
    Address => "14E",
    Width => "61", # Excel Formula: =calc_reg_width(E238:E239,F239)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "4",
    SlicePortDspLbMemberTableActiveBanks4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 37;
      Name => "SlicePortDspLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F237,E238,TRUE)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortDspLbMemberTableHashKey4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 33;
      Name => "SlicePortDspLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F238,E239)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortDspLbMemberTablePerBankReg5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 36; Skip Register;
    Name => "SlicePortDspLbMemberTablePerBankReg[6]",
    RegMem => "Reg",
    Address => "14F",
    Width => "61", # Excel Formula: =calc_reg_width(E238:E239,F239)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "6",
    ArrayIndex => "5",
    SlicePortDspLbMemberTableActiveBanks5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 37;
      Name => "SlicePortDspLbMemberTableActiveBanks[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F237,E238,TRUE)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "d1",
    },
    SlicePortDspLbMemberTableHashKey5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 33;
      Name => "SlicePortDspLbMemberTableHashKey[n]",
      RegMem => "RegField",
      Width => "60",
      Position => "60:1", # Excel Formula: =calc_position(F238,E239)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortDspLbMemberTablePerEmReg0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortDspLbMemberTablePerEmReg[2]",
    RegMem => "Reg",
    Address => "150", # Excel Formula: =calc_reg_address(C237,A237,G237)
    Width => "33", # Excel Formula: =calc_reg_width(E241:E243,F243)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    SlicePortDspLbMemberTableKeyWidth0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 34;
      Name => "SlicePortDspLbMemberTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F240,E241,TRUE)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "h0",
    },
    SlicePortDspLbMemberTableAutoBubbleReq0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 39;
      Name => "SlicePortDspLbMemberTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F241,E242)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "h0",
    },
    SlicePortDspLbMemberTableBubbleReqThreshold0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 44;
      Name => "SlicePortDspLbMemberTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F242,E243)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortDspLbMemberTablePerEmReg1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 34; Skip Register;
    Name => "SlicePortDspLbMemberTablePerEmReg[2]",
    RegMem => "Reg",
    Address => "151",
    Width => "33", # Excel Formula: =calc_reg_width(E241:E243,F243)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    SlicePortDspLbMemberTableKeyWidth1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 34;
      Name => "SlicePortDspLbMemberTableKeyWidth[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F240,E241,TRUE)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "h0",
    },
    SlicePortDspLbMemberTableAutoBubbleReq1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 39;
      Name => "SlicePortDspLbMemberTableAutoBubbleReq[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F241,E242)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "h0",
    },
    SlicePortDspLbMemberTableBubbleReqThreshold1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 44;
      Name => "SlicePortDspLbMemberTableBubbleReqThreshold[n]",
      RegMem => "RegField",
      Width => "16",
      Position => "32:17", # Excel Formula: =calc_position(F242,E243)
      Type => "Config",
      UsedBy => "SlicePortDspLbMemberTable",
      DefaultValue => "h0",
    },
  },
  SlicePortDspLbMemberTableAccessRegister0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 40; Skip Register;
    Name => "SlicePortDspLbMemberTableAccessRegister[2]",
    RegMem => "Reg",
    Address => "152", # Excel Formula: =calc_reg_address(C240,A240,G240)
    Width => "65", # Excel Formula: =calc_reg_width(E245:E245,F245)
    Type => "External",
    UsedBy => "em_top",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    SlicePortDspLbMemberTableAccessReg0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 35;
      Name => "SlicePortDspLbMemberTableAccessReg[n]",
      RegMem => "RegField",
      Width => "65",
      Position => "64:0", # Excel Formula: =calc_position(F244,E245,TRUE)
      Type => "External",
    },
  },
  SlicePortDspLbMemberTableAccessRegister1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 40; Skip Register;
    Name => "SlicePortDspLbMemberTableAccessRegister[2]",
    RegMem => "Reg",
    Address => "153",
    Width => "65", # Excel Formula: =calc_reg_width(E245:E245,F245)
    Type => "External",
    UsedBy => "em_top",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    SlicePortDspLbMemberTableAccessReg1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 35;
      Name => "SlicePortDspLbMemberTableAccessReg[n]",
      RegMem => "RegField",
      Width => "65",
      Position => "64:0", # Excel Formula: =calc_position(F244,E245,TRUE)
      Type => "External",
    },
  },
  SlicePortDspLbMemberTableResponseRegister0 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 42; Skip Register;
    Name => "SlicePortDspLbMemberTableResponseRegister[2]",
    RegMem => "Reg",
    Address => "154", # Excel Formula: =calc_reg_address(C244,A244,G244)
    Width => "66", # Excel Formula: =calc_reg_width(E247:E248,F248)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    SlicePortDspLbMemberTableResponseValid0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 39;
      Name => "SlicePortDspLbMemberTableResponseValid[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F246,E247,TRUE)
      Type => "Event",
      UsedBy => "emdb",
    },
    SlicePortDspLbMemberTableResponseReg0 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 37;
      Name => "SlicePortDspLbMemberTableResponseReg[n]",
      RegMem => "RegField",
      Width => "65",
      Position => "65:1", # Excel Formula: =calc_position(F247,E248)
      Type => "Capture",
      UsedBy => "emdb",
    },
  },
  SlicePortDspLbMemberTableResponseRegister1 => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 42; Skip Register;
    Name => "SlicePortDspLbMemberTableResponseRegister[2]",
    RegMem => "Reg",
    Address => "155",
    Width => "66", # Excel Formula: =calc_reg_width(E247:E248,F248)
    Type => "ReadOnly",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    SlicePortDspLbMemberTableResponseValid1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 39;
      Name => "SlicePortDspLbMemberTableResponseValid[n]",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F246,E247,TRUE)
      Type => "Event",
      UsedBy => "emdb",
    },
    SlicePortDspLbMemberTableResponseReg1 => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 37;
      Name => "SlicePortDspLbMemberTableResponseReg[n]",
      RegMem => "RegField",
      Width => "65",
      Position => "65:1", # Excel Formula: =calc_position(F247,E248)
      Type => "Capture",
      UsedBy => "emdb",
    },
  },
  SlicePortDspLbMemberTableCam0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 29; Skip Register;
    Name => "SlicePortDspLbMemberTableCam[2]",
    RegMem => "Mem",
    Address => "5400000", # Excel Formula: =calc_mem_address(C235,A235,G249,L249)
    Width => "46", # Excel Formula: =calc_mem_width(E250:E252,M249,F252,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortDspLbMemberTable",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=15,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "46",
    SlicePortDspLbMemberTableCam0_key => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 29;
      Name => "SlicePortDspLbMemberTableCam[n]_key",
      RegMem => "MemField",
      Width => "30",
      Position => "29:0", # Excel Formula: =calc_position(F249,E250,TRUE)
    },
    SlicePortDspLbMemberTableCam0_payload => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 29;
      Name => "SlicePortDspLbMemberTableCam[n]_payload",
      RegMem => "MemField",
      Width => "15",
      Position => "44:30", # Excel Formula: =calc_position(F250,E251)
    },
    SlicePortDspLbMemberTableCam0_valid => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 29;
      Name => "SlicePortDspLbMemberTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "45", # Excel Formula: =calc_position(F251,E252)
    },
  },
  SlicePortDspLbMemberTableCam1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 29; Skip Register;
    Name => "SlicePortDspLbMemberTableCam[2]",
    RegMem => "Mem",
    Address => "5500000",
    Width => "46", # Excel Formula: =calc_mem_width(E250:E252,M249,F252,-1)
    Type => "Dynamic",
    UsedBy => "SlicePortDspLbMemberTable",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "NumOfKeys=1,RegTcamPayloadWidth=15,CAM=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    Comments => "EM Skip Reg",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "46",
    SlicePortDspLbMemberTableCam1_key => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 29;
      Name => "SlicePortDspLbMemberTableCam[n]_key",
      RegMem => "MemField",
      Width => "30",
      Position => "29:0", # Excel Formula: =calc_position(F249,E250,TRUE)
    },
    SlicePortDspLbMemberTableCam1_payload => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 29;
      Name => "SlicePortDspLbMemberTableCam[n]_payload",
      RegMem => "MemField",
      Width => "15",
      Position => "44:30", # Excel Formula: =calc_position(F250,E251)
    },
    SlicePortDspLbMemberTableCam1_valid => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 29;
      Name => "SlicePortDspLbMemberTableCam[n]_valid",
      RegMem => "MemField",
      Width => "1",
      Position => "45", # Excel Formula: =calc_position(F251,E252)
    },
  },
  EmResponseInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "EmResponseInterrupt",
    RegMem => "Reg",
    Address => "156", # Excel Formula: =calc_reg_address(C246,A246,G246)
    Width => "8", # Excel Formula: =calc_reg_width(E254:E261,F261)
    Type => "Interrupt",
    Comments => "EM Skip Reg",
    Slice0NativeLbMemberTableResp => { #Structure Type: RegField;
      Name => "Slice0NativeLbMemberTableResp",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F253,E254,TRUE)
      Type => "Interrupt",
      UsedBy => "emdb",
    },
    Slice1NativeLbMemberTableResp => { #Structure Type: RegField;
      Name => "Slice1NativeLbMemberTableResp",
      RegMem => "RegField",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F254,E255)
      Type => "Interrupt",
      UsedBy => "emdb",
    },
    Slice0PathLbMemberTableResp => { #Structure Type: RegField;
      Name => "Slice0PathLbMemberTableResp",
      RegMem => "RegField",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F255,E256)
      Type => "Interrupt",
      UsedBy => "emdb",
    },
    Slice1PathLbMemberTableResp => { #Structure Type: RegField;
      Name => "Slice1PathLbMemberTableResp",
      RegMem => "RegField",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F256,E257)
      Type => "Interrupt",
      UsedBy => "emdb",
    },
    Slice0PortNppLbMemberTableResp => { #Structure Type: RegField;
      Name => "Slice0PortNppLbMemberTableResp",
      RegMem => "RegField",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F257,E258)
      Type => "Interrupt",
      UsedBy => "emdb",
    },
    Slice1PortNppLbMemberTableResp => { #Structure Type: RegField;
      Name => "Slice1PortNppLbMemberTableResp",
      RegMem => "RegField",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F258,E259)
      Type => "Interrupt",
      UsedBy => "emdb",
    },
    Slice0PortDspLbMemberTableResp => { #Structure Type: RegField;
      Name => "Slice0PortDspLbMemberTableResp",
      RegMem => "RegField",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F259,E260)
      Type => "Interrupt",
      UsedBy => "emdb",
    },
    Slice1PortDspLbMemberTableResp => { #Structure Type: RegField;
      Name => "Slice1PortDspLbMemberTableResp",
      RegMem => "RegField",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F260,E261)
      Type => "Interrupt",
      UsedBy => "emdb",
    },
  },
  EmResponseInterruptMask => { #Structure Type: Reg; Skip Register; Skip Register;
    Name => "EmResponseInterruptMask",
    RegMem => "Reg",
    Address => "157",
    Width => "8", # Excel Formula: =calc_reg_width(E254:E261,F261)
    Type => "InterruptMask",
    DefaultValue => "b0",
    Comments => "EM Skip Reg",
    Slice0NativeLbMemberTableRespMask => { #Structure Type: RegField;
      Name => "Slice0NativeLbMemberTableRespMask",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F253,E254,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice1NativeLbMemberTableRespMask => { #Structure Type: RegField;
      Name => "Slice1NativeLbMemberTableRespMask",
      RegMem => "RegField",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F254,E255)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice0PathLbMemberTableRespMask => { #Structure Type: RegField;
      Name => "Slice0PathLbMemberTableRespMask",
      RegMem => "RegField",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F255,E256)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice1PathLbMemberTableRespMask => { #Structure Type: RegField;
      Name => "Slice1PathLbMemberTableRespMask",
      RegMem => "RegField",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F256,E257)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice0PortNppLbMemberTableRespMask => { #Structure Type: RegField;
      Name => "Slice0PortNppLbMemberTableRespMask",
      RegMem => "RegField",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F257,E258)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice1PortNppLbMemberTableRespMask => { #Structure Type: RegField;
      Name => "Slice1PortNppLbMemberTableRespMask",
      RegMem => "RegField",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F258,E259)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice0PortDspLbMemberTableRespMask => { #Structure Type: RegField;
      Name => "Slice0PortDspLbMemberTableRespMask",
      RegMem => "RegField",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F259,E260)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice1PortDspLbMemberTableRespMask => { #Structure Type: RegField;
      Name => "Slice1PortDspLbMemberTableRespMask",
      RegMem => "RegField",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F260,E261)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  EmResponseInterruptTest => { #Structure Type: Reg; Skip Register; Skip Register;
    Name => "EmResponseInterruptTest",
    RegMem => "Reg",
    Address => "158",
    Width => "8", # Excel Formula: =calc_reg_width(E254:E261,F261)
    Type => "InterruptTest",
    DefaultValue => "b0",
    Comments => "EM Skip Reg",
    Slice0NativeLbMemberTableRespTest => { #Structure Type: RegField;
      Name => "Slice0NativeLbMemberTableRespTest",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F253,E254,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice1NativeLbMemberTableRespTest => { #Structure Type: RegField;
      Name => "Slice1NativeLbMemberTableRespTest",
      RegMem => "RegField",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F254,E255)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice0PathLbMemberTableRespTest => { #Structure Type: RegField;
      Name => "Slice0PathLbMemberTableRespTest",
      RegMem => "RegField",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F255,E256)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice1PathLbMemberTableRespTest => { #Structure Type: RegField;
      Name => "Slice1PathLbMemberTableRespTest",
      RegMem => "RegField",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F256,E257)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice0PortNppLbMemberTableRespTest => { #Structure Type: RegField;
      Name => "Slice0PortNppLbMemberTableRespTest",
      RegMem => "RegField",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F257,E258)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice1PortNppLbMemberTableRespTest => { #Structure Type: RegField;
      Name => "Slice1PortNppLbMemberTableRespTest",
      RegMem => "RegField",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F258,E259)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice0PortDspLbMemberTableRespTest => { #Structure Type: RegField;
      Name => "Slice0PortDspLbMemberTableRespTest",
      RegMem => "RegField",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F259,E260)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Slice1PortDspLbMemberTableRespTest => { #Structure Type: RegField;
      Name => "Slice1PortDspLbMemberTableRespTest",
      RegMem => "RegField",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F260,E261)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
};
