$block{npe} = {
  Defines_db => " ../../global/rxpp_pd_defines.v,../verilog/npe_defines.v,../verilog/npe_hw_defines.v",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "2",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    NpeInterruptsSummary => { #Structure Type: RegField;
      Name => "NpeInterruptsSummary",
      RegMem => "RegField",
      Description => "When this bit is set, NpeInterrupts has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks Ecc_1bErrInterrupt",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks Ecc_2bErrInterrupt",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks ParityErrInterrupt",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  ParityErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "ParityErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "5",
    Description => "Parity Error Interrupt Mask Register",
    Width => "31",
    Type => "Config",
    ScoperMacroParityErrInterruptMask => { #Structure Type: RegField;
      Name => "ScoperMacroParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupKeysSelectionMacroParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupKeysSelectionMacroParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupKeysConstructionMacroParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupKeysConstructionMacroParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupKeysSelectionTcamParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupKeysSelectionTcamParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryA_HighParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryA_HighParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryB_HighParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryB_HighParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryC_HighParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryC_HighParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryD_HighParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryD_HighParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryA_LowParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryA_LowParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryB_LowParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryB_LowParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryC_LowParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryC_LowParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupMemoryD_LowParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupMemoryD_LowParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    ResolutionKeysSelectionMacroParityErrInterruptMask => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionMacroParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    ResolutionKeysSelectionTcamParityErrInterruptMask => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionTcamParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    PdUpdateUnifiedBucketsControlParityErrInterruptMask => { #Structure Type: RegField;
      Name => "PdUpdateUnifiedBucketsControlParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusHolderHighParityErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusHolderHighParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    DataBusHolderLowParityErrInterruptMask => { #Structure Type: RegField;
      Name => "DataBusHolderLowParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    LookupCoreTcamParityErrInterruptMask => { #Structure Type: RegField;
      Name => "LookupCoreTcamParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Lvr0FsInstructionsParityErrInterruptMask => { #Structure Type: RegField;
      Name => "Lvr0FsInstructionsParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Lvr1FsInstructionsParityErrInterruptMask => { #Structure Type: RegField;
      Name => "Lvr1FsInstructionsParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Lvr3FsInstructionsParityErrInterruptMask => { #Structure Type: RegField;
      Name => "Lvr3FsInstructionsParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    TrapsKeyConstructionMacroParityErrInterruptMask => { #Structure Type: RegField;
      Name => "TrapsKeyConstructionMacroParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    TrapsTcamParityErrInterruptMask => { #Structure Type: RegField;
      Name => "TrapsTcamParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable0ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable0ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable1ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable1ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable2ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable2ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable3ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable3ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable4ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable4ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable5ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable5ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SharedTable6ParityErrInterruptMask => { #Structure Type: RegField;
      Name => "SharedTable6ParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    ThreadMemoryParityErrInterruptMask => { #Structure Type: RegField;
      Name => "ThreadMemoryParityErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error indication will be masked",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  ParityErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "ParityErrInitiateRegister",
    RegMem => "Reg",
    Address => "32",
    Description => "Parity Error Initiator Register",
    Width => "31",
    Type => "Config",
    ScoperMacroParityErrInitiate => { #Structure Type: RegField;
      Name => "ScoperMacroParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupKeysSelectionMacroParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupKeysSelectionMacroParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupKeysConstructionMacroParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupKeysConstructionMacroParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupKeysSelectionTcamParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupKeysSelectionTcamParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryA_HighParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryA_HighParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryB_HighParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryB_HighParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryC_HighParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryC_HighParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryD_HighParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryD_HighParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryA_LowParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryA_LowParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryB_LowParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryB_LowParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryC_LowParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryC_LowParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupMemoryD_LowParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupMemoryD_LowParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    ResolutionKeysSelectionMacroParityErrInitiate => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionMacroParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    ResolutionKeysSelectionTcamParityErrInitiate => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionTcamParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    PdUpdateUnifiedBucketsControlParityErrInitiate => { #Structure Type: RegField;
      Name => "PdUpdateUnifiedBucketsControlParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusHolderHighParityErrInitiate => { #Structure Type: RegField;
      Name => "DataBusHolderHighParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    DataBusHolderLowParityErrInitiate => { #Structure Type: RegField;
      Name => "DataBusHolderLowParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    LookupCoreTcamParityErrInitiate => { #Structure Type: RegField;
      Name => "LookupCoreTcamParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Lvr0FsInstructionsParityErrInitiate => { #Structure Type: RegField;
      Name => "Lvr0FsInstructionsParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Lvr1FsInstructionsParityErrInitiate => { #Structure Type: RegField;
      Name => "Lvr1FsInstructionsParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Lvr3FsInstructionsParityErrInitiate => { #Structure Type: RegField;
      Name => "Lvr3FsInstructionsParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    TrapsKeyConstructionMacroParityErrInitiate => { #Structure Type: RegField;
      Name => "TrapsKeyConstructionMacroParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    TrapsTcamParityErrInitiate => { #Structure Type: RegField;
      Name => "TrapsTcamParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable0ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable0ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable1ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable1ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable2ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable2ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable3ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable3ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable4ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable4ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable5ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable5ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SharedTable6ParityErrInitiate => { #Structure Type: RegField;
      Name => "SharedTable6ParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    ThreadMemoryParityErrInitiate => { #Structure Type: RegField;
      Name => "ThreadMemoryParityErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, Parity Error will be initiated",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "31",
    Type => "ReadOnly",
    ScoperMacroErrInt => { #Structure Type: RegField;
      Name => "ScoperMacroErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupKeysSelectionMacroErrInt => { #Structure Type: RegField;
      Name => "LookupKeysSelectionMacroErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupKeysConstructionMacroErrInt => { #Structure Type: RegField;
      Name => "LookupKeysConstructionMacroErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupKeysSelectionTcamErrInt => { #Structure Type: RegField;
      Name => "LookupKeysSelectionTcamErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryA_HighErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryA_HighErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryB_HighErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryB_HighErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryC_HighErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryC_HighErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryD_HighErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryD_HighErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryA_LowErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryA_LowErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryB_LowErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryB_LowErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryC_LowErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryC_LowErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupMemoryD_LowErrInt => { #Structure Type: RegField;
      Name => "LookupMemoryD_LowErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
    ResolutionKeysSelectionMacroErrInt => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionMacroErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "12",
      Type => "Status",
      UsedBy => "SER",
    },
    ResolutionKeysSelectionTcamErrInt => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionTcamErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "13",
      Type => "Status",
      UsedBy => "SER",
    },
    PdUpdateUnifiedBucketsControlErrInt => { #Structure Type: RegField;
      Name => "PdUpdateUnifiedBucketsControlErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "14",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusHolderHighErrInt => { #Structure Type: RegField;
      Name => "DataBusHolderHighErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "15",
      Type => "Status",
      UsedBy => "SER",
    },
    DataBusHolderLowErrInt => { #Structure Type: RegField;
      Name => "DataBusHolderLowErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "16",
      Type => "Status",
      UsedBy => "SER",
    },
    LookupCoreTcamErrInt => { #Structure Type: RegField;
      Name => "LookupCoreTcamErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "17",
      Type => "Status",
      UsedBy => "SER",
    },
    Lvr0FsInstructionsErrInt => { #Structure Type: RegField;
      Name => "Lvr0FsInstructionsErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "18",
      Type => "Status",
      UsedBy => "SER",
    },
    Lvr1FsInstructionsErrInt => { #Structure Type: RegField;
      Name => "Lvr1FsInstructionsErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "19",
      Type => "Status",
      UsedBy => "SER",
    },
    Lvr3FsInstructionsErrInt => { #Structure Type: RegField;
      Name => "Lvr3FsInstructionsErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "20",
      Type => "Status",
      UsedBy => "SER",
    },
    TrapsKeyConstructionMacroErrInt => { #Structure Type: RegField;
      Name => "TrapsKeyConstructionMacroErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "21",
      Type => "Status",
      UsedBy => "SER",
    },
    TrapsTcamErrInt => { #Structure Type: RegField;
      Name => "TrapsTcamErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "22",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable0ErrInt => { #Structure Type: RegField;
      Name => "SharedTable0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "23",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable1ErrInt => { #Structure Type: RegField;
      Name => "SharedTable1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "24",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable2ErrInt => { #Structure Type: RegField;
      Name => "SharedTable2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "25",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable3ErrInt => { #Structure Type: RegField;
      Name => "SharedTable3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "26",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable4ErrInt => { #Structure Type: RegField;
      Name => "SharedTable4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "27",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable5ErrInt => { #Structure Type: RegField;
      Name => "SharedTable5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "28",
      Type => "Status",
      UsedBy => "SER",
    },
    SharedTable6ErrInt => { #Structure Type: RegField;
      Name => "SharedTable6ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "29",
      Type => "Status",
      UsedBy => "SER",
    },
    ThreadMemoryErrInt => { #Structure Type: RegField;
      Name => "ThreadMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "30",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "13",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "11",
      Position => "10:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "12:11",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "6",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "5",
      Position => "4:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  ParityErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "ParityErrDebug",
    RegMem => "Reg",
    Address => "38",
    Description => "Parity Error Counter",
    Width => "16",
    Type => "ReadOnly",
    ParityErrCounter => { #Structure Type: RegField;
      Name => "ParityErrCounter",
      RegMem => "RegField",
      Description => "Counts number of Parity errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  MbistPassStatus => { #Structure Type: Reg; Skip Register;
    Name => "MbistPassStatus",
    RegMem => "Reg",
    Address => "39",
    Description => "MBIST pass status",
    Width => "86",
    Type => "ReadOnly",
    BistDonePassOut => { #Structure Type: RegField;
      Name => "BistDonePassOut",
      RegMem => "RegField",
      Description => "When this bit is set, MBIST passed",
      Width => "86",
      Position => "85:0",
      Type => "Status",
      UsedBy => "MEM",
    },
  },
  MbistFailStatus => { #Structure Type: Reg; Skip Register;
    Name => "MbistFailStatus",
    RegMem => "Reg",
    Address => "3A",
    Description => "MBIST fail status",
    Width => "86",
    Type => "ReadOnly",
    BistDoneFailOut => { #Structure Type: RegField;
      Name => "BistDoneFailOut",
      RegMem => "RegField",
      Description => "When this bit is set, MBIST failed",
      Width => "86",
      Position => "85:0",
      Type => "Status",
      UsedBy => "MEM",
    },
  },
  TcamBistStatus => { #Structure Type: Reg; Skip Register;
    Name => "TcamBistStatus",
    RegMem => "Reg",
    Address => "3B",
    Description => "TCAM BIST pass fail status",
    Width => "96",
    Type => "ReadOnly",
    TcamBistDonePassOut => { #Structure Type: RegField;
      Name => "TcamBistDonePassOut",
      RegMem => "RegField",
      Description => "When this bit is set, TCAM BIST passed",
      Width => "48",
      Position => "47:0",
      Type => "Status",
      UsedBy => "TCAM",
    },
    TcamBistDoneFailOut => { #Structure Type: RegField;
      Name => "TcamBistDoneFailOut",
      RegMem => "RegField",
      Description => "When this bit is set, TCAM BIST failed",
      Width => "48",
      Position => "95:48",
      Type => "Status",
      UsedBy => "TCAM",
    },
  },
  TcamScanPeriodCfg => { #Structure Type: Reg; Skip Register;
    Name => "TcamScanPeriodCfg",
    RegMem => "Reg",
    Address => "3C",
    Description => "Configures period of TCAM scan for SER, set 0 to disable",
    Width => "32",
    Type => "Config",
    TcamScanPeriod => { #Structure Type: RegField;
      Name => "TcamScanPeriod",
      RegMem => "RegField",
      Description => "",
      Width => "32",
      Position => "31:0",
      Type => "Config",
      UsedBy => "TCAM",
      DefaultValue => "d120000000",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
      DefaultValue => "b0",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "3", # Excel Formula: =calc_reg_width(E25:E27,F27)
    Type => "Config",
    CoreBistRprMode => { #Structure Type: RegField;
      Name => "CoreBistRprMode",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistRun => { #Structure Type: RegField;
      Name => "CoreBistRun",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistPtrnFill => { #Structure Type: RegField;
      Name => "CoreBistPtrnFill",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E29:E29,F29)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C28,A28,G28)
    Description => "Power Down Configuration for the block",
    Width => "128", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C30,A30,G30)
    Width => "39", # Excel Formula: =calc_reg_width(E33:E37,F37)
    Type => "Config",
    PmroExecute => { #Structure Type: RegField;
      Name => "PmroExecute",
      RegMem => "RegField",
      Description => "0->1: execute pmro command.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroCmd => { #Structure Type: RegField;
      Name => "PmroCmd",
      RegMem => "RegField",
      Description => "Pmro command to execute:
0: reset.
1: write.
2: read.
3: invalid.",
      Width => "2",
      Position => "2:1", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroSbusReset => { #Structure Type: RegField;
      Name => "PmroSbusReset",
      RegMem => "RegField",
      Description => "Reset pmro sbus chain. Need to set to 0 before starting access to pmro registers.",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroAddr => { #Structure Type: RegField;
      Name => "PmroAddr",
      RegMem => "RegField",
      Description => "PMRO register address:
0 - control register, 8b, def: 0x0.
1 - SVT Configuration Register, 16b, def: 0xFFFF.
2 - LVT Configuration Register, 16b, def: 0xFFFF.
3 - ULVT Configuration Register, 16b, def: 0xFFFF.
4 - Interconnect Configuration Register, 16b, def: 0xFFFF.
5 - Reference Clock Counter Register, 24b, def: 0xFFF000.
6 - Oscillator Counter Register, 24b, def: 0x000000.
7 - SBus ID register, read as 0x0B.
Set to '0' on reset command.",
      Width => "3",
      Position => "6:4", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroData => { #Structure Type: RegField;
      Name => "PmroData",
      RegMem => "RegField",
      Description => "PMRO data, set to 0x0 on reset and read command.",
      Width => "32",
      Position => "38:7", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C32,A32,G32)
    Width => "34", # Excel Formula: =calc_reg_width(E39:E41,F41)
    Type => "ReadOnly",
    PmroRdata => { #Structure Type: RegField;
      Name => "PmroRdata",
      RegMem => "RegField",
      Description => "Read data from pmro. Valid when PmroFinish=1 and PmroFailed=0.",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFailed => { #Structure Type: RegField;
      Name => "PmroFailed",
      RegMem => "RegField",
      Description => "Pmro command failed. Valid only when PmroFinish=1.",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F39,E40)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFinish => { #Structure Type: RegField;
      Name => "PmroFinish",
      RegMem => "RegField",
      Description => "Pmro command finished.",
      Width => "1",
      Position => "33", # Excel Formula: =calc_position(F40,E41)
      Type => "Event",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C38,A38,G38)
    Description => "aaa",
    Width => "11", # Excel Formula: =calc_reg_width(E43:E44,F44)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "aaa",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F42,E43,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "aaa",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C42,A42,G42)
    Description => "aaa",
    Width => "32", # Excel Formula: =calc_reg_width(E46:E46,F46)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "aaa",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F45,E46,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C45,A45,G45)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E48:E48,F48)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F47,E48,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  debug_data_bus_register => { #Structure Type: Reg;
    Name => "debug_data_bus_register",
    RegMem => "Reg",
    Address => "100",
    Description => "debug_data_bus_register",
    Width => "32", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "ReadOnly",
    debug_data_bus => { #Structure Type: RegField;
      Name => "debug_data_bus",
      RegMem => "RegField",
      Description => "debug_data_bus",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Status",
      UsedBy => "npe",
    },
  },
  debug_data_select_register => { #Structure Type: Reg;
    Name => "debug_data_select_register",
    RegMem => "Reg",
    Address => "101", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "debug_data_select_register",
    Width => "10", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Config",
    debug_data_select => { #Structure Type: RegField;
      Name => "debug_data_select",
      RegMem => "RegField",
      Description => "debug_data_select",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "d0",
    },
  },
  LookupKeysSelectionTcamRanges => { #Structure Type: Reg;
    Name => "LookupKeysSelectionTcamRanges",
    RegMem => "Reg",
    Address => "102", # Excel Formula: =calc_reg_address(C9,A9,G9)
    Description => "Lookup core keys selection can be split to 4 buckets. Each field control the begning  of each range. Value of 0 means range is not valid.",
    Width => "21", # Excel Formula: =calc_reg_width(E12:E14,F14)
    Type => "Config",
    LkpKeysSelTcamRange1Start => { #Structure Type: RegField;
      Name => "LkpKeysSelTcamRange1Start",
      RegMem => "RegField",
      Width => "7", # Excel Formula: =LOG(K135,2)
      Position => "6:0", # Excel Formula: =calc_position(F11,E12,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    LkpKeysSelTcamRange2Start => { #Structure Type: RegField;
      Name => "LkpKeysSelTcamRange2Start",
      RegMem => "RegField",
      Width => "7", # Excel Formula: =LOG(K135,2)
      Position => "13:7", # Excel Formula: =calc_position(F12,E13)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    LkpKeysSelTcamRange3Start => { #Structure Type: RegField;
      Name => "LkpKeysSelTcamRange3Start",
      RegMem => "RegField",
      Width => "7", # Excel Formula: =LOG(K135,2)
      Position => "20:14", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucket0Mask => { #Structure Type: Reg;
    Name => "ResolutionKeysSelectionBucket0Mask",
    RegMem => "Reg",
    Address => "103", # Excel Formula: =calc_reg_address(C11,A11,G11)
    Width => "64", # Excel Formula: =calc_reg_width(E16:E16,F16)
    Type => "Config",
    ResolutionKeysSelectionBucket0MaskData => { #Structure Type: RegField;
      Name => "ResolutionKeysSelectionBucket0MaskData",
      RegMem => "RegField",
      Width => "64",
      Position => "63:0", # Excel Formula: =calc_position(F15,E16,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask0 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 0; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "104", # Excel Formula: =calc_reg_address(C15,A15,G15)
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "0",
    ResolutionKeysSelectionBucketsMaskBus0 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 0; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask1 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 1; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "105",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "1",
    ResolutionKeysSelectionBucketsMaskBus1 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 1; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask2 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 2; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "106",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "2",
    ResolutionKeysSelectionBucketsMaskBus2 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 2; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask3 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 3; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "107",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "3",
    ResolutionKeysSelectionBucketsMaskBus3 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 3; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask4 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 4; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "108",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "4",
    ResolutionKeysSelectionBucketsMaskBus4 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 4; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask5 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 5; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "109",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "5",
    ResolutionKeysSelectionBucketsMaskBus5 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 5; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask6 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 6; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "10A",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "6",
    ResolutionKeysSelectionBucketsMaskBus6 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 6; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask7 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 7; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "10B",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "7",
    ResolutionKeysSelectionBucketsMaskBus7 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 7; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask8 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 8; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "10C",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "8",
    ResolutionKeysSelectionBucketsMaskBus8 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 8; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask9 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 9; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "10D",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "9",
    ResolutionKeysSelectionBucketsMaskBus9 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 9; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask10 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 10; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "10E",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "10",
    ResolutionKeysSelectionBucketsMaskBus10 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 10; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask11 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 11; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "10F",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "11",
    ResolutionKeysSelectionBucketsMaskBus11 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 11; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask12 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 12; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "110",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "12",
    ResolutionKeysSelectionBucketsMaskBus12 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 12; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask13 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 13; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "111",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "13",
    ResolutionKeysSelectionBucketsMaskBus13 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 13; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask14 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 14; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "112",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "14",
    ResolutionKeysSelectionBucketsMaskBus14 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 14; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask15 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 15; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "113",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "15",
    ResolutionKeysSelectionBucketsMaskBus15 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 15; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask16 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 16; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "114",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "16",
    ResolutionKeysSelectionBucketsMaskBus16 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 16; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask17 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 17; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "115",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "17",
    ResolutionKeysSelectionBucketsMaskBus17 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 17; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask18 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 18; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "116",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "18",
    ResolutionKeysSelectionBucketsMaskBus18 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 18; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask19 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 19; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "117",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "19",
    ResolutionKeysSelectionBucketsMaskBus19 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 19; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask20 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 20; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "118",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "20",
    ResolutionKeysSelectionBucketsMaskBus20 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 20; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask21 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 21; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "119",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "21",
    ResolutionKeysSelectionBucketsMaskBus21 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 21; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask22 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 22; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "11A",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "22",
    ResolutionKeysSelectionBucketsMaskBus22 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 22; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask23 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 23; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "11B",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "23",
    ResolutionKeysSelectionBucketsMaskBus23 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 23; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask24 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 24; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "11C",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "24",
    ResolutionKeysSelectionBucketsMaskBus24 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 24; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask25 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 25; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "11D",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "25",
    ResolutionKeysSelectionBucketsMaskBus25 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 25; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask26 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 26; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "11E",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "26",
    ResolutionKeysSelectionBucketsMaskBus26 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 26; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask27 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 27; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "11F",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "27",
    ResolutionKeysSelectionBucketsMaskBus27 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 27; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ResolutionKeysSelectionBucketMask28 => { #Structure Type: Reg; ArrayLength: 29; ArrayIndex: 28; ArrayLocationInName: 34;
    Name => "ResolutionKeysSelectionBucketMask[29]",
    RegMem => "Reg",
    Address => "120",
    Width => "32", # Excel Formula: =calc_reg_width(E18:E18,F18)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "29",
    ArrayIndex => "28",
    ResolutionKeysSelectionBucketsMaskBus28 => { #Structure Type: RegField; ArrayLength: 29; ArrayIndex: 28; ArrayLocationInName: 38;
      Name => "ResolutionKeysSelectionBucketsMaskBus[n]",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F17,E18,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  ReadyInOutCfg => { #Structure Type: Reg;
    Name => "ReadyInOutCfg",
    RegMem => "Reg",
    Address => "121", # Excel Formula: =calc_reg_address(C17,A17,G17)
    Width => "8", # Excel Formula: =calc_reg_width(E20:E21,F21)
    Type => "Config",
    NextReadyToValidLatency => { #Structure Type: RegField;
      Name => "NextReadyToValidLatency",
      RegMem => "RegField",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F19,E20,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    PrevSlotReadyToSlotUsedLatency => { #Structure Type: RegField;
      Name => "PrevSlotReadyToSlotUsedLatency",
      RegMem => "RegField",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  DisableThread => { #Structure Type: Reg;
    Name => "DisableThread",
    RegMem => "Reg",
    Address => "122", # Excel Formula: =calc_reg_address(C19,A19,G19)
    Width => "9", # Excel Formula: =calc_reg_width(E23:E24,F24)
    Type => "Config",
    DisableThreadValid => { #Structure Type: RegField;
      Name => "DisableThreadValid",
      RegMem => "RegField",
      Description => "When set, the thread will not be pushed to the thread-index-manager",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    DisableThreadID => { #Structure Type: RegField;
      Name => "DisableThreadID",
      RegMem => "RegField",
      Width => "8",
      Position => "8:1", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "d0",
      DefaultSvConstraint => "h1",
    },
  },
  GeneralCfg => { #Structure Type: Reg;
    Name => "GeneralCfg",
    RegMem => "Reg",
    Address => "123", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Width => "63", # Excel Formula: =calc_reg_width(E26:E36,F36)
    Type => "Config",
    MyMacroMsbs => { #Structure Type: RegField;
      Name => "MyMacroMsbs",
      RegMem => "RegField",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F25,E26,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h0",
    },
    LookupCoreHighTcamStart => { #Structure Type: RegField;
      Name => "LookupCoreHighTcamStart",
      RegMem => "RegField",
      Width => "7",
      Position => "8:2", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h0",
    },
    EnableCountersHeaderIndexUpdate => { #Structure Type: RegField;
      Name => "EnableCountersHeaderIndexUpdate",
      RegMem => "RegField",
      Description => "If set, header index is updated in counters stack when updating coutners",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h1",
      DefaultSvConstraint => "h1",
    },
    SelectOutputAccordingToSrc => { #Structure Type: RegField;
      Name => "SelectOutputAccordingToSrc",
      RegMem => "RegField",
      Description => "If set, the output of the NPE is arranged based on the incoming src (IFG)",
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h0",
      DefaultSvConstraint => "h0",
    },
    EnableLookupIf0OrderKeeping => { #Structure Type: RegField;
      Name => "EnableLookupIf0OrderKeeping",
      RegMem => "RegField",
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h0",
      DefaultSvConstraint => "h0",
    },
    LookupIf0OrderKeepingPriorityTh => { #Structure Type: RegField;
      Name => "LookupIf0OrderKeepingPriorityTh",
      RegMem => "RegField",
      Description => "prioritize interface 0 if order fifo is above threshold",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h40",
      DefaultSvConstraint => "h40",
    },
    EnableLookupIf1OrderKeeping => { #Structure Type: RegField;
      Name => "EnableLookupIf1OrderKeeping",
      RegMem => "RegField",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h0",
      DefaultSvConstraint => "h0",
    },
    LookupIf1OrderKeepingPriorityTh => { #Structure Type: RegField;
      Name => "LookupIf1OrderKeepingPriorityTh",
      RegMem => "RegField",
      Description => "prioritize interface 1 if order fifo is above threshold",
      Width => "8",
      Position => "28:21", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "h40",
      DefaultSvConstraint => "h40",
    },
    EnableSnoopPriorityOverRedirect => { #Structure Type: RegField;
      Name => "EnableSnoopPriorityOverRedirect",
      RegMem => "RegField",
      Description => "If set, the msb of the redirect and snoop code is a priority bit. In case both redirect and snoop hit the TCAM and snoop has priority over redirect, the redirect hit will be reset",
      Width => "1",
      Position => "29", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b1",
      DefaultSvConstraint => "h40",
    },
    PacketStackTimerTimeout => { #Structure Type: RegField;
      Name => "PacketStackTimerTimeout",
      RegMem => "RegField",
      Description => "Scan piriod for checking if a packet is stack in the NPE. ",
      Width => "32",
      Position => "61:30", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "d2000",
      DefaultSvConstraint => "d2000",
    },
    EnableTimeout => { #Structure Type: RegField;
      Name => "EnableTimeout",
      RegMem => "RegField",
      Width => "1",
      Position => "62", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b1",
    },
  },
  TrapsTcamCfg => { #Structure Type: Reg;
    Name => "TrapsTcamCfg",
    RegMem => "Reg",
    Address => "124", # Excel Formula: =calc_reg_address(C25,A25,G25)
    Width => "7", # Excel Formula: =calc_reg_width(E38:E38,F38)
    Type => "Config",
    TrapsRedirectTcamStart => { #Structure Type: RegField;
      Name => "TrapsRedirectTcamStart",
      RegMem => "RegField",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F37,E38,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  NpeInterrupts => { #Structure Type: Reg;
    Name => "NpeInterrupts",
    RegMem => "Reg",
    Address => "125", # Excel Formula: =calc_reg_address(C37,A37,G37)
    Width => "2", # Excel Formula: =calc_reg_width(E40:E41,F41)
    Type => "Interrupt",
    CountersOverflow => { #Structure Type: RegField;
      Name => "CountersOverflow",
      RegMem => "RegField",
      Description => "Set when trying to update counter, but PD.counters stack if full",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F39,E40,TRUE)
      Type => "Interrupt",
      UsedBy => "npe",
      DefaultSvConstraint => "h0",
    },
    PacketTimeout => { #Structure Type: RegField;
      Name => "PacketTimeout",
      RegMem => "RegField",
      Description => "when set, a packet is waiting in the engine more than the allowed time",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F40,E41)
      Type => "Interrupt",
      UsedBy => "npe",
      DefaultSvConstraint => "h0",
    },
  },
  NpeInterruptsMask => { #Structure Type: Reg; Skip Register;
    Name => "NpeInterruptsMask",
    RegMem => "Reg",
    Address => "126",
    Width => "2", # Excel Formula: =calc_reg_width(E40:E41,F41)
    Type => "InterruptMask",
    CountersOverflowMask => { #Structure Type: RegField;
      Name => "CountersOverflowMask",
      RegMem => "RegField",
      Description => "This field masks CountersOverflow interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F39,E40,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h0",
    },
    PacketTimeoutMask => { #Structure Type: RegField;
      Name => "PacketTimeoutMask",
      RegMem => "RegField",
      Description => "This field masks PacketTimeout interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F40,E41)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h0",
    },
  },
  NpeInterruptsTest => { #Structure Type: Reg; Skip Register;
    Name => "NpeInterruptsTest",
    RegMem => "Reg",
    Address => "127",
    Width => "2", # Excel Formula: =calc_reg_width(E40:E41,F41)
    Type => "InterruptTest",
    CountersOverflowTest => { #Structure Type: RegField;
      Name => "CountersOverflowTest",
      RegMem => "RegField",
      Description => "This field tests CountersOverflow interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F39,E40,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h0",
    },
    PacketTimeoutTest => { #Structure Type: RegField;
      Name => "PacketTimeoutTest",
      RegMem => "RegField",
      Description => "This field tests PacketTimeout interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F40,E41)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h0",
    },
  },
  PacketTimeoutMacroIdReg => { #Structure Type: Reg;
    Name => "PacketTimeoutMacroIdReg",
    RegMem => "Reg",
    Address => "128", # Excel Formula: =calc_reg_address(C39,A39,G39)
    Width => "8", # Excel Formula: =calc_reg_width(E43:E43,F43)
    Type => "ReadOnly",
    PacketTimeoutMacroId => { #Structure Type: RegField;
      Name => "PacketTimeoutMacroId",
      RegMem => "RegField",
      Description => "the macro-id of the timeout packet",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F42,E43,TRUE)
      Type => "Status",
      UsedBy => "npe",
      DefaultSvConstraint => "h0",
    },
  },
  LvrRegtcam_use_logical_db_cfg => { #Structure Type: Reg;
    Name => "LvrRegtcam_use_logical_db_cfg",
    RegMem => "Reg",
    Address => "129", # Excel Formula: =calc_reg_address(C42,A42,G42)
    Description => "when set, msb of tcam's key will be accrding to the reg-tcam-instruction.logical-db-bit",
    Width => "8", # Excel Formula: =calc_reg_width(E45:E52,F52)
    Type => "Config",
    Lvr0Regtcam0_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr0Regtcam0_use_logical_db_bit",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F44,E45,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr0Regtcam1_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr0Regtcam1_use_logical_db_bit",
      RegMem => "RegField",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F45,E46)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr0Regtcam2_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr0Regtcam2_use_logical_db_bit",
      RegMem => "RegField",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F46,E47)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr0Regtcam3_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr0Regtcam3_use_logical_db_bit",
      RegMem => "RegField",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
    Lvr1Regtcam0_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr1Regtcam0_use_logical_db_bit",
      RegMem => "RegField",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F48,E49)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr3Regtcam0_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr3Regtcam0_use_logical_db_bit",
      RegMem => "RegField",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F49,E50)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr3Regtcam1_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr3Regtcam1_use_logical_db_bit",
      RegMem => "RegField",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr4Regtcam0_use_logical_db_bit => { #Structure Type: RegField;
      Name => "Lvr4Regtcam0_use_logical_db_bit",
      RegMem => "RegField",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F51,E52)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  SharedTablesCfg => { #Structure Type: Reg;
    Name => "SharedTablesCfg",
    RegMem => "Reg",
    Address => "12A", # Excel Formula: =calc_reg_address(C44,A44,G44)
    Description => "4 LVRs can access the shared tables (0,1,3,4). Each LVR output 4 keys",
    Width => "60", # Excel Formula: =calc_reg_width(E54:E72,F72)
    Type => "Config",
    Table0Src => { #Structure Type: RegField;
      Name => "Table0Src",
      RegMem => "RegField",
      Description => "{LVR(2), key-index(2)}",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Table1Src => { #Structure Type: RegField;
      Name => "Table1Src",
      RegMem => "RegField",
      Width => "4",
      Position => "7:4", # Excel Formula: =calc_position(F54,E55)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Table2Src => { #Structure Type: RegField;
      Name => "Table2Src",
      RegMem => "RegField",
      Width => "4",
      Position => "11:8", # Excel Formula: =calc_position(F55,E56)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Table3Src => { #Structure Type: RegField;
      Name => "Table3Src",
      RegMem => "RegField",
      Width => "4",
      Position => "15:12", # Excel Formula: =calc_position(F56,E57)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Table4Src => { #Structure Type: RegField;
      Name => "Table4Src",
      RegMem => "RegField",
      Width => "4",
      Position => "19:16", # Excel Formula: =calc_position(F57,E58)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Table5Src => { #Structure Type: RegField;
      Name => "Table5Src",
      RegMem => "RegField",
      Description => "LVR(2),  key-index='B'",
      Width => "2",
      Position => "21:20", # Excel Formula: =calc_position(F58,E59)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Table6Src => { #Structure Type: RegField;
      Name => "Table6Src",
      RegMem => "RegField",
      Description => "LVR(2),  key-index='C'",
      Width => "2",
      Position => "23:22", # Excel Formula: =calc_position(F59,E60)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
    Lvr0Pld0Src => { #Structure Type: RegField;
      Name => "Lvr0Pld0Src",
      RegMem => "RegField",
      Description => "3'h7 for not-valid",
      Width => "3",
      Position => "26:24", # Excel Formula: =calc_position(F60,E61)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr0Pld1Src => { #Structure Type: RegField;
      Name => "Lvr0Pld1Src",
      RegMem => "RegField",
      Description => "3'h7 for not-valid",
      Width => "3",
      Position => "29:27", # Excel Formula: =calc_position(F61,E62)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr0Pld2Src => { #Structure Type: RegField;
      Name => "Lvr0Pld2Src",
      RegMem => "RegField",
      Description => "3'h7 for not-valid",
      Width => "3",
      Position => "32:30", # Excel Formula: =calc_position(F62,E63)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr1Pld0Src => { #Structure Type: RegField;
      Name => "Lvr1Pld0Src",
      RegMem => "RegField",
      Description => "3'h7 for not-valid",
      Width => "3",
      Position => "35:33", # Excel Formula: =calc_position(F63,E64)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr1Pld1Src => { #Structure Type: RegField;
      Name => "Lvr1Pld1Src",
      RegMem => "RegField",
      Description => "3'h7 for not-valid",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F64,E65)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr1Pld2Src => { #Structure Type: RegField;
      Name => "Lvr1Pld2Src",
      RegMem => "RegField",
      Description => "3'h7 for not-valid",
      Width => "3",
      Position => "41:39", # Excel Formula: =calc_position(F65,E66)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr3Pld0Src => { #Structure Type: RegField;
      Name => "Lvr3Pld0Src",
      RegMem => "RegField",
      Description => "3'h7 for not-valid",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F66,E67)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr3Pld1Src => { #Structure Type: RegField;
      Name => "Lvr3Pld1Src",
      RegMem => "RegField",
      Description => "3'h7 for not-valid",
      Width => "3",
      Position => "47:45", # Excel Formula: =calc_position(F67,E68)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr3Pld2Src => { #Structure Type: RegField;
      Name => "Lvr3Pld2Src",
      RegMem => "RegField",
      Description => "3'h7 for not-valid",
      Width => "3",
      Position => "50:48", # Excel Formula: =calc_position(F68,E69)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr4Pld0Src => { #Structure Type: RegField;
      Name => "Lvr4Pld0Src",
      RegMem => "RegField",
      Description => "3'h7 for not-valid",
      Width => "3",
      Position => "53:51", # Excel Formula: =calc_position(F69,E70)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr4Pld1Src => { #Structure Type: RegField;
      Name => "Lvr4Pld1Src",
      RegMem => "RegField",
      Description => "3'h7 for not-valid",
      Width => "3",
      Position => "56:54", # Excel Formula: =calc_position(F70,E71)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
    Lvr4Pld2Src => { #Structure Type: RegField;
      Name => "Lvr4Pld2Src",
      RegMem => "RegField",
      Description => "3'h7 for not-valid",
      Width => "3",
      Position => "59:57", # Excel Formula: =calc_position(F71,E72)
      Type => "Config",
      UsedBy => "stbl",
      DefaultValue => "b0",
    },
  },
  Lvr0RegTcam0ProfileExpandingReg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 12;
    Name => "Lvr0RegTcam[4]ProfileExpandingReg",
    RegMem => "Reg",
    Address => "12B", # Excel Formula: =calc_reg_address(C53,A53,G53)
    Width => "45", # Excel Formula: =calc_reg_width(E74:E74,F74)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "4",
    ArrayIndex => "0",
    Lvr0RegTcam0ProfileExpanding => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Lvr0RegTcam[n]ProfileExpanding",
      RegMem => "RegField",
      Width => "45", # Excel Formula: =calc_field_width_define("NPE_LVR_REG_TCAM_CONTROL_WIDTH")*3
      Position => "44:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  Lvr0RegTcam1ProfileExpandingReg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 12;
    Name => "Lvr0RegTcam[4]ProfileExpandingReg",
    RegMem => "Reg",
    Address => "12C",
    Width => "45", # Excel Formula: =calc_reg_width(E74:E74,F74)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "4",
    ArrayIndex => "1",
    Lvr0RegTcam1ProfileExpanding => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Lvr0RegTcam[n]ProfileExpanding",
      RegMem => "RegField",
      Width => "45", # Excel Formula: =calc_field_width_define("NPE_LVR_REG_TCAM_CONTROL_WIDTH")*3
      Position => "44:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  Lvr0RegTcam2ProfileExpandingReg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 12;
    Name => "Lvr0RegTcam[4]ProfileExpandingReg",
    RegMem => "Reg",
    Address => "12D",
    Width => "45", # Excel Formula: =calc_reg_width(E74:E74,F74)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "4",
    ArrayIndex => "2",
    Lvr0RegTcam2ProfileExpanding => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 2; ArrayLocationInName: 12;
      Name => "Lvr0RegTcam[n]ProfileExpanding",
      RegMem => "RegField",
      Width => "45", # Excel Formula: =calc_field_width_define("NPE_LVR_REG_TCAM_CONTROL_WIDTH")*3
      Position => "44:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  Lvr0RegTcam3ProfileExpandingReg => { #Structure Type: Reg; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 12;
    Name => "Lvr0RegTcam[4]ProfileExpandingReg",
    RegMem => "Reg",
    Address => "12E",
    Width => "45", # Excel Formula: =calc_reg_width(E74:E74,F74)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "4",
    ArrayIndex => "3",
    Lvr0RegTcam3ProfileExpanding => { #Structure Type: RegField; ArrayLength: 4; ArrayIndex: 3; ArrayLocationInName: 12;
      Name => "Lvr0RegTcam[n]ProfileExpanding",
      RegMem => "RegField",
      Width => "45", # Excel Formula: =calc_field_width_define("NPE_LVR_REG_TCAM_CONTROL_WIDTH")*3
      Position => "44:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  Lvr1RegTcam0ProfileExpandingReg => { #Structure Type: Reg; ArrayLength: 1; ArrayIndex: 0; ArrayLocationInName: 12;
    Name => "Lvr1RegTcam[1]ProfileExpandingReg",
    RegMem => "Reg",
    Address => "12F", # Excel Formula: =calc_reg_address(C73,A73,G73)
    Width => "45", # Excel Formula: =calc_reg_width(E76:E76,F76)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "1",
    ArrayIndex => "0",
    Lvr1RegTcam0ProfileExpanding => { #Structure Type: RegField; ArrayLength: 1; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Lvr1RegTcam[n]ProfileExpanding",
      RegMem => "RegField",
      Width => "45", # Excel Formula: =calc_field_width_define("NPE_LVR_REG_TCAM_CONTROL_WIDTH")*3
      Position => "44:0", # Excel Formula: =calc_position(F75,E76,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  Lvr3RegTcam0ProfileExpandingReg => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
    Name => "Lvr3RegTcam[2]ProfileExpandingReg",
    RegMem => "Reg",
    Address => "130", # Excel Formula: =calc_reg_address(C75,A75,G75)
    Width => "45", # Excel Formula: =calc_reg_width(E78:E78,F78)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "0",
    Lvr3RegTcam0ProfileExpanding => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Lvr3RegTcam[n]ProfileExpanding",
      RegMem => "RegField",
      Width => "45", # Excel Formula: =calc_field_width_define("NPE_LVR_REG_TCAM_CONTROL_WIDTH")*3
      Position => "44:0", # Excel Formula: =calc_position(F77,E78,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  Lvr3RegTcam1ProfileExpandingReg => { #Structure Type: Reg; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
    Name => "Lvr3RegTcam[2]ProfileExpandingReg",
    RegMem => "Reg",
    Address => "131",
    Width => "45", # Excel Formula: =calc_reg_width(E78:E78,F78)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "2",
    ArrayIndex => "1",
    Lvr3RegTcam1ProfileExpanding => { #Structure Type: RegField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "Lvr3RegTcam[n]ProfileExpanding",
      RegMem => "RegField",
      Width => "45", # Excel Formula: =calc_field_width_define("NPE_LVR_REG_TCAM_CONTROL_WIDTH")*3
      Position => "44:0", # Excel Formula: =calc_position(F77,E78,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  Lvr4RegTcam0ProfileExpandingReg => { #Structure Type: Reg; ArrayLength: 1; ArrayIndex: 0; ArrayLocationInName: 12;
    Name => "Lvr4RegTcam[1]ProfileExpandingReg",
    RegMem => "Reg",
    Address => "132", # Excel Formula: =calc_reg_address(C77,A77,G77)
    Width => "45", # Excel Formula: =calc_reg_width(E80:E80,F80)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "1",
    ArrayIndex => "0",
    Lvr4RegTcam0ProfileExpanding => { #Structure Type: RegField; ArrayLength: 1; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "Lvr4RegTcam[n]ProfileExpanding",
      RegMem => "RegField",
      Width => "45", # Excel Formula: =calc_field_width_define("NPE_LVR_REG_TCAM_CONTROL_WIDTH")*3
      Position => "44:0", # Excel Formula: =calc_position(F79,E80,TRUE)
      Type => "Config",
      UsedBy => "npe",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  NpeCounters => { #Structure Type: Reg;
    Name => "NpeCounters",
    RegMem => "Reg",
    Address => "133", # Excel Formula: =calc_reg_address(C79,A79,G79)
    Width => "192", # Excel Formula: =calc_reg_width(E82:E84,F84)
    Type => "ReadOnly",
    IncomingPacketsCounter => { #Structure Type: RegField;
      Name => "IncomingPacketsCounter",
      RegMem => "RegField",
      Width => "64",
      Position => "63:0", # Excel Formula: =calc_position(F81,E82,TRUE)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    LoopbackPacketsCounter => { #Structure Type: RegField;
      Name => "LoopbackPacketsCounter",
      RegMem => "RegField",
      Width => "64",
      Position => "127:64", # Excel Formula: =calc_position(F82,E83)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
    OutgoingPacketsCounter => { #Structure Type: RegField;
      Name => "OutgoingPacketsCounter",
      RegMem => "RegField",
      Width => "64",
      Position => "191:128", # Excel Formula: =calc_position(F83,E84)
      Type => "Counter",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  NpeWatermarks => { #Structure Type: Reg;
    Name => "NpeWatermarks",
    RegMem => "Reg",
    Address => "134", # Excel Formula: =calc_reg_address(C81,A81,G81)
    Width => "56", # Excel Formula: =calc_reg_width(E86:E92,F92)
    Type => "ReadOnly",
    LoopbackHighFifoWatermark => { #Structure Type: RegField;
      Name => "LoopbackHighFifoWatermark",
      RegMem => "RegField",
      Width => "8",
      Position => "7:0", # Excel Formula: =calc_position(F85,E86,TRUE)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    LoopbackLowFifoWatermark => { #Structure Type: RegField;
      Name => "LoopbackLowFifoWatermark",
      RegMem => "RegField",
      Width => "8",
      Position => "15:8", # Excel Formula: =calc_position(F86,E87)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitHighSrc0FifoWatermark => { #Structure Type: RegField;
      Name => "ExitHighSrc0FifoWatermark",
      RegMem => "RegField",
      Width => "8",
      Position => "23:16", # Excel Formula: =calc_position(F87,E88)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitHighSrc1FifoWatermark => { #Structure Type: RegField;
      Name => "ExitHighSrc1FifoWatermark",
      RegMem => "RegField",
      Width => "8",
      Position => "31:24", # Excel Formula: =calc_position(F88,E89)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitLowSrc0FifoWatermark => { #Structure Type: RegField;
      Name => "ExitLowSrc0FifoWatermark",
      RegMem => "RegField",
      Width => "8",
      Position => "39:32", # Excel Formula: =calc_position(F89,E90)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    ExitLowSrc1FifoWatermark => { #Structure Type: RegField;
      Name => "ExitLowSrc1FifoWatermark",
      RegMem => "RegField",
      Width => "8",
      Position => "47:40", # Excel Formula: =calc_position(F90,E91)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
    OngoingLookupsWatermark => { #Structure Type: RegField;
      Name => "OngoingLookupsWatermark",
      RegMem => "RegField",
      Width => "8",
      Position => "55:48", # Excel Formula: =calc_position(F91,E92)
      Type => "MaxWmk",
      UsedBy => "npe",
      DefaultSvConstraint => "h1",
    },
  },
  MiniScoperBitSel_cfg => { #Structure Type: Mem;
    Name => "MiniScoperBitSel_cfg",
    RegMem => "Mem",
    Address => "100000",
    Width => "165", # Excel Formula: =calc_mem_width(E94:E95,M93,F95,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "165",
    MiniScoperBitSel => { #Structure Type: MemField;
      Name => "MiniScoperBitSel",
      RegMem => "MemField",
      Width => "160",
      Position => "159:0", # Excel Formula: =calc_position(F93,E94,TRUE)
    },
    MiniScoperSpecialChannelOffset => { #Structure Type: MemField;
      Name => "MiniScoperSpecialChannelOffset",
      RegMem => "MemField",
      Width => "5",
      Position => "164:160", # Excel Formula: =calc_position(F94,E95)
    },
  },
  Lvr0TableA_ProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr0TableA_ProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "200000", # Excel Formula: =calc_mem_address(C93,A93,G96,L96)
    Width => "22", # Excel Formula: =calc_mem_width(E97:E97,M96,F97,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    Lvr0TableA_ProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr0TableA_ProfileExpanding",
      RegMem => "MemField",
      Width => "22", # Excel Formula: =calc_field_width_define("NPE_LVR_MACRO_TABLES_KEY_A_CFG_WIDTH")
      Position => "21:0", # Excel Formula: =calc_position(F96,E97,TRUE)
    },
  },
  Lvr0TableB_ProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr0TableB_ProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "300000", # Excel Formula: =calc_mem_address(C96,A96,G98,L98)
    Width => "26", # Excel Formula: =calc_mem_width(E99:E99,M98,F99,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "26",
    Lvr0TableB_ProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr0TableB_ProfileExpanding",
      RegMem => "MemField",
      Width => "26", # Excel Formula: =calc_field_width_define("NPE_LVR_MACRO_TABLES_KEY_B_CFG_WIDTH")
      Position => "25:0", # Excel Formula: =calc_position(F98,E99,TRUE)
    },
  },
  Lvr0TableC_ProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr0TableC_ProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "400000", # Excel Formula: =calc_mem_address(C98,A98,G100,L100)
    Width => "24", # Excel Formula: =calc_mem_width(E101:E101,M100,F101,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "24",
    Lvr0TableC_ProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr0TableC_ProfileExpanding",
      RegMem => "MemField",
      Width => "24", # Excel Formula: =calc_field_width_define("NPE_LVR_MACRO_TABLES_KEY_C_CFG_WIDTH")
      Position => "23:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
  },
  Lvr1TableA_ProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr1TableA_ProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "500000", # Excel Formula: =calc_mem_address(C100,A100,G102,L102)
    Width => "22", # Excel Formula: =calc_mem_width(E103:E103,M102,F103,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    Lvr1TableA_ProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr1TableA_ProfileExpanding",
      RegMem => "MemField",
      Width => "22", # Excel Formula: =calc_field_width_define("NPE_LVR_MACRO_TABLES_KEY_A_CFG_WIDTH")
      Position => "21:0", # Excel Formula: =calc_position(F102,E103,TRUE)
    },
  },
  Lvr1TableB_ProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr1TableB_ProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "600000", # Excel Formula: =calc_mem_address(C102,A102,G104,L104)
    Width => "26", # Excel Formula: =calc_mem_width(E105:E105,M104,F105,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "26",
    Lvr1TableB_ProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr1TableB_ProfileExpanding",
      RegMem => "MemField",
      Width => "26", # Excel Formula: =calc_field_width_define("NPE_LVR_MACRO_TABLES_KEY_B_CFG_WIDTH")
      Position => "25:0", # Excel Formula: =calc_position(F104,E105,TRUE)
    },
  },
  Lvr1TableC_ProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr1TableC_ProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "700000", # Excel Formula: =calc_mem_address(C104,A104,G106,L106)
    Width => "24", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "24",
    Lvr1TableC_ProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr1TableC_ProfileExpanding",
      RegMem => "MemField",
      Width => "24", # Excel Formula: =calc_field_width_define("NPE_LVR_MACRO_TABLES_KEY_C_CFG_WIDTH")
      Position => "23:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  Lvr3TableA_ProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr3TableA_ProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "800000", # Excel Formula: =calc_mem_address(C106,A106,G108,L108)
    Width => "22", # Excel Formula: =calc_mem_width(E109:E109,M108,F109,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    Lvr3TableA_ProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr3TableA_ProfileExpanding",
      RegMem => "MemField",
      Width => "22", # Excel Formula: =calc_field_width_define("NPE_LVR_MACRO_TABLES_KEY_A_CFG_WIDTH")
      Position => "21:0", # Excel Formula: =calc_position(F108,E109,TRUE)
    },
  },
  Lvr3TableB_ProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr3TableB_ProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "900000", # Excel Formula: =calc_mem_address(C108,A108,G110,L110)
    Width => "26", # Excel Formula: =calc_mem_width(E111:E111,M110,F111,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "26",
    Lvr3TableB_ProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr3TableB_ProfileExpanding",
      RegMem => "MemField",
      Width => "26", # Excel Formula: =calc_field_width_define("NPE_LVR_MACRO_TABLES_KEY_B_CFG_WIDTH")
      Position => "25:0", # Excel Formula: =calc_position(F110,E111,TRUE)
    },
  },
  Lvr3TableC_ProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr3TableC_ProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "A00000", # Excel Formula: =calc_mem_address(C110,A110,G112,L112)
    Width => "24", # Excel Formula: =calc_mem_width(E113:E113,M112,F113,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "24",
    Lvr3TableC_ProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr3TableC_ProfileExpanding",
      RegMem => "MemField",
      Width => "24", # Excel Formula: =calc_field_width_define("NPE_LVR_MACRO_TABLES_KEY_C_CFG_WIDTH")
      Position => "23:0", # Excel Formula: =calc_position(F112,E113,TRUE)
    },
  },
  Lvr4TableA_ProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr4TableA_ProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "B00000", # Excel Formula: =calc_mem_address(C112,A112,G114,L114)
    Width => "22", # Excel Formula: =calc_mem_width(E115:E115,M114,F115,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "22",
    Lvr4TableA_ProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr4TableA_ProfileExpanding",
      RegMem => "MemField",
      Width => "22", # Excel Formula: =calc_field_width_define("NPE_LVR_MACRO_TABLES_KEY_A_CFG_WIDTH")
      Position => "21:0", # Excel Formula: =calc_position(F114,E115,TRUE)
    },
  },
  Lvr4TableB_ProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr4TableB_ProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "C00000", # Excel Formula: =calc_mem_address(C114,A114,G116,L116)
    Width => "26", # Excel Formula: =calc_mem_width(E117:E117,M116,F117,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "26",
    Lvr4TableB_ProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr4TableB_ProfileExpanding",
      RegMem => "MemField",
      Width => "26", # Excel Formula: =calc_field_width_define("NPE_LVR_MACRO_TABLES_KEY_B_CFG_WIDTH")
      Position => "25:0", # Excel Formula: =calc_position(F116,E117,TRUE)
    },
  },
  Lvr4TableC_ProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr4TableC_ProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "D00000", # Excel Formula: =calc_mem_address(C116,A116,G118,L118)
    Width => "24", # Excel Formula: =calc_mem_width(E119:E119,M118,F119,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "24",
    Lvr4TableC_ProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr4TableC_ProfileExpanding",
      RegMem => "MemField",
      Width => "24", # Excel Formula: =calc_field_width_define("NPE_LVR_MACRO_TABLES_KEY_C_CFG_WIDTH")
      Position => "23:0", # Excel Formula: =calc_position(F118,E119,TRUE)
    },
  },
  Lvr0TcamProfileExpanding_cfg => { #Structure Type: Mem;
    Name => "Lvr0TcamProfileExpanding_cfg",
    RegMem => "Mem",
    Address => "E00000", # Excel Formula: =calc_mem_address(C118,A118,G120,L120)
    Width => "36", # Excel Formula: =calc_mem_width(E121:E121,M120,F121,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "8",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "36",
    Lvr0TcamProfileExpanding => { #Structure Type: MemField;
      Name => "Lvr0TcamProfileExpanding",
      RegMem => "MemField",
      Width => "36", # Excel Formula: =calc_field_width_define("NPE_LVR_TCAM_CONTROL_WIDTH")
      Position => "35:0", # Excel Formula: =calc_position(F120,E121,TRUE)
    },
  },
  ScoperMacro => { #Structure Type: Mem;
    Name => "ScoperMacro",
    RegMem => "Mem",
    Address => "F00000", # Excel Formula: =calc_mem_address(C120,A120,G122,L122)
    Description => "A memory in FI core that holds instructions that configures FI core",
    Width => "629", # Excel Formula: =calc_mem_width(E123:E123,M122,F123,128)
    Type => "Config",
    UsedBy => "scp",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SplitProtWidth=128,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "624",
    ScoperInstructions => { #Structure Type: MemField;
      Name => "ScoperInstructions",
      RegMem => "MemField",
      Description => "offset input to the 1st field select in the FI core's ALU",
      Width => "624", # Excel Formula: =calc_field_width_define("NPE_SCOPER_INSTRUCTION_WIDTH")*calc_field_width_define("NPE_SCOPER_NUM_OF_FS")
      Position => "623:0", # Excel Formula: =calc_position(F122,E123,TRUE)
    },
  },
  LookupKeysSelectionMacro => { #Structure Type: Mem;
    Name => "LookupKeysSelectionMacro",
    RegMem => "Mem",
    Address => "1000000", # Excel Formula: =calc_mem_address(C122,A122,G124,L124)
    Width => "68", # Excel Formula: =calc_mem_width(E125:E129,M124,F129,256)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "67",
    TcamKeyInstructions => { #Structure Type: MemField;
      Name => "TcamKeyInstructions",
      RegMem => "MemField",
      Description => "Instructions to build the keys-selection TCAM key",
      Width => "63", # Excel Formula: =calc_field_width_define("NPE_LEVEL_3_1_FS_OFFSETS_INSTRUCTIONS_WIDTH")
      Position => "62:0", # Excel Formula: =calc_position(F124,E125,TRUE)
    },
    BucketA_LookupEnable => { #Structure Type: MemField;
      Name => "BucketA_LookupEnable",
      RegMem => "MemField",
      Width => "1",
      Position => "63", # Excel Formula: =calc_position(F125,E126)
    },
    BucketB_LookupEnable => { #Structure Type: MemField;
      Name => "BucketB_LookupEnable",
      RegMem => "MemField",
      Width => "1",
      Position => "64", # Excel Formula: =calc_position(F126,E127)
    },
    BucketC_LookupEnable => { #Structure Type: MemField;
      Name => "BucketC_LookupEnable",
      RegMem => "MemField",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F127,E128)
    },
    BucketD_LookupEnable => { #Structure Type: MemField;
      Name => "BucketD_LookupEnable",
      RegMem => "MemField",
      Width => "1",
      Position => "66", # Excel Formula: =calc_position(F128,E129)
    },
  },
  LookupKeysConstructionMacro => { #Structure Type: Mem;
    Name => "LookupKeysConstructionMacro",
    RegMem => "Mem",
    Address => "1100000", # Excel Formula: =calc_mem_address(C124,A124,G130,L130)
    Width => "181", # Excel Formula: =calc_mem_width(E131:E132,M130,F132,256)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "180",
    SharedKeysGenInstructions => { #Structure Type: MemField;
      Name => "SharedKeysGenInstructions",
      RegMem => "MemField",
      Description => "16 global instructions instructions ",
      Width => "178", # Excel Formula: =calc_field_width_define("NPE_LEVEL_4_1_FS_INSTRUCTIONS_WIDTH")
      Position => "177:0", # Excel Formula: =calc_position(F130,E131,TRUE)
    },
    ConstantSelect => { #Structure Type: MemField;
      Name => "ConstantSelect",
      RegMem => "MemField",
      Width => "2",
      Position => "179:178", # Excel Formula: =calc_position(F131,E132)
    },
  },
  LookupKeysConstructionConstantsCfg => { #Structure Type: Mem;
    Name => "LookupKeysConstructionConstantsCfg",
    RegMem => "Mem",
    Address => "1200000", # Excel Formula: =calc_mem_address(C130,A130,G133,L133)
    Width => "48", # Excel Formula: =calc_mem_width(E134:E134,M133,F134,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "48",
    KeysConstructionConstants => { #Structure Type: MemField;
      Name => "KeysConstructionConstants",
      RegMem => "MemField",
      Description => "Selected constant is concatanated to the Lvr-in-databus ",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F133,E134,TRUE)
    },
  },
  LookupKeysSelectionTcam => { #Structure Type: Mem;
    Name => "LookupKeysSelectionTcam",
    RegMem => "Mem",
    Address => "1300000", # Excel Formula: =calc_mem_address(C133,A133,G135,L135)
    Width => "43", # Excel Formula: =calc_mem_width(E136:E137,"None",F137,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "128",
    MemWrapper => "TCAM",
    MemProtect => "Parity",
    AdditionalInfo => "NumOfKeys=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "43",
    LookupKeysSelectionTcam_key => { #Structure Type: MemField;
      Name => "LookupKeysSelectionTcam_key",
      RegMem => "MemField",
      Description => "width of key to be searched ",
      Width => "42", # Excel Formula: =calc_field_width_define("NPE_LEVEL_3_1_FS_TOTAL_OUTPUT_WIDTH") + 6
      Position => "41:0", # Excel Formula: =calc_position(F135,E136,TRUE)
    },
    LookupKeysSelectionTcam_delete => { #Structure Type: MemField;
      Name => "LookupKeysSelectionTcam_delete",
      RegMem => "MemField",
      Description => "set to 1 inorder to delete entry with cpu.",
      Width => "1",
      Position => "42", # Excel Formula: =calc_position(F136,E137)
      Comments => "output index logic can be disabled ",
    },
  },
  LookupKeysConstructionLowBuckets0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 33;
    Name => "LookupKeysConstructionLowBuckets[2]",
    RegMem => "Mem",
    Address => "1400000", # Excel Formula: =calc_mem_address(C135,A135,G138,L138)
    Description => "Used for buckets A,B",
    Width => "80", # Excel Formula: =calc_mem_width(E139:E145,M138,F145,128)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "40",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "80",
    Indexs0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 7;
      Name => "Indexs[n]",
      RegMem => "MemField",
      Description => "8 indexes to field select, to be used in the key construction. Index 15 means bucket FS",
      Width => "45", # Excel Formula: =5*9
      Position => "44:0", # Excel Formula: =calc_position(F138,E139,TRUE)
    },
    BucketFieldSelectInst0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 22;
      Name => "BucketFieldSelectInst[n]",
      RegMem => "MemField",
      Width => "14",
      Position => "58:45", # Excel Formula: =calc_position(F139,E140)
    },
    LogicalDb0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "LogicalDb[n]",
      RegMem => "MemField",
      Width => "7",
      Position => "65:59", # Excel Formula: =calc_position(F140,E141)
    },
    LogicalDbWidth0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "LogicalDbWidth[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "68:66", # Excel Formula: =calc_position(F141,E142)
    },
    TagID0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "TagID[n]",
      RegMem => "MemField",
      Width => "4",
      Position => "72:69", # Excel Formula: =calc_position(F142,E143)
    },
    KeyDestination0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "KeyDestination[n]",
      RegMem => "MemField",
      Width => "4",
      Position => "76:73", # Excel Formula: =calc_position(F143,E144)
    },
    ResultIndex0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "ResultIndex[n]",
      RegMem => "MemField",
      Description => "0-3: Regular databases result
4: one-bit result
6: Use-key-as-result
7: No-return",
      Width => "3",
      Position => "79:77", # Excel Formula: =calc_position(F144,E145)
    },
  },
  LookupKeysConstructionLowBuckets1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 33;
    Name => "LookupKeysConstructionLowBuckets[2]",
    RegMem => "Mem",
    Address => "1500000",
    Description => "Used for buckets A,B",
    Width => "80", # Excel Formula: =calc_mem_width(E139:E145,M138,F145,128)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "40",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "80",
    Indexs1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 7;
      Name => "Indexs[n]",
      RegMem => "MemField",
      Description => "8 indexes to field select, to be used in the key construction. Index 15 means bucket FS",
      Width => "45", # Excel Formula: =5*9
      Position => "44:0", # Excel Formula: =calc_position(F138,E139,TRUE)
    },
    BucketFieldSelectInst1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 22;
      Name => "BucketFieldSelectInst[n]",
      RegMem => "MemField",
      Width => "14",
      Position => "58:45", # Excel Formula: =calc_position(F139,E140)
    },
    LogicalDb1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "LogicalDb[n]",
      RegMem => "MemField",
      Width => "7",
      Position => "65:59", # Excel Formula: =calc_position(F140,E141)
    },
    LogicalDbWidth1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "LogicalDbWidth[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "68:66", # Excel Formula: =calc_position(F141,E142)
    },
    TagID1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "TagID[n]",
      RegMem => "MemField",
      Width => "4",
      Position => "72:69", # Excel Formula: =calc_position(F142,E143)
    },
    KeyDestination1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "KeyDestination[n]",
      RegMem => "MemField",
      Width => "4",
      Position => "76:73", # Excel Formula: =calc_position(F143,E144)
    },
    ResultIndex1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "ResultIndex[n]",
      RegMem => "MemField",
      Description => "0-3: Regular databases result
4: one-bit result
6: Use-key-as-result
7: No-return",
      Width => "3",
      Position => "79:77", # Excel Formula: =calc_position(F144,E145)
    },
  },
  LookupKeysConstructionHighBuckets0 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 34;
    Name => "LookupKeysConstructionHighBuckets[2]",
    RegMem => "Mem",
    Address => "1600000", # Excel Formula: =calc_mem_address(C138,A138,G146,L146)
    Description => "Used for buckets C,D",
    Width => "80", # Excel Formula: =calc_mem_width(E147:E153,M146,F153,128)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "40",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "0",
    MemLogicalWidth => "80",
    Indexs0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 7;
      Name => "Indexs[n]",
      RegMem => "MemField",
      Description => "8 indexes to field select, to be used in the key construction. Index 15 means bucket FS",
      Width => "45", # Excel Formula: =5*9
      Position => "44:0", # Excel Formula: =calc_position(F146,E147,TRUE)
    },
    BucketFieldSelectInst0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 22;
      Name => "BucketFieldSelectInst[n]",
      RegMem => "MemField",
      Width => "14",
      Position => "58:45", # Excel Formula: =calc_position(F147,E148)
    },
    LogicalDb0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "LogicalDb[n]",
      RegMem => "MemField",
      Width => "7",
      Position => "65:59", # Excel Formula: =calc_position(F148,E149)
    },
    LogicalDbWidth0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "LogicalDbWidth[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "68:66", # Excel Formula: =calc_position(F149,E150)
    },
    TagID0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "TagID[n]",
      RegMem => "MemField",
      Width => "4",
      Position => "72:69", # Excel Formula: =calc_position(F150,E151)
    },
    KeyDestination0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "KeyDestination[n]",
      RegMem => "MemField",
      Width => "4",
      Position => "76:73", # Excel Formula: =calc_position(F151,E152)
    },
    ResultIndex0 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "ResultIndex[n]",
      RegMem => "MemField",
      Description => "0-3: Regular databases result
4,5: Spare
6: Use-key-as-result
7: No-return",
      Width => "3",
      Position => "79:77", # Excel Formula: =calc_position(F152,E153)
    },
  },
  LookupKeysConstructionHighBuckets1 => { #Structure Type: Mem; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 34;
    Name => "LookupKeysConstructionHighBuckets[2]",
    RegMem => "Mem",
    Address => "1700000",
    Description => "Used for buckets C,D",
    Width => "80", # Excel Formula: =calc_mem_width(E147:E153,M146,F153,128)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "40",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    ArrayLength => "2",
    ArrayIndex => "1",
    MemLogicalWidth => "80",
    Indexs1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 7;
      Name => "Indexs[n]",
      RegMem => "MemField",
      Description => "8 indexes to field select, to be used in the key construction. Index 15 means bucket FS",
      Width => "45", # Excel Formula: =5*9
      Position => "44:0", # Excel Formula: =calc_position(F146,E147,TRUE)
    },
    BucketFieldSelectInst1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 22;
      Name => "BucketFieldSelectInst[n]",
      RegMem => "MemField",
      Width => "14",
      Position => "58:45", # Excel Formula: =calc_position(F147,E148)
    },
    LogicalDb1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "LogicalDb[n]",
      RegMem => "MemField",
      Width => "7",
      Position => "65:59", # Excel Formula: =calc_position(F148,E149)
    },
    LogicalDbWidth1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "LogicalDbWidth[n]",
      RegMem => "MemField",
      Width => "3",
      Position => "68:66", # Excel Formula: =calc_position(F149,E150)
    },
    TagID1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "TagID[n]",
      RegMem => "MemField",
      Width => "4",
      Position => "72:69", # Excel Formula: =calc_position(F150,E151)
    },
    KeyDestination1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "KeyDestination[n]",
      RegMem => "MemField",
      Width => "4",
      Position => "76:73", # Excel Formula: =calc_position(F151,E152)
    },
    ResultIndex1 => { #Structure Type: MemField; ArrayLength: 2; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "ResultIndex[n]",
      RegMem => "MemField",
      Description => "0-3: Regular databases result
4,5: Spare
6: Use-key-as-result
7: No-return",
      Width => "3",
      Position => "79:77", # Excel Formula: =calc_position(F152,E153)
    },
  },
  LookupA_per_dest_linked_list_fifo_index => { #Structure Type: Mem;
    Name => "LookupA_per_dest_linked_list_fifo_index",
    RegMem => "Mem",
    Address => "1800000", # Excel Formula: =calc_mem_address(C146,A146,G154,L154)
    Width => "4", # Excel Formula: =calc_mem_width(E155:E155,M154,F155,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "16", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "4",
    per_dest_linked_list_fifo_index => { #Structure Type: MemField;
      Name => "per_dest_linked_list_fifo_index",
      RegMem => "MemField",
      Description => "Valid indices: 0-7. all ones for 'not-valid'",
      Width => "4", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_LINKED_LIST_FIFO_INDEX_WIDTH")
      Position => "3:0", # Excel Formula: =calc_position(F154,E155,TRUE)
    },
  },
  LookupB_per_dest_linked_list_fifo_index => { #Structure Type: Mem;
    Name => "LookupB_per_dest_linked_list_fifo_index",
    RegMem => "Mem",
    Address => "1900000", # Excel Formula: =calc_mem_address(C154,A154,G156,L156)
    Width => "4", # Excel Formula: =calc_mem_width(E157:E157,M156,F157,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "16", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "4",
    per_dest_linked_list_fifo_index => { #Structure Type: MemField;
      Name => "per_dest_linked_list_fifo_index",
      RegMem => "MemField",
      Description => "Valid indices: 0-7. all ones for 'not-valid'",
      Width => "4", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_LINKED_LIST_FIFO_INDEX_WIDTH")
      Position => "3:0", # Excel Formula: =calc_position(F156,E157,TRUE)
    },
  },
  LookupC_per_dest_linked_list_fifo_index => { #Structure Type: Mem;
    Name => "LookupC_per_dest_linked_list_fifo_index",
    RegMem => "Mem",
    Address => "1A00000", # Excel Formula: =calc_mem_address(C156,A156,G158,L158)
    Width => "4", # Excel Formula: =calc_mem_width(E159:E159,M158,F159,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "16", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "4",
    per_dest_linked_list_fifo_index => { #Structure Type: MemField;
      Name => "per_dest_linked_list_fifo_index",
      RegMem => "MemField",
      Description => "Valid indices: 0-7. all ones for 'not-valid'",
      Width => "4", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_LINKED_LIST_FIFO_INDEX_WIDTH")
      Position => "3:0", # Excel Formula: =calc_position(F158,E159,TRUE)
    },
  },
  LookupD_per_dest_linked_list_fifo_index => { #Structure Type: Mem;
    Name => "LookupD_per_dest_linked_list_fifo_index",
    RegMem => "Mem",
    Address => "1B00000", # Excel Formula: =calc_mem_address(C158,A158,G160,L160)
    Width => "4", # Excel Formula: =calc_mem_width(E161:E161,M160,F161,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "16", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "4",
    per_dest_linked_list_fifo_index => { #Structure Type: MemField;
      Name => "per_dest_linked_list_fifo_index",
      RegMem => "MemField",
      Description => "Valid indices: 0-7. all ones for 'not-valid'",
      Width => "4", # Excel Formula: =calc_field_width_define("NPE_LOOKUP_LINKED_LIST_FIFO_INDEX_WIDTH")
      Position => "3:0", # Excel Formula: =calc_position(F160,E161,TRUE)
    },
  },
  LookupMemoryA_High => { #Structure Type: Mem;
    Name => "LookupMemoryA_High",
    RegMem => "Mem",
    Address => "1C00000", # Excel Formula: =calc_mem_address(C160,A160,G162,L162)
    Width => "168", # Excel Formula: =calc_mem_width(E163:E163,M162,F163,256)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=256,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "167",
    LookupMemoryA_HighData => { #Structure Type: MemField;
      Name => "LookupMemoryA_HighData",
      RegMem => "MemField",
      Width => "167", # Excel Formula: =160+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "166:0", # Excel Formula: =calc_position(F162,E163,TRUE)
    },
  },
  LookupMemoryB_High => { #Structure Type: Mem;
    Name => "LookupMemoryB_High",
    RegMem => "Mem",
    Address => "1D00000", # Excel Formula: =calc_mem_address(C162,A162,G164,L164)
    Width => "168", # Excel Formula: =calc_mem_width(E165:E165,M164,F165,256)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=256,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "167",
    LookupMemoryB_HighData => { #Structure Type: MemField;
      Name => "LookupMemoryB_HighData",
      RegMem => "MemField",
      Width => "167", # Excel Formula: =160++LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "166:0", # Excel Formula: =calc_position(F164,E165,TRUE)
    },
  },
  LookupMemoryC_High => { #Structure Type: Mem;
    Name => "LookupMemoryC_High",
    RegMem => "Mem",
    Address => "1E00000", # Excel Formula: =calc_mem_address(C164,A164,G166,L166)
    Width => "88", # Excel Formula: =calc_mem_width(E167:E167,M166,F167,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "87",
    LookupMemoryC_HighData => { #Structure Type: MemField;
      Name => "LookupMemoryC_HighData",
      RegMem => "MemField",
      Width => "87", # Excel Formula: =80++LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "86:0", # Excel Formula: =calc_position(F166,E167,TRUE)
    },
  },
  LookupMemoryD_High => { #Structure Type: Mem;
    Name => "LookupMemoryD_High",
    RegMem => "Mem",
    Address => "1F00000", # Excel Formula: =calc_mem_address(C166,A166,G168,L168)
    Width => "88", # Excel Formula: =calc_mem_width(E169:E169,M168,F169,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "87",
    LookupMemoryD_HighData => { #Structure Type: MemField;
      Name => "LookupMemoryD_HighData",
      RegMem => "MemField",
      Width => "87", # Excel Formula: =80+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "86:0", # Excel Formula: =calc_position(F168,E169,TRUE)
    },
  },
  LookupMemoryA_Low => { #Structure Type: Mem;
    Name => "LookupMemoryA_Low",
    RegMem => "Mem",
    Address => "2000000", # Excel Formula: =calc_mem_address(C168,A168,G170,L170)
    Width => "168", # Excel Formula: =calc_mem_width(E171:E171,M170,F171,256)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=256,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "167",
    LookupMemoryA_LowData => { #Structure Type: MemField;
      Name => "LookupMemoryA_LowData",
      RegMem => "MemField",
      Width => "167", # Excel Formula: =160+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "166:0", # Excel Formula: =calc_position(F170,E171,TRUE)
    },
  },
  LookupMemoryB_Low => { #Structure Type: Mem;
    Name => "LookupMemoryB_Low",
    RegMem => "Mem",
    Address => "2100000", # Excel Formula: =calc_mem_address(C170,A170,G172,L172)
    Width => "168", # Excel Formula: =calc_mem_width(E173:E173,M172,F173,256)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=256,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "167",
    LookupMemoryB_LowData => { #Structure Type: MemField;
      Name => "LookupMemoryB_LowData",
      RegMem => "MemField",
      Width => "167", # Excel Formula: =160+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "166:0", # Excel Formula: =calc_position(F172,E173,TRUE)
    },
  },
  LookupMemoryC_Low => { #Structure Type: Mem;
    Name => "LookupMemoryC_Low",
    RegMem => "Mem",
    Address => "2200000", # Excel Formula: =calc_mem_address(C172,A172,G174,L174)
    Width => "88", # Excel Formula: =calc_mem_width(E175:E175,M174,F175,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "87",
    LookupMemoryC_LowData => { #Structure Type: MemField;
      Name => "LookupMemoryC_LowData",
      RegMem => "MemField",
      Width => "87", # Excel Formula: =80+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "86:0", # Excel Formula: =calc_position(F174,E175,TRUE)
    },
  },
  LookupMemoryD_Low => { #Structure Type: Mem;
    Name => "LookupMemoryD_Low",
    RegMem => "Mem",
    Address => "2300000", # Excel Formula: =calc_mem_address(C174,A174,G176,L176)
    Width => "88", # Excel Formula: =calc_mem_width(E177:E177,M176,F177,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=40,ReadActivityFactor=40,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "87",
    LookupMemoryD_LowData => { #Structure Type: MemField;
      Name => "LookupMemoryD_LowData",
      RegMem => "MemField",
      Width => "87", # Excel Formula: =80+LOG(calc_field_width_define("NPE_LOOKUP_NUM_OF_DESTINATION"),2)+calc_field_width_define("NPE_LOOKUP_RESULT_INDEX_WIDTH")
      Position => "86:0", # Excel Formula: =calc_position(F176,E177,TRUE)
    },
  },
  LookupResultsCfg => { #Structure Type: Mem;
    Name => "LookupResultsCfg",
    RegMem => "Mem",
    Address => "2400000", # Excel Formula: =calc_mem_address(C176,A176,G178,L178)
    Description => "Per macro:
1. The width in bytes of each lookup result
2. Final Result Shift-value (in channles-resolution)",
    Width => "23", # Excel Formula: =calc_mem_width(E179:E183,M178,F183,-1)
    Type => "Config",
    UsedBy => "npe",
    DefaultValue => "Per macro:,1. The width in bytes of each lookup result,2. Final Result Shift-value (in channles-resolution)",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "23",
    LookupResultA_Width => { #Structure Type: MemField;
      Name => "LookupResultA_Width",
      RegMem => "MemField",
      Width => "5",
      Position => "4:0", # Excel Formula: =calc_position(F178,E179,TRUE)
    },
    LookupResultB_Width => { #Structure Type: MemField;
      Name => "LookupResultB_Width",
      RegMem => "MemField",
      Width => "5",
      Position => "9:5", # Excel Formula: =calc_position(F179,E180)
    },
    LookupResultC_Width => { #Structure Type: MemField;
      Name => "LookupResultC_Width",
      RegMem => "MemField",
      Width => "4",
      Position => "13:10", # Excel Formula: =calc_position(F180,E181)
    },
    LookupResultD_Width => { #Structure Type: MemField;
      Name => "LookupResultD_Width",
      RegMem => "MemField",
      Width => "4",
      Position => "17:14", # Excel Formula: =calc_position(F181,E182)
    },
    LookupResultShift => { #Structure Type: MemField;
      Name => "LookupResultShift",
      RegMem => "MemField",
      Width => "5",
      Position => "22:18", # Excel Formula: =calc_position(F182,E183)
    },
  },
  ResolutionKeysSelectionMacro => { #Structure Type: Mem;
    Name => "ResolutionKeysSelectionMacro",
    RegMem => "Mem",
    Address => "2500000", # Excel Formula: =calc_mem_address(C178,A178,G184,L184)
    Width => "181", # Excel Formula: =calc_mem_width(E185:E185,M184,F185,256)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "180",
    TcamKeyInstructions => { #Structure Type: MemField;
      Name => "TcamKeyInstructions",
      RegMem => "MemField",
      Description => "Instructions to build the keys-selection TCAM key (20x8bit offset in nibbles)",
      Width => "180", # Excel Formula: =calc_field_width_define("NPE_LEVEL_8_1_FS_OFFSETS_INSTRUCTIONS_WIDTH")
      Position => "179:0", # Excel Formula: =calc_position(F184,E185,TRUE)
    },
  },
  ResolutionKeysSelectionTcam => { #Structure Type: Mem;
    Name => "ResolutionKeysSelectionTcam",
    RegMem => "Mem",
    Address => "2600000", # Excel Formula: =calc_mem_address(C184,A184,G186,L186)
    Width => "75", # Excel Formula: =calc_mem_width(E187:E188,"None",F188,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "512",
    MemWrapper => "TCAM",
    MemProtect => "Parity",
    AdditionalInfo => "NumOfKeys=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "75",
    ResolutionKeysSelectionTcam_key => { #Structure Type: MemField;
      Name => "ResolutionKeysSelectionTcam_key",
      RegMem => "MemField",
      Description => "width of key to be searched",
      Width => "74", # Excel Formula: =calc_field_width_define("NPE_LEVEL_8_1_FS_TOTAL_OUTPUT_WIDTH") + 6 + 2
      Position => "73:0", # Excel Formula: =calc_position(F186,E187,TRUE)
    },
    ResolutionKeysSelectionTcam_delete => { #Structure Type: MemField;
      Name => "ResolutionKeysSelectionTcam_delete",
      RegMem => "MemField",
      Description => "set to 1 inorder to delete entry with cpu.",
      Width => "1",
      Position => "74", # Excel Formula: =calc_position(F187,E188)
      Comments => "output index logic can be disabled ",
    },
  },
  PdUpdateInstructions => { #Structure Type: Mem;
    Name => "PdUpdateInstructions",
    RegMem => "Mem",
    Address => "2700000", # Excel Formula: =calc_mem_address(C186,A186,G189,L189)
    Description => "Instructions to udpate packet descriptor. Instruction ",
    Width => "14", # Excel Formula: =calc_mem_width(E190:E190,M189,F190,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "512",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "14",
    PdUpdateInstruction => { #Structure Type: MemField;
      Name => "PdUpdateInstruction",
      RegMem => "MemField",
      Width => "14", # Excel Formula: =calc_field_width_define("NPE_PD_UPDATE_INSTRUCTION_WIDTH")
      Position => "13:0", # Excel Formula: =calc_position(F189,E190,TRUE)
    },
  },
  PdUpdateUnifiedBucketsControl => { #Structure Type: Mem;
    Name => "PdUpdateUnifiedBucketsControl",
    RegMem => "Mem",
    Address => "2800000", # Excel Formula: =calc_mem_address(C189,A189,G191,L191)
    Width => "295", # Excel Formula: =calc_mem_width(E192:E192,M191,F192,256)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "293",
    PdUpdateUnifiedBucketsControlData => { #Structure Type: MemField;
      Name => "PdUpdateUnifiedBucketsControlData",
      RegMem => "MemField",
      Width => "293", # Excel Formula: =calc_field_width_define("NPE_PD_UPDATE_UBS_INST_TOTAL_WIDTH")
      Position => "292:0", # Excel Formula: =calc_position(F191,E192,TRUE)
    },
  },
  PdUpdateMacro => { #Structure Type: Mem;
    Name => "PdUpdateMacro",
    RegMem => "Mem",
    Address => "2900000", # Excel Formula: =calc_mem_address(C191,A191,G193,L193)
    Width => "2", # Excel Formula: =calc_mem_width(E194:E194,M193,F194,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "2",
    ConstantSelect => { #Structure Type: MemField;
      Name => "ConstantSelect",
      RegMem => "MemField",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F193,E194,TRUE)
    },
  },
  PdUpdateConstantsCfg => { #Structure Type: Mem;
    Name => "PdUpdateConstantsCfg",
    RegMem => "Mem",
    Address => "2A00000", # Excel Formula: =calc_mem_address(C193,A193,G195,L195)
    Width => "80", # Excel Formula: =calc_mem_width(E196:E196,M195,F196,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "80",
    PdUpdateConstants => { #Structure Type: MemField;
      Name => "PdUpdateConstants",
      RegMem => "MemField",
      Description => "Selected constant",
      Width => "80",
      Position => "79:0", # Excel Formula: =calc_position(F195,E196,TRUE)
    },
  },
  DataBusHolderHigh => { #Structure Type: Mem;
    Name => "DataBusHolderHigh",
    RegMem => "Mem",
    Address => "2B00000", # Excel Formula: =calc_mem_address(C195,A195,G197,L197)
    Width => "860", # Excel Formula: =calc_mem_width(E198:E198,M197,F198,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=60,ReadActivityFactor=60,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "853",
    DataBusHolderDataHigh => { #Structure Type: MemField;
      Name => "DataBusHolderDataHigh",
      RegMem => "MemField",
      Width => "853", # Excel Formula: =calc_field_width_define("NPE_PD_UPDATE_REGULAR_INST_OFFSET") + calc_field_width_define("NPE_PD_UPDATE_UBS_PRE2POST_INST_TOTAL_WIDTH")
      Position => "852:0", # Excel Formula: =calc_position(F197,E198,TRUE)
    },
  },
  DataBusHolderLow => { #Structure Type: Mem;
    Name => "DataBusHolderLow",
    RegMem => "Mem",
    Address => "2C00000", # Excel Formula: =calc_mem_address(C197,A197,G199,L199)
    Width => "860", # Excel Formula: =calc_mem_width(E200:E200,M199,F200,128)
    Type => "Dynamic",
    UsedBy => "npe",
    MemEntries => "96", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")/2
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,WriteActivityFactor=60,ReadActivityFactor=60,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "853",
    DataBusHolderDataLow => { #Structure Type: MemField;
      Name => "DataBusHolderDataLow",
      RegMem => "MemField",
      Width => "853", # Excel Formula: =calc_field_width_define("NPE_PD_UPDATE_REGULAR_INST_OFFSET") + calc_field_width_define("NPE_PD_UPDATE_UBS_PRE2POST_INST_TOTAL_WIDTH")
      Position => "852:0", # Excel Formula: =calc_position(F199,E200,TRUE)
    },
  },
  MiniScoperCfg => { #Structure Type: Mem;
    Name => "MiniScoperCfg",
    RegMem => "Mem",
    Address => "2D00000", # Excel Formula: =calc_mem_address(C199,A199,G201,L201)
    Description => "select the source of each channel in the data-bus between lookup-core and resolution-core",
    Width => "123", # Excel Formula: =calc_mem_width(E202:E204,M201,F204,256)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "123",
    MiniScoperCfgData => { #Structure Type: MemField;
      Name => "MiniScoperCfgData",
      RegMem => "MemField",
      Description => "set of offsets to the incoming bus in 16b resolution",
      Width => "120", # Excel Formula: =calc_field_width_define("NPE_LEVEL_4_NUM_OF_CHANNELS")*ROUNDUP(LOG(calc_field_width_define("NPE_LEVEL_3_NUM_OF_CHANNELS"),2),0)
      Position => "119:0", # Excel Formula: =calc_position(F201,E202,TRUE)
    },
    MiniScoperCfgBitSelProfile => { #Structure Type: MemField;
      Name => "MiniScoperCfgBitSelProfile",
      RegMem => "MemField",
      Description => "Select which control to use for the special channel in the mini scoper",
      Width => "2", # Excel Formula: =calc_field_width_define("NPE_MINI_SCOPER_SPECIAL_CH_NUM_OF_PROFILE_WIDTH")
      Position => "121:120", # Excel Formula: =calc_position(F202,E203)
    },
    MiniScoperCfgUseSpecialChannel => { #Structure Type: MemField;
      Name => "MiniScoperCfgUseSpecialChannel",
      RegMem => "MemField",
      Description => "determine if to use the specail channel in this macro",
      Width => "1",
      Position => "122", # Excel Formula: =calc_position(F203,E204)
    },
  },
  LookupCoreTcam => { #Structure Type: Mem;
    Name => "LookupCoreTcam",
    RegMem => "Mem",
    Address => "2E00000", # Excel Formula: =calc_mem_address(C201,A201,G205,L205)
    Width => "141", # Excel Formula: =calc_mem_width(E206:E207,"None",F207,-1)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "128", # Excel Formula: =calc_field_width_define("NPE_LKP_KEYS_SEL_TCAM_DEPTH")
    MemWrapper => "TCAM",
    MemProtect => "Parity",
    AdditionalInfo => "NumOfKeys=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "141",
    LookupCoreTcam_key => { #Structure Type: MemField;
      Name => "LookupCoreTcam_key",
      RegMem => "MemField",
      Description => "width of key to be searched",
      Width => "140",
      Position => "139:0", # Excel Formula: =calc_position(F205,E206,TRUE)
    },
    LookupCoreTcam_delete => { #Structure Type: MemField;
      Name => "LookupCoreTcam_delete",
      RegMem => "MemField",
      Description => "set to 1 inorder to delete entry with cpu.",
      Width => "1",
      Position => "140", # Excel Formula: =calc_position(F206,E207)
      Comments => "output index logic can be disabled ",
    },
  },
  Lvr0FsInstructions => { #Structure Type: Mem;
    Name => "Lvr0FsInstructions",
    RegMem => "Mem",
    Address => "2F00000", # Excel Formula: =calc_mem_address(C205,A205,G208,L208)
    Width => "163", # Excel Formula: =calc_mem_width(E209:E210,M208,F210,256)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "162",
    Lvr0FsInst => { #Structure Type: MemField;
      Name => "Lvr0FsInst",
      RegMem => "MemField",
      Width => "160", # Excel Formula: =calc_field_width_define("NPE_LEVEL_1_0_FS_INSTRUCTIONS_WIDTH")
      Position => "159:0", # Excel Formula: =calc_position(F208,E209,TRUE)
    },
    Lvr0ConstantSelect => { #Structure Type: MemField;
      Name => "Lvr0ConstantSelect",
      RegMem => "MemField",
      Width => "2",
      Position => "161:160", # Excel Formula: =calc_position(F209,E210)
    },
  },
  Lvr0ConstantsCfg => { #Structure Type: Mem;
    Name => "Lvr0ConstantsCfg",
    RegMem => "Mem",
    Address => "3000000", # Excel Formula: =calc_mem_address(C208,A208,G211,L211)
    Width => "48", # Excel Formula: =calc_mem_width(E212:E212,M211,F212,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "48",
    Lvr0Constants => { #Structure Type: MemField;
      Name => "Lvr0Constants",
      RegMem => "MemField",
      Description => "Selected constant is concatanated to the Lvr-in-databus ",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F211,E212,TRUE)
    },
  },
  Lvr0MacroCfg => { #Structure Type: Mem;
    Name => "Lvr0MacroCfg",
    RegMem => "Mem",
    Address => "3100000", # Excel Formula: =calc_mem_address(C211,A211,G213,L213)
    Width => "82", # Excel Formula: =calc_mem_width(E214:E214,M213,F214,256)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=256,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "82",
    Lvr0MacroConfig => { #Structure Type: MemField;
      Name => "Lvr0MacroConfig",
      RegMem => "MemField",
      Width => "82", # Excel Formula: =calc_field_width_define("NPE_LEVEL_1_0_MACRO_CTRL_WIDTH")
      Position => "81:0", # Excel Formula: =calc_position(F213,E214,TRUE)
    },
  },
  Lvr0RegTcam0 => { #Structure Type: Mem;
    Name => "Lvr0RegTcam0",
    RegMem => "Mem",
    Address => "3200000", # Excel Formula: =calc_mem_address(C213,A213,G215,L215)
    Width => "41", # Excel Formula: =calc_mem_width(E216:E218,"None",F218,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "41",
    Lvr0RegTcam0_mask => { #Structure Type: MemField;
      Name => "Lvr0RegTcam0_mask",
      RegMem => "MemField",
      Width => "20",
      Position => "19:0", # Excel Formula: =calc_position(F215,E216,TRUE)
    },
    Lvr0RegTcam0_key => { #Structure Type: MemField;
      Name => "Lvr0RegTcam0_key",
      RegMem => "MemField",
      Width => "20",
      Position => "39:20", # Excel Formula: =calc_position(F216,E217)
    },
    Lvr0RegTcam0_delete => { #Structure Type: MemField;
      Name => "Lvr0RegTcam0_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F217,E218)
    },
  },
  Lvr0RegTcam0_mem => { #Structure Type: Mem;
    Name => "Lvr0RegTcam0_mem",
    RegMem => "Mem",
    Address => "3300000", # Excel Formula: =calc_mem_address(C215,A215,G219,L219)
    Width => "16", # Excel Formula: =calc_mem_width(E220:E220,M219,F220,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr0RegTcam0_mem_data => { #Structure Type: MemField;
      Name => "Lvr0RegTcam0_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F219,E220,TRUE)
    },
  },
  Lvr0RegTcam1 => { #Structure Type: Mem;
    Name => "Lvr0RegTcam1",
    RegMem => "Mem",
    Address => "3400000", # Excel Formula: =calc_mem_address(C219,A219,G221,L221)
    Width => "65", # Excel Formula: =calc_mem_width(E222:E224,"None",F224,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "65",
    Lvr0RegTcam1_mask => { #Structure Type: MemField;
      Name => "Lvr0RegTcam1_mask",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F221,E222,TRUE)
    },
    Lvr0RegTcam1_key => { #Structure Type: MemField;
      Name => "Lvr0RegTcam1_key",
      RegMem => "MemField",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F222,E223)
    },
    Lvr0RegTcam1_delete => { #Structure Type: MemField;
      Name => "Lvr0RegTcam1_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "64", # Excel Formula: =calc_position(F223,E224)
    },
  },
  Lvr0RegTcam1_mem => { #Structure Type: Mem;
    Name => "Lvr0RegTcam1_mem",
    RegMem => "Mem",
    Address => "3500000", # Excel Formula: =calc_mem_address(C221,A221,G225,L225)
    Width => "16", # Excel Formula: =calc_mem_width(E226:E226,M225,F226,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr0RegTcam1_mem_data => { #Structure Type: MemField;
      Name => "Lvr0RegTcam1_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F225,E226,TRUE)
    },
  },
  Lvr0RegTcam2 => { #Structure Type: Mem;
    Name => "Lvr0RegTcam2",
    RegMem => "Mem",
    Address => "3600000", # Excel Formula: =calc_mem_address(C225,A225,G227,L227)
    Width => "65", # Excel Formula: =calc_mem_width(E228:E230,"None",F230,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "65",
    Lvr0RegTcam2_mask => { #Structure Type: MemField;
      Name => "Lvr0RegTcam2_mask",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F227,E228,TRUE)
    },
    Lvr0RegTcam2_key => { #Structure Type: MemField;
      Name => "Lvr0RegTcam2_key",
      RegMem => "MemField",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F228,E229)
    },
    Lvr0RegTcam2_delete => { #Structure Type: MemField;
      Name => "Lvr0RegTcam2_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "64", # Excel Formula: =calc_position(F229,E230)
    },
  },
  Lvr0RegTcam2_mem => { #Structure Type: Mem;
    Name => "Lvr0RegTcam2_mem",
    RegMem => "Mem",
    Address => "3700000", # Excel Formula: =calc_mem_address(C227,A227,G231,L231)
    Width => "16", # Excel Formula: =calc_mem_width(E232:E232,M231,F232,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr0RegTcam2_mem_data => { #Structure Type: MemField;
      Name => "Lvr0RegTcam2_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F231,E232,TRUE)
    },
  },
  Lvr0RegTcam3 => { #Structure Type: Mem;
    Name => "Lvr0RegTcam3",
    RegMem => "Mem",
    Address => "3800000", # Excel Formula: =calc_mem_address(C231,A231,G233,L233)
    Width => "81", # Excel Formula: =calc_mem_width(E234:E236,"None",F236,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "81",
    Lvr0RegTcam3_mask => { #Structure Type: MemField;
      Name => "Lvr0RegTcam3_mask",
      RegMem => "MemField",
      Width => "40",
      Position => "39:0", # Excel Formula: =calc_position(F233,E234,TRUE)
    },
    Lvr0RegTcam3_key => { #Structure Type: MemField;
      Name => "Lvr0RegTcam3_key",
      RegMem => "MemField",
      Width => "40",
      Position => "79:40", # Excel Formula: =calc_position(F234,E235)
    },
    Lvr0RegTcam3_delete => { #Structure Type: MemField;
      Name => "Lvr0RegTcam3_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "80", # Excel Formula: =calc_position(F235,E236)
    },
  },
  Lvr0RegTcam3_mem => { #Structure Type: Mem;
    Name => "Lvr0RegTcam3_mem",
    RegMem => "Mem",
    Address => "3900000", # Excel Formula: =calc_mem_address(C233,A233,G237,L237)
    Width => "16", # Excel Formula: =calc_mem_width(E238:E238,M237,F238,-1)
    Type => "Config",
    UsedBy => "LVR0",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr0RegTcam3_mem_data => { #Structure Type: MemField;
      Name => "Lvr0RegTcam3_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F237,E238,TRUE)
    },
  },
  Lvr1FsInstructions => { #Structure Type: Mem;
    Name => "Lvr1FsInstructions",
    RegMem => "Mem",
    Address => "3A00000", # Excel Formula: =calc_mem_address(C237,A237,G239,L239)
    Width => "154", # Excel Formula: =calc_mem_width(E240:E241,M239,F241,256)
    Type => "Config",
    UsedBy => "Lvr1",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "153",
    Lvr1FsInst => { #Structure Type: MemField;
      Name => "Lvr1FsInst",
      RegMem => "MemField",
      Width => "151", # Excel Formula: =calc_field_width_define("NPE_LEVEL_2_0_FS_INSTRUCTIONS_WIDTH")
      Position => "150:0", # Excel Formula: =calc_position(F239,E240,TRUE)
    },
    Lvr1ConstantSelect => { #Structure Type: MemField;
      Name => "Lvr1ConstantSelect",
      RegMem => "MemField",
      Width => "2",
      Position => "152:151", # Excel Formula: =calc_position(F240,E241)
    },
  },
  Lvr1ConstantsCfg => { #Structure Type: Mem;
    Name => "Lvr1ConstantsCfg",
    RegMem => "Mem",
    Address => "3B00000", # Excel Formula: =calc_mem_address(C239,A239,G242,L242)
    Width => "48", # Excel Formula: =calc_mem_width(E243:E243,M242,F243,-1)
    Type => "Config",
    UsedBy => "LVR1",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "48",
    Lvr1Constants => { #Structure Type: MemField;
      Name => "Lvr1Constants",
      RegMem => "MemField",
      Description => "Selected constant is concatanated to the Lvr-in-databus ",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F242,E243,TRUE)
    },
  },
  Lvr1MacroCfg => { #Structure Type: Mem;
    Name => "Lvr1MacroCfg",
    RegMem => "Mem",
    Address => "3C00000", # Excel Formula: =calc_mem_address(C242,A242,G244,L244)
    Width => "95", # Excel Formula: =calc_mem_width(E245:E245,M244,F245,128)
    Type => "Config",
    UsedBy => "Lvr1",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "95",
    Lvr1MacroConfig => { #Structure Type: MemField;
      Name => "Lvr1MacroConfig",
      RegMem => "MemField",
      Width => "95", # Excel Formula: =calc_field_width_define("NPE_LEVEL_2_0_MACRO_CTRL_WIDTH")
      Position => "94:0", # Excel Formula: =calc_position(F244,E245,TRUE)
    },
  },
  Lvr1RegTcam0 => { #Structure Type: Mem;
    Name => "Lvr1RegTcam0",
    RegMem => "Mem",
    Address => "3D00000", # Excel Formula: =calc_mem_address(C244,A244,G246,L246)
    Width => "97", # Excel Formula: =calc_mem_width(E247:E249,"None",F249,-1)
    Type => "Config",
    UsedBy => "Lvr1",
    MemEntries => "16",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "97",
    Lvr1RegTcam0_mask => { #Structure Type: MemField;
      Name => "Lvr1RegTcam0_mask",
      RegMem => "MemField",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F246,E247,TRUE)
    },
    Lvr1RegTcam0_key => { #Structure Type: MemField;
      Name => "Lvr1RegTcam0_key",
      RegMem => "MemField",
      Width => "48",
      Position => "95:48", # Excel Formula: =calc_position(F247,E248)
    },
    Lvr1RegTcam0_delete => { #Structure Type: MemField;
      Name => "Lvr1RegTcam0_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "96", # Excel Formula: =calc_position(F248,E249)
    },
  },
  Lvr1RegTcam0_mem => { #Structure Type: Mem;
    Name => "Lvr1RegTcam0_mem",
    RegMem => "Mem",
    Address => "3E00000", # Excel Formula: =calc_mem_address(C246,A246,G250,L250)
    Width => "16", # Excel Formula: =calc_mem_width(E251:E251,M250,F251,-1)
    Type => "Config",
    UsedBy => "Lvr1",
    MemEntries => "16",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr1RegTcam0_mem_data => { #Structure Type: MemField;
      Name => "Lvr1RegTcam0_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F250,E251,TRUE)
    },
  },
  Lvr2PerMacroNumOfBypassChannels => { #Structure Type: Mem;
    Name => "Lvr2PerMacroNumOfBypassChannels",
    RegMem => "Mem",
    Address => "3F00000", # Excel Formula: =calc_mem_address(C250,A250,G252,L252)
    Width => "5", # Excel Formula: =calc_mem_width(E253:E253,M252,F253,-1)
    Type => "Config",
    UsedBy => "LVR2",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "5",
    NumOfBypassChannels => { #Structure Type: MemField;
      Name => "NumOfBypassChannels",
      RegMem => "MemField",
      Description => "Valid values is 0..10",
      Width => "5", # Excel Formula: =ROUNDUP(LOG((calc_field_width_define("NPE_SCOPER_NUM_OF_FS")-calc_field_width_define("NPE_LEVEL_0_NUM_OF_CHANNELS")),2),0)
      Position => "4:0", # Excel Formula: =calc_position(F252,E253,TRUE)
    },
  },
  Lvr3FsInstructions => { #Structure Type: Mem;
    Name => "Lvr3FsInstructions",
    RegMem => "Mem",
    Address => "4000000", # Excel Formula: =calc_mem_address(C252,A252,G254,L254)
    Width => "125", # Excel Formula: =calc_mem_width(E255:E256,M254,F256,256)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "124",
    Lvr3FsInst => { #Structure Type: MemField;
      Name => "Lvr3FsInst",
      RegMem => "MemField",
      Width => "122", # Excel Formula: =calc_field_width_define("NPE_LEVEL_6_0_FS_INSTRUCTIONS_WIDTH")
      Position => "121:0", # Excel Formula: =calc_position(F254,E255,TRUE)
    },
    Lvr3ConstantSelect => { #Structure Type: MemField;
      Name => "Lvr3ConstantSelect",
      RegMem => "MemField",
      Width => "2",
      Position => "123:122", # Excel Formula: =calc_position(F255,E256)
    },
  },
  Lvr3ConstantsCfg => { #Structure Type: Mem;
    Name => "Lvr3ConstantsCfg",
    RegMem => "Mem",
    Address => "4100000", # Excel Formula: =calc_mem_address(C254,A254,G257,L257)
    Width => "48", # Excel Formula: =calc_mem_width(E258:E258,M257,F258,-1)
    Type => "Config",
    UsedBy => "LVR3",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "48",
    Lvr3Constants => { #Structure Type: MemField;
      Name => "Lvr3Constants",
      RegMem => "MemField",
      Description => "Selected constant is concatanated to the Lvr-in-databus ",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F257,E258,TRUE)
    },
  },
  Lvr3MacroCfg => { #Structure Type: Mem;
    Name => "Lvr3MacroCfg",
    RegMem => "Mem",
    Address => "4200000", # Excel Formula: =calc_mem_address(C257,A257,G259,L259)
    Width => "111", # Excel Formula: =calc_mem_width(E260:E260,M259,F260,256)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=256,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "111",
    Lvr3MacroConfig => { #Structure Type: MemField;
      Name => "Lvr3MacroConfig",
      RegMem => "MemField",
      Description => "TBD Change to real value",
      Width => "111", # Excel Formula: =calc_field_width_define("NPE_LEVEL_6_0_MACRO_CTRL_WIDTH")
      Position => "110:0", # Excel Formula: =calc_position(F259,E260,TRUE)
    },
  },
  Lvr3RegTcam0 => { #Structure Type: Mem;
    Name => "Lvr3RegTcam0",
    RegMem => "Mem",
    Address => "4300000", # Excel Formula: =calc_mem_address(C259,A259,G261,L261)
    Width => "33", # Excel Formula: =calc_mem_width(E262:E264,"None",F264,-1)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "33",
    Lvr3RegTcam0_mask => { #Structure Type: MemField;
      Name => "Lvr3RegTcam0_mask",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F261,E262,TRUE)
    },
    Lvr3RegTcam0_key => { #Structure Type: MemField;
      Name => "Lvr3RegTcam0_key",
      RegMem => "MemField",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F262,E263)
    },
    Lvr3RegTcam0_delete => { #Structure Type: MemField;
      Name => "Lvr3RegTcam0_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F263,E264)
    },
  },
  Lvr3RegTcam0_mem => { #Structure Type: Mem;
    Name => "Lvr3RegTcam0_mem",
    RegMem => "Mem",
    Address => "4400000", # Excel Formula: =calc_mem_address(C261,A261,G265,L265)
    Width => "16", # Excel Formula: =calc_mem_width(E266:E266,M265,F266,-1)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr3RegTcam0_mem_data => { #Structure Type: MemField;
      Name => "Lvr3RegTcam0_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F265,E266,TRUE)
    },
  },
  Lvr3RegTcam1 => { #Structure Type: Mem;
    Name => "Lvr3RegTcam1",
    RegMem => "Mem",
    Address => "4500000", # Excel Formula: =calc_mem_address(C265,A265,G267,L267)
    Width => "65", # Excel Formula: =calc_mem_width(E268:E270,"None",F270,-1)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "65",
    Lvr3RegTcam1_mask => { #Structure Type: MemField;
      Name => "Lvr3RegTcam1_mask",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F267,E268,TRUE)
    },
    Lvr3RegTcam1_key => { #Structure Type: MemField;
      Name => "Lvr3RegTcam1_key",
      RegMem => "MemField",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F268,E269)
    },
    Lvr3RegTcam1_delete => { #Structure Type: MemField;
      Name => "Lvr3RegTcam1_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "64", # Excel Formula: =calc_position(F269,E270)
    },
  },
  Lvr3RegTcam1_mem => { #Structure Type: Mem;
    Name => "Lvr3RegTcam1_mem",
    RegMem => "Mem",
    Address => "4600000", # Excel Formula: =calc_mem_address(C267,A267,G271,L271)
    Width => "16", # Excel Formula: =calc_mem_width(E272:E272,M271,F272,-1)
    Type => "Config",
    UsedBy => "Lvr3",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr3RegTcam1_mem_data => { #Structure Type: MemField;
      Name => "Lvr3RegTcam1_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F271,E272,TRUE)
    },
  },
  TrapsKeyConstructionMacro => { #Structure Type: Mem;
    Name => "TrapsKeyConstructionMacro",
    RegMem => "Mem",
    Address => "4700000", # Excel Formula: =calc_mem_address(C271,A271,G273,L273)
    Width => "208", # Excel Formula: =calc_mem_width(E274:E275,M273,F275,256)
    Type => "Config",
    UsedBy => "npe",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=256,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "207",
    TrapsKeyInstructions => { #Structure Type: MemField;
      Name => "TrapsKeyInstructions",
      RegMem => "MemField",
      Description => "Instructions to build the Traps TCAM key (24 offsets in different resolutions/width)",
      Width => "206", # Excel Formula: =calc_field_width_define("NPE_LEVEL_7_1_FS_OFFSETS_INSTRUCTIONS_WIDTH")
      Position => "205:0", # Excel Formula: =calc_position(F273,E274,TRUE)
    },
    TrapsTcamLookupEn => { #Structure Type: MemField;
      Name => "TrapsTcamLookupEn",
      RegMem => "MemField",
      Description => "when set, access to Traps-tcam. ",
      Width => "1",
      Position => "206", # Excel Formula: =calc_position(F274,E275)
    },
  },
  TrapsTcam => { #Structure Type: Mem;
    Name => "TrapsTcam",
    RegMem => "Mem",
    Address => "4800000", # Excel Formula: =calc_mem_address(C273,A273,G276,L276)
    Width => "97", # Excel Formula: =calc_mem_width(E277:E278,"None",F278,-1)
    Type => "Config",
    UsedBy => "traps",
    MemEntries => "128",
    MemWrapper => "TCAM",
    MemProtect => "Parity",
    AdditionalInfo => "NumOfKeys=1,NumAccessSamples=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "97",
    TrapsTcam_key => { #Structure Type: MemField;
      Name => "TrapsTcam_key",
      RegMem => "MemField",
      Width => "96", # Excel Formula: =calc_field_width_define("NPE_LEVEL_7_1_FS_TOTAL_OUTPUT_WIDTH")+6
      Position => "95:0", # Excel Formula: =calc_position(F276,E277,TRUE)
    },
    TrapsTcam_delete => { #Structure Type: MemField;
      Name => "TrapsTcam_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "96", # Excel Formula: =calc_position(F277,E278)
      Comments => "output index logic can be disabled ",
    },
  },
  TrapsTcam_mem => { #Structure Type: Mem;
    Name => "TrapsTcam_mem",
    RegMem => "Mem",
    Address => "4900000", # Excel Formula: =calc_mem_address(C276,A276,G279,L279)
    Width => "8", # Excel Formula: =calc_mem_width(E280:E280,M279,F280,-1)
    Type => "Config",
    UsedBy => "traps",
    MemEntries => "128",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "8",
    SnoopOrRedirectCode => { #Structure Type: MemField;
      Name => "SnoopOrRedirectCode",
      RegMem => "MemField",
      Width => "8", # Excel Formula: =calc_field_width_define("NPE_TRAPS_SNOOP_CODE_WIDTH")
      Position => "7:0", # Excel Formula: =calc_position(F279,E280,TRUE)
    },
  },
  Lvr4FsInstructions => { #Structure Type: Mem;
    Name => "Lvr4FsInstructions",
    RegMem => "Mem",
    Address => "4A00000", # Excel Formula: =calc_mem_address(C279,A279,G281,L281)
    Width => "91", # Excel Formula: =calc_mem_width(E282:E283,M281,F283,128)
    Type => "Config",
    UsedBy => "Lvr4",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "91",
    Lvr4FsInst => { #Structure Type: MemField;
      Name => "Lvr4FsInst",
      RegMem => "MemField",
      Width => "89", # Excel Formula: =calc_field_width_define("NPE_LEVEL_7_0_FS_INSTRUCTIONS_WIDTH")
      Position => "88:0", # Excel Formula: =calc_position(F281,E282,TRUE)
    },
    Lvr4ConstantSelect => { #Structure Type: MemField;
      Name => "Lvr4ConstantSelect",
      RegMem => "MemField",
      Width => "2",
      Position => "90:89", # Excel Formula: =calc_position(F282,E283)
    },
  },
  Lvr4ConstantsCfg => { #Structure Type: Mem;
    Name => "Lvr4ConstantsCfg",
    RegMem => "Mem",
    Address => "4B00000", # Excel Formula: =calc_mem_address(C281,A281,G284,L284)
    Width => "48", # Excel Formula: =calc_mem_width(E285:E285,M284,F285,-1)
    Type => "Config",
    UsedBy => "Lvr4",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "48",
    Lvr4Constants => { #Structure Type: MemField;
      Name => "Lvr4Constants",
      RegMem => "MemField",
      Description => "Selected constant is concatanated to the Lvr-in-databus ",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F284,E285,TRUE)
    },
  },
  Lvr4MacroCfg => { #Structure Type: Mem;
    Name => "Lvr4MacroCfg",
    RegMem => "Mem",
    Address => "4C00000", # Excel Formula: =calc_mem_address(C284,A284,G286,L286)
    Width => "31", # Excel Formula: =calc_mem_width(E287:E287,M286,F287,128)
    Type => "Config",
    UsedBy => "Lvr4",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "31",
    Lvr4MacroConfig => { #Structure Type: MemField;
      Name => "Lvr4MacroConfig",
      RegMem => "MemField",
      Width => "31", # Excel Formula: =calc_field_width_define("NPE_LEVEL_7_0_MACRO_CTRL_WIDTH")
      Position => "30:0", # Excel Formula: =calc_position(F286,E287,TRUE)
    },
  },
  Lvr4RegTcam0 => { #Structure Type: Mem;
    Name => "Lvr4RegTcam0",
    RegMem => "Mem",
    Address => "4D00000", # Excel Formula: =calc_mem_address(C286,A286,G288,L288)
    Width => "33", # Excel Formula: =calc_mem_width(E289:E291,"None",F291,-1)
    Type => "Config",
    UsedBy => "Lvr4",
    MemEntries => "32",
    MemWrapper => "TCAM",
    MemProtect => "None",
    AdditionalInfo => "RegTcam=Enabled,NumOfKeys=1,RegTcamPayloadWidth=16,NumSamplesBeforeEncoder=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    MemLogicalWidth => "33",
    Lvr4RegTcam0_mask => { #Structure Type: MemField;
      Name => "Lvr4RegTcam0_mask",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F288,E289,TRUE)
    },
    Lvr4RegTcam0_key => { #Structure Type: MemField;
      Name => "Lvr4RegTcam0_key",
      RegMem => "MemField",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F289,E290)
    },
    Lvr4RegTcam0_delete => { #Structure Type: MemField;
      Name => "Lvr4RegTcam0_delete",
      RegMem => "MemField",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F290,E291)
    },
  },
  Lvr4RegTcam0_mem => { #Structure Type: Mem;
    Name => "Lvr4RegTcam0_mem",
    RegMem => "Mem",
    Address => "4E00000", # Excel Formula: =calc_mem_address(C288,A288,G292,L292)
    Width => "16", # Excel Formula: =calc_mem_width(E293:E293,M292,F293,-1)
    Type => "Config",
    UsedBy => "Lvr4",
    MemEntries => "32",
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "16",
    Lvr4RegTcam0_mem_data => { #Structure Type: MemField;
      Name => "Lvr4RegTcam0_mem_data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F292,E293,TRUE)
    },
  },
  Lvr5FsInstructions => { #Structure Type: Mem;
    Name => "Lvr5FsInstructions",
    RegMem => "Mem",
    Address => "4F00000", # Excel Formula: =calc_mem_address(C292,A292,G294,L294)
    Width => "52", # Excel Formula: =calc_mem_width(E295:E296,M294,F296,128)
    Type => "Config",
    UsedBy => "Lvr5",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=2,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "52",
    Lvr5FsInst => { #Structure Type: MemField;
      Name => "Lvr5FsInst",
      RegMem => "MemField",
      Width => "50", # Excel Formula: =calc_field_width_define("NPE_LEVEL_8_0_FS_INSTRUCTIONS_WIDTH")
      Position => "49:0", # Excel Formula: =calc_position(F294,E295,TRUE)
    },
    Lvr5ConstantSelect => { #Structure Type: MemField;
      Name => "Lvr5ConstantSelect",
      RegMem => "MemField",
      Width => "2",
      Position => "51:50", # Excel Formula: =calc_position(F295,E296)
    },
  },
  Lvr5ConstantsCfg => { #Structure Type: Mem;
    Name => "Lvr5ConstantsCfg",
    RegMem => "Mem",
    Address => "5000000", # Excel Formula: =calc_mem_address(C294,A294,G297,L297)
    Width => "48", # Excel Formula: =calc_mem_width(E298:E298,M297,F298,-1)
    Type => "Config",
    UsedBy => "Lvr5",
    MemEntries => "4",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PortErrPropagate=Disabled",
    MemLogicalWidth => "48",
    Lvr5Constants => { #Structure Type: MemField;
      Name => "Lvr5Constants",
      RegMem => "MemField",
      Description => "Selected constant is concatanated to the Lvr-in-databus ",
      Width => "48",
      Position => "47:0", # Excel Formula: =calc_position(F297,E298,TRUE)
    },
  },
  Lvr5MacroCfg => { #Structure Type: Mem;
    Name => "Lvr5MacroCfg",
    RegMem => "Mem",
    Address => "5100000", # Excel Formula: =calc_mem_address(C297,A297,G299,L299)
    Width => "42", # Excel Formula: =calc_mem_width(E300:E300,M299,F300,128)
    Type => "Config",
    UsedBy => "Lvr5",
    MemEntries => "32", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_LOCAL_MACROS")
    MemWrapper => "1P",
    MemProtect => "None",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,FfBased=Enabled,WriteActivityFactor=0,ReadActivityFactor=60,PortErrPropagate=Disabled",
    MemLogicalWidth => "42",
    Lvr5MacroConfig => { #Structure Type: MemField;
      Name => "Lvr5MacroConfig",
      RegMem => "MemField",
      Description => "TBD Change to real value",
      Width => "42", # Excel Formula: =calc_field_width_define("NPE_LEVEL_8_0_MACRO_CTRL_WIDTH")
      Position => "41:0", # Excel Formula: =calc_position(F299,E300,TRUE)
    },
  },
  SharedTable0 => { #Structure Type: Mem;
    Name => "SharedTable0",
    RegMem => "Mem",
    Address => "5200000", # Excel Formula: =calc_mem_address(C299,A299,G301,L301)
    Width => "33", # Excel Formula: =calc_mem_width(E302:E302,M301,F302,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "32",
    SharedTable0Data => { #Structure Type: MemField;
      Name => "SharedTable0Data",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F301,E302,TRUE)
    },
  },
  SharedTable1 => { #Structure Type: Mem;
    Name => "SharedTable1",
    RegMem => "Mem",
    Address => "5300000", # Excel Formula: =calc_mem_address(C301,A301,G303,L303)
    Width => "17", # Excel Formula: =calc_mem_width(E304:E304,M303,F304,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "16",
    SharedTable1Data => { #Structure Type: MemField;
      Name => "SharedTable1Data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F303,E304,TRUE)
    },
  },
  SharedTable2 => { #Structure Type: Mem;
    Name => "SharedTable2",
    RegMem => "Mem",
    Address => "5400000", # Excel Formula: =calc_mem_address(C303,A303,G305,L305)
    Width => "33", # Excel Formula: =calc_mem_width(E306:E306,M305,F306,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "32",
    SharedTable2Data => { #Structure Type: MemField;
      Name => "SharedTable2Data",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F305,E306,TRUE)
    },
  },
  SharedTable3 => { #Structure Type: Mem;
    Name => "SharedTable3",
    RegMem => "Mem",
    Address => "5500000", # Excel Formula: =calc_mem_address(C305,A305,G307,L307)
    Width => "17", # Excel Formula: =calc_mem_width(E308:E308,M307,F308,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "16",
    SharedTable3Data => { #Structure Type: MemField;
      Name => "SharedTable3Data",
      RegMem => "MemField",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F307,E308,TRUE)
    },
  },
  SharedTable4 => { #Structure Type: Mem;
    Name => "SharedTable4",
    RegMem => "Mem",
    Address => "5600000", # Excel Formula: =calc_mem_address(C307,A307,G309,L309)
    Width => "33", # Excel Formula: =calc_mem_width(E310:E310,M309,F310,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "2048",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "32",
    SharedTable7Data => { #Structure Type: MemField;
      Name => "SharedTable7Data",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F309,E310,TRUE)
    },
  },
  SharedTable5 => { #Structure Type: Mem;
    Name => "SharedTable5",
    RegMem => "Mem",
    Address => "5700000", # Excel Formula: =calc_mem_address(C309,A309,G311,L311)
    Width => "97", # Excel Formula: =calc_mem_width(E312:E312,M311,F312,128)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "512",
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SplitProtWidth=128,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "96",
    SharedTable8Data => { #Structure Type: MemField;
      Name => "SharedTable8Data",
      RegMem => "MemField",
      Width => "96",
      Position => "95:0", # Excel Formula: =calc_position(F311,E312,TRUE)
    },
  },
  SharedTable6 => { #Structure Type: Mem;
    Name => "SharedTable6",
    RegMem => "Mem",
    Address => "5800000", # Excel Formula: =calc_mem_address(C311,A311,G313,L313)
    Width => "33", # Excel Formula: =calc_mem_width(E314:E314,M313,F314,-1)
    Type => "Config",
    UsedBy => "STBL",
    MemEntries => "2048", # Excel Formula: =2*1024
    MemWrapper => "1P",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=60",
    MemLogicalWidth => "32",
    SharedTable9Data => { #Structure Type: MemField;
      Name => "SharedTable9Data",
      RegMem => "MemField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F313,E314,TRUE)
    },
  },
  ThreadMemory => { #Structure Type: Mem;
    Name => "ThreadMemory",
    RegMem => "Mem",
    Address => "5900000", # Excel Formula: =calc_mem_address(C313,A313,G315,L315)
    Width => "1860", # Excel Formula: =calc_mem_width(E316:E316,M315,F316,512)
    Type => "Dynamic",
    UsedBy => "NPE",
    MemEntries => "192", # Excel Formula: =calc_field_width_define("NPE_NUMBER_OF_THREAD_INDEXES")
    MemWrapper => "1R1W",
    MemProtect => "Parity",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,SampleWriteBeforeProt=2,SplitProtWidth=512,PortErrPropagate=Enabled,WriteActivityFactor=60,ReadActivityFactor=60,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    MemLogicalWidth => "1856",
    ThreadMemoryData => { #Structure Type: MemField;
      Name => "ThreadMemoryData",
      RegMem => "MemField",
      Width => "1856", # Excel Formula: =calc_field_width_define("NPE_PD_WIDTH")
      Position => "1855:0", # Excel Formula: =calc_position(F315,E316,TRUE)
    },
  },
};
