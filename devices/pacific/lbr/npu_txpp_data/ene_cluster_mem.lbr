$block{ene_cluster} = {
  Defines_db => "Y:\\Development\\trunk\\Moriah\\ASIC\\design\\NPU\\txpp\\enc_eng_defines.v",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "13",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    EneInterruptSignals0Summary => { #Structure Type: RegField;
      Name => "EneInterruptSignals0Summary",
      RegMem => "RegField",
      Description => "When this bit is set, EneInterruptSignals0 has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
    EneInterruptSignals1Summary => { #Structure Type: RegField;
      Name => "EneInterruptSignals1Summary",
      RegMem => "RegField",
      Description => "When this bit is set, EneInterruptSignals1 has asserted interrupt",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
    },
    EneInterruptSignals2Summary => { #Structure Type: RegField;
      Name => "EneInterruptSignals2Summary",
      RegMem => "RegField",
      Description => "When this bit is set, EneInterruptSignals2 has asserted interrupt",
      Width => "1",
      Position => "3",
      Type => "Interrupt",
    },
    EneInterruptSignals3Summary => { #Structure Type: RegField;
      Name => "EneInterruptSignals3Summary",
      RegMem => "RegField",
      Description => "When this bit is set, EneInterruptSignals3 has asserted interrupt",
      Width => "1",
      Position => "4",
      Type => "Interrupt",
    },
    EneInterruptSignals4Summary => { #Structure Type: RegField;
      Name => "EneInterruptSignals4Summary",
      RegMem => "RegField",
      Description => "When this bit is set, EneInterruptSignals4 has asserted interrupt",
      Width => "1",
      Position => "5",
      Type => "Interrupt",
    },
    EneInterruptSignals5Summary => { #Structure Type: RegField;
      Name => "EneInterruptSignals5Summary",
      RegMem => "RegField",
      Description => "When this bit is set, EneInterruptSignals5 has asserted interrupt",
      Width => "1",
      Position => "6",
      Type => "Interrupt",
    },
    EneInterruptSignals6Summary => { #Structure Type: RegField;
      Name => "EneInterruptSignals6Summary",
      RegMem => "RegField",
      Description => "When this bit is set, EneInterruptSignals6 has asserted interrupt",
      Width => "1",
      Position => "7",
      Type => "Interrupt",
    },
    EneInterruptSignals7Summary => { #Structure Type: RegField;
      Name => "EneInterruptSignals7Summary",
      RegMem => "RegField",
      Description => "When this bit is set, EneInterruptSignals7 has asserted interrupt",
      Width => "1",
      Position => "8",
      Type => "Interrupt",
    },
    EneInterruptSignals8Summary => { #Structure Type: RegField;
      Name => "EneInterruptSignals8Summary",
      RegMem => "RegField",
      Description => "When this bit is set, EneInterruptSignals8 has asserted interrupt",
      Width => "1",
      Position => "9",
      Type => "Interrupt",
    },
    EneInterruptSignals9Summary => { #Structure Type: RegField;
      Name => "EneInterruptSignals9Summary",
      RegMem => "RegField",
      Description => "When this bit is set, EneInterruptSignals9 has asserted interrupt",
      Width => "1",
      Position => "10",
      Type => "Interrupt",
    },
    EneInterruptSignals10Summary => { #Structure Type: RegField;
      Name => "EneInterruptSignals10Summary",
      RegMem => "RegField",
      Description => "When this bit is set, EneInterruptSignals10 has asserted interrupt",
      Width => "1",
      Position => "11",
      Type => "Interrupt",
    },
    EneInterruptSignals11Summary => { #Structure Type: RegField;
      Name => "EneInterruptSignals11Summary",
      RegMem => "RegField",
      Description => "When this bit is set, EneInterruptSignals11 has asserted interrupt",
      Width => "1",
      Position => "12",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks Ecc_1bErrInterrupt",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks Ecc_2bErrInterrupt",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks ParityErrInterrupt",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "12",
    Type => "Config",
    Ene0MacroMemoryEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene0MacroMemoryEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene1MacroMemoryEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene1MacroMemoryEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene2MacroMemoryEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene2MacroMemoryEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene3MacroMemoryEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene3MacroMemoryEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene4MacroMemoryEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene4MacroMemoryEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene5MacroMemoryEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene5MacroMemoryEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene6MacroMemoryEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene6MacroMemoryEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene7MacroMemoryEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene7MacroMemoryEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene8MacroMemoryEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene8MacroMemoryEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene9MacroMemoryEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene9MacroMemoryEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene10MacroMemoryEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene10MacroMemoryEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene11MacroMemoryEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene11MacroMemoryEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "12",
    Type => "Config",
    Ene0MacroMemoryEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene0MacroMemoryEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene1MacroMemoryEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene1MacroMemoryEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene2MacroMemoryEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene2MacroMemoryEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene3MacroMemoryEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene3MacroMemoryEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene4MacroMemoryEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene4MacroMemoryEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene5MacroMemoryEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene5MacroMemoryEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene6MacroMemoryEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene6MacroMemoryEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene7MacroMemoryEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene7MacroMemoryEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene8MacroMemoryEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene8MacroMemoryEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene9MacroMemoryEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene9MacroMemoryEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene10MacroMemoryEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene10MacroMemoryEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Ene11MacroMemoryEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Ene11MacroMemoryEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInitiateRegister",
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "12",
    Type => "Config",
    Ene0MacroMemoryEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Ene0MacroMemoryEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene1MacroMemoryEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Ene1MacroMemoryEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene2MacroMemoryEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Ene2MacroMemoryEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene3MacroMemoryEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Ene3MacroMemoryEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene4MacroMemoryEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Ene4MacroMemoryEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene5MacroMemoryEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Ene5MacroMemoryEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene6MacroMemoryEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Ene6MacroMemoryEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene7MacroMemoryEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Ene7MacroMemoryEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene8MacroMemoryEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Ene8MacroMemoryEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene9MacroMemoryEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Ene9MacroMemoryEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene10MacroMemoryEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Ene10MacroMemoryEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene11MacroMemoryEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Ene11MacroMemoryEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInitiateRegister",
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "12",
    Type => "Config",
    Ene0MacroMemoryEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Ene0MacroMemoryEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene1MacroMemoryEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Ene1MacroMemoryEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene2MacroMemoryEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Ene2MacroMemoryEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene3MacroMemoryEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Ene3MacroMemoryEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene4MacroMemoryEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Ene4MacroMemoryEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene5MacroMemoryEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Ene5MacroMemoryEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene6MacroMemoryEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Ene6MacroMemoryEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene7MacroMemoryEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Ene7MacroMemoryEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene8MacroMemoryEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Ene8MacroMemoryEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene9MacroMemoryEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Ene9MacroMemoryEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene10MacroMemoryEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Ene10MacroMemoryEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Ene11MacroMemoryEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Ene11MacroMemoryEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "12",
    Type => "ReadOnly",
    Ene0MacroMemoryErrInt => { #Structure Type: RegField;
      Name => "Ene0MacroMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    Ene1MacroMemoryErrInt => { #Structure Type: RegField;
      Name => "Ene1MacroMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    Ene2MacroMemoryErrInt => { #Structure Type: RegField;
      Name => "Ene2MacroMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    Ene3MacroMemoryErrInt => { #Structure Type: RegField;
      Name => "Ene3MacroMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    Ene4MacroMemoryErrInt => { #Structure Type: RegField;
      Name => "Ene4MacroMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    Ene5MacroMemoryErrInt => { #Structure Type: RegField;
      Name => "Ene5MacroMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    Ene6MacroMemoryErrInt => { #Structure Type: RegField;
      Name => "Ene6MacroMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    Ene7MacroMemoryErrInt => { #Structure Type: RegField;
      Name => "Ene7MacroMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    Ene8MacroMemoryErrInt => { #Structure Type: RegField;
      Name => "Ene8MacroMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    Ene9MacroMemoryErrInt => { #Structure Type: RegField;
      Name => "Ene9MacroMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    Ene10MacroMemoryErrInt => { #Structure Type: RegField;
      Name => "Ene10MacroMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    Ene11MacroMemoryErrInt => { #Structure Type: RegField;
      Name => "Ene11MacroMemoryErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "10",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "8",
      Position => "7:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "9:8",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "5",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "4",
      Position => "3:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrDebug",
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_1bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrDebug",
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_2bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  MbistPassStatus => { #Structure Type: Reg; Skip Register;
    Name => "MbistPassStatus",
    RegMem => "Reg",
    Address => "39",
    Description => "MBIST pass status",
    Width => "24",
    Type => "ReadOnly",
    BistDonePassOut => { #Structure Type: RegField;
      Name => "BistDonePassOut",
      RegMem => "RegField",
      Description => "When this bit is set, MBIST passed",
      Width => "24",
      Position => "23:0",
      Type => "Status",
      UsedBy => "MEM",
    },
  },
  MbistFailStatus => { #Structure Type: Reg; Skip Register;
    Name => "MbistFailStatus",
    RegMem => "Reg",
    Address => "3A",
    Description => "MBIST fail status",
    Width => "24",
    Type => "ReadOnly",
    BistDoneFailOut => { #Structure Type: RegField;
      Name => "BistDoneFailOut",
      RegMem => "RegField",
      Description => "When this bit is set, MBIST failed",
      Width => "24",
      Position => "23:0",
      Type => "Status",
      UsedBy => "MEM",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
      DefaultValue => "b0",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "3", # Excel Formula: =calc_reg_width(E25:E27,F27)
    Type => "Config",
    CoreBistRprMode => { #Structure Type: RegField;
      Name => "CoreBistRprMode",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistRun => { #Structure Type: RegField;
      Name => "CoreBistRun",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistPtrnFill => { #Structure Type: RegField;
      Name => "CoreBistPtrnFill",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E29:E29,F29)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C28,A28,G28)
    Description => "Power Down Configuration for the block",
    Width => "128", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C30,A30,G30)
    Width => "39", # Excel Formula: =calc_reg_width(E33:E37,F37)
    Type => "Config",
    PmroExecute => { #Structure Type: RegField;
      Name => "PmroExecute",
      RegMem => "RegField",
      Description => "0->1: execute pmro command.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroCmd => { #Structure Type: RegField;
      Name => "PmroCmd",
      RegMem => "RegField",
      Description => "Pmro command to execute:
0: reset.
1: write.
2: read.
3: invalid.",
      Width => "2",
      Position => "2:1", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroSbusReset => { #Structure Type: RegField;
      Name => "PmroSbusReset",
      RegMem => "RegField",
      Description => "Reset pmro sbus chain. Need to set to 0 before starting access to pmro registers.",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroAddr => { #Structure Type: RegField;
      Name => "PmroAddr",
      RegMem => "RegField",
      Description => "PMRO register address:
0 - control register, 8b, def: 0x0.
1 - SVT Configuration Register, 16b, def: 0xFFFF.
2 - LVT Configuration Register, 16b, def: 0xFFFF.
3 - ULVT Configuration Register, 16b, def: 0xFFFF.
4 - Interconnect Configuration Register, 16b, def: 0xFFFF.
5 - Reference Clock Counter Register, 24b, def: 0xFFF000.
6 - Oscillator Counter Register, 24b, def: 0x000000.
7 - SBus ID register, read as 0x0B.
Set to '0' on reset command.",
      Width => "3",
      Position => "6:4", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroData => { #Structure Type: RegField;
      Name => "PmroData",
      RegMem => "RegField",
      Description => "PMRO data, set to 0x0 on reset and read command.",
      Width => "32",
      Position => "38:7", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C32,A32,G32)
    Width => "34", # Excel Formula: =calc_reg_width(E39:E41,F41)
    Type => "ReadOnly",
    PmroRdata => { #Structure Type: RegField;
      Name => "PmroRdata",
      RegMem => "RegField",
      Description => "Read data from pmro. Valid when PmroFinish=1 and PmroFailed=0.",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFailed => { #Structure Type: RegField;
      Name => "PmroFailed",
      RegMem => "RegField",
      Description => "Pmro command failed. Valid only when PmroFinish=1.",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F39,E40)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFinish => { #Structure Type: RegField;
      Name => "PmroFinish",
      RegMem => "RegField",
      Description => "Pmro command finished.",
      Width => "1",
      Position => "33", # Excel Formula: =calc_position(F40,E41)
      Type => "Event",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C38,A38,G38)
    Description => "aaa",
    Width => "11", # Excel Formula: =calc_reg_width(E43:E44,F44)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "aaa",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F42,E43,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "aaa",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C42,A42,G42)
    Description => "aaa",
    Width => "32", # Excel Formula: =calc_reg_width(E46:E46,F46)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "aaa",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F45,E46,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C45,A45,G45)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E48:E48,F48)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F47,E48,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  FabricMode => { #Structure Type: Reg;
    Name => "FabricMode",
    RegMem => "Reg",
    Address => "100",
    Description => "Set the cluster to fabric mode",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "Config",
    FabricMode_r => { #Structure Type: RegField;
      Name => "FabricMode_r",
      RegMem => "RegField",
      Description => "Affects the arbitration of the sop word at the output of the cluster.
0: network mode
1: fabric mode",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "txpp",
      DefaultValue => "h0",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals0 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 20;
    Name => "EneInterruptSignals[12]",
    RegMem => "Reg",
    Address => "101", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Interrupt signals from the Encapsulation Engines",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "0",
    EneTtlCountExpiredInt0 => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]",
      RegMem => "RegField",
      Description => "Asserted if a word has been processed for 255 cycles in the Encapsulation Engine",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "txpp",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals1 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 20;
    Name => "EneInterruptSignals[12]",
    RegMem => "Reg",
    Address => "102",
    Description => "Interrupt signals from the Encapsulation Engines",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "1",
    EneTtlCountExpiredInt1 => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]",
      RegMem => "RegField",
      Description => "Asserted if a word has been processed for 255 cycles in the Encapsulation Engine",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "txpp",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals2 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 20;
    Name => "EneInterruptSignals[12]",
    RegMem => "Reg",
    Address => "103",
    Description => "Interrupt signals from the Encapsulation Engines",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "2",
    EneTtlCountExpiredInt2 => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]",
      RegMem => "RegField",
      Description => "Asserted if a word has been processed for 255 cycles in the Encapsulation Engine",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "txpp",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals3 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 20;
    Name => "EneInterruptSignals[12]",
    RegMem => "Reg",
    Address => "104",
    Description => "Interrupt signals from the Encapsulation Engines",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "3",
    EneTtlCountExpiredInt3 => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]",
      RegMem => "RegField",
      Description => "Asserted if a word has been processed for 255 cycles in the Encapsulation Engine",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "txpp",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals4 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 20;
    Name => "EneInterruptSignals[12]",
    RegMem => "Reg",
    Address => "105",
    Description => "Interrupt signals from the Encapsulation Engines",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "4",
    EneTtlCountExpiredInt4 => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]",
      RegMem => "RegField",
      Description => "Asserted if a word has been processed for 255 cycles in the Encapsulation Engine",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "txpp",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals5 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 20;
    Name => "EneInterruptSignals[12]",
    RegMem => "Reg",
    Address => "106",
    Description => "Interrupt signals from the Encapsulation Engines",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "5",
    EneTtlCountExpiredInt5 => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]",
      RegMem => "RegField",
      Description => "Asserted if a word has been processed for 255 cycles in the Encapsulation Engine",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "txpp",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals6 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 20;
    Name => "EneInterruptSignals[12]",
    RegMem => "Reg",
    Address => "107",
    Description => "Interrupt signals from the Encapsulation Engines",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "6",
    EneTtlCountExpiredInt6 => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]",
      RegMem => "RegField",
      Description => "Asserted if a word has been processed for 255 cycles in the Encapsulation Engine",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "txpp",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals7 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 20;
    Name => "EneInterruptSignals[12]",
    RegMem => "Reg",
    Address => "108",
    Description => "Interrupt signals from the Encapsulation Engines",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "7",
    EneTtlCountExpiredInt7 => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]",
      RegMem => "RegField",
      Description => "Asserted if a word has been processed for 255 cycles in the Encapsulation Engine",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "txpp",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals8 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 20;
    Name => "EneInterruptSignals[12]",
    RegMem => "Reg",
    Address => "109",
    Description => "Interrupt signals from the Encapsulation Engines",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "8",
    EneTtlCountExpiredInt8 => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]",
      RegMem => "RegField",
      Description => "Asserted if a word has been processed for 255 cycles in the Encapsulation Engine",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "txpp",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals9 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 20;
    Name => "EneInterruptSignals[12]",
    RegMem => "Reg",
    Address => "10A",
    Description => "Interrupt signals from the Encapsulation Engines",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "9",
    EneTtlCountExpiredInt9 => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]",
      RegMem => "RegField",
      Description => "Asserted if a word has been processed for 255 cycles in the Encapsulation Engine",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "txpp",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals10 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 20;
    Name => "EneInterruptSignals[12]",
    RegMem => "Reg",
    Address => "10B",
    Description => "Interrupt signals from the Encapsulation Engines",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "10",
    EneTtlCountExpiredInt10 => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]",
      RegMem => "RegField",
      Description => "Asserted if a word has been processed for 255 cycles in the Encapsulation Engine",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "txpp",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals11 => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 20;
    Name => "EneInterruptSignals[12]",
    RegMem => "Reg",
    Address => "10C",
    Description => "Interrupt signals from the Encapsulation Engines",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "Interrupt",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "11",
    EneTtlCountExpiredInt11 => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]",
      RegMem => "RegField",
      Description => "Asserted if a word has been processed for 255 cycles in the Encapsulation Engine",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Interrupt",
      UsedBy => "txpp",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals0Mask => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Mask",
    RegMem => "Reg",
    Address => "10D",
    Description => "This register masks EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "0",
    EneTtlCountExpiredInt0Mask => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Mask",
      RegMem => "RegField",
      Description => "This field masks EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals1Mask => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Mask",
    RegMem => "Reg",
    Address => "10E",
    Description => "This register masks EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "1",
    EneTtlCountExpiredInt1Mask => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Mask",
      RegMem => "RegField",
      Description => "This field masks EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals2Mask => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Mask",
    RegMem => "Reg",
    Address => "10F",
    Description => "This register masks EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "2",
    EneTtlCountExpiredInt2Mask => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Mask",
      RegMem => "RegField",
      Description => "This field masks EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals3Mask => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Mask",
    RegMem => "Reg",
    Address => "110",
    Description => "This register masks EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "3",
    EneTtlCountExpiredInt3Mask => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Mask",
      RegMem => "RegField",
      Description => "This field masks EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals4Mask => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Mask",
    RegMem => "Reg",
    Address => "111",
    Description => "This register masks EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "4",
    EneTtlCountExpiredInt4Mask => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Mask",
      RegMem => "RegField",
      Description => "This field masks EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals5Mask => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Mask",
    RegMem => "Reg",
    Address => "112",
    Description => "This register masks EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "5",
    EneTtlCountExpiredInt5Mask => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Mask",
      RegMem => "RegField",
      Description => "This field masks EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals6Mask => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Mask",
    RegMem => "Reg",
    Address => "113",
    Description => "This register masks EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "6",
    EneTtlCountExpiredInt6Mask => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Mask",
      RegMem => "RegField",
      Description => "This field masks EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals7Mask => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Mask",
    RegMem => "Reg",
    Address => "114",
    Description => "This register masks EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "7",
    EneTtlCountExpiredInt7Mask => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Mask",
      RegMem => "RegField",
      Description => "This field masks EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals8Mask => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Mask",
    RegMem => "Reg",
    Address => "115",
    Description => "This register masks EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "8",
    EneTtlCountExpiredInt8Mask => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Mask",
      RegMem => "RegField",
      Description => "This field masks EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals9Mask => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Mask",
    RegMem => "Reg",
    Address => "116",
    Description => "This register masks EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "9",
    EneTtlCountExpiredInt9Mask => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Mask",
      RegMem => "RegField",
      Description => "This field masks EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals10Mask => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Mask",
    RegMem => "Reg",
    Address => "117",
    Description => "This register masks EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "10",
    EneTtlCountExpiredInt10Mask => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Mask",
      RegMem => "RegField",
      Description => "This field masks EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals11Mask => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Mask",
    RegMem => "Reg",
    Address => "118",
    Description => "This register masks EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptMask",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "11",
    EneTtlCountExpiredInt11Mask => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Mask",
      RegMem => "RegField",
      Description => "This field masks EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals0Test => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Test",
    RegMem => "Reg",
    Address => "119",
    Description => "This register tests EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "0",
    EneTtlCountExpiredInt0Test => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Test",
      RegMem => "RegField",
      Description => "This field tests EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals1Test => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Test",
    RegMem => "Reg",
    Address => "11A",
    Description => "This register tests EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "1",
    EneTtlCountExpiredInt1Test => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Test",
      RegMem => "RegField",
      Description => "This field tests EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals2Test => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Test",
    RegMem => "Reg",
    Address => "11B",
    Description => "This register tests EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "2",
    EneTtlCountExpiredInt2Test => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Test",
      RegMem => "RegField",
      Description => "This field tests EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals3Test => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Test",
    RegMem => "Reg",
    Address => "11C",
    Description => "This register tests EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "3",
    EneTtlCountExpiredInt3Test => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Test",
      RegMem => "RegField",
      Description => "This field tests EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals4Test => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Test",
    RegMem => "Reg",
    Address => "11D",
    Description => "This register tests EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "4",
    EneTtlCountExpiredInt4Test => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Test",
      RegMem => "RegField",
      Description => "This field tests EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals5Test => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Test",
    RegMem => "Reg",
    Address => "11E",
    Description => "This register tests EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "5",
    EneTtlCountExpiredInt5Test => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Test",
      RegMem => "RegField",
      Description => "This field tests EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals6Test => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Test",
    RegMem => "Reg",
    Address => "11F",
    Description => "This register tests EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "6",
    EneTtlCountExpiredInt6Test => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Test",
      RegMem => "RegField",
      Description => "This field tests EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals7Test => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Test",
    RegMem => "Reg",
    Address => "120",
    Description => "This register tests EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "7",
    EneTtlCountExpiredInt7Test => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Test",
      RegMem => "RegField",
      Description => "This field tests EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals8Test => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Test",
    RegMem => "Reg",
    Address => "121",
    Description => "This register tests EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "8",
    EneTtlCountExpiredInt8Test => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Test",
      RegMem => "RegField",
      Description => "This field tests EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals9Test => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Test",
    RegMem => "Reg",
    Address => "122",
    Description => "This register tests EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "9",
    EneTtlCountExpiredInt9Test => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Test",
      RegMem => "RegField",
      Description => "This field tests EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals10Test => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Test",
    RegMem => "Reg",
    Address => "123",
    Description => "This register tests EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "10",
    EneTtlCountExpiredInt10Test => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Test",
      RegMem => "RegField",
      Description => "This field tests EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  EneInterruptSignals11Test => { #Structure Type: Reg; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 20; Skip Register;
    Name => "EneInterruptSignals[12]Test",
    RegMem => "Reg",
    Address => "124",
    Description => "This register tests EneInterruptSignals[12] interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E10:E10,F10)
    Type => "InterruptTest",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "12",
    ArrayIndex => "11",
    EneTtlCountExpiredInt11Test => { #Structure Type: RegField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 22;
      Name => "EneTtlCountExpiredInt[n]Test",
      RegMem => "RegField",
      Description => "This field tests EneTtlCountExpiredInt[n] interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
      DefaultSvConstraint => "h1",
    },
  },
  Ene0MacroMemory => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemory",
    RegMem => "Mem",
    Address => "100000",
    Description => "Holds the instructions of the encapsulation macros",
    Width => "52", # Excel Formula: =calc_mem_width(E12:E23,M11,F23,-1)
    Type => "Config",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=100",
    ArrayLength => "12",
    ArrayIndex => "0",
    MemLogicalWidth => "45",
    Ene0DataFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidth",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F11,E12,TRUE)
    },
    Ene0DataFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the Data FS when AttrOffSel equals 0.  in nibbles",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F12,E13)
    },
    Ene0ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F13,E14)
    },
    Ene0ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F14,E15)
    },
    Ene0LeftShiftSizeFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsWidth",
      RegMem => "MemField",
      Description => "The width used in the lft shift size FS in bits",
      Width => "3",
      Position => "25:23", # Excel Formula: =calc_position(F15,E16)
    },
    Ene0LeftShiftSizeFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the lft shift size FS in nibbles",
      Width => "8",
      Position => "33:26", # Excel Formula: =calc_position(F16,E17)
    },
    Ene0LeftShiftFsSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftFsSize",
      RegMem => "MemField",
      Description => "amount of bytes to shift the header to the left in bytes",
      Width => "4",
      Position => "37:34", # Excel Formula: =calc_position(F17,E18)
    },
    Ene0LeftShiftSel => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSel",
      RegMem => "MemField",
      Description => "indicates whether the amount of left shift of the header is determined by instruction(0) or by a value in the pkt attr bus (1)",
      Width => "1",
      Position => "38", # Excel Formula: =calc_position(F18,E19)
    },
    Ene0StoreEncapSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSize",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F19,E20)
    },
    Ene0StoreCsCommand => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommand",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F20,E21)
    },
    Ene0StartNextMacro => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacro",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F21,E22)
    },
    Ene0Op => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]Op",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F22,E23)
    },
  },
  Ene1MacroMemory => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemory",
    RegMem => "Mem",
    Address => "200000",
    Description => "Holds the instructions of the encapsulation macros",
    Width => "52", # Excel Formula: =calc_mem_width(E12:E23,M11,F23,-1)
    Type => "Config",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=100",
    ArrayLength => "12",
    ArrayIndex => "1",
    MemLogicalWidth => "45",
    Ene1DataFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidth",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F11,E12,TRUE)
    },
    Ene1DataFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the Data FS when AttrOffSel equals 0.  in nibbles",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F12,E13)
    },
    Ene1ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F13,E14)
    },
    Ene1ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F14,E15)
    },
    Ene1LeftShiftSizeFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsWidth",
      RegMem => "MemField",
      Description => "The width used in the lft shift size FS in bits",
      Width => "3",
      Position => "25:23", # Excel Formula: =calc_position(F15,E16)
    },
    Ene1LeftShiftSizeFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the lft shift size FS in nibbles",
      Width => "8",
      Position => "33:26", # Excel Formula: =calc_position(F16,E17)
    },
    Ene1LeftShiftFsSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftFsSize",
      RegMem => "MemField",
      Description => "amount of bytes to shift the header to the left in bytes",
      Width => "4",
      Position => "37:34", # Excel Formula: =calc_position(F17,E18)
    },
    Ene1LeftShiftSel => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSel",
      RegMem => "MemField",
      Description => "indicates whether the amount of left shift of the header is determined by instruction(0) or by a value in the pkt attr bus (1)",
      Width => "1",
      Position => "38", # Excel Formula: =calc_position(F18,E19)
    },
    Ene1StoreEncapSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSize",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F19,E20)
    },
    Ene1StoreCsCommand => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommand",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F20,E21)
    },
    Ene1StartNextMacro => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacro",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F21,E22)
    },
    Ene1Op => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]Op",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F22,E23)
    },
  },
  Ene2MacroMemory => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemory",
    RegMem => "Mem",
    Address => "300000",
    Description => "Holds the instructions of the encapsulation macros",
    Width => "52", # Excel Formula: =calc_mem_width(E12:E23,M11,F23,-1)
    Type => "Config",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=100",
    ArrayLength => "12",
    ArrayIndex => "2",
    MemLogicalWidth => "45",
    Ene2DataFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidth",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F11,E12,TRUE)
    },
    Ene2DataFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the Data FS when AttrOffSel equals 0.  in nibbles",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F12,E13)
    },
    Ene2ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F13,E14)
    },
    Ene2ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F14,E15)
    },
    Ene2LeftShiftSizeFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsWidth",
      RegMem => "MemField",
      Description => "The width used in the lft shift size FS in bits",
      Width => "3",
      Position => "25:23", # Excel Formula: =calc_position(F15,E16)
    },
    Ene2LeftShiftSizeFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the lft shift size FS in nibbles",
      Width => "8",
      Position => "33:26", # Excel Formula: =calc_position(F16,E17)
    },
    Ene2LeftShiftFsSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftFsSize",
      RegMem => "MemField",
      Description => "amount of bytes to shift the header to the left in bytes",
      Width => "4",
      Position => "37:34", # Excel Formula: =calc_position(F17,E18)
    },
    Ene2LeftShiftSel => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSel",
      RegMem => "MemField",
      Description => "indicates whether the amount of left shift of the header is determined by instruction(0) or by a value in the pkt attr bus (1)",
      Width => "1",
      Position => "38", # Excel Formula: =calc_position(F18,E19)
    },
    Ene2StoreEncapSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSize",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F19,E20)
    },
    Ene2StoreCsCommand => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommand",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F20,E21)
    },
    Ene2StartNextMacro => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacro",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F21,E22)
    },
    Ene2Op => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]Op",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F22,E23)
    },
  },
  Ene3MacroMemory => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemory",
    RegMem => "Mem",
    Address => "400000",
    Description => "Holds the instructions of the encapsulation macros",
    Width => "52", # Excel Formula: =calc_mem_width(E12:E23,M11,F23,-1)
    Type => "Config",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=100",
    ArrayLength => "12",
    ArrayIndex => "3",
    MemLogicalWidth => "45",
    Ene3DataFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidth",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F11,E12,TRUE)
    },
    Ene3DataFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the Data FS when AttrOffSel equals 0.  in nibbles",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F12,E13)
    },
    Ene3ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F13,E14)
    },
    Ene3ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F14,E15)
    },
    Ene3LeftShiftSizeFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsWidth",
      RegMem => "MemField",
      Description => "The width used in the lft shift size FS in bits",
      Width => "3",
      Position => "25:23", # Excel Formula: =calc_position(F15,E16)
    },
    Ene3LeftShiftSizeFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the lft shift size FS in nibbles",
      Width => "8",
      Position => "33:26", # Excel Formula: =calc_position(F16,E17)
    },
    Ene3LeftShiftFsSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftFsSize",
      RegMem => "MemField",
      Description => "amount of bytes to shift the header to the left in bytes",
      Width => "4",
      Position => "37:34", # Excel Formula: =calc_position(F17,E18)
    },
    Ene3LeftShiftSel => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSel",
      RegMem => "MemField",
      Description => "indicates whether the amount of left shift of the header is determined by instruction(0) or by a value in the pkt attr bus (1)",
      Width => "1",
      Position => "38", # Excel Formula: =calc_position(F18,E19)
    },
    Ene3StoreEncapSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSize",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F19,E20)
    },
    Ene3StoreCsCommand => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommand",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F20,E21)
    },
    Ene3StartNextMacro => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacro",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F21,E22)
    },
    Ene3Op => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]Op",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F22,E23)
    },
  },
  Ene4MacroMemory => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemory",
    RegMem => "Mem",
    Address => "500000",
    Description => "Holds the instructions of the encapsulation macros",
    Width => "52", # Excel Formula: =calc_mem_width(E12:E23,M11,F23,-1)
    Type => "Config",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=100",
    ArrayLength => "12",
    ArrayIndex => "4",
    MemLogicalWidth => "45",
    Ene4DataFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidth",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F11,E12,TRUE)
    },
    Ene4DataFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the Data FS when AttrOffSel equals 0.  in nibbles",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F12,E13)
    },
    Ene4ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F13,E14)
    },
    Ene4ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F14,E15)
    },
    Ene4LeftShiftSizeFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsWidth",
      RegMem => "MemField",
      Description => "The width used in the lft shift size FS in bits",
      Width => "3",
      Position => "25:23", # Excel Formula: =calc_position(F15,E16)
    },
    Ene4LeftShiftSizeFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the lft shift size FS in nibbles",
      Width => "8",
      Position => "33:26", # Excel Formula: =calc_position(F16,E17)
    },
    Ene4LeftShiftFsSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftFsSize",
      RegMem => "MemField",
      Description => "amount of bytes to shift the header to the left in bytes",
      Width => "4",
      Position => "37:34", # Excel Formula: =calc_position(F17,E18)
    },
    Ene4LeftShiftSel => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSel",
      RegMem => "MemField",
      Description => "indicates whether the amount of left shift of the header is determined by instruction(0) or by a value in the pkt attr bus (1)",
      Width => "1",
      Position => "38", # Excel Formula: =calc_position(F18,E19)
    },
    Ene4StoreEncapSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSize",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F19,E20)
    },
    Ene4StoreCsCommand => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommand",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F20,E21)
    },
    Ene4StartNextMacro => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacro",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F21,E22)
    },
    Ene4Op => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]Op",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F22,E23)
    },
  },
  Ene5MacroMemory => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemory",
    RegMem => "Mem",
    Address => "600000",
    Description => "Holds the instructions of the encapsulation macros",
    Width => "52", # Excel Formula: =calc_mem_width(E12:E23,M11,F23,-1)
    Type => "Config",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=100",
    ArrayLength => "12",
    ArrayIndex => "5",
    MemLogicalWidth => "45",
    Ene5DataFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidth",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F11,E12,TRUE)
    },
    Ene5DataFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the Data FS when AttrOffSel equals 0.  in nibbles",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F12,E13)
    },
    Ene5ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F13,E14)
    },
    Ene5ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F14,E15)
    },
    Ene5LeftShiftSizeFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsWidth",
      RegMem => "MemField",
      Description => "The width used in the lft shift size FS in bits",
      Width => "3",
      Position => "25:23", # Excel Formula: =calc_position(F15,E16)
    },
    Ene5LeftShiftSizeFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the lft shift size FS in nibbles",
      Width => "8",
      Position => "33:26", # Excel Formula: =calc_position(F16,E17)
    },
    Ene5LeftShiftFsSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftFsSize",
      RegMem => "MemField",
      Description => "amount of bytes to shift the header to the left in bytes",
      Width => "4",
      Position => "37:34", # Excel Formula: =calc_position(F17,E18)
    },
    Ene5LeftShiftSel => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSel",
      RegMem => "MemField",
      Description => "indicates whether the amount of left shift of the header is determined by instruction(0) or by a value in the pkt attr bus (1)",
      Width => "1",
      Position => "38", # Excel Formula: =calc_position(F18,E19)
    },
    Ene5StoreEncapSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSize",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F19,E20)
    },
    Ene5StoreCsCommand => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommand",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F20,E21)
    },
    Ene5StartNextMacro => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacro",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F21,E22)
    },
    Ene5Op => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]Op",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F22,E23)
    },
  },
  Ene6MacroMemory => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemory",
    RegMem => "Mem",
    Address => "700000",
    Description => "Holds the instructions of the encapsulation macros",
    Width => "52", # Excel Formula: =calc_mem_width(E12:E23,M11,F23,-1)
    Type => "Config",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=100",
    ArrayLength => "12",
    ArrayIndex => "6",
    MemLogicalWidth => "45",
    Ene6DataFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidth",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F11,E12,TRUE)
    },
    Ene6DataFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the Data FS when AttrOffSel equals 0.  in nibbles",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F12,E13)
    },
    Ene6ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F13,E14)
    },
    Ene6ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F14,E15)
    },
    Ene6LeftShiftSizeFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsWidth",
      RegMem => "MemField",
      Description => "The width used in the lft shift size FS in bits",
      Width => "3",
      Position => "25:23", # Excel Formula: =calc_position(F15,E16)
    },
    Ene6LeftShiftSizeFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the lft shift size FS in nibbles",
      Width => "8",
      Position => "33:26", # Excel Formula: =calc_position(F16,E17)
    },
    Ene6LeftShiftFsSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftFsSize",
      RegMem => "MemField",
      Description => "amount of bytes to shift the header to the left in bytes",
      Width => "4",
      Position => "37:34", # Excel Formula: =calc_position(F17,E18)
    },
    Ene6LeftShiftSel => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSel",
      RegMem => "MemField",
      Description => "indicates whether the amount of left shift of the header is determined by instruction(0) or by a value in the pkt attr bus (1)",
      Width => "1",
      Position => "38", # Excel Formula: =calc_position(F18,E19)
    },
    Ene6StoreEncapSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSize",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F19,E20)
    },
    Ene6StoreCsCommand => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommand",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F20,E21)
    },
    Ene6StartNextMacro => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacro",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F21,E22)
    },
    Ene6Op => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]Op",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F22,E23)
    },
  },
  Ene7MacroMemory => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemory",
    RegMem => "Mem",
    Address => "800000",
    Description => "Holds the instructions of the encapsulation macros",
    Width => "52", # Excel Formula: =calc_mem_width(E12:E23,M11,F23,-1)
    Type => "Config",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=100",
    ArrayLength => "12",
    ArrayIndex => "7",
    MemLogicalWidth => "45",
    Ene7DataFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidth",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F11,E12,TRUE)
    },
    Ene7DataFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the Data FS when AttrOffSel equals 0.  in nibbles",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F12,E13)
    },
    Ene7ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F13,E14)
    },
    Ene7ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F14,E15)
    },
    Ene7LeftShiftSizeFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsWidth",
      RegMem => "MemField",
      Description => "The width used in the lft shift size FS in bits",
      Width => "3",
      Position => "25:23", # Excel Formula: =calc_position(F15,E16)
    },
    Ene7LeftShiftSizeFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the lft shift size FS in nibbles",
      Width => "8",
      Position => "33:26", # Excel Formula: =calc_position(F16,E17)
    },
    Ene7LeftShiftFsSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftFsSize",
      RegMem => "MemField",
      Description => "amount of bytes to shift the header to the left in bytes",
      Width => "4",
      Position => "37:34", # Excel Formula: =calc_position(F17,E18)
    },
    Ene7LeftShiftSel => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSel",
      RegMem => "MemField",
      Description => "indicates whether the amount of left shift of the header is determined by instruction(0) or by a value in the pkt attr bus (1)",
      Width => "1",
      Position => "38", # Excel Formula: =calc_position(F18,E19)
    },
    Ene7StoreEncapSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSize",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F19,E20)
    },
    Ene7StoreCsCommand => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommand",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F20,E21)
    },
    Ene7StartNextMacro => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacro",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F21,E22)
    },
    Ene7Op => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]Op",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F22,E23)
    },
  },
  Ene8MacroMemory => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemory",
    RegMem => "Mem",
    Address => "900000",
    Description => "Holds the instructions of the encapsulation macros",
    Width => "52", # Excel Formula: =calc_mem_width(E12:E23,M11,F23,-1)
    Type => "Config",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=100",
    ArrayLength => "12",
    ArrayIndex => "8",
    MemLogicalWidth => "45",
    Ene8DataFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidth",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F11,E12,TRUE)
    },
    Ene8DataFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the Data FS when AttrOffSel equals 0.  in nibbles",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F12,E13)
    },
    Ene8ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F13,E14)
    },
    Ene8ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F14,E15)
    },
    Ene8LeftShiftSizeFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsWidth",
      RegMem => "MemField",
      Description => "The width used in the lft shift size FS in bits",
      Width => "3",
      Position => "25:23", # Excel Formula: =calc_position(F15,E16)
    },
    Ene8LeftShiftSizeFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the lft shift size FS in nibbles",
      Width => "8",
      Position => "33:26", # Excel Formula: =calc_position(F16,E17)
    },
    Ene8LeftShiftFsSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftFsSize",
      RegMem => "MemField",
      Description => "amount of bytes to shift the header to the left in bytes",
      Width => "4",
      Position => "37:34", # Excel Formula: =calc_position(F17,E18)
    },
    Ene8LeftShiftSel => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSel",
      RegMem => "MemField",
      Description => "indicates whether the amount of left shift of the header is determined by instruction(0) or by a value in the pkt attr bus (1)",
      Width => "1",
      Position => "38", # Excel Formula: =calc_position(F18,E19)
    },
    Ene8StoreEncapSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSize",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F19,E20)
    },
    Ene8StoreCsCommand => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommand",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F20,E21)
    },
    Ene8StartNextMacro => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacro",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F21,E22)
    },
    Ene8Op => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]Op",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F22,E23)
    },
  },
  Ene9MacroMemory => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemory",
    RegMem => "Mem",
    Address => "A00000",
    Description => "Holds the instructions of the encapsulation macros",
    Width => "52", # Excel Formula: =calc_mem_width(E12:E23,M11,F23,-1)
    Type => "Config",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=100",
    ArrayLength => "12",
    ArrayIndex => "9",
    MemLogicalWidth => "45",
    Ene9DataFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidth",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F11,E12,TRUE)
    },
    Ene9DataFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the Data FS when AttrOffSel equals 0.  in nibbles",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F12,E13)
    },
    Ene9ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F13,E14)
    },
    Ene9ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F14,E15)
    },
    Ene9LeftShiftSizeFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsWidth",
      RegMem => "MemField",
      Description => "The width used in the lft shift size FS in bits",
      Width => "3",
      Position => "25:23", # Excel Formula: =calc_position(F15,E16)
    },
    Ene9LeftShiftSizeFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the lft shift size FS in nibbles",
      Width => "8",
      Position => "33:26", # Excel Formula: =calc_position(F16,E17)
    },
    Ene9LeftShiftFsSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftFsSize",
      RegMem => "MemField",
      Description => "amount of bytes to shift the header to the left in bytes",
      Width => "4",
      Position => "37:34", # Excel Formula: =calc_position(F17,E18)
    },
    Ene9LeftShiftSel => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSel",
      RegMem => "MemField",
      Description => "indicates whether the amount of left shift of the header is determined by instruction(0) or by a value in the pkt attr bus (1)",
      Width => "1",
      Position => "38", # Excel Formula: =calc_position(F18,E19)
    },
    Ene9StoreEncapSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSize",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F19,E20)
    },
    Ene9StoreCsCommand => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommand",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F20,E21)
    },
    Ene9StartNextMacro => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacro",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F21,E22)
    },
    Ene9Op => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]Op",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F22,E23)
    },
  },
  Ene10MacroMemory => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemory",
    RegMem => "Mem",
    Address => "B00000",
    Description => "Holds the instructions of the encapsulation macros",
    Width => "52", # Excel Formula: =calc_mem_width(E12:E23,M11,F23,-1)
    Type => "Config",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=100",
    ArrayLength => "12",
    ArrayIndex => "10",
    MemLogicalWidth => "45",
    Ene10DataFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidth",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F11,E12,TRUE)
    },
    Ene10DataFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the Data FS when AttrOffSel equals 0.  in nibbles",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F12,E13)
    },
    Ene10ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F13,E14)
    },
    Ene10ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F14,E15)
    },
    Ene10LeftShiftSizeFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsWidth",
      RegMem => "MemField",
      Description => "The width used in the lft shift size FS in bits",
      Width => "3",
      Position => "25:23", # Excel Formula: =calc_position(F15,E16)
    },
    Ene10LeftShiftSizeFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the lft shift size FS in nibbles",
      Width => "8",
      Position => "33:26", # Excel Formula: =calc_position(F16,E17)
    },
    Ene10LeftShiftFsSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftFsSize",
      RegMem => "MemField",
      Description => "amount of bytes to shift the header to the left in bytes",
      Width => "4",
      Position => "37:34", # Excel Formula: =calc_position(F17,E18)
    },
    Ene10LeftShiftSel => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSel",
      RegMem => "MemField",
      Description => "indicates whether the amount of left shift of the header is determined by instruction(0) or by a value in the pkt attr bus (1)",
      Width => "1",
      Position => "38", # Excel Formula: =calc_position(F18,E19)
    },
    Ene10StoreEncapSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSize",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F19,E20)
    },
    Ene10StoreCsCommand => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommand",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F20,E21)
    },
    Ene10StartNextMacro => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacro",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F21,E22)
    },
    Ene10Op => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]Op",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F22,E23)
    },
  },
  Ene11MacroMemory => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemory",
    RegMem => "Mem",
    Address => "C00000",
    Description => "Holds the instructions of the encapsulation macros",
    Width => "52", # Excel Formula: =calc_mem_width(E12:E23,M11,F23,-1)
    Type => "Config",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=0,ReadActivityFactor=100",
    ArrayLength => "12",
    ArrayIndex => "11",
    MemLogicalWidth => "45",
    Ene11DataFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidth",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F11,E12,TRUE)
    },
    Ene11DataFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the Data FS when AttrOffSel equals 0.  in nibbles",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F12,E13)
    },
    Ene11ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F13,E14)
    },
    Ene11ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F14,E15)
    },
    Ene11LeftShiftSizeFsWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsWidth",
      RegMem => "MemField",
      Description => "The width used in the lft shift size FS in bits",
      Width => "3",
      Position => "25:23", # Excel Formula: =calc_position(F15,E16)
    },
    Ene11LeftShiftSizeFsOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSizeFsOffset",
      RegMem => "MemField",
      Description => "The offset used in the lft shift size FS in nibbles",
      Width => "8",
      Position => "33:26", # Excel Formula: =calc_position(F16,E17)
    },
    Ene11LeftShiftFsSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftFsSize",
      RegMem => "MemField",
      Description => "amount of bytes to shift the header to the left in bytes",
      Width => "4",
      Position => "37:34", # Excel Formula: =calc_position(F17,E18)
    },
    Ene11LeftShiftSel => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]LeftShiftSel",
      RegMem => "MemField",
      Description => "indicates whether the amount of left shift of the header is determined by instruction(0) or by a value in the pkt attr bus (1)",
      Width => "1",
      Position => "38", # Excel Formula: =calc_position(F18,E19)
    },
    Ene11StoreEncapSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSize",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F19,E20)
    },
    Ene11StoreCsCommand => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommand",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F20,E21)
    },
    Ene11StartNextMacro => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacro",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F21,E22)
    },
    Ene11Op => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]Op",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F22,E23)
    },
  },
  Ene0MacroMemoryConst => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConst",
    RegMem => "Mem",
    Address => "100000", # Excel Formula: =calc_mem_address(C11,A11,G24,L24)
    Width => "52", # Excel Formula: =calc_mem_width(E25:E31,M24,F31,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "0",
    MemLogicalWidth => "45",
    Ene0DataFsWidthConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthConst",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F24,E25,TRUE)
    },
    Ene0Const => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]Const",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word. Const must come in a byte resolution.",
      Width => "32",
      Position => "35:4", # Excel Formula: =calc_position(F25,E26)
    },
    Ene0SpareConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]SpareConst",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F26,E27)
      DocName => "Ene[n]ReservedConst",
    },
    Ene0StoreEncapSizeConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConst",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F27,E28)
    },
    Ene0StoreCsCommandConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConst",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F28,E29)
    },
    Ene0StartNextMacroConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConst",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F29,E30)
    },
    Ene0OpConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]OpConst",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F30,E31)
    },
  },
  Ene1MacroMemoryConst => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConst",
    RegMem => "Mem",
    Address => "200000",
    Width => "52", # Excel Formula: =calc_mem_width(E25:E31,M24,F31,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "1",
    MemLogicalWidth => "45",
    Ene1DataFsWidthConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthConst",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F24,E25,TRUE)
    },
    Ene1Const => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]Const",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word. Const must come in a byte resolution.",
      Width => "32",
      Position => "35:4", # Excel Formula: =calc_position(F25,E26)
    },
    Ene1SpareConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]SpareConst",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F26,E27)
      DocName => "Ene[n]ReservedConst",
    },
    Ene1StoreEncapSizeConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConst",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F27,E28)
    },
    Ene1StoreCsCommandConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConst",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F28,E29)
    },
    Ene1StartNextMacroConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConst",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F29,E30)
    },
    Ene1OpConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]OpConst",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F30,E31)
    },
  },
  Ene2MacroMemoryConst => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConst",
    RegMem => "Mem",
    Address => "300000",
    Width => "52", # Excel Formula: =calc_mem_width(E25:E31,M24,F31,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "2",
    MemLogicalWidth => "45",
    Ene2DataFsWidthConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthConst",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F24,E25,TRUE)
    },
    Ene2Const => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]Const",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word. Const must come in a byte resolution.",
      Width => "32",
      Position => "35:4", # Excel Formula: =calc_position(F25,E26)
    },
    Ene2SpareConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]SpareConst",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F26,E27)
      DocName => "Ene[n]ReservedConst",
    },
    Ene2StoreEncapSizeConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConst",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F27,E28)
    },
    Ene2StoreCsCommandConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConst",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F28,E29)
    },
    Ene2StartNextMacroConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConst",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F29,E30)
    },
    Ene2OpConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]OpConst",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F30,E31)
    },
  },
  Ene3MacroMemoryConst => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConst",
    RegMem => "Mem",
    Address => "400000",
    Width => "52", # Excel Formula: =calc_mem_width(E25:E31,M24,F31,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "3",
    MemLogicalWidth => "45",
    Ene3DataFsWidthConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthConst",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F24,E25,TRUE)
    },
    Ene3Const => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]Const",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word. Const must come in a byte resolution.",
      Width => "32",
      Position => "35:4", # Excel Formula: =calc_position(F25,E26)
    },
    Ene3SpareConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]SpareConst",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F26,E27)
      DocName => "Ene[n]ReservedConst",
    },
    Ene3StoreEncapSizeConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConst",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F27,E28)
    },
    Ene3StoreCsCommandConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConst",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F28,E29)
    },
    Ene3StartNextMacroConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConst",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F29,E30)
    },
    Ene3OpConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]OpConst",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F30,E31)
    },
  },
  Ene4MacroMemoryConst => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConst",
    RegMem => "Mem",
    Address => "500000",
    Width => "52", # Excel Formula: =calc_mem_width(E25:E31,M24,F31,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "4",
    MemLogicalWidth => "45",
    Ene4DataFsWidthConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthConst",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F24,E25,TRUE)
    },
    Ene4Const => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]Const",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word. Const must come in a byte resolution.",
      Width => "32",
      Position => "35:4", # Excel Formula: =calc_position(F25,E26)
    },
    Ene4SpareConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]SpareConst",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F26,E27)
      DocName => "Ene[n]ReservedConst",
    },
    Ene4StoreEncapSizeConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConst",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F27,E28)
    },
    Ene4StoreCsCommandConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConst",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F28,E29)
    },
    Ene4StartNextMacroConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConst",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F29,E30)
    },
    Ene4OpConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]OpConst",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F30,E31)
    },
  },
  Ene5MacroMemoryConst => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConst",
    RegMem => "Mem",
    Address => "600000",
    Width => "52", # Excel Formula: =calc_mem_width(E25:E31,M24,F31,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "5",
    MemLogicalWidth => "45",
    Ene5DataFsWidthConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthConst",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F24,E25,TRUE)
    },
    Ene5Const => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]Const",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word. Const must come in a byte resolution.",
      Width => "32",
      Position => "35:4", # Excel Formula: =calc_position(F25,E26)
    },
    Ene5SpareConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]SpareConst",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F26,E27)
      DocName => "Ene[n]ReservedConst",
    },
    Ene5StoreEncapSizeConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConst",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F27,E28)
    },
    Ene5StoreCsCommandConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConst",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F28,E29)
    },
    Ene5StartNextMacroConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConst",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F29,E30)
    },
    Ene5OpConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]OpConst",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F30,E31)
    },
  },
  Ene6MacroMemoryConst => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConst",
    RegMem => "Mem",
    Address => "700000",
    Width => "52", # Excel Formula: =calc_mem_width(E25:E31,M24,F31,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "6",
    MemLogicalWidth => "45",
    Ene6DataFsWidthConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthConst",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F24,E25,TRUE)
    },
    Ene6Const => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]Const",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word. Const must come in a byte resolution.",
      Width => "32",
      Position => "35:4", # Excel Formula: =calc_position(F25,E26)
    },
    Ene6SpareConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]SpareConst",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F26,E27)
      DocName => "Ene[n]ReservedConst",
    },
    Ene6StoreEncapSizeConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConst",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F27,E28)
    },
    Ene6StoreCsCommandConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConst",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F28,E29)
    },
    Ene6StartNextMacroConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConst",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F29,E30)
    },
    Ene6OpConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]OpConst",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F30,E31)
    },
  },
  Ene7MacroMemoryConst => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConst",
    RegMem => "Mem",
    Address => "800000",
    Width => "52", # Excel Formula: =calc_mem_width(E25:E31,M24,F31,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "7",
    MemLogicalWidth => "45",
    Ene7DataFsWidthConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthConst",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F24,E25,TRUE)
    },
    Ene7Const => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]Const",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word. Const must come in a byte resolution.",
      Width => "32",
      Position => "35:4", # Excel Formula: =calc_position(F25,E26)
    },
    Ene7SpareConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]SpareConst",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F26,E27)
      DocName => "Ene[n]ReservedConst",
    },
    Ene7StoreEncapSizeConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConst",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F27,E28)
    },
    Ene7StoreCsCommandConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConst",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F28,E29)
    },
    Ene7StartNextMacroConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConst",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F29,E30)
    },
    Ene7OpConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]OpConst",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F30,E31)
    },
  },
  Ene8MacroMemoryConst => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConst",
    RegMem => "Mem",
    Address => "900000",
    Width => "52", # Excel Formula: =calc_mem_width(E25:E31,M24,F31,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "8",
    MemLogicalWidth => "45",
    Ene8DataFsWidthConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthConst",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F24,E25,TRUE)
    },
    Ene8Const => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]Const",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word. Const must come in a byte resolution.",
      Width => "32",
      Position => "35:4", # Excel Formula: =calc_position(F25,E26)
    },
    Ene8SpareConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]SpareConst",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F26,E27)
      DocName => "Ene[n]ReservedConst",
    },
    Ene8StoreEncapSizeConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConst",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F27,E28)
    },
    Ene8StoreCsCommandConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConst",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F28,E29)
    },
    Ene8StartNextMacroConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConst",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F29,E30)
    },
    Ene8OpConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]OpConst",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F30,E31)
    },
  },
  Ene9MacroMemoryConst => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConst",
    RegMem => "Mem",
    Address => "A00000",
    Width => "52", # Excel Formula: =calc_mem_width(E25:E31,M24,F31,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "9",
    MemLogicalWidth => "45",
    Ene9DataFsWidthConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthConst",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F24,E25,TRUE)
    },
    Ene9Const => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]Const",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word. Const must come in a byte resolution.",
      Width => "32",
      Position => "35:4", # Excel Formula: =calc_position(F25,E26)
    },
    Ene9SpareConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]SpareConst",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F26,E27)
      DocName => "Ene[n]ReservedConst",
    },
    Ene9StoreEncapSizeConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConst",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F27,E28)
    },
    Ene9StoreCsCommandConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConst",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F28,E29)
    },
    Ene9StartNextMacroConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConst",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F29,E30)
    },
    Ene9OpConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]OpConst",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F30,E31)
    },
  },
  Ene10MacroMemoryConst => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConst",
    RegMem => "Mem",
    Address => "B00000",
    Width => "52", # Excel Formula: =calc_mem_width(E25:E31,M24,F31,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "10",
    MemLogicalWidth => "45",
    Ene10DataFsWidthConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthConst",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F24,E25,TRUE)
    },
    Ene10Const => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]Const",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word. Const must come in a byte resolution.",
      Width => "32",
      Position => "35:4", # Excel Formula: =calc_position(F25,E26)
    },
    Ene10SpareConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]SpareConst",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F26,E27)
      DocName => "Ene[n]ReservedConst",
    },
    Ene10StoreEncapSizeConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConst",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F27,E28)
    },
    Ene10StoreCsCommandConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConst",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F28,E29)
    },
    Ene10StartNextMacroConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConst",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F29,E30)
    },
    Ene10OpConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]OpConst",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F30,E31)
    },
  },
  Ene11MacroMemoryConst => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConst",
    RegMem => "Mem",
    Address => "C00000",
    Width => "52", # Excel Formula: =calc_mem_width(E25:E31,M24,F31,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "11",
    MemLogicalWidth => "45",
    Ene11DataFsWidthConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthConst",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F24,E25,TRUE)
    },
    Ene11Const => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]Const",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word. Const must come in a byte resolution.",
      Width => "32",
      Position => "35:4", # Excel Formula: =calc_position(F25,E26)
    },
    Ene11SpareConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]SpareConst",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F26,E27)
      DocName => "Ene[n]ReservedConst",
    },
    Ene11StoreEncapSizeConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConst",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F27,E28)
    },
    Ene11StoreCsCommandConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConst",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F28,E29)
    },
    Ene11StartNextMacroConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConst",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F29,E30)
    },
    Ene11OpConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]OpConst",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F30,E31)
    },
  },
  Ene0MacroMemoryConstToSp => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConstToSp",
    RegMem => "Mem",
    Address => "100000", # Excel Formula: =calc_mem_address(C11,A11,G32,L32)
    Width => "52", # Excel Formula: =calc_mem_width(E33:E41,M32,F41,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "0",
    MemLogicalWidth => "45",
    Ene0DataWidthConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]DataWidthConstToSp",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F32,E33,TRUE)
    },
    Ene0Spare1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1ConstToSp",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F33,E34)
      DocName => "Ene[n]Reserved1ConstToSp",
    },
    Ene0ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F34,E35)
    },
    Ene0ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]ConstToSp",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word.",
      Width => "16",
      Position => "35:20", # Excel Formula: =calc_position(F35,E36)
    },
    Ene0Spare2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2ConstToSp",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F36,E37)
      DocName => "Ene[n]Reserved2ConstToSp",
    },
    Ene0StoreEncapSizeConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConstToSp",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F37,E38)
    },
    Ene0StoreCsCommandConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConstToSp",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F38,E39)
    },
    Ene0StartNextMacroConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConstToSp",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F39,E40)
    },
    Ene0OpConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]OpConstToSp",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F40,E41)
    },
  },
  Ene1MacroMemoryConstToSp => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConstToSp",
    RegMem => "Mem",
    Address => "200000",
    Width => "52", # Excel Formula: =calc_mem_width(E33:E41,M32,F41,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "1",
    MemLogicalWidth => "45",
    Ene1DataWidthConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]DataWidthConstToSp",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F32,E33,TRUE)
    },
    Ene1Spare1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1ConstToSp",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F33,E34)
      DocName => "Ene[n]Reserved1ConstToSp",
    },
    Ene1ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F34,E35)
    },
    Ene1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]ConstToSp",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word.",
      Width => "16",
      Position => "35:20", # Excel Formula: =calc_position(F35,E36)
    },
    Ene1Spare2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2ConstToSp",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F36,E37)
      DocName => "Ene[n]Reserved2ConstToSp",
    },
    Ene1StoreEncapSizeConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConstToSp",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F37,E38)
    },
    Ene1StoreCsCommandConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConstToSp",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F38,E39)
    },
    Ene1StartNextMacroConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConstToSp",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F39,E40)
    },
    Ene1OpConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]OpConstToSp",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F40,E41)
    },
  },
  Ene2MacroMemoryConstToSp => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConstToSp",
    RegMem => "Mem",
    Address => "300000",
    Width => "52", # Excel Formula: =calc_mem_width(E33:E41,M32,F41,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "2",
    MemLogicalWidth => "45",
    Ene2DataWidthConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]DataWidthConstToSp",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F32,E33,TRUE)
    },
    Ene2Spare1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1ConstToSp",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F33,E34)
      DocName => "Ene[n]Reserved1ConstToSp",
    },
    Ene2ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F34,E35)
    },
    Ene2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]ConstToSp",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word.",
      Width => "16",
      Position => "35:20", # Excel Formula: =calc_position(F35,E36)
    },
    Ene2Spare2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2ConstToSp",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F36,E37)
      DocName => "Ene[n]Reserved2ConstToSp",
    },
    Ene2StoreEncapSizeConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConstToSp",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F37,E38)
    },
    Ene2StoreCsCommandConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConstToSp",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F38,E39)
    },
    Ene2StartNextMacroConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConstToSp",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F39,E40)
    },
    Ene2OpConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]OpConstToSp",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F40,E41)
    },
  },
  Ene3MacroMemoryConstToSp => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConstToSp",
    RegMem => "Mem",
    Address => "400000",
    Width => "52", # Excel Formula: =calc_mem_width(E33:E41,M32,F41,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "3",
    MemLogicalWidth => "45",
    Ene3DataWidthConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]DataWidthConstToSp",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F32,E33,TRUE)
    },
    Ene3Spare1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1ConstToSp",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F33,E34)
      DocName => "Ene[n]Reserved1ConstToSp",
    },
    Ene3ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F34,E35)
    },
    Ene3ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]ConstToSp",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word.",
      Width => "16",
      Position => "35:20", # Excel Formula: =calc_position(F35,E36)
    },
    Ene3Spare2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2ConstToSp",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F36,E37)
      DocName => "Ene[n]Reserved2ConstToSp",
    },
    Ene3StoreEncapSizeConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConstToSp",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F37,E38)
    },
    Ene3StoreCsCommandConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConstToSp",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F38,E39)
    },
    Ene3StartNextMacroConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConstToSp",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F39,E40)
    },
    Ene3OpConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]OpConstToSp",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F40,E41)
    },
  },
  Ene4MacroMemoryConstToSp => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConstToSp",
    RegMem => "Mem",
    Address => "500000",
    Width => "52", # Excel Formula: =calc_mem_width(E33:E41,M32,F41,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "4",
    MemLogicalWidth => "45",
    Ene4DataWidthConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]DataWidthConstToSp",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F32,E33,TRUE)
    },
    Ene4Spare1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1ConstToSp",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F33,E34)
      DocName => "Ene[n]Reserved1ConstToSp",
    },
    Ene4ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F34,E35)
    },
    Ene4ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]ConstToSp",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word.",
      Width => "16",
      Position => "35:20", # Excel Formula: =calc_position(F35,E36)
    },
    Ene4Spare2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2ConstToSp",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F36,E37)
      DocName => "Ene[n]Reserved2ConstToSp",
    },
    Ene4StoreEncapSizeConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConstToSp",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F37,E38)
    },
    Ene4StoreCsCommandConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConstToSp",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F38,E39)
    },
    Ene4StartNextMacroConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConstToSp",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F39,E40)
    },
    Ene4OpConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]OpConstToSp",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F40,E41)
    },
  },
  Ene5MacroMemoryConstToSp => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConstToSp",
    RegMem => "Mem",
    Address => "600000",
    Width => "52", # Excel Formula: =calc_mem_width(E33:E41,M32,F41,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "5",
    MemLogicalWidth => "45",
    Ene5DataWidthConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]DataWidthConstToSp",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F32,E33,TRUE)
    },
    Ene5Spare1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1ConstToSp",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F33,E34)
      DocName => "Ene[n]Reserved1ConstToSp",
    },
    Ene5ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F34,E35)
    },
    Ene5ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]ConstToSp",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word.",
      Width => "16",
      Position => "35:20", # Excel Formula: =calc_position(F35,E36)
    },
    Ene5Spare2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2ConstToSp",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F36,E37)
      DocName => "Ene[n]Reserved2ConstToSp",
    },
    Ene5StoreEncapSizeConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConstToSp",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F37,E38)
    },
    Ene5StoreCsCommandConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConstToSp",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F38,E39)
    },
    Ene5StartNextMacroConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConstToSp",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F39,E40)
    },
    Ene5OpConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]OpConstToSp",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F40,E41)
    },
  },
  Ene6MacroMemoryConstToSp => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConstToSp",
    RegMem => "Mem",
    Address => "700000",
    Width => "52", # Excel Formula: =calc_mem_width(E33:E41,M32,F41,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "6",
    MemLogicalWidth => "45",
    Ene6DataWidthConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]DataWidthConstToSp",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F32,E33,TRUE)
    },
    Ene6Spare1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1ConstToSp",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F33,E34)
      DocName => "Ene[n]Reserved1ConstToSp",
    },
    Ene6ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F34,E35)
    },
    Ene6ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]ConstToSp",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word.",
      Width => "16",
      Position => "35:20", # Excel Formula: =calc_position(F35,E36)
    },
    Ene6Spare2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2ConstToSp",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F36,E37)
      DocName => "Ene[n]Reserved2ConstToSp",
    },
    Ene6StoreEncapSizeConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConstToSp",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F37,E38)
    },
    Ene6StoreCsCommandConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConstToSp",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F38,E39)
    },
    Ene6StartNextMacroConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConstToSp",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F39,E40)
    },
    Ene6OpConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]OpConstToSp",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F40,E41)
    },
  },
  Ene7MacroMemoryConstToSp => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConstToSp",
    RegMem => "Mem",
    Address => "800000",
    Width => "52", # Excel Formula: =calc_mem_width(E33:E41,M32,F41,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "7",
    MemLogicalWidth => "45",
    Ene7DataWidthConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]DataWidthConstToSp",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F32,E33,TRUE)
    },
    Ene7Spare1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1ConstToSp",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F33,E34)
      DocName => "Ene[n]Reserved1ConstToSp",
    },
    Ene7ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F34,E35)
    },
    Ene7ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]ConstToSp",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word.",
      Width => "16",
      Position => "35:20", # Excel Formula: =calc_position(F35,E36)
    },
    Ene7Spare2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2ConstToSp",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F36,E37)
      DocName => "Ene[n]Reserved2ConstToSp",
    },
    Ene7StoreEncapSizeConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConstToSp",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F37,E38)
    },
    Ene7StoreCsCommandConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConstToSp",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F38,E39)
    },
    Ene7StartNextMacroConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConstToSp",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F39,E40)
    },
    Ene7OpConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]OpConstToSp",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F40,E41)
    },
  },
  Ene8MacroMemoryConstToSp => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConstToSp",
    RegMem => "Mem",
    Address => "900000",
    Width => "52", # Excel Formula: =calc_mem_width(E33:E41,M32,F41,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "8",
    MemLogicalWidth => "45",
    Ene8DataWidthConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]DataWidthConstToSp",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F32,E33,TRUE)
    },
    Ene8Spare1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1ConstToSp",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F33,E34)
      DocName => "Ene[n]Reserved1ConstToSp",
    },
    Ene8ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F34,E35)
    },
    Ene8ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]ConstToSp",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word.",
      Width => "16",
      Position => "35:20", # Excel Formula: =calc_position(F35,E36)
    },
    Ene8Spare2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2ConstToSp",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F36,E37)
      DocName => "Ene[n]Reserved2ConstToSp",
    },
    Ene8StoreEncapSizeConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConstToSp",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F37,E38)
    },
    Ene8StoreCsCommandConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConstToSp",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F38,E39)
    },
    Ene8StartNextMacroConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConstToSp",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F39,E40)
    },
    Ene8OpConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]OpConstToSp",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F40,E41)
    },
  },
  Ene9MacroMemoryConstToSp => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConstToSp",
    RegMem => "Mem",
    Address => "A00000",
    Width => "52", # Excel Formula: =calc_mem_width(E33:E41,M32,F41,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "9",
    MemLogicalWidth => "45",
    Ene9DataWidthConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]DataWidthConstToSp",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F32,E33,TRUE)
    },
    Ene9Spare1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1ConstToSp",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F33,E34)
      DocName => "Ene[n]Reserved1ConstToSp",
    },
    Ene9ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F34,E35)
    },
    Ene9ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]ConstToSp",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word.",
      Width => "16",
      Position => "35:20", # Excel Formula: =calc_position(F35,E36)
    },
    Ene9Spare2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2ConstToSp",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F36,E37)
      DocName => "Ene[n]Reserved2ConstToSp",
    },
    Ene9StoreEncapSizeConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConstToSp",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F37,E38)
    },
    Ene9StoreCsCommandConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConstToSp",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F38,E39)
    },
    Ene9StartNextMacroConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConstToSp",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F39,E40)
    },
    Ene9OpConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]OpConstToSp",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F40,E41)
    },
  },
  Ene10MacroMemoryConstToSp => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConstToSp",
    RegMem => "Mem",
    Address => "B00000",
    Width => "52", # Excel Formula: =calc_mem_width(E33:E41,M32,F41,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "10",
    MemLogicalWidth => "45",
    Ene10DataWidthConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]DataWidthConstToSp",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F32,E33,TRUE)
    },
    Ene10Spare1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1ConstToSp",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F33,E34)
      DocName => "Ene[n]Reserved1ConstToSp",
    },
    Ene10ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F34,E35)
    },
    Ene10ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]ConstToSp",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word.",
      Width => "16",
      Position => "35:20", # Excel Formula: =calc_position(F35,E36)
    },
    Ene10Spare2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2ConstToSp",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F36,E37)
      DocName => "Ene[n]Reserved2ConstToSp",
    },
    Ene10StoreEncapSizeConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConstToSp",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F37,E38)
    },
    Ene10StoreCsCommandConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConstToSp",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F38,E39)
    },
    Ene10StartNextMacroConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConstToSp",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F39,E40)
    },
    Ene10OpConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]OpConstToSp",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F40,E41)
    },
  },
  Ene11MacroMemoryConstToSp => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryConstToSp",
    RegMem => "Mem",
    Address => "C00000",
    Width => "52", # Excel Formula: =calc_mem_width(E33:E41,M32,F41,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "11",
    MemLogicalWidth => "45",
    Ene11DataWidthConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]DataWidthConstToSp",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F32,E33,TRUE)
    },
    Ene11Spare1ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1ConstToSp",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F33,E34)
      DocName => "Ene[n]Reserved1ConstToSp",
    },
    Ene11ScratchpadPushSize => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadPushSize",
      RegMem => "MemField",
      Description => "Number of bytes (counted from the LSB position) to be pushed into the scratchpad register.",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F34,E35)
    },
    Ene11ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]ConstToSp",
      RegMem => "MemField",
      Description => "Value to be inserted to the sop word.",
      Width => "16",
      Position => "35:20", # Excel Formula: =calc_position(F35,E36)
    },
    Ene11Spare2ConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2ConstToSp",
      RegMem => "MemField",
      Description => "reserved",
      Width => "3",
      Position => "38:36", # Excel Formula: =calc_position(F36,E37)
      DocName => "Ene[n]Reserved2ConstToSp",
    },
    Ene11StoreEncapSizeConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeConstToSp",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F37,E38)
    },
    Ene11StoreCsCommandConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandConstToSp",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F38,E39)
    },
    Ene11StartNextMacroConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroConstToSp",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F39,E40)
    },
    Ene11OpConstToSp => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]OpConstToSp",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F40,E41)
    },
  },
  Ene0MacroMemoryPktSz => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryPktSz",
    RegMem => "Mem",
    Address => "100000", # Excel Formula: =calc_mem_address(C11,A11,G42,L42)
    Width => "52", # Excel Formula: =calc_mem_width(E43:E52,M42,F52,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "0",
    MemLogicalWidth => "45",
    Ene0DataFsWidthPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthPktSz",
      RegMem => "MemField",
      Description => "Size of pkt size field to be entered. Values could be 2 (full size) or 1 (lower byte of the value)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F42,E43,TRUE)
    },
    Ene0PktSzAdditionalConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzAdditionalConst",
      RegMem => "MemField",
      Description => "Constant to be added to the packet size before stamping it over the packet-header",
      Width => "5",
      Position => "8:4", # Excel Formula: =calc_position(F43,E44)
    },
    Ene0PktSzPushTarget => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzPushTarget",
      RegMem => "MemField",
      Description => "0: Header, 1: Scratchpad",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F44,E45)
    },
    Ene0Spare1PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1PktSz",
      RegMem => "MemField",
      Description => "reserved",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F45,E46)
      DocName => "Ene[n]Reserved1PktSz",
    },
    Ene0ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F46,E47)
    },
    Ene0Spare2PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2PktSz",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "16",
      Position => "38:23", # Excel Formula: =calc_position(F47,E48)
      DocName => "Ene[n]Reserved2PktSz",
    },
    Ene0StoreEncapSizePktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizePktSz",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F48,E49)
    },
    Ene0StoreCsCommandPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandPktSz",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F49,E50)
    },
    Ene0StartNextMacroPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroPktSz",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F50,E51)
    },
    Ene0OpPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]OpPktSz",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F51,E52)
    },
  },
  Ene1MacroMemoryPktSz => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryPktSz",
    RegMem => "Mem",
    Address => "200000",
    Width => "52", # Excel Formula: =calc_mem_width(E43:E52,M42,F52,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "1",
    MemLogicalWidth => "45",
    Ene1DataFsWidthPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthPktSz",
      RegMem => "MemField",
      Description => "Size of pkt size field to be entered. Values could be 2 (full size) or 1 (lower byte of the value)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F42,E43,TRUE)
    },
    Ene1PktSzAdditionalConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzAdditionalConst",
      RegMem => "MemField",
      Description => "Constant to be added to the packet size before stamping it over the packet-header",
      Width => "5",
      Position => "8:4", # Excel Formula: =calc_position(F43,E44)
    },
    Ene1PktSzPushTarget => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzPushTarget",
      RegMem => "MemField",
      Description => "0: Header, 1: Scratchpad",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F44,E45)
    },
    Ene1Spare1PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1PktSz",
      RegMem => "MemField",
      Description => "reserved",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F45,E46)
      DocName => "Ene[n]Reserved1PktSz",
    },
    Ene1ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F46,E47)
    },
    Ene1Spare2PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2PktSz",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "16",
      Position => "38:23", # Excel Formula: =calc_position(F47,E48)
      DocName => "Ene[n]Reserved2PktSz",
    },
    Ene1StoreEncapSizePktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizePktSz",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F48,E49)
    },
    Ene1StoreCsCommandPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandPktSz",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F49,E50)
    },
    Ene1StartNextMacroPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroPktSz",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F50,E51)
    },
    Ene1OpPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]OpPktSz",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F51,E52)
    },
  },
  Ene2MacroMemoryPktSz => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryPktSz",
    RegMem => "Mem",
    Address => "300000",
    Width => "52", # Excel Formula: =calc_mem_width(E43:E52,M42,F52,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "2",
    MemLogicalWidth => "45",
    Ene2DataFsWidthPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthPktSz",
      RegMem => "MemField",
      Description => "Size of pkt size field to be entered. Values could be 2 (full size) or 1 (lower byte of the value)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F42,E43,TRUE)
    },
    Ene2PktSzAdditionalConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzAdditionalConst",
      RegMem => "MemField",
      Description => "Constant to be added to the packet size before stamping it over the packet-header",
      Width => "5",
      Position => "8:4", # Excel Formula: =calc_position(F43,E44)
    },
    Ene2PktSzPushTarget => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzPushTarget",
      RegMem => "MemField",
      Description => "0: Header, 1: Scratchpad",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F44,E45)
    },
    Ene2Spare1PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1PktSz",
      RegMem => "MemField",
      Description => "reserved",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F45,E46)
      DocName => "Ene[n]Reserved1PktSz",
    },
    Ene2ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F46,E47)
    },
    Ene2Spare2PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2PktSz",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "16",
      Position => "38:23", # Excel Formula: =calc_position(F47,E48)
      DocName => "Ene[n]Reserved2PktSz",
    },
    Ene2StoreEncapSizePktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizePktSz",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F48,E49)
    },
    Ene2StoreCsCommandPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandPktSz",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F49,E50)
    },
    Ene2StartNextMacroPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroPktSz",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F50,E51)
    },
    Ene2OpPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]OpPktSz",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F51,E52)
    },
  },
  Ene3MacroMemoryPktSz => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryPktSz",
    RegMem => "Mem",
    Address => "400000",
    Width => "52", # Excel Formula: =calc_mem_width(E43:E52,M42,F52,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "3",
    MemLogicalWidth => "45",
    Ene3DataFsWidthPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthPktSz",
      RegMem => "MemField",
      Description => "Size of pkt size field to be entered. Values could be 2 (full size) or 1 (lower byte of the value)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F42,E43,TRUE)
    },
    Ene3PktSzAdditionalConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzAdditionalConst",
      RegMem => "MemField",
      Description => "Constant to be added to the packet size before stamping it over the packet-header",
      Width => "5",
      Position => "8:4", # Excel Formula: =calc_position(F43,E44)
    },
    Ene3PktSzPushTarget => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzPushTarget",
      RegMem => "MemField",
      Description => "0: Header, 1: Scratchpad",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F44,E45)
    },
    Ene3Spare1PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1PktSz",
      RegMem => "MemField",
      Description => "reserved",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F45,E46)
      DocName => "Ene[n]Reserved1PktSz",
    },
    Ene3ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F46,E47)
    },
    Ene3Spare2PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2PktSz",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "16",
      Position => "38:23", # Excel Formula: =calc_position(F47,E48)
      DocName => "Ene[n]Reserved2PktSz",
    },
    Ene3StoreEncapSizePktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizePktSz",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F48,E49)
    },
    Ene3StoreCsCommandPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandPktSz",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F49,E50)
    },
    Ene3StartNextMacroPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroPktSz",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F50,E51)
    },
    Ene3OpPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]OpPktSz",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F51,E52)
    },
  },
  Ene4MacroMemoryPktSz => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryPktSz",
    RegMem => "Mem",
    Address => "500000",
    Width => "52", # Excel Formula: =calc_mem_width(E43:E52,M42,F52,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "4",
    MemLogicalWidth => "45",
    Ene4DataFsWidthPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthPktSz",
      RegMem => "MemField",
      Description => "Size of pkt size field to be entered. Values could be 2 (full size) or 1 (lower byte of the value)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F42,E43,TRUE)
    },
    Ene4PktSzAdditionalConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzAdditionalConst",
      RegMem => "MemField",
      Description => "Constant to be added to the packet size before stamping it over the packet-header",
      Width => "5",
      Position => "8:4", # Excel Formula: =calc_position(F43,E44)
    },
    Ene4PktSzPushTarget => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzPushTarget",
      RegMem => "MemField",
      Description => "0: Header, 1: Scratchpad",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F44,E45)
    },
    Ene4Spare1PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1PktSz",
      RegMem => "MemField",
      Description => "reserved",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F45,E46)
      DocName => "Ene[n]Reserved1PktSz",
    },
    Ene4ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F46,E47)
    },
    Ene4Spare2PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2PktSz",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "16",
      Position => "38:23", # Excel Formula: =calc_position(F47,E48)
      DocName => "Ene[n]Reserved2PktSz",
    },
    Ene4StoreEncapSizePktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizePktSz",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F48,E49)
    },
    Ene4StoreCsCommandPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandPktSz",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F49,E50)
    },
    Ene4StartNextMacroPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroPktSz",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F50,E51)
    },
    Ene4OpPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]OpPktSz",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F51,E52)
    },
  },
  Ene5MacroMemoryPktSz => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryPktSz",
    RegMem => "Mem",
    Address => "600000",
    Width => "52", # Excel Formula: =calc_mem_width(E43:E52,M42,F52,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "5",
    MemLogicalWidth => "45",
    Ene5DataFsWidthPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthPktSz",
      RegMem => "MemField",
      Description => "Size of pkt size field to be entered. Values could be 2 (full size) or 1 (lower byte of the value)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F42,E43,TRUE)
    },
    Ene5PktSzAdditionalConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzAdditionalConst",
      RegMem => "MemField",
      Description => "Constant to be added to the packet size before stamping it over the packet-header",
      Width => "5",
      Position => "8:4", # Excel Formula: =calc_position(F43,E44)
    },
    Ene5PktSzPushTarget => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzPushTarget",
      RegMem => "MemField",
      Description => "0: Header, 1: Scratchpad",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F44,E45)
    },
    Ene5Spare1PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1PktSz",
      RegMem => "MemField",
      Description => "reserved",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F45,E46)
      DocName => "Ene[n]Reserved1PktSz",
    },
    Ene5ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F46,E47)
    },
    Ene5Spare2PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2PktSz",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "16",
      Position => "38:23", # Excel Formula: =calc_position(F47,E48)
      DocName => "Ene[n]Reserved2PktSz",
    },
    Ene5StoreEncapSizePktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizePktSz",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F48,E49)
    },
    Ene5StoreCsCommandPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandPktSz",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F49,E50)
    },
    Ene5StartNextMacroPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroPktSz",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F50,E51)
    },
    Ene5OpPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]OpPktSz",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F51,E52)
    },
  },
  Ene6MacroMemoryPktSz => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryPktSz",
    RegMem => "Mem",
    Address => "700000",
    Width => "52", # Excel Formula: =calc_mem_width(E43:E52,M42,F52,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "6",
    MemLogicalWidth => "45",
    Ene6DataFsWidthPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthPktSz",
      RegMem => "MemField",
      Description => "Size of pkt size field to be entered. Values could be 2 (full size) or 1 (lower byte of the value)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F42,E43,TRUE)
    },
    Ene6PktSzAdditionalConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzAdditionalConst",
      RegMem => "MemField",
      Description => "Constant to be added to the packet size before stamping it over the packet-header",
      Width => "5",
      Position => "8:4", # Excel Formula: =calc_position(F43,E44)
    },
    Ene6PktSzPushTarget => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzPushTarget",
      RegMem => "MemField",
      Description => "0: Header, 1: Scratchpad",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F44,E45)
    },
    Ene6Spare1PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1PktSz",
      RegMem => "MemField",
      Description => "reserved",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F45,E46)
      DocName => "Ene[n]Reserved1PktSz",
    },
    Ene6ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F46,E47)
    },
    Ene6Spare2PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2PktSz",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "16",
      Position => "38:23", # Excel Formula: =calc_position(F47,E48)
      DocName => "Ene[n]Reserved2PktSz",
    },
    Ene6StoreEncapSizePktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizePktSz",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F48,E49)
    },
    Ene6StoreCsCommandPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandPktSz",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F49,E50)
    },
    Ene6StartNextMacroPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroPktSz",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F50,E51)
    },
    Ene6OpPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]OpPktSz",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F51,E52)
    },
  },
  Ene7MacroMemoryPktSz => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryPktSz",
    RegMem => "Mem",
    Address => "800000",
    Width => "52", # Excel Formula: =calc_mem_width(E43:E52,M42,F52,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "7",
    MemLogicalWidth => "45",
    Ene7DataFsWidthPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthPktSz",
      RegMem => "MemField",
      Description => "Size of pkt size field to be entered. Values could be 2 (full size) or 1 (lower byte of the value)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F42,E43,TRUE)
    },
    Ene7PktSzAdditionalConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzAdditionalConst",
      RegMem => "MemField",
      Description => "Constant to be added to the packet size before stamping it over the packet-header",
      Width => "5",
      Position => "8:4", # Excel Formula: =calc_position(F43,E44)
    },
    Ene7PktSzPushTarget => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzPushTarget",
      RegMem => "MemField",
      Description => "0: Header, 1: Scratchpad",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F44,E45)
    },
    Ene7Spare1PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1PktSz",
      RegMem => "MemField",
      Description => "reserved",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F45,E46)
      DocName => "Ene[n]Reserved1PktSz",
    },
    Ene7ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F46,E47)
    },
    Ene7Spare2PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2PktSz",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "16",
      Position => "38:23", # Excel Formula: =calc_position(F47,E48)
      DocName => "Ene[n]Reserved2PktSz",
    },
    Ene7StoreEncapSizePktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizePktSz",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F48,E49)
    },
    Ene7StoreCsCommandPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandPktSz",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F49,E50)
    },
    Ene7StartNextMacroPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroPktSz",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F50,E51)
    },
    Ene7OpPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]OpPktSz",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F51,E52)
    },
  },
  Ene8MacroMemoryPktSz => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryPktSz",
    RegMem => "Mem",
    Address => "900000",
    Width => "52", # Excel Formula: =calc_mem_width(E43:E52,M42,F52,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "8",
    MemLogicalWidth => "45",
    Ene8DataFsWidthPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthPktSz",
      RegMem => "MemField",
      Description => "Size of pkt size field to be entered. Values could be 2 (full size) or 1 (lower byte of the value)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F42,E43,TRUE)
    },
    Ene8PktSzAdditionalConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzAdditionalConst",
      RegMem => "MemField",
      Description => "Constant to be added to the packet size before stamping it over the packet-header",
      Width => "5",
      Position => "8:4", # Excel Formula: =calc_position(F43,E44)
    },
    Ene8PktSzPushTarget => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzPushTarget",
      RegMem => "MemField",
      Description => "0: Header, 1: Scratchpad",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F44,E45)
    },
    Ene8Spare1PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1PktSz",
      RegMem => "MemField",
      Description => "reserved",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F45,E46)
      DocName => "Ene[n]Reserved1PktSz",
    },
    Ene8ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F46,E47)
    },
    Ene8Spare2PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2PktSz",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "16",
      Position => "38:23", # Excel Formula: =calc_position(F47,E48)
      DocName => "Ene[n]Reserved2PktSz",
    },
    Ene8StoreEncapSizePktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizePktSz",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F48,E49)
    },
    Ene8StoreCsCommandPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandPktSz",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F49,E50)
    },
    Ene8StartNextMacroPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroPktSz",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F50,E51)
    },
    Ene8OpPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]OpPktSz",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F51,E52)
    },
  },
  Ene9MacroMemoryPktSz => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryPktSz",
    RegMem => "Mem",
    Address => "A00000",
    Width => "52", # Excel Formula: =calc_mem_width(E43:E52,M42,F52,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "9",
    MemLogicalWidth => "45",
    Ene9DataFsWidthPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthPktSz",
      RegMem => "MemField",
      Description => "Size of pkt size field to be entered. Values could be 2 (full size) or 1 (lower byte of the value)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F42,E43,TRUE)
    },
    Ene9PktSzAdditionalConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzAdditionalConst",
      RegMem => "MemField",
      Description => "Constant to be added to the packet size before stamping it over the packet-header",
      Width => "5",
      Position => "8:4", # Excel Formula: =calc_position(F43,E44)
    },
    Ene9PktSzPushTarget => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzPushTarget",
      RegMem => "MemField",
      Description => "0: Header, 1: Scratchpad",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F44,E45)
    },
    Ene9Spare1PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1PktSz",
      RegMem => "MemField",
      Description => "reserved",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F45,E46)
      DocName => "Ene[n]Reserved1PktSz",
    },
    Ene9ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F46,E47)
    },
    Ene9Spare2PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2PktSz",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "16",
      Position => "38:23", # Excel Formula: =calc_position(F47,E48)
      DocName => "Ene[n]Reserved2PktSz",
    },
    Ene9StoreEncapSizePktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizePktSz",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F48,E49)
    },
    Ene9StoreCsCommandPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandPktSz",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F49,E50)
    },
    Ene9StartNextMacroPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroPktSz",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F50,E51)
    },
    Ene9OpPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]OpPktSz",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F51,E52)
    },
  },
  Ene10MacroMemoryPktSz => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryPktSz",
    RegMem => "Mem",
    Address => "B00000",
    Width => "52", # Excel Formula: =calc_mem_width(E43:E52,M42,F52,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "10",
    MemLogicalWidth => "45",
    Ene10DataFsWidthPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthPktSz",
      RegMem => "MemField",
      Description => "Size of pkt size field to be entered. Values could be 2 (full size) or 1 (lower byte of the value)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F42,E43,TRUE)
    },
    Ene10PktSzAdditionalConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzAdditionalConst",
      RegMem => "MemField",
      Description => "Constant to be added to the packet size before stamping it over the packet-header",
      Width => "5",
      Position => "8:4", # Excel Formula: =calc_position(F43,E44)
    },
    Ene10PktSzPushTarget => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzPushTarget",
      RegMem => "MemField",
      Description => "0: Header, 1: Scratchpad",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F44,E45)
    },
    Ene10Spare1PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1PktSz",
      RegMem => "MemField",
      Description => "reserved",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F45,E46)
      DocName => "Ene[n]Reserved1PktSz",
    },
    Ene10ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F46,E47)
    },
    Ene10Spare2PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2PktSz",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "16",
      Position => "38:23", # Excel Formula: =calc_position(F47,E48)
      DocName => "Ene[n]Reserved2PktSz",
    },
    Ene10StoreEncapSizePktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizePktSz",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F48,E49)
    },
    Ene10StoreCsCommandPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandPktSz",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F49,E50)
    },
    Ene10StartNextMacroPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroPktSz",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F50,E51)
    },
    Ene10OpPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]OpPktSz",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F51,E52)
    },
  },
  Ene11MacroMemoryPktSz => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryPktSz",
    RegMem => "Mem",
    Address => "C00000",
    Width => "52", # Excel Formula: =calc_mem_width(E43:E52,M42,F52,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "11",
    MemLogicalWidth => "45",
    Ene11DataFsWidthPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthPktSz",
      RegMem => "MemField",
      Description => "Size of pkt size field to be entered. Values could be 2 (full size) or 1 (lower byte of the value)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F42,E43,TRUE)
    },
    Ene11PktSzAdditionalConst => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzAdditionalConst",
      RegMem => "MemField",
      Description => "Constant to be added to the packet size before stamping it over the packet-header",
      Width => "5",
      Position => "8:4", # Excel Formula: =calc_position(F43,E44)
    },
    Ene11PktSzPushTarget => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]PktSzPushTarget",
      RegMem => "MemField",
      Description => "0: Header, 1: Scratchpad",
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F44,E45)
    },
    Ene11Spare1PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]Spare1PktSz",
      RegMem => "MemField",
      Description => "reserved",
      Width => "10",
      Position => "19:10", # Excel Formula: =calc_position(F45,E46)
      DocName => "Ene[n]Reserved1PktSz",
    },
    Ene11ScratchpadDataShift => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]ScratchpadDataShift",
      RegMem => "MemField",
      Description => "Number of bits to shift rights the data that does in the scratchpad",
      Width => "3",
      Position => "22:20", # Excel Formula: =calc_position(F46,E47)
    },
    Ene11Spare2PktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]Spare2PktSz",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "16",
      Position => "38:23", # Excel Formula: =calc_position(F47,E48)
      DocName => "Ene[n]Reserved2PktSz",
    },
    Ene11StoreEncapSizePktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizePktSz",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F48,E49)
    },
    Ene11StoreCsCommandPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandPktSz",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F49,E50)
    },
    Ene11StartNextMacroPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroPktSz",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F50,E51)
    },
    Ene11OpPktSz => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]OpPktSz",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F51,E52)
    },
  },
  Ene0MacroMemoryJump => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJump",
    RegMem => "Mem",
    Address => "100000", # Excel Formula: =calc_mem_address(C11,A11,G53,L53)
    Width => "52", # Excel Formula: =calc_mem_width(E54:E62,M53,F62,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "0",
    MemLogicalWidth => "45",
    Ene0DataFsWidthJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthJump",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
    },
    Ene0JumpDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]JumpDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to push into the program counter.",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F54,E55)
    },
    Ene0MacroCounterValue => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValue",
      RegMem => "MemField",
      Description => "New program-counter-value. Used if program-counter-valid is set",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F55,E56)
    },
    Ene0MacroCounterValid => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValid",
      RegMem => "MemField",
      Description => "If set, new program counter is taken from program-counter-value, else from packet-attributes",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F56,E57)
    },
    Ene0SpareJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJump",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "18",
      Position => "38:21", # Excel Formula: =calc_position(F57,E58)
      DocName => "Ene[n]ReservedJump",
    },
    Ene0StoreEncapSizeJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJump",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F58,E59)
    },
    Ene0StoreCsCommandJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJump",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F59,E60)
    },
    Ene0StartNextMacroJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJump",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F60,E61)
    },
    Ene0OpJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]OpJump",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F61,E62)
    },
  },
  Ene1MacroMemoryJump => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJump",
    RegMem => "Mem",
    Address => "200000",
    Width => "52", # Excel Formula: =calc_mem_width(E54:E62,M53,F62,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "1",
    MemLogicalWidth => "45",
    Ene1DataFsWidthJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthJump",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
    },
    Ene1JumpDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]JumpDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to push into the program counter.",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F54,E55)
    },
    Ene1MacroCounterValue => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValue",
      RegMem => "MemField",
      Description => "New program-counter-value. Used if program-counter-valid is set",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F55,E56)
    },
    Ene1MacroCounterValid => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValid",
      RegMem => "MemField",
      Description => "If set, new program counter is taken from program-counter-value, else from packet-attributes",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F56,E57)
    },
    Ene1SpareJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJump",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "18",
      Position => "38:21", # Excel Formula: =calc_position(F57,E58)
      DocName => "Ene[n]ReservedJump",
    },
    Ene1StoreEncapSizeJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJump",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F58,E59)
    },
    Ene1StoreCsCommandJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJump",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F59,E60)
    },
    Ene1StartNextMacroJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJump",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F60,E61)
    },
    Ene1OpJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]OpJump",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F61,E62)
    },
  },
  Ene2MacroMemoryJump => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJump",
    RegMem => "Mem",
    Address => "300000",
    Width => "52", # Excel Formula: =calc_mem_width(E54:E62,M53,F62,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "2",
    MemLogicalWidth => "45",
    Ene2DataFsWidthJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthJump",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
    },
    Ene2JumpDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]JumpDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to push into the program counter.",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F54,E55)
    },
    Ene2MacroCounterValue => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValue",
      RegMem => "MemField",
      Description => "New program-counter-value. Used if program-counter-valid is set",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F55,E56)
    },
    Ene2MacroCounterValid => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValid",
      RegMem => "MemField",
      Description => "If set, new program counter is taken from program-counter-value, else from packet-attributes",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F56,E57)
    },
    Ene2SpareJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJump",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "18",
      Position => "38:21", # Excel Formula: =calc_position(F57,E58)
      DocName => "Ene[n]ReservedJump",
    },
    Ene2StoreEncapSizeJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJump",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F58,E59)
    },
    Ene2StoreCsCommandJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJump",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F59,E60)
    },
    Ene2StartNextMacroJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJump",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F60,E61)
    },
    Ene2OpJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]OpJump",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F61,E62)
    },
  },
  Ene3MacroMemoryJump => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJump",
    RegMem => "Mem",
    Address => "400000",
    Width => "52", # Excel Formula: =calc_mem_width(E54:E62,M53,F62,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "3",
    MemLogicalWidth => "45",
    Ene3DataFsWidthJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthJump",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
    },
    Ene3JumpDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]JumpDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to push into the program counter.",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F54,E55)
    },
    Ene3MacroCounterValue => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValue",
      RegMem => "MemField",
      Description => "New program-counter-value. Used if program-counter-valid is set",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F55,E56)
    },
    Ene3MacroCounterValid => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValid",
      RegMem => "MemField",
      Description => "If set, new program counter is taken from program-counter-value, else from packet-attributes",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F56,E57)
    },
    Ene3SpareJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJump",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "18",
      Position => "38:21", # Excel Formula: =calc_position(F57,E58)
      DocName => "Ene[n]ReservedJump",
    },
    Ene3StoreEncapSizeJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJump",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F58,E59)
    },
    Ene3StoreCsCommandJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJump",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F59,E60)
    },
    Ene3StartNextMacroJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJump",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F60,E61)
    },
    Ene3OpJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]OpJump",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F61,E62)
    },
  },
  Ene4MacroMemoryJump => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJump",
    RegMem => "Mem",
    Address => "500000",
    Width => "52", # Excel Formula: =calc_mem_width(E54:E62,M53,F62,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "4",
    MemLogicalWidth => "45",
    Ene4DataFsWidthJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthJump",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
    },
    Ene4JumpDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]JumpDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to push into the program counter.",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F54,E55)
    },
    Ene4MacroCounterValue => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValue",
      RegMem => "MemField",
      Description => "New program-counter-value. Used if program-counter-valid is set",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F55,E56)
    },
    Ene4MacroCounterValid => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValid",
      RegMem => "MemField",
      Description => "If set, new program counter is taken from program-counter-value, else from packet-attributes",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F56,E57)
    },
    Ene4SpareJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJump",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "18",
      Position => "38:21", # Excel Formula: =calc_position(F57,E58)
      DocName => "Ene[n]ReservedJump",
    },
    Ene4StoreEncapSizeJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJump",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F58,E59)
    },
    Ene4StoreCsCommandJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJump",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F59,E60)
    },
    Ene4StartNextMacroJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJump",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F60,E61)
    },
    Ene4OpJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]OpJump",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F61,E62)
    },
  },
  Ene5MacroMemoryJump => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJump",
    RegMem => "Mem",
    Address => "600000",
    Width => "52", # Excel Formula: =calc_mem_width(E54:E62,M53,F62,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "5",
    MemLogicalWidth => "45",
    Ene5DataFsWidthJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthJump",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
    },
    Ene5JumpDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]JumpDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to push into the program counter.",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F54,E55)
    },
    Ene5MacroCounterValue => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValue",
      RegMem => "MemField",
      Description => "New program-counter-value. Used if program-counter-valid is set",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F55,E56)
    },
    Ene5MacroCounterValid => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValid",
      RegMem => "MemField",
      Description => "If set, new program counter is taken from program-counter-value, else from packet-attributes",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F56,E57)
    },
    Ene5SpareJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJump",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "18",
      Position => "38:21", # Excel Formula: =calc_position(F57,E58)
      DocName => "Ene[n]ReservedJump",
    },
    Ene5StoreEncapSizeJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJump",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F58,E59)
    },
    Ene5StoreCsCommandJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJump",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F59,E60)
    },
    Ene5StartNextMacroJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJump",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F60,E61)
    },
    Ene5OpJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]OpJump",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F61,E62)
    },
  },
  Ene6MacroMemoryJump => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJump",
    RegMem => "Mem",
    Address => "700000",
    Width => "52", # Excel Formula: =calc_mem_width(E54:E62,M53,F62,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "6",
    MemLogicalWidth => "45",
    Ene6DataFsWidthJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthJump",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
    },
    Ene6JumpDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]JumpDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to push into the program counter.",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F54,E55)
    },
    Ene6MacroCounterValue => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValue",
      RegMem => "MemField",
      Description => "New program-counter-value. Used if program-counter-valid is set",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F55,E56)
    },
    Ene6MacroCounterValid => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValid",
      RegMem => "MemField",
      Description => "If set, new program counter is taken from program-counter-value, else from packet-attributes",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F56,E57)
    },
    Ene6SpareJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJump",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "18",
      Position => "38:21", # Excel Formula: =calc_position(F57,E58)
      DocName => "Ene[n]ReservedJump",
    },
    Ene6StoreEncapSizeJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJump",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F58,E59)
    },
    Ene6StoreCsCommandJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJump",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F59,E60)
    },
    Ene6StartNextMacroJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJump",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F60,E61)
    },
    Ene6OpJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]OpJump",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F61,E62)
    },
  },
  Ene7MacroMemoryJump => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJump",
    RegMem => "Mem",
    Address => "800000",
    Width => "52", # Excel Formula: =calc_mem_width(E54:E62,M53,F62,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "7",
    MemLogicalWidth => "45",
    Ene7DataFsWidthJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthJump",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
    },
    Ene7JumpDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]JumpDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to push into the program counter.",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F54,E55)
    },
    Ene7MacroCounterValue => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValue",
      RegMem => "MemField",
      Description => "New program-counter-value. Used if program-counter-valid is set",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F55,E56)
    },
    Ene7MacroCounterValid => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValid",
      RegMem => "MemField",
      Description => "If set, new program counter is taken from program-counter-value, else from packet-attributes",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F56,E57)
    },
    Ene7SpareJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJump",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "18",
      Position => "38:21", # Excel Formula: =calc_position(F57,E58)
      DocName => "Ene[n]ReservedJump",
    },
    Ene7StoreEncapSizeJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJump",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F58,E59)
    },
    Ene7StoreCsCommandJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJump",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F59,E60)
    },
    Ene7StartNextMacroJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJump",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F60,E61)
    },
    Ene7OpJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]OpJump",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F61,E62)
    },
  },
  Ene8MacroMemoryJump => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJump",
    RegMem => "Mem",
    Address => "900000",
    Width => "52", # Excel Formula: =calc_mem_width(E54:E62,M53,F62,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "8",
    MemLogicalWidth => "45",
    Ene8DataFsWidthJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthJump",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
    },
    Ene8JumpDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]JumpDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to push into the program counter.",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F54,E55)
    },
    Ene8MacroCounterValue => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValue",
      RegMem => "MemField",
      Description => "New program-counter-value. Used if program-counter-valid is set",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F55,E56)
    },
    Ene8MacroCounterValid => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValid",
      RegMem => "MemField",
      Description => "If set, new program counter is taken from program-counter-value, else from packet-attributes",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F56,E57)
    },
    Ene8SpareJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJump",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "18",
      Position => "38:21", # Excel Formula: =calc_position(F57,E58)
      DocName => "Ene[n]ReservedJump",
    },
    Ene8StoreEncapSizeJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJump",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F58,E59)
    },
    Ene8StoreCsCommandJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJump",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F59,E60)
    },
    Ene8StartNextMacroJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJump",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F60,E61)
    },
    Ene8OpJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]OpJump",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F61,E62)
    },
  },
  Ene9MacroMemoryJump => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJump",
    RegMem => "Mem",
    Address => "A00000",
    Width => "52", # Excel Formula: =calc_mem_width(E54:E62,M53,F62,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "9",
    MemLogicalWidth => "45",
    Ene9DataFsWidthJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthJump",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
    },
    Ene9JumpDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]JumpDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to push into the program counter.",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F54,E55)
    },
    Ene9MacroCounterValue => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValue",
      RegMem => "MemField",
      Description => "New program-counter-value. Used if program-counter-valid is set",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F55,E56)
    },
    Ene9MacroCounterValid => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValid",
      RegMem => "MemField",
      Description => "If set, new program counter is taken from program-counter-value, else from packet-attributes",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F56,E57)
    },
    Ene9SpareJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJump",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "18",
      Position => "38:21", # Excel Formula: =calc_position(F57,E58)
      DocName => "Ene[n]ReservedJump",
    },
    Ene9StoreEncapSizeJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJump",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F58,E59)
    },
    Ene9StoreCsCommandJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJump",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F59,E60)
    },
    Ene9StartNextMacroJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJump",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F60,E61)
    },
    Ene9OpJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]OpJump",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F61,E62)
    },
  },
  Ene10MacroMemoryJump => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJump",
    RegMem => "Mem",
    Address => "B00000",
    Width => "52", # Excel Formula: =calc_mem_width(E54:E62,M53,F62,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "10",
    MemLogicalWidth => "45",
    Ene10DataFsWidthJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthJump",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
    },
    Ene10JumpDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]JumpDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to push into the program counter.",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F54,E55)
    },
    Ene10MacroCounterValue => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValue",
      RegMem => "MemField",
      Description => "New program-counter-value. Used if program-counter-valid is set",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F55,E56)
    },
    Ene10MacroCounterValid => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValid",
      RegMem => "MemField",
      Description => "If set, new program counter is taken from program-counter-value, else from packet-attributes",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F56,E57)
    },
    Ene10SpareJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJump",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "18",
      Position => "38:21", # Excel Formula: =calc_position(F57,E58)
      DocName => "Ene[n]ReservedJump",
    },
    Ene10StoreEncapSizeJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJump",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F58,E59)
    },
    Ene10StoreCsCommandJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJump",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F59,E60)
    },
    Ene10StartNextMacroJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJump",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F60,E61)
    },
    Ene10OpJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]OpJump",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F61,E62)
    },
  },
  Ene11MacroMemoryJump => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJump",
    RegMem => "Mem",
    Address => "C00000",
    Width => "52", # Excel Formula: =calc_mem_width(E54:E62,M53,F62,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "11",
    MemLogicalWidth => "45",
    Ene11DataFsWidthJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]DataFsWidthJump",
      RegMem => "MemField",
      Description => "Width of data to select from the pkt_attr/scratchpad bus  in bytes (also uses to shift right the header)",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F53,E54,TRUE)
    },
    Ene11JumpDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]JumpDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to push into the program counter.",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F54,E55)
    },
    Ene11MacroCounterValue => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValue",
      RegMem => "MemField",
      Description => "New program-counter-value. Used if program-counter-valid is set",
      Width => "8",
      Position => "19:12", # Excel Formula: =calc_position(F55,E56)
    },
    Ene11MacroCounterValid => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]MacroCounterValid",
      RegMem => "MemField",
      Description => "If set, new program counter is taken from program-counter-value, else from packet-attributes",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F56,E57)
    },
    Ene11SpareJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJump",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "18",
      Position => "38:21", # Excel Formula: =calc_position(F57,E58)
      DocName => "Ene[n]ReservedJump",
    },
    Ene11StoreEncapSizeJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJump",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F58,E59)
    },
    Ene11StoreCsCommandJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJump",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F59,E60)
    },
    Ene11StartNextMacroJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJump",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F60,E61)
    },
    Ene11OpJump => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]OpJump",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F61,E62)
    },
  },
  Ene0MacroMemoryJumpTable => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJumpTable",
    RegMem => "Mem",
    Address => "100000", # Excel Formula: =calc_mem_address(C11,A11,G63,L63)
    Width => "52", # Excel Formula: =calc_mem_width(E64:E70,M63,F70,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "0",
    MemLogicalWidth => "45",
    Ene0JumpTableOffsetWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableOffsetWidth",
      RegMem => "MemField",
      Description => "Width of jump offset in bits",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F63,E64,TRUE)
    },
    Ene0JumpTableDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to be added to program-counter",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F64,E65)
    },
    Ene0SpareJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJumpTable",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "27",
      Position => "38:12", # Excel Formula: =calc_position(F65,E66)
      DocName => "Ene[n]ReservedJumpTable",
    },
    Ene0StoreEncapSizeJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJumpTable",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F66,E67)
    },
    Ene0StoreCsCommandJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJumpTable",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F67,E68)
    },
    Ene0StartNextMacroJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJumpTable",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F68,E69)
    },
    Ene0OpJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 0; ArrayLocationInName: 4;
      Name => "Ene[n]OpJumpTable",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F69,E70)
    },
  },
  Ene1MacroMemoryJumpTable => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJumpTable",
    RegMem => "Mem",
    Address => "200000",
    Width => "52", # Excel Formula: =calc_mem_width(E64:E70,M63,F70,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "1",
    MemLogicalWidth => "45",
    Ene1JumpTableOffsetWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableOffsetWidth",
      RegMem => "MemField",
      Description => "Width of jump offset in bits",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F63,E64,TRUE)
    },
    Ene1JumpTableDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to be added to program-counter",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F64,E65)
    },
    Ene1SpareJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJumpTable",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "27",
      Position => "38:12", # Excel Formula: =calc_position(F65,E66)
      DocName => "Ene[n]ReservedJumpTable",
    },
    Ene1StoreEncapSizeJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJumpTable",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F66,E67)
    },
    Ene1StoreCsCommandJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJumpTable",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F67,E68)
    },
    Ene1StartNextMacroJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJumpTable",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F68,E69)
    },
    Ene1OpJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 1; ArrayLocationInName: 4;
      Name => "Ene[n]OpJumpTable",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F69,E70)
    },
  },
  Ene2MacroMemoryJumpTable => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJumpTable",
    RegMem => "Mem",
    Address => "300000",
    Width => "52", # Excel Formula: =calc_mem_width(E64:E70,M63,F70,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "2",
    MemLogicalWidth => "45",
    Ene2JumpTableOffsetWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableOffsetWidth",
      RegMem => "MemField",
      Description => "Width of jump offset in bits",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F63,E64,TRUE)
    },
    Ene2JumpTableDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to be added to program-counter",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F64,E65)
    },
    Ene2SpareJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJumpTable",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "27",
      Position => "38:12", # Excel Formula: =calc_position(F65,E66)
      DocName => "Ene[n]ReservedJumpTable",
    },
    Ene2StoreEncapSizeJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJumpTable",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F66,E67)
    },
    Ene2StoreCsCommandJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJumpTable",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F67,E68)
    },
    Ene2StartNextMacroJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJumpTable",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F68,E69)
    },
    Ene2OpJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 2; ArrayLocationInName: 4;
      Name => "Ene[n]OpJumpTable",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F69,E70)
    },
  },
  Ene3MacroMemoryJumpTable => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJumpTable",
    RegMem => "Mem",
    Address => "400000",
    Width => "52", # Excel Formula: =calc_mem_width(E64:E70,M63,F70,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "3",
    MemLogicalWidth => "45",
    Ene3JumpTableOffsetWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableOffsetWidth",
      RegMem => "MemField",
      Description => "Width of jump offset in bits",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F63,E64,TRUE)
    },
    Ene3JumpTableDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to be added to program-counter",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F64,E65)
    },
    Ene3SpareJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJumpTable",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "27",
      Position => "38:12", # Excel Formula: =calc_position(F65,E66)
      DocName => "Ene[n]ReservedJumpTable",
    },
    Ene3StoreEncapSizeJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJumpTable",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F66,E67)
    },
    Ene3StoreCsCommandJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJumpTable",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F67,E68)
    },
    Ene3StartNextMacroJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJumpTable",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F68,E69)
    },
    Ene3OpJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 3; ArrayLocationInName: 4;
      Name => "Ene[n]OpJumpTable",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F69,E70)
    },
  },
  Ene4MacroMemoryJumpTable => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJumpTable",
    RegMem => "Mem",
    Address => "500000",
    Width => "52", # Excel Formula: =calc_mem_width(E64:E70,M63,F70,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "4",
    MemLogicalWidth => "45",
    Ene4JumpTableOffsetWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableOffsetWidth",
      RegMem => "MemField",
      Description => "Width of jump offset in bits",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F63,E64,TRUE)
    },
    Ene4JumpTableDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to be added to program-counter",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F64,E65)
    },
    Ene4SpareJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJumpTable",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "27",
      Position => "38:12", # Excel Formula: =calc_position(F65,E66)
      DocName => "Ene[n]ReservedJumpTable",
    },
    Ene4StoreEncapSizeJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJumpTable",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F66,E67)
    },
    Ene4StoreCsCommandJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJumpTable",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F67,E68)
    },
    Ene4StartNextMacroJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJumpTable",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F68,E69)
    },
    Ene4OpJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 4; ArrayLocationInName: 4;
      Name => "Ene[n]OpJumpTable",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F69,E70)
    },
  },
  Ene5MacroMemoryJumpTable => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJumpTable",
    RegMem => "Mem",
    Address => "600000",
    Width => "52", # Excel Formula: =calc_mem_width(E64:E70,M63,F70,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "5",
    MemLogicalWidth => "45",
    Ene5JumpTableOffsetWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableOffsetWidth",
      RegMem => "MemField",
      Description => "Width of jump offset in bits",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F63,E64,TRUE)
    },
    Ene5JumpTableDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to be added to program-counter",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F64,E65)
    },
    Ene5SpareJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJumpTable",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "27",
      Position => "38:12", # Excel Formula: =calc_position(F65,E66)
      DocName => "Ene[n]ReservedJumpTable",
    },
    Ene5StoreEncapSizeJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJumpTable",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F66,E67)
    },
    Ene5StoreCsCommandJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJumpTable",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F67,E68)
    },
    Ene5StartNextMacroJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJumpTable",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F68,E69)
    },
    Ene5OpJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 5; ArrayLocationInName: 4;
      Name => "Ene[n]OpJumpTable",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F69,E70)
    },
  },
  Ene6MacroMemoryJumpTable => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJumpTable",
    RegMem => "Mem",
    Address => "700000",
    Width => "52", # Excel Formula: =calc_mem_width(E64:E70,M63,F70,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "6",
    MemLogicalWidth => "45",
    Ene6JumpTableOffsetWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableOffsetWidth",
      RegMem => "MemField",
      Description => "Width of jump offset in bits",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F63,E64,TRUE)
    },
    Ene6JumpTableDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to be added to program-counter",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F64,E65)
    },
    Ene6SpareJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJumpTable",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "27",
      Position => "38:12", # Excel Formula: =calc_position(F65,E66)
      DocName => "Ene[n]ReservedJumpTable",
    },
    Ene6StoreEncapSizeJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJumpTable",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F66,E67)
    },
    Ene6StoreCsCommandJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJumpTable",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F67,E68)
    },
    Ene6StartNextMacroJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJumpTable",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F68,E69)
    },
    Ene6OpJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 6; ArrayLocationInName: 4;
      Name => "Ene[n]OpJumpTable",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F69,E70)
    },
  },
  Ene7MacroMemoryJumpTable => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJumpTable",
    RegMem => "Mem",
    Address => "800000",
    Width => "52", # Excel Formula: =calc_mem_width(E64:E70,M63,F70,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "7",
    MemLogicalWidth => "45",
    Ene7JumpTableOffsetWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableOffsetWidth",
      RegMem => "MemField",
      Description => "Width of jump offset in bits",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F63,E64,TRUE)
    },
    Ene7JumpTableDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to be added to program-counter",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F64,E65)
    },
    Ene7SpareJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJumpTable",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "27",
      Position => "38:12", # Excel Formula: =calc_position(F65,E66)
      DocName => "Ene[n]ReservedJumpTable",
    },
    Ene7StoreEncapSizeJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJumpTable",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F66,E67)
    },
    Ene7StoreCsCommandJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJumpTable",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F67,E68)
    },
    Ene7StartNextMacroJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJumpTable",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F68,E69)
    },
    Ene7OpJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 7; ArrayLocationInName: 4;
      Name => "Ene[n]OpJumpTable",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F69,E70)
    },
  },
  Ene8MacroMemoryJumpTable => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJumpTable",
    RegMem => "Mem",
    Address => "900000",
    Width => "52", # Excel Formula: =calc_mem_width(E64:E70,M63,F70,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "8",
    MemLogicalWidth => "45",
    Ene8JumpTableOffsetWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableOffsetWidth",
      RegMem => "MemField",
      Description => "Width of jump offset in bits",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F63,E64,TRUE)
    },
    Ene8JumpTableDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to be added to program-counter",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F64,E65)
    },
    Ene8SpareJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJumpTable",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "27",
      Position => "38:12", # Excel Formula: =calc_position(F65,E66)
      DocName => "Ene[n]ReservedJumpTable",
    },
    Ene8StoreEncapSizeJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJumpTable",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F66,E67)
    },
    Ene8StoreCsCommandJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJumpTable",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F67,E68)
    },
    Ene8StartNextMacroJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJumpTable",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F68,E69)
    },
    Ene8OpJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 8; ArrayLocationInName: 4;
      Name => "Ene[n]OpJumpTable",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F69,E70)
    },
  },
  Ene9MacroMemoryJumpTable => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJumpTable",
    RegMem => "Mem",
    Address => "A00000",
    Width => "52", # Excel Formula: =calc_mem_width(E64:E70,M63,F70,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "9",
    MemLogicalWidth => "45",
    Ene9JumpTableOffsetWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableOffsetWidth",
      RegMem => "MemField",
      Description => "Width of jump offset in bits",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F63,E64,TRUE)
    },
    Ene9JumpTableDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to be added to program-counter",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F64,E65)
    },
    Ene9SpareJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJumpTable",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "27",
      Position => "38:12", # Excel Formula: =calc_position(F65,E66)
      DocName => "Ene[n]ReservedJumpTable",
    },
    Ene9StoreEncapSizeJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJumpTable",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F66,E67)
    },
    Ene9StoreCsCommandJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJumpTable",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F67,E68)
    },
    Ene9StartNextMacroJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJumpTable",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F68,E69)
    },
    Ene9OpJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 9; ArrayLocationInName: 4;
      Name => "Ene[n]OpJumpTable",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F69,E70)
    },
  },
  Ene10MacroMemoryJumpTable => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJumpTable",
    RegMem => "Mem",
    Address => "B00000",
    Width => "52", # Excel Formula: =calc_mem_width(E64:E70,M63,F70,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "10",
    MemLogicalWidth => "45",
    Ene10JumpTableOffsetWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableOffsetWidth",
      RegMem => "MemField",
      Description => "Width of jump offset in bits",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F63,E64,TRUE)
    },
    Ene10JumpTableDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to be added to program-counter",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F64,E65)
    },
    Ene10SpareJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJumpTable",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "27",
      Position => "38:12", # Excel Formula: =calc_position(F65,E66)
      DocName => "Ene[n]ReservedJumpTable",
    },
    Ene10StoreEncapSizeJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJumpTable",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F66,E67)
    },
    Ene10StoreCsCommandJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJumpTable",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F67,E68)
    },
    Ene10StartNextMacroJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJumpTable",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F68,E69)
    },
    Ene10OpJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 10; ArrayLocationInName: 4;
      Name => "Ene[n]OpJumpTable",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F69,E70)
    },
  },
  Ene11MacroMemoryJumpTable => { #Structure Type: Mem; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
    Name => "Ene[12]MacroMemoryJumpTable",
    RegMem => "Mem",
    Address => "C00000",
    Width => "52", # Excel Formula: =calc_mem_width(E64:E70,M63,F70,-1)
    Type => "DocOnly",
    UsedBy => "ene",
    MemEntries => "256",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=1,PortErrPropagate=Enabled,CpuReadAccess=Enabled,CpuWriteAccess=Enabled",
    ArrayLength => "12",
    ArrayIndex => "11",
    MemLogicalWidth => "45",
    Ene11JumpTableOffsetWidth => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableOffsetWidth",
      RegMem => "MemField",
      Description => "Width of jump offset in bits",
      Width => "4",
      Position => "3:0", # Excel Formula: =calc_position(F63,E64,TRUE)
    },
    Ene11JumpTableDataOffset => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]JumpTableDataOffset",
      RegMem => "MemField",
      Description => "The offset (in bytes) of the data to be added to program-counter",
      Width => "8",
      Position => "11:4", # Excel Formula: =calc_position(F64,E65)
    },
    Ene11SpareJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]SpareJumpTable",
      RegMem => "MemField",
      Description => "Reserved",
      Width => "27",
      Position => "38:12", # Excel Formula: =calc_position(F65,E66)
      DocName => "Ene[n]ReservedJumpTable",
    },
    Ene11StoreEncapSizeJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StoreEncapSizeJumpTable",
      RegMem => "MemField",
      Description => "Marks the size of first and second encapsulations",
      Width => "1",
      Position => "39", # Excel Formula: =calc_position(F66,E67)
    },
    Ene11StoreCsCommandJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StoreCsCommandJumpTable",
      RegMem => "MemField",
      Description => "Marks the location of the IPv4 for check sum calculation",
      Width => "1",
      Position => "40", # Excel Formula: =calc_position(F67,E68)
    },
    Ene11StartNextMacroJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]StartNextMacroJumpTable",
      RegMem => "MemField",
      Description => "Initiate loading of an address of a new macro to the macro counter",
      Width => "1",
      Position => "41", # Excel Formula: =calc_position(F68,E69)
    },
    Ene11OpJumpTable => { #Structure Type: MemField; ArrayLength: 12; ArrayIndex: 11; ArrayLocationInName: 4;
      Name => "Ene[n]OpJumpTable",
      RegMem => "MemField",
      Description => "ENE op (000: NOP, 001: push to scratch pad, 010: Push Packet Size, 011: push pkr attr to header, 100: push const to header, 101: Push const to scratchpad, 110: Jump,  111: Jump Table)",
      Width => "3",
      Position => "44:42", # Excel Formula: =calc_position(F69,E70)
    },
  },
};
