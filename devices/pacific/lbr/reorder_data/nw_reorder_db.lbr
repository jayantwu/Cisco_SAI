$block{nw_reorder} = {
  Defines_db => "Z:\\leaba_reg_db_example\\defines.v",
  ProjectName => "Pacific",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "2",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    ReorderGlobalInterruptSummary => { #Structure Type: RegField;
      Name => "ReorderGlobalInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, ReorderGlobalInterrupt has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks Ecc_1bErrInterrupt",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks Ecc_2bErrInterrupt",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks ParityErrInterrupt",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "35",
    Type => "Config",
    Fifo0NewPkts0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo0NewPkts0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo0NewPkts1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo0NewPkts1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo0NewPkts2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo0NewPkts2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo0NewPkts3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo0NewPkts3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo0NewPkts4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo0NewPkts4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo0NewPkts5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo0NewPkts5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo1NewPkts0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo1NewPkts0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo1NewPkts1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo1NewPkts1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo1NewPkts2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo1NewPkts2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo1NewPkts3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo1NewPkts3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo1NewPkts4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo1NewPkts4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo1NewPkts5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo1NewPkts5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    MmaFifo0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "MmaFifo0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    MmaFifo1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "MmaFifo1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    MmaFifo2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "MmaFifo2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo6Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo6Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo7Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo7Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo8Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo8Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSliceOutValidFifo0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSliceOutValidFifo1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSliceOutValidFifo2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwReorderRdFifo0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwReorderRdFifo0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwReorderRdFifo1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwReorderRdFifo1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwReorderRdFifo2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwReorderRdFifo2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwReorderRdFifo3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwReorderRdFifo3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwReorderRdFifo4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwReorderRdFifo4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "31",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwReorderRdFifo5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwReorderRdFifo5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "32",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbFreeConnectionsManagerEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SlbFreeConnectionsManagerEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "33",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbResetWasSentEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "SlbResetWasSentEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "34",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "35",
    Type => "Config",
    Fifo0NewPkts0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo0NewPkts0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo0NewPkts1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo0NewPkts1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo0NewPkts2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo0NewPkts2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo0NewPkts3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo0NewPkts3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo0NewPkts4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo0NewPkts4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo0NewPkts5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo0NewPkts5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo1NewPkts0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo1NewPkts0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo1NewPkts1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo1NewPkts1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo1NewPkts2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo1NewPkts2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo1NewPkts3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo1NewPkts3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo1NewPkts4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo1NewPkts4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    Fifo1NewPkts5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "Fifo1NewPkts5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    MmaFifo0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "MmaFifo0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    MmaFifo1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "MmaFifo1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    MmaFifo2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "MmaFifo2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo6Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo6Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo7Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo7Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSrcSliceTrgSlicePdFifo8Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo8Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSliceOutValidFifo0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSliceOutValidFifo1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwSliceOutValidFifo2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwReorderRdFifo0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwReorderRdFifo0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwReorderRdFifo1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwReorderRdFifo1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwReorderRdFifo2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwReorderRdFifo2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwReorderRdFifo3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwReorderRdFifo3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwReorderRdFifo4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwReorderRdFifo4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "31",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    NwReorderRdFifo5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "NwReorderRdFifo5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "32",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbFreeConnectionsManagerEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SlbFreeConnectionsManagerEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "33",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    SlbResetWasSentEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "SlbResetWasSentEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "34",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInitiateRegister",
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "35",
    Type => "Config",
    Fifo0NewPkts0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo0NewPkts0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo0NewPkts1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo0NewPkts1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo0NewPkts2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo0NewPkts2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo0NewPkts3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo0NewPkts3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo0NewPkts4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo0NewPkts4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo0NewPkts5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo0NewPkts5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo1NewPkts0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo1NewPkts0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo1NewPkts1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo1NewPkts1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo1NewPkts2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo1NewPkts2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo1NewPkts3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo1NewPkts3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo1NewPkts4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo1NewPkts4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo1NewPkts5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo1NewPkts5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    MmaFifo0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "MmaFifo0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    MmaFifo1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "MmaFifo1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    MmaFifo2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "MmaFifo2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo6Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo6Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo7Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo7Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo8Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo8Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSliceOutValidFifo0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSliceOutValidFifo1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSliceOutValidFifo2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwReorderRdFifo0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwReorderRdFifo0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwReorderRdFifo1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwReorderRdFifo1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwReorderRdFifo2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwReorderRdFifo2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwReorderRdFifo3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwReorderRdFifo3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwReorderRdFifo4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwReorderRdFifo4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "31",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwReorderRdFifo5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "NwReorderRdFifo5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "32",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbFreeConnectionsManagerEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SlbFreeConnectionsManagerEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "33",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbResetWasSentEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "SlbResetWasSentEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "34",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInitiateRegister",
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "35",
    Type => "Config",
    Fifo0NewPkts0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo0NewPkts0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo0NewPkts1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo0NewPkts1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo0NewPkts2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo0NewPkts2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo0NewPkts3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo0NewPkts3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo0NewPkts4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo0NewPkts4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo0NewPkts5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo0NewPkts5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo1NewPkts0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo1NewPkts0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo1NewPkts1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo1NewPkts1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "7",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo1NewPkts2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo1NewPkts2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "8",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo1NewPkts3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo1NewPkts3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "9",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo1NewPkts4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo1NewPkts4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "10",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    Fifo1NewPkts5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "Fifo1NewPkts5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "11",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    MmaFifo0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "MmaFifo0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "12",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    MmaFifo1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "MmaFifo1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "13",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    MmaFifo2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "MmaFifo2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "14",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "15",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "16",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "17",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "18",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "19",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "20",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo6Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo6Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "21",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo7Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo7Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "22",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSrcSliceTrgSlicePdFifo8Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo8Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "23",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSliceOutValidFifo0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "24",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSliceOutValidFifo1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "25",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwSliceOutValidFifo2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "26",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwReorderRdFifo0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwReorderRdFifo0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "27",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwReorderRdFifo1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwReorderRdFifo1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "28",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwReorderRdFifo2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwReorderRdFifo2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "29",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwReorderRdFifo3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwReorderRdFifo3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "30",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwReorderRdFifo4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwReorderRdFifo4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "31",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    NwReorderRdFifo5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "NwReorderRdFifo5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "32",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbFreeConnectionsManagerEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SlbFreeConnectionsManagerEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "33",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    SlbResetWasSentEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "SlbResetWasSentEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "34",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "35",
    Type => "ReadOnly",
    Fifo0NewPkts0ErrInt => { #Structure Type: RegField;
      Name => "Fifo0NewPkts0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    Fifo0NewPkts1ErrInt => { #Structure Type: RegField;
      Name => "Fifo0NewPkts1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    Fifo0NewPkts2ErrInt => { #Structure Type: RegField;
      Name => "Fifo0NewPkts2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    Fifo0NewPkts3ErrInt => { #Structure Type: RegField;
      Name => "Fifo0NewPkts3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    Fifo0NewPkts4ErrInt => { #Structure Type: RegField;
      Name => "Fifo0NewPkts4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    Fifo0NewPkts5ErrInt => { #Structure Type: RegField;
      Name => "Fifo0NewPkts5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    Fifo1NewPkts0ErrInt => { #Structure Type: RegField;
      Name => "Fifo1NewPkts0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
    Fifo1NewPkts1ErrInt => { #Structure Type: RegField;
      Name => "Fifo1NewPkts1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "7",
      Type => "Status",
      UsedBy => "SER",
    },
    Fifo1NewPkts2ErrInt => { #Structure Type: RegField;
      Name => "Fifo1NewPkts2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "8",
      Type => "Status",
      UsedBy => "SER",
    },
    Fifo1NewPkts3ErrInt => { #Structure Type: RegField;
      Name => "Fifo1NewPkts3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "9",
      Type => "Status",
      UsedBy => "SER",
    },
    Fifo1NewPkts4ErrInt => { #Structure Type: RegField;
      Name => "Fifo1NewPkts4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "10",
      Type => "Status",
      UsedBy => "SER",
    },
    Fifo1NewPkts5ErrInt => { #Structure Type: RegField;
      Name => "Fifo1NewPkts5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "11",
      Type => "Status",
      UsedBy => "SER",
    },
    MmaFifo0ErrInt => { #Structure Type: RegField;
      Name => "MmaFifo0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "12",
      Type => "Status",
      UsedBy => "SER",
    },
    MmaFifo1ErrInt => { #Structure Type: RegField;
      Name => "MmaFifo1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "13",
      Type => "Status",
      UsedBy => "SER",
    },
    MmaFifo2ErrInt => { #Structure Type: RegField;
      Name => "MmaFifo2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "14",
      Type => "Status",
      UsedBy => "SER",
    },
    NwSrcSliceTrgSlicePdFifo0ErrInt => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "15",
      Type => "Status",
      UsedBy => "SER",
    },
    NwSrcSliceTrgSlicePdFifo1ErrInt => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "16",
      Type => "Status",
      UsedBy => "SER",
    },
    NwSrcSliceTrgSlicePdFifo2ErrInt => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "17",
      Type => "Status",
      UsedBy => "SER",
    },
    NwSrcSliceTrgSlicePdFifo3ErrInt => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "18",
      Type => "Status",
      UsedBy => "SER",
    },
    NwSrcSliceTrgSlicePdFifo4ErrInt => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "19",
      Type => "Status",
      UsedBy => "SER",
    },
    NwSrcSliceTrgSlicePdFifo5ErrInt => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "20",
      Type => "Status",
      UsedBy => "SER",
    },
    NwSrcSliceTrgSlicePdFifo6ErrInt => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo6ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "21",
      Type => "Status",
      UsedBy => "SER",
    },
    NwSrcSliceTrgSlicePdFifo7ErrInt => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo7ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "22",
      Type => "Status",
      UsedBy => "SER",
    },
    NwSrcSliceTrgSlicePdFifo8ErrInt => { #Structure Type: RegField;
      Name => "NwSrcSliceTrgSlicePdFifo8ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "23",
      Type => "Status",
      UsedBy => "SER",
    },
    NwSliceOutValidFifo0ErrInt => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "24",
      Type => "Status",
      UsedBy => "SER",
    },
    NwSliceOutValidFifo1ErrInt => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "25",
      Type => "Status",
      UsedBy => "SER",
    },
    NwSliceOutValidFifo2ErrInt => { #Structure Type: RegField;
      Name => "NwSliceOutValidFifo2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "26",
      Type => "Status",
      UsedBy => "SER",
    },
    NwReorderRdFifo0ErrInt => { #Structure Type: RegField;
      Name => "NwReorderRdFifo0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "27",
      Type => "Status",
      UsedBy => "SER",
    },
    NwReorderRdFifo1ErrInt => { #Structure Type: RegField;
      Name => "NwReorderRdFifo1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "28",
      Type => "Status",
      UsedBy => "SER",
    },
    NwReorderRdFifo2ErrInt => { #Structure Type: RegField;
      Name => "NwReorderRdFifo2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "29",
      Type => "Status",
      UsedBy => "SER",
    },
    NwReorderRdFifo3ErrInt => { #Structure Type: RegField;
      Name => "NwReorderRdFifo3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "30",
      Type => "Status",
      UsedBy => "SER",
    },
    NwReorderRdFifo4ErrInt => { #Structure Type: RegField;
      Name => "NwReorderRdFifo4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "31",
      Type => "Status",
      UsedBy => "SER",
    },
    NwReorderRdFifo5ErrInt => { #Structure Type: RegField;
      Name => "NwReorderRdFifo5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "32",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbFreeConnectionsManagerErrInt => { #Structure Type: RegField;
      Name => "SlbFreeConnectionsManagerErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "33",
      Type => "Status",
      UsedBy => "SER",
    },
    SlbResetWasSentErrInt => { #Structure Type: RegField;
      Name => "SlbResetWasSentErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "34",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "13",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "11",
      Position => "10:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "12:11",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "7",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "6",
      Position => "5:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrDebug",
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_1bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrDebug",
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_2bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  MbistPassStatus => { #Structure Type: Reg; Skip Register;
    Name => "MbistPassStatus",
    RegMem => "Reg",
    Address => "39",
    Description => "MBIST pass status",
    Width => "70",
    Type => "ReadOnly",
    BistDonePassOut => { #Structure Type: RegField;
      Name => "BistDonePassOut",
      RegMem => "RegField",
      Description => "When this bit is set, MBIST passed",
      Width => "70",
      Position => "69:0",
      Type => "Status",
      UsedBy => "MEM",
    },
  },
  MbistFailStatus => { #Structure Type: Reg; Skip Register;
    Name => "MbistFailStatus",
    RegMem => "Reg",
    Address => "3A",
    Description => "MBIST fail status",
    Width => "70",
    Type => "ReadOnly",
    BistDoneFailOut => { #Structure Type: RegField;
      Name => "BistDoneFailOut",
      RegMem => "RegField",
      Description => "When this bit is set, MBIST failed",
      Width => "70",
      Position => "69:0",
      Type => "Status",
      UsedBy => "MEM",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
      DefaultValue => "b0",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "3", # Excel Formula: =calc_reg_width(E25:E27,F27)
    Type => "Config",
    CoreBistRprMode => { #Structure Type: RegField;
      Name => "CoreBistRprMode",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistRun => { #Structure Type: RegField;
      Name => "CoreBistRun",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistPtrnFill => { #Structure Type: RegField;
      Name => "CoreBistPtrnFill",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E29:E29,F29)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C28,A28,G28)
    Description => "Power Down Configuration for the block",
    Width => "128", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C30,A30,G30)
    Width => "39", # Excel Formula: =calc_reg_width(E33:E37,F37)
    Type => "Config",
    PmroExecute => { #Structure Type: RegField;
      Name => "PmroExecute",
      RegMem => "RegField",
      Description => "0->1: execute pmro command.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroCmd => { #Structure Type: RegField;
      Name => "PmroCmd",
      RegMem => "RegField",
      Description => "Pmro command to execute:
0: reset.
1: write.
2: read.
3: invalid.",
      Width => "2",
      Position => "2:1", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroSbusReset => { #Structure Type: RegField;
      Name => "PmroSbusReset",
      RegMem => "RegField",
      Description => "Reset pmro sbus chain. Need to set to 0 before starting access to pmro registers.",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroAddr => { #Structure Type: RegField;
      Name => "PmroAddr",
      RegMem => "RegField",
      Description => "PMRO register address:
0 - control register, 8b, def: 0x0.
1 - SVT Configuration Register, 16b, def: 0xFFFF.
2 - LVT Configuration Register, 16b, def: 0xFFFF.
3 - ULVT Configuration Register, 16b, def: 0xFFFF.
4 - Interconnect Configuration Register, 16b, def: 0xFFFF.
5 - Reference Clock Counter Register, 24b, def: 0xFFF000.
6 - Oscillator Counter Register, 24b, def: 0x000000.
7 - SBus ID register, read as 0x0B.
Set to '0' on reset command.",
      Width => "3",
      Position => "6:4", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroData => { #Structure Type: RegField;
      Name => "PmroData",
      RegMem => "RegField",
      Description => "PMRO data, set to 0x0 on reset and read command.",
      Width => "32",
      Position => "38:7", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C32,A32,G32)
    Width => "34", # Excel Formula: =calc_reg_width(E39:E41,F41)
    Type => "ReadOnly",
    PmroRdata => { #Structure Type: RegField;
      Name => "PmroRdata",
      RegMem => "RegField",
      Description => "Read data from pmro. Valid when PmroFinish=1 and PmroFailed=0.",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFailed => { #Structure Type: RegField;
      Name => "PmroFailed",
      RegMem => "RegField",
      Description => "Pmro command failed. Valid only when PmroFinish=1.",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F39,E40)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFinish => { #Structure Type: RegField;
      Name => "PmroFinish",
      RegMem => "RegField",
      Description => "Pmro command finished.",
      Width => "1",
      Position => "33", # Excel Formula: =calc_position(F40,E41)
      Type => "Event",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C38,A38,G38)
    Description => "aaa",
    Width => "11", # Excel Formula: =calc_reg_width(E43:E44,F44)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "aaa",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F42,E43,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "aaa",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C42,A42,G42)
    Description => "aaa",
    Width => "32", # Excel Formula: =calc_reg_width(E46:E46,F46)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "aaa",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F45,E46,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C45,A45,G45)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E48:E48,F48)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F47,E48,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  ReorderGlobalReg => { #Structure Type: Reg;
    Name => "ReorderGlobalReg",
    RegMem => "Reg",
    Address => "100",
    Width => "1", # Excel Formula: =calc_reg_width(E8:E8,F8)
    Type => "ReadOnly",
    ReorderInitDone => { #Structure Type: RegField;
      Name => "ReorderInitDone",
      RegMem => "RegField",
      Description => "Indicates that all the reorder tables finished the init process",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  GlobalConfigReg => { #Structure Type: Reg;
    Name => "GlobalConfigReg",
    RegMem => "Reg",
    Address => "101", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Width => "23", # Excel Formula: =calc_reg_width(E10:E11,F11)
    Type => "Config",
    BuffCountEnable => { #Structure Type: RegField;
      Name => "BuffCountEnable",
      RegMem => "RegField",
      Description => "A bit per slice - When this bit is set - the slice participates in the reorder buffer counting.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F9,E10,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h3f",
      Comments => "Constant",
    },
    ReorderMaxBuffThr => { #Structure Type: RegField;
      Name => "ReorderMaxBuffThr",
      RegMem => "RegField",
      Description => "When the number of buffers occupied by packets which reside inside the reorder block crosses this threshold - the reorder will start dropping packets.",
      Width => "17",
      Position => "22:6", # Excel Formula: =calc_position(F10,E11)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1ffff",
      Comments => "ConfigDB",
    },
  },
  ReorderGlobalInterrupt => { #Structure Type: Reg;
    Name => "ReorderGlobalInterrupt",
    RegMem => "Reg",
    Address => "102", # Excel Formula: =calc_reg_address(C9,A9,G9)
    Width => "9", # Excel Formula: =calc_reg_width(E13:E21,F21)
    Type => "Interrupt",
    NwReorderBlock0Interrupt => { #Structure Type: RegField;
      Name => "NwReorderBlock0Interrupt",
      RegMem => "RegField",
      Description => "The interrupt summary bit of nw reorder block 0",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
    NwReorderBlock1Interrupt => { #Structure Type: RegField;
      Name => "NwReorderBlock1Interrupt",
      RegMem => "RegField",
      Description => "The interrupt summary bit of nw reorder block 1",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F13,E14)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
    NwReorderBlock2Interrupt => { #Structure Type: RegField;
      Name => "NwReorderBlock2Interrupt",
      RegMem => "RegField",
      Description => "The interrupt summary bit of nw reorder block 2",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F14,E15)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
    NwReorderBlock3Interrupt => { #Structure Type: RegField;
      Name => "NwReorderBlock3Interrupt",
      RegMem => "RegField",
      Description => "The interrupt summary bit of nw reorder block 3",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F15,E16)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
    NwReorderBlock4Interrupt => { #Structure Type: RegField;
      Name => "NwReorderBlock4Interrupt",
      RegMem => "RegField",
      Description => "The interrupt summary bit of nw reorder block 4",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F16,E17)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
    NwReorderBlock5Interrupt => { #Structure Type: RegField;
      Name => "NwReorderBlock5Interrupt",
      RegMem => "RegField",
      Description => "The interrupt summary bit of nw reorder block 5",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F17,E18)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
    PpReorderSlice0Interrupt => { #Structure Type: RegField;
      Name => "PpReorderSlice0Interrupt",
      RegMem => "RegField",
      Description => "The interrupt summary bit of pp reorder slice 0",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F18,E19)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
    PpReorderSlice1Interrupt => { #Structure Type: RegField;
      Name => "PpReorderSlice1Interrupt",
      RegMem => "RegField",
      Description => "The interrupt summary bit of pp reorder slice 1",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F19,E20)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
    PpReorderSlice2Interrupt => { #Structure Type: RegField;
      Name => "PpReorderSlice2Interrupt",
      RegMem => "RegField",
      Description => "The interrupt summary bit of pp reorder slice 2",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F20,E21)
      Type => "Interrupt",
      UsedBy => "DSN",
    },
  },
  ReorderGlobalInterruptMask => { #Structure Type: Reg; Skip Register;
    Name => "ReorderGlobalInterruptMask",
    RegMem => "Reg",
    Address => "103",
    Width => "9", # Excel Formula: =calc_reg_width(E13:E21,F21)
    Type => "InterruptMask",
    NwReorderBlock0InterruptMask => { #Structure Type: RegField;
      Name => "NwReorderBlock0InterruptMask",
      RegMem => "RegField",
      Description => "This field masks NwReorderBlock0Interrupt interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    NwReorderBlock1InterruptMask => { #Structure Type: RegField;
      Name => "NwReorderBlock1InterruptMask",
      RegMem => "RegField",
      Description => "This field masks NwReorderBlock1Interrupt interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F13,E14)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    NwReorderBlock2InterruptMask => { #Structure Type: RegField;
      Name => "NwReorderBlock2InterruptMask",
      RegMem => "RegField",
      Description => "This field masks NwReorderBlock2Interrupt interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F14,E15)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    NwReorderBlock3InterruptMask => { #Structure Type: RegField;
      Name => "NwReorderBlock3InterruptMask",
      RegMem => "RegField",
      Description => "This field masks NwReorderBlock3Interrupt interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F15,E16)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    NwReorderBlock4InterruptMask => { #Structure Type: RegField;
      Name => "NwReorderBlock4InterruptMask",
      RegMem => "RegField",
      Description => "This field masks NwReorderBlock4Interrupt interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F16,E17)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    NwReorderBlock5InterruptMask => { #Structure Type: RegField;
      Name => "NwReorderBlock5InterruptMask",
      RegMem => "RegField",
      Description => "This field masks NwReorderBlock5Interrupt interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F17,E18)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    PpReorderSlice0InterruptMask => { #Structure Type: RegField;
      Name => "PpReorderSlice0InterruptMask",
      RegMem => "RegField",
      Description => "This field masks PpReorderSlice0Interrupt interrupt",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F18,E19)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    PpReorderSlice1InterruptMask => { #Structure Type: RegField;
      Name => "PpReorderSlice1InterruptMask",
      RegMem => "RegField",
      Description => "This field masks PpReorderSlice1Interrupt interrupt",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F19,E20)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    PpReorderSlice2InterruptMask => { #Structure Type: RegField;
      Name => "PpReorderSlice2InterruptMask",
      RegMem => "RegField",
      Description => "This field masks PpReorderSlice2Interrupt interrupt",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F20,E21)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  ReorderGlobalInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "ReorderGlobalInterruptTest",
    RegMem => "Reg",
    Address => "104",
    Width => "9", # Excel Formula: =calc_reg_width(E13:E21,F21)
    Type => "InterruptTest",
    NwReorderBlock0InterruptTest => { #Structure Type: RegField;
      Name => "NwReorderBlock0InterruptTest",
      RegMem => "RegField",
      Description => "This field tests NwReorderBlock0Interrupt interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    NwReorderBlock1InterruptTest => { #Structure Type: RegField;
      Name => "NwReorderBlock1InterruptTest",
      RegMem => "RegField",
      Description => "This field tests NwReorderBlock1Interrupt interrupt",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F13,E14)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    NwReorderBlock2InterruptTest => { #Structure Type: RegField;
      Name => "NwReorderBlock2InterruptTest",
      RegMem => "RegField",
      Description => "This field tests NwReorderBlock2Interrupt interrupt",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F14,E15)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    NwReorderBlock3InterruptTest => { #Structure Type: RegField;
      Name => "NwReorderBlock3InterruptTest",
      RegMem => "RegField",
      Description => "This field tests NwReorderBlock3Interrupt interrupt",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F15,E16)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    NwReorderBlock4InterruptTest => { #Structure Type: RegField;
      Name => "NwReorderBlock4InterruptTest",
      RegMem => "RegField",
      Description => "This field tests NwReorderBlock4Interrupt interrupt",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F16,E17)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    NwReorderBlock5InterruptTest => { #Structure Type: RegField;
      Name => "NwReorderBlock5InterruptTest",
      RegMem => "RegField",
      Description => "This field tests NwReorderBlock5Interrupt interrupt",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F17,E18)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    PpReorderSlice0InterruptTest => { #Structure Type: RegField;
      Name => "PpReorderSlice0InterruptTest",
      RegMem => "RegField",
      Description => "This field tests PpReorderSlice0Interrupt interrupt",
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F18,E19)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    PpReorderSlice1InterruptTest => { #Structure Type: RegField;
      Name => "PpReorderSlice1InterruptTest",
      RegMem => "RegField",
      Description => "This field tests PpReorderSlice1Interrupt interrupt",
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F19,E20)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    PpReorderSlice2InterruptTest => { #Structure Type: RegField;
      Name => "PpReorderSlice2InterruptTest",
      RegMem => "RegField",
      Description => "This field tests PpReorderSlice2Interrupt interrupt",
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F20,E21)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  SliceConfiguration0 => { #Structure Type: Reg; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "SliceConfiguration[3]",
    RegMem => "Reg",
    Address => "105", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Width => "40", # Excel Formula: =calc_reg_width(E23:E33,F33)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "3",
    ArrayIndex => "0",
    Slice0MySliceNumber => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]MySliceNumber",
      RegMem => "RegField",
      Description => "A bit per NW reorder slice that indicates the slice number.",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "DIST,OUT",
      DefaultValue => "h3",
      Comments => "Constant",
      DefaultValueArray => "h3,h4,h5",
    },
    Slice0Ifg0MaxSourcePortNumber => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Ifg0MaxSourcePortNumber",
      RegMem => "RegField",
      Description => "Indicates the maximal port number that belong to IFG 0",
      Width => "6",
      Position => "8:3", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d19",
      Comments => "Constant",
    },
    Slice0ReorderBlockNumOffset => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderBlockNumOffset",
      RegMem => "RegField",
      Description => "The offset added to the block number selected according to the mode  Slice[n]ReorderBlockSelMode.
Used in SLB mode:
Conf to h0,h2,h4
",
      Width => "3",
      Position => "11:9", # Excel Formula: =calc_position(F24,E25)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Change to global mode that sets these values to ease the SW",
    },
    Slice0Mode => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]Mode",
      RegMem => "RegField",
      Description => "0  // Linecard mode CRF TS network slice
1  // Linecard mode CRF SN network slice
2  // Linecard mode CRF TS fabric slice
3  // Linecard mode CRF SN fabric slice
4  // TOR mode network slice 
5  // TOR mode fabric slice
6  // FE mode with TS
7  // FE mode with SN
8  // Stand alone
9 // DRAM slice ",
      Width => "4",
      Position => "15:12", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "DIST,MERGER,OUT_LOGIC,RD_MNG0,RD_MNG1",
      DefaultValue => "d0",
    },
    Slice0ReorderBlockSelMode => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderBlockSelMode",
      RegMem => "RegField",
      Description => "Indictes how many blocks participate in the chain:
0 - 2 blocks
1 - 4 blocks
2 - 6 blocks
3 - Selection by IFG (relevant for SLB)",
      Width => "2",
      Position => "17:16", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2",
      Comments => "Change to global mode that sets these values to ease the SW",
      DefaultValueArray => "h2,h2,h2",
    },
    Slice0OutgoingSliceSettingEnable => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]OutgoingSliceSettingEnable",
      RegMem => "RegField",
      Description => "Enables the design to override the PD fields out slice from configuration.
This feature is for debug purposes and fast ramp up of modes, once the SNA function as defined - this feature should not be used.",
      Width => "1",
      Position => "18", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Change to global mode that sets these values to ease the SW",
    },
    Slice0OutgoingSliceSetValue => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]OutgoingSliceSetValue",
      RegMem => "RegField",
      Description => "The outgoing slice that will override the SnrOutSlice in the incoming PD.",
      Width => "2",
      Position => "20:19", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      DefaultValueArray => "h0,h1,h2",
    },
    Slice0PpReorderMinConnectionNumber => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]PpReorderMinConnectionNumber",
      RegMem => "RegField",
      Description => "The minimal connection number associated with PP reorder.",
      Width => "13",
      Position => "33:21", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d4096",
      Comments => "Constant",
      DefaultValueArray => "d4096,d4096,d4096",
    },
    Slice0BackpressureMode => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]BackpressureMode",
      RegMem => "RegField",
      Description => "0 - Incoming CBR will be backpressured if any of the fabric slices that were configured to 1 are backpressured
Should be configured to 1 in the following cases:
Slice is fabric slice and the slice mode is SN PLB or TOR SLB
1 - Incoming CBR will be backpressured only if outgoing CBT is backpressured",
      Width => "1",
      Position => "34", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
    Slice0ReorderFullPreventionEnable => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderFullPreventionEnable",
      RegMem => "RegField",
      Description => "If set to 1 - the reorder full prevention mechanism is activated.
The mechanism reduces the input rate according to configuration to enable the reorder to empty itself and by that prevent packet dropps due to reorder full.",
      Width => "1",
      Position => "35", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Change to global mode that sets these values to ease the SW",
    },
    Slice0ReorderFullPreventionRateLimiting => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderFullPreventionRateLimiting",
      RegMem => "RegField",
      Description => "Defines the maximal number of PDs that the reorder will insert to the reorder blocks when the reorder is almost full in a time window of 16cc.
If set to 15 - 15 PDs may be inserted in 16cc
If set to 1 - only one PD will be inserted in 16cc.",
      Width => "4",
      Position => "39:36", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h8",
      Comments => "Change to global mode that sets these values to ease the SW",
    },
  },
  SliceConfiguration1 => { #Structure Type: Reg; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "SliceConfiguration[3]",
    RegMem => "Reg",
    Address => "106",
    Width => "40", # Excel Formula: =calc_reg_width(E23:E33,F33)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "3",
    ArrayIndex => "1",
    Slice1MySliceNumber => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]MySliceNumber",
      RegMem => "RegField",
      Description => "A bit per NW reorder slice that indicates the slice number.",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "DIST,OUT",
      DefaultValue => "h4",
      Comments => "Constant",
      DefaultValueArray => "h3,h4,h5",
    },
    Slice1Ifg0MaxSourcePortNumber => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Ifg0MaxSourcePortNumber",
      RegMem => "RegField",
      Description => "Indicates the maximal port number that belong to IFG 0",
      Width => "6",
      Position => "8:3", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d19",
      Comments => "Constant",
    },
    Slice1ReorderBlockNumOffset => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderBlockNumOffset",
      RegMem => "RegField",
      Description => "The offset added to the block number selected according to the mode  Slice[n]ReorderBlockSelMode.
Used in SLB mode:
Conf to h0,h2,h4
",
      Width => "3",
      Position => "11:9", # Excel Formula: =calc_position(F24,E25)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Change to global mode that sets these values to ease the SW",
    },
    Slice1Mode => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]Mode",
      RegMem => "RegField",
      Description => "0  // Linecard mode CRF TS network slice
1  // Linecard mode CRF SN network slice
2  // Linecard mode CRF TS fabric slice
3  // Linecard mode CRF SN fabric slice
4  // TOR mode network slice 
5  // TOR mode fabric slice
6  // FE mode with TS
7  // FE mode with SN
8  // Stand alone
9 // DRAM slice ",
      Width => "4",
      Position => "15:12", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "DIST,MERGER,OUT_LOGIC,RD_MNG0,RD_MNG1",
      DefaultValue => "d0",
    },
    Slice1ReorderBlockSelMode => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderBlockSelMode",
      RegMem => "RegField",
      Description => "Indictes how many blocks participate in the chain:
0 - 2 blocks
1 - 4 blocks
2 - 6 blocks
3 - Selection by IFG (relevant for SLB)",
      Width => "2",
      Position => "17:16", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2",
      Comments => "Change to global mode that sets these values to ease the SW",
      DefaultValueArray => "h2,h2,h2",
    },
    Slice1OutgoingSliceSettingEnable => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]OutgoingSliceSettingEnable",
      RegMem => "RegField",
      Description => "Enables the design to override the PD fields out slice from configuration.
This feature is for debug purposes and fast ramp up of modes, once the SNA function as defined - this feature should not be used.",
      Width => "1",
      Position => "18", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Change to global mode that sets these values to ease the SW",
    },
    Slice1OutgoingSliceSetValue => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]OutgoingSliceSetValue",
      RegMem => "RegField",
      Description => "The outgoing slice that will override the SnrOutSlice in the incoming PD.",
      Width => "2",
      Position => "20:19", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      DefaultValueArray => "h0,h1,h2",
    },
    Slice1PpReorderMinConnectionNumber => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]PpReorderMinConnectionNumber",
      RegMem => "RegField",
      Description => "The minimal connection number associated with PP reorder.",
      Width => "13",
      Position => "33:21", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d4096",
      Comments => "Constant",
      DefaultValueArray => "d4096,d4096,d4096",
    },
    Slice1BackpressureMode => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]BackpressureMode",
      RegMem => "RegField",
      Description => "0 - Incoming CBR will be backpressured if any of the fabric slices that were configured to 1 are backpressured
Should be configured to 1 in the following cases:
Slice is fabric slice and the slice mode is SN PLB or TOR SLB
1 - Incoming CBR will be backpressured only if outgoing CBT is backpressured",
      Width => "1",
      Position => "34", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
    Slice1ReorderFullPreventionEnable => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderFullPreventionEnable",
      RegMem => "RegField",
      Description => "If set to 1 - the reorder full prevention mechanism is activated.
The mechanism reduces the input rate according to configuration to enable the reorder to empty itself and by that prevent packet dropps due to reorder full.",
      Width => "1",
      Position => "35", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Change to global mode that sets these values to ease the SW",
    },
    Slice1ReorderFullPreventionRateLimiting => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderFullPreventionRateLimiting",
      RegMem => "RegField",
      Description => "Defines the maximal number of PDs that the reorder will insert to the reorder blocks when the reorder is almost full in a time window of 16cc.
If set to 15 - 15 PDs may be inserted in 16cc
If set to 1 - only one PD will be inserted in 16cc.",
      Width => "4",
      Position => "39:36", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h8",
      Comments => "Change to global mode that sets these values to ease the SW",
    },
  },
  SliceConfiguration2 => { #Structure Type: Reg; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 19;
    Name => "SliceConfiguration[3]",
    RegMem => "Reg",
    Address => "107",
    Width => "40", # Excel Formula: =calc_reg_width(E23:E33,F33)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "3",
    ArrayIndex => "2",
    Slice2MySliceNumber => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]MySliceNumber",
      RegMem => "RegField",
      Description => "A bit per NW reorder slice that indicates the slice number.",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "DIST,OUT",
      DefaultValue => "h5",
      Comments => "Constant",
      DefaultValueArray => "h3,h4,h5",
    },
    Slice2Ifg0MaxSourcePortNumber => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Ifg0MaxSourcePortNumber",
      RegMem => "RegField",
      Description => "Indicates the maximal port number that belong to IFG 0",
      Width => "6",
      Position => "8:3", # Excel Formula: =calc_position(F23,E24)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d19",
      Comments => "Constant",
    },
    Slice2ReorderBlockNumOffset => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderBlockNumOffset",
      RegMem => "RegField",
      Description => "The offset added to the block number selected according to the mode  Slice[n]ReorderBlockSelMode.
Used in SLB mode:
Conf to h0,h2,h4
",
      Width => "3",
      Position => "11:9", # Excel Formula: =calc_position(F24,E25)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Change to global mode that sets these values to ease the SW",
    },
    Slice2Mode => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]Mode",
      RegMem => "RegField",
      Description => "0  // Linecard mode CRF TS network slice
1  // Linecard mode CRF SN network slice
2  // Linecard mode CRF TS fabric slice
3  // Linecard mode CRF SN fabric slice
4  // TOR mode network slice 
5  // TOR mode fabric slice
6  // FE mode with TS
7  // FE mode with SN
8  // Stand alone
9 // DRAM slice ",
      Width => "4",
      Position => "15:12", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "DIST,MERGER,OUT_LOGIC,RD_MNG0,RD_MNG1",
      DefaultValue => "d0",
    },
    Slice2ReorderBlockSelMode => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderBlockSelMode",
      RegMem => "RegField",
      Description => "Indictes how many blocks participate in the chain:
0 - 2 blocks
1 - 4 blocks
2 - 6 blocks
3 - Selection by IFG (relevant for SLB)",
      Width => "2",
      Position => "17:16", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2",
      Comments => "Change to global mode that sets these values to ease the SW",
      DefaultValueArray => "h2,h2,h2",
    },
    Slice2OutgoingSliceSettingEnable => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]OutgoingSliceSettingEnable",
      RegMem => "RegField",
      Description => "Enables the design to override the PD fields out slice from configuration.
This feature is for debug purposes and fast ramp up of modes, once the SNA function as defined - this feature should not be used.",
      Width => "1",
      Position => "18", # Excel Formula: =calc_position(F27,E28)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Change to global mode that sets these values to ease the SW",
    },
    Slice2OutgoingSliceSetValue => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]OutgoingSliceSetValue",
      RegMem => "RegField",
      Description => "The outgoing slice that will override the SnrOutSlice in the incoming PD.",
      Width => "2",
      Position => "20:19", # Excel Formula: =calc_position(F28,E29)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2",
      DefaultValueArray => "h0,h1,h2",
    },
    Slice2PpReorderMinConnectionNumber => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]PpReorderMinConnectionNumber",
      RegMem => "RegField",
      Description => "The minimal connection number associated with PP reorder.",
      Width => "13",
      Position => "33:21", # Excel Formula: =calc_position(F29,E30)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d4096",
      Comments => "Constant",
      DefaultValueArray => "d4096,d4096,d4096",
    },
    Slice2BackpressureMode => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]BackpressureMode",
      RegMem => "RegField",
      Description => "0 - Incoming CBR will be backpressured if any of the fabric slices that were configured to 1 are backpressured
Should be configured to 1 in the following cases:
Slice is fabric slice and the slice mode is SN PLB or TOR SLB
1 - Incoming CBR will be backpressured only if outgoing CBT is backpressured",
      Width => "1",
      Position => "34", # Excel Formula: =calc_position(F30,E31)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
    Slice2ReorderFullPreventionEnable => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderFullPreventionEnable",
      RegMem => "RegField",
      Description => "If set to 1 - the reorder full prevention mechanism is activated.
The mechanism reduces the input rate according to configuration to enable the reorder to empty itself and by that prevent packet dropps due to reorder full.",
      Width => "1",
      Position => "35", # Excel Formula: =calc_position(F31,E32)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Change to global mode that sets these values to ease the SW",
    },
    Slice2ReorderFullPreventionRateLimiting => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderFullPreventionRateLimiting",
      RegMem => "RegField",
      Description => "Defines the maximal number of PDs that the reorder will insert to the reorder blocks when the reorder is almost full in a time window of 16cc.
If set to 15 - 15 PDs may be inserted in 16cc
If set to 1 - only one PD will be inserted in 16cc.",
      Width => "4",
      Position => "39:36", # Excel Formula: =calc_position(F32,E33)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h8",
      Comments => "Change to global mode that sets these values to ease the SW",
    },
  },
  BlockGeneralConfigurations0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 27;
    Name => "BlockGeneralConfigurations[6]",
    RegMem => "Reg",
    Address => "108", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Width => "28", # Excel Formula: =calc_reg_width(E35:E39,F39)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Block0ReorderBlockNumber => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]ReorderBlockNumber",
      RegMem => "RegField",
      Description => "The reorder block number inside the chain",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant. Consider removing and check if ifluences SLB",
      DefaultValueArray => "h0,h1,h2,h3,h4,h5",
    },
    Block0RdFifoThrToReceiveStrictPrio => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]RdFifoThrToReceiveStrictPrio",
      RegMem => "RegField",
      Description => "When the Rd FIFO reaches this threshold - it receives strict priority over PDs (even if the new packets FIFO crossed the threshold.",
      Width => "10",
      Position => "12:3", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d900",
      Comments => "Default",
    },
    Block0EnableMaskingPdForAssuredReadRd => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]EnableMaskingPdForAssuredReadRd",
      RegMem => "RegField",
      Description => "Enables giving priority to RDs over new packets at the reorder entrance.",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Constant",
    },
    Block0PpReorderMinConnectionNumber => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]PpReorderMinConnectionNumber",
      RegMem => "RegField",
      Description => "The minimal connection number associated with PP reorder.
Used for aging and init.",
      Width => "13",
      Position => "26:14", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d4096",
      Comments => "Constant",
      DefaultValueArray => "d4096,d4096,d4096,d4096,d4096,d4096",
    },
    Block0ReorderMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]ReorderMode",
      RegMem => "RegField",
      Description => "Determines the reorder mode:
0 - SN PLB (chain of 6 reorder blocks in FB slices)
1 - Other (block per IFG)
All blocks should be configured to the same value according to the mode of the device.",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "DSN1,DSN2,DSN3,DSN4,DSN5,DSN6,DSN7,DSN8",
      DefaultValue => "h1",
      Comments => "ConfigDB",
    },
  },
  BlockGeneralConfigurations1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 27;
    Name => "BlockGeneralConfigurations[6]",
    RegMem => "Reg",
    Address => "109",
    Width => "28", # Excel Formula: =calc_reg_width(E35:E39,F39)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Block1ReorderBlockNumber => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]ReorderBlockNumber",
      RegMem => "RegField",
      Description => "The reorder block number inside the chain",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Constant. Consider removing and check if ifluences SLB",
      DefaultValueArray => "h0,h1,h2,h3,h4,h5",
    },
    Block1RdFifoThrToReceiveStrictPrio => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]RdFifoThrToReceiveStrictPrio",
      RegMem => "RegField",
      Description => "When the Rd FIFO reaches this threshold - it receives strict priority over PDs (even if the new packets FIFO crossed the threshold.",
      Width => "10",
      Position => "12:3", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d900",
      Comments => "Default",
    },
    Block1EnableMaskingPdForAssuredReadRd => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]EnableMaskingPdForAssuredReadRd",
      RegMem => "RegField",
      Description => "Enables giving priority to RDs over new packets at the reorder entrance.",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Constant",
    },
    Block1PpReorderMinConnectionNumber => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]PpReorderMinConnectionNumber",
      RegMem => "RegField",
      Description => "The minimal connection number associated with PP reorder.
Used for aging and init.",
      Width => "13",
      Position => "26:14", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d4096",
      Comments => "Constant",
      DefaultValueArray => "d4096,d4096,d4096,d4096,d4096,d4096",
    },
    Block1ReorderMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]ReorderMode",
      RegMem => "RegField",
      Description => "Determines the reorder mode:
0 - SN PLB (chain of 6 reorder blocks in FB slices)
1 - Other (block per IFG)
All blocks should be configured to the same value according to the mode of the device.",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "DSN1,DSN2,DSN3,DSN4,DSN5,DSN6,DSN7,DSN8",
      DefaultValue => "h1",
      Comments => "ConfigDB",
    },
  },
  BlockGeneralConfigurations2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 27;
    Name => "BlockGeneralConfigurations[6]",
    RegMem => "Reg",
    Address => "10A",
    Width => "28", # Excel Formula: =calc_reg_width(E35:E39,F39)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Block2ReorderBlockNumber => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]ReorderBlockNumber",
      RegMem => "RegField",
      Description => "The reorder block number inside the chain",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h2",
      Comments => "Constant. Consider removing and check if ifluences SLB",
      DefaultValueArray => "h0,h1,h2,h3,h4,h5",
    },
    Block2RdFifoThrToReceiveStrictPrio => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]RdFifoThrToReceiveStrictPrio",
      RegMem => "RegField",
      Description => "When the Rd FIFO reaches this threshold - it receives strict priority over PDs (even if the new packets FIFO crossed the threshold.",
      Width => "10",
      Position => "12:3", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d900",
      Comments => "Default",
    },
    Block2EnableMaskingPdForAssuredReadRd => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]EnableMaskingPdForAssuredReadRd",
      RegMem => "RegField",
      Description => "Enables giving priority to RDs over new packets at the reorder entrance.",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Constant",
    },
    Block2PpReorderMinConnectionNumber => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]PpReorderMinConnectionNumber",
      RegMem => "RegField",
      Description => "The minimal connection number associated with PP reorder.
Used for aging and init.",
      Width => "13",
      Position => "26:14", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d4096",
      Comments => "Constant",
      DefaultValueArray => "d4096,d4096,d4096,d4096,d4096,d4096",
    },
    Block2ReorderMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]ReorderMode",
      RegMem => "RegField",
      Description => "Determines the reorder mode:
0 - SN PLB (chain of 6 reorder blocks in FB slices)
1 - Other (block per IFG)
All blocks should be configured to the same value according to the mode of the device.",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "DSN1,DSN2,DSN3,DSN4,DSN5,DSN6,DSN7,DSN8",
      DefaultValue => "h1",
      Comments => "ConfigDB",
    },
  },
  BlockGeneralConfigurations3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 27;
    Name => "BlockGeneralConfigurations[6]",
    RegMem => "Reg",
    Address => "10B",
    Width => "28", # Excel Formula: =calc_reg_width(E35:E39,F39)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Block3ReorderBlockNumber => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]ReorderBlockNumber",
      RegMem => "RegField",
      Description => "The reorder block number inside the chain",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h3",
      Comments => "Constant. Consider removing and check if ifluences SLB",
      DefaultValueArray => "h0,h1,h2,h3,h4,h5",
    },
    Block3RdFifoThrToReceiveStrictPrio => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]RdFifoThrToReceiveStrictPrio",
      RegMem => "RegField",
      Description => "When the Rd FIFO reaches this threshold - it receives strict priority over PDs (even if the new packets FIFO crossed the threshold.",
      Width => "10",
      Position => "12:3", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d900",
      Comments => "Default",
    },
    Block3EnableMaskingPdForAssuredReadRd => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]EnableMaskingPdForAssuredReadRd",
      RegMem => "RegField",
      Description => "Enables giving priority to RDs over new packets at the reorder entrance.",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Constant",
    },
    Block3PpReorderMinConnectionNumber => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]PpReorderMinConnectionNumber",
      RegMem => "RegField",
      Description => "The minimal connection number associated with PP reorder.
Used for aging and init.",
      Width => "13",
      Position => "26:14", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d4096",
      Comments => "Constant",
      DefaultValueArray => "d4096,d4096,d4096,d4096,d4096,d4096",
    },
    Block3ReorderMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]ReorderMode",
      RegMem => "RegField",
      Description => "Determines the reorder mode:
0 - SN PLB (chain of 6 reorder blocks in FB slices)
1 - Other (block per IFG)
All blocks should be configured to the same value according to the mode of the device.",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "DSN1,DSN2,DSN3,DSN4,DSN5,DSN6,DSN7,DSN8",
      DefaultValue => "h1",
      Comments => "ConfigDB",
    },
  },
  BlockGeneralConfigurations4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 27;
    Name => "BlockGeneralConfigurations[6]",
    RegMem => "Reg",
    Address => "10C",
    Width => "28", # Excel Formula: =calc_reg_width(E35:E39,F39)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Block4ReorderBlockNumber => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]ReorderBlockNumber",
      RegMem => "RegField",
      Description => "The reorder block number inside the chain",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h4",
      Comments => "Constant. Consider removing and check if ifluences SLB",
      DefaultValueArray => "h0,h1,h2,h3,h4,h5",
    },
    Block4RdFifoThrToReceiveStrictPrio => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]RdFifoThrToReceiveStrictPrio",
      RegMem => "RegField",
      Description => "When the Rd FIFO reaches this threshold - it receives strict priority over PDs (even if the new packets FIFO crossed the threshold.",
      Width => "10",
      Position => "12:3", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d900",
      Comments => "Default",
    },
    Block4EnableMaskingPdForAssuredReadRd => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]EnableMaskingPdForAssuredReadRd",
      RegMem => "RegField",
      Description => "Enables giving priority to RDs over new packets at the reorder entrance.",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Constant",
    },
    Block4PpReorderMinConnectionNumber => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]PpReorderMinConnectionNumber",
      RegMem => "RegField",
      Description => "The minimal connection number associated with PP reorder.
Used for aging and init.",
      Width => "13",
      Position => "26:14", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d4096",
      Comments => "Constant",
      DefaultValueArray => "d4096,d4096,d4096,d4096,d4096,d4096",
    },
    Block4ReorderMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]ReorderMode",
      RegMem => "RegField",
      Description => "Determines the reorder mode:
0 - SN PLB (chain of 6 reorder blocks in FB slices)
1 - Other (block per IFG)
All blocks should be configured to the same value according to the mode of the device.",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "DSN1,DSN2,DSN3,DSN4,DSN5,DSN6,DSN7,DSN8",
      DefaultValue => "h1",
      Comments => "ConfigDB",
    },
  },
  BlockGeneralConfigurations5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 27;
    Name => "BlockGeneralConfigurations[6]",
    RegMem => "Reg",
    Address => "10D",
    Width => "28", # Excel Formula: =calc_reg_width(E35:E39,F39)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Block5ReorderBlockNumber => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]ReorderBlockNumber",
      RegMem => "RegField",
      Description => "The reorder block number inside the chain",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F34,E35,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h5",
      Comments => "Constant. Consider removing and check if ifluences SLB",
      DefaultValueArray => "h0,h1,h2,h3,h4,h5",
    },
    Block5RdFifoThrToReceiveStrictPrio => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]RdFifoThrToReceiveStrictPrio",
      RegMem => "RegField",
      Description => "When the Rd FIFO reaches this threshold - it receives strict priority over PDs (even if the new packets FIFO crossed the threshold.",
      Width => "10",
      Position => "12:3", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d900",
      Comments => "Default",
    },
    Block5EnableMaskingPdForAssuredReadRd => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]EnableMaskingPdForAssuredReadRd",
      RegMem => "RegField",
      Description => "Enables giving priority to RDs over new packets at the reorder entrance.",
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1",
      Comments => "Constant",
    },
    Block5PpReorderMinConnectionNumber => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]PpReorderMinConnectionNumber",
      RegMem => "RegField",
      Description => "The minimal connection number associated with PP reorder.
Used for aging and init.",
      Width => "13",
      Position => "26:14", # Excel Formula: =calc_position(F37,E38)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d4096",
      Comments => "Constant",
      DefaultValueArray => "d4096,d4096,d4096,d4096,d4096,d4096",
    },
    Block5ReorderMode => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]ReorderMode",
      RegMem => "RegField",
      Description => "Determines the reorder mode:
0 - SN PLB (chain of 6 reorder blocks in FB slices)
1 - Other (block per IFG)
All blocks should be configured to the same value according to the mode of the device.",
      Width => "1",
      Position => "27", # Excel Formula: =calc_position(F38,E39)
      Type => "Config",
      UsedBy => "DSN1,DSN2,DSN3,DSN4,DSN5,DSN6,DSN7,DSN8",
      DefaultValue => "h1",
      Comments => "ConfigDB",
    },
  },
  BlockThresholdsConfiguration0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 29;
    Name => "BlockThresholdsConfiguration[6]",
    RegMem => "Reg",
    Address => "10E", # Excel Formula: =calc_reg_address(C34,A34,G34)
    Width => "34", # Excel Formula: =calc_reg_width(E41:E45,F45)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Block0NewPktsFifoNotReadyThreshold => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]NewPktsFifoNotReadyThreshold",
      RegMem => "RegField",
      Description => "Determines in which fill level the new packets FIFO issues not ready to:
- The MMA (incase of PLB/SLB in FB slice)
- The in PD FIFOs (incase of NW slice)",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h30",
      Comments => "Constant",
    },
    Block0NeighborReorderRdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]NeighborReorderRdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Neighbor Reorder RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "10",
      Position => "16:7", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d950",
      Comments => "Constant.Fix default value",
    },
    Block0OutPdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]OutPdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the FIFO at the end of the alg pipe we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "7",
      Position => "23:17", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d46",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
    Block0Stage1RdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]Stage1RdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Stage 1 RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "5",
      Position => "28:24", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
    Block0Stage2RdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]Stage2RdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Stage 2 RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "5",
      Position => "33:29", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
  },
  BlockThresholdsConfiguration1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 29;
    Name => "BlockThresholdsConfiguration[6]",
    RegMem => "Reg",
    Address => "10F",
    Width => "34", # Excel Formula: =calc_reg_width(E41:E45,F45)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Block1NewPktsFifoNotReadyThreshold => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]NewPktsFifoNotReadyThreshold",
      RegMem => "RegField",
      Description => "Determines in which fill level the new packets FIFO issues not ready to:
- The MMA (incase of PLB/SLB in FB slice)
- The in PD FIFOs (incase of NW slice)",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h30",
      Comments => "Constant",
    },
    Block1NeighborReorderRdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]NeighborReorderRdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Neighbor Reorder RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "10",
      Position => "16:7", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d950",
      Comments => "Constant.Fix default value",
    },
    Block1OutPdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]OutPdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the FIFO at the end of the alg pipe we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "7",
      Position => "23:17", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d46",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
    Block1Stage1RdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]Stage1RdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Stage 1 RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "5",
      Position => "28:24", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
    Block1Stage2RdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]Stage2RdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Stage 2 RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "5",
      Position => "33:29", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
  },
  BlockThresholdsConfiguration2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 29;
    Name => "BlockThresholdsConfiguration[6]",
    RegMem => "Reg",
    Address => "110",
    Width => "34", # Excel Formula: =calc_reg_width(E41:E45,F45)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Block2NewPktsFifoNotReadyThreshold => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]NewPktsFifoNotReadyThreshold",
      RegMem => "RegField",
      Description => "Determines in which fill level the new packets FIFO issues not ready to:
- The MMA (incase of PLB/SLB in FB slice)
- The in PD FIFOs (incase of NW slice)",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h30",
      Comments => "Constant",
    },
    Block2NeighborReorderRdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]NeighborReorderRdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Neighbor Reorder RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "10",
      Position => "16:7", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d950",
      Comments => "Constant.Fix default value",
    },
    Block2OutPdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]OutPdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the FIFO at the end of the alg pipe we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "7",
      Position => "23:17", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d46",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
    Block2Stage1RdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]Stage1RdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Stage 1 RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "5",
      Position => "28:24", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
    Block2Stage2RdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]Stage2RdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Stage 2 RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "5",
      Position => "33:29", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
  },
  BlockThresholdsConfiguration3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 29;
    Name => "BlockThresholdsConfiguration[6]",
    RegMem => "Reg",
    Address => "111",
    Width => "34", # Excel Formula: =calc_reg_width(E41:E45,F45)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Block3NewPktsFifoNotReadyThreshold => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]NewPktsFifoNotReadyThreshold",
      RegMem => "RegField",
      Description => "Determines in which fill level the new packets FIFO issues not ready to:
- The MMA (incase of PLB/SLB in FB slice)
- The in PD FIFOs (incase of NW slice)",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h30",
      Comments => "Constant",
    },
    Block3NeighborReorderRdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]NeighborReorderRdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Neighbor Reorder RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "10",
      Position => "16:7", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d950",
      Comments => "Constant.Fix default value",
    },
    Block3OutPdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]OutPdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the FIFO at the end of the alg pipe we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "7",
      Position => "23:17", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d46",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
    Block3Stage1RdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]Stage1RdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Stage 1 RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "5",
      Position => "28:24", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
    Block3Stage2RdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]Stage2RdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Stage 2 RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "5",
      Position => "33:29", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
  },
  BlockThresholdsConfiguration4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 29;
    Name => "BlockThresholdsConfiguration[6]",
    RegMem => "Reg",
    Address => "112",
    Width => "34", # Excel Formula: =calc_reg_width(E41:E45,F45)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Block4NewPktsFifoNotReadyThreshold => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]NewPktsFifoNotReadyThreshold",
      RegMem => "RegField",
      Description => "Determines in which fill level the new packets FIFO issues not ready to:
- The MMA (incase of PLB/SLB in FB slice)
- The in PD FIFOs (incase of NW slice)",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h30",
      Comments => "Constant",
    },
    Block4NeighborReorderRdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]NeighborReorderRdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Neighbor Reorder RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "10",
      Position => "16:7", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d950",
      Comments => "Constant.Fix default value",
    },
    Block4OutPdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]OutPdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the FIFO at the end of the alg pipe we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "7",
      Position => "23:17", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d46",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
    Block4Stage1RdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]Stage1RdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Stage 1 RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "5",
      Position => "28:24", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
    Block4Stage2RdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]Stage2RdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Stage 2 RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "5",
      Position => "33:29", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
  },
  BlockThresholdsConfiguration5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 29;
    Name => "BlockThresholdsConfiguration[6]",
    RegMem => "Reg",
    Address => "113",
    Width => "34", # Excel Formula: =calc_reg_width(E41:E45,F45)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Block5NewPktsFifoNotReadyThreshold => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]NewPktsFifoNotReadyThreshold",
      RegMem => "RegField",
      Description => "Determines in which fill level the new packets FIFO issues not ready to:
- The MMA (incase of PLB/SLB in FB slice)
- The in PD FIFOs (incase of NW slice)",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F40,E41,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h30",
      Comments => "Constant",
    },
    Block5NeighborReorderRdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]NeighborReorderRdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Neighbor Reorder RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "10",
      Position => "16:7", # Excel Formula: =calc_position(F41,E42)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d950",
      Comments => "Constant.Fix default value",
    },
    Block5OutPdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]OutPdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the FIFO at the end of the alg pipe we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "7",
      Position => "23:17", # Excel Formula: =calc_position(F42,E43)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d46",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
    Block5Stage1RdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]Stage1RdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Stage 1 RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "5",
      Position => "28:24", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
    Block5Stage2RdFifoFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]Stage2RdFifoFullThr",
      RegMem => "RegField",
      Description => "Indicates in which fill level of the Stage 2 RD FIFO we stop inserting new PDs/RDs to the PIPE. This threshold exist to prevent supporting backpressure inside the pipe and ensures that the FIFO will be ready to receive data if needed.",
      Width => "5",
      Position => "33:29", # Excel Formula: =calc_position(F44,E45)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hF",
      Comments => "Constant. Use FIFO cfg instead of my calc.",
    },
  },
  BlockAgingConfiguration0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 24;
    Name => "BlockAgingConfiguration[6]",
    RegMem => "Reg",
    Address => "114", # Excel Formula: =calc_reg_address(C40,A40,G40)
    Width => "8", # Excel Formula: =calc_reg_width(E47:E48,F48)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Block0AgingEnable => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]AgingEnable",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Default.Don't enable aging on SLB.",
    },
    Block0AgingInterval => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]AgingInterval",
      RegMem => "RegField",
      Description => "When the In FIFO reached this threshold a pause indication is sent to the IFG",
      Width => "7",
      Position => "7:1", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h7F",
      Comments => "Default",
    },
  },
  BlockAgingConfiguration1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 24;
    Name => "BlockAgingConfiguration[6]",
    RegMem => "Reg",
    Address => "115",
    Width => "8", # Excel Formula: =calc_reg_width(E47:E48,F48)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Block1AgingEnable => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]AgingEnable",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Default.Don't enable aging on SLB.",
    },
    Block1AgingInterval => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]AgingInterval",
      RegMem => "RegField",
      Description => "When the In FIFO reached this threshold a pause indication is sent to the IFG",
      Width => "7",
      Position => "7:1", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h7F",
      Comments => "Default",
    },
  },
  BlockAgingConfiguration2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 24;
    Name => "BlockAgingConfiguration[6]",
    RegMem => "Reg",
    Address => "116",
    Width => "8", # Excel Formula: =calc_reg_width(E47:E48,F48)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Block2AgingEnable => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]AgingEnable",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Default.Don't enable aging on SLB.",
    },
    Block2AgingInterval => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]AgingInterval",
      RegMem => "RegField",
      Description => "When the In FIFO reached this threshold a pause indication is sent to the IFG",
      Width => "7",
      Position => "7:1", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h7F",
      Comments => "Default",
    },
  },
  BlockAgingConfiguration3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 24;
    Name => "BlockAgingConfiguration[6]",
    RegMem => "Reg",
    Address => "117",
    Width => "8", # Excel Formula: =calc_reg_width(E47:E48,F48)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Block3AgingEnable => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]AgingEnable",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Default.Don't enable aging on SLB.",
    },
    Block3AgingInterval => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]AgingInterval",
      RegMem => "RegField",
      Description => "When the In FIFO reached this threshold a pause indication is sent to the IFG",
      Width => "7",
      Position => "7:1", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h7F",
      Comments => "Default",
    },
  },
  BlockAgingConfiguration4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 24;
    Name => "BlockAgingConfiguration[6]",
    RegMem => "Reg",
    Address => "118",
    Width => "8", # Excel Formula: =calc_reg_width(E47:E48,F48)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Block4AgingEnable => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]AgingEnable",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Default.Don't enable aging on SLB.",
    },
    Block4AgingInterval => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]AgingInterval",
      RegMem => "RegField",
      Description => "When the In FIFO reached this threshold a pause indication is sent to the IFG",
      Width => "7",
      Position => "7:1", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h7F",
      Comments => "Default",
    },
  },
  BlockAgingConfiguration5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 24;
    Name => "BlockAgingConfiguration[6]",
    RegMem => "Reg",
    Address => "119",
    Width => "8", # Excel Formula: =calc_reg_width(E47:E48,F48)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Block5AgingEnable => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]AgingEnable",
      RegMem => "RegField",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F46,E47,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Default.Don't enable aging on SLB.",
    },
    Block5AgingInterval => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]AgingInterval",
      RegMem => "RegField",
      Description => "When the In FIFO reached this threshold a pause indication is sent to the IFG",
      Width => "7",
      Position => "7:1", # Excel Formula: =calc_position(F47,E48)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h7F",
      Comments => "Default",
    },
  },
  BlockDebugFeatures0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "BlockDebugFeatures[6]",
    RegMem => "Reg",
    Address => "11A", # Excel Formula: =calc_reg_address(C46,A46,G46)
    Width => "52", # Excel Formula: =calc_reg_width(E50:E51,F51)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Block0SwGeneratedRdTrig => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]SwGeneratedRdTrig",
      RegMem => "RegField",
      Description => "When setting this bit to 1 - a SW generated RD will be triggered",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F49,E50,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
    Block0SwGeneratedRd => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]SwGeneratedRd",
      RegMem => "RegField",
      Description => "Defines the RD that will be generated by SW",
      Width => "51",
      Position => "51:1", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
  },
  BlockDebugFeatures1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "BlockDebugFeatures[6]",
    RegMem => "Reg",
    Address => "11B",
    Width => "52", # Excel Formula: =calc_reg_width(E50:E51,F51)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Block1SwGeneratedRdTrig => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]SwGeneratedRdTrig",
      RegMem => "RegField",
      Description => "When setting this bit to 1 - a SW generated RD will be triggered",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F49,E50,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
    Block1SwGeneratedRd => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]SwGeneratedRd",
      RegMem => "RegField",
      Description => "Defines the RD that will be generated by SW",
      Width => "51",
      Position => "51:1", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
  },
  BlockDebugFeatures2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 19;
    Name => "BlockDebugFeatures[6]",
    RegMem => "Reg",
    Address => "11C",
    Width => "52", # Excel Formula: =calc_reg_width(E50:E51,F51)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Block2SwGeneratedRdTrig => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]SwGeneratedRdTrig",
      RegMem => "RegField",
      Description => "When setting this bit to 1 - a SW generated RD will be triggered",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F49,E50,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
    Block2SwGeneratedRd => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]SwGeneratedRd",
      RegMem => "RegField",
      Description => "Defines the RD that will be generated by SW",
      Width => "51",
      Position => "51:1", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
  },
  BlockDebugFeatures3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 19;
    Name => "BlockDebugFeatures[6]",
    RegMem => "Reg",
    Address => "11D",
    Width => "52", # Excel Formula: =calc_reg_width(E50:E51,F51)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Block3SwGeneratedRdTrig => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]SwGeneratedRdTrig",
      RegMem => "RegField",
      Description => "When setting this bit to 1 - a SW generated RD will be triggered",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F49,E50,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
    Block3SwGeneratedRd => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]SwGeneratedRd",
      RegMem => "RegField",
      Description => "Defines the RD that will be generated by SW",
      Width => "51",
      Position => "51:1", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
  },
  BlockDebugFeatures4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 19;
    Name => "BlockDebugFeatures[6]",
    RegMem => "Reg",
    Address => "11E",
    Width => "52", # Excel Formula: =calc_reg_width(E50:E51,F51)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Block4SwGeneratedRdTrig => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]SwGeneratedRdTrig",
      RegMem => "RegField",
      Description => "When setting this bit to 1 - a SW generated RD will be triggered",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F49,E50,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
    Block4SwGeneratedRd => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]SwGeneratedRd",
      RegMem => "RegField",
      Description => "Defines the RD that will be generated by SW",
      Width => "51",
      Position => "51:1", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
  },
  BlockDebugFeatures5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 19;
    Name => "BlockDebugFeatures[6]",
    RegMem => "Reg",
    Address => "11F",
    Width => "52", # Excel Formula: =calc_reg_width(E50:E51,F51)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Block5SwGeneratedRdTrig => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]SwGeneratedRdTrig",
      RegMem => "RegField",
      Description => "When setting this bit to 1 - a SW generated RD will be triggered",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F49,E50,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
    Block5SwGeneratedRd => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]SwGeneratedRd",
      RegMem => "RegField",
      Description => "Defines the RD that will be generated by SW",
      Width => "51",
      Position => "51:1", # Excel Formula: =calc_position(F50,E51)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
  },
  SlbConfiguration => { #Structure Type: Reg;
    Name => "SlbConfiguration",
    RegMem => "Reg",
    Address => "120", # Excel Formula: =calc_reg_address(C49,A49,G49)
    Width => "63", # Excel Formula: =calc_reg_width(E53:E56,F56)
    Type => "Config",
    ReorderFcmPdsThr => { #Structure Type: RegField;
      Name => "ReorderFcmPdsThr",
      RegMem => "RegField",
      Description => "Defines the number of PDs inside the reorder fabric slices that will trigger error indication to the FCM.",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F52,E53,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h1ffff",
      Comments => "Constant",
    },
    ReorderSlbFreeConnectionsThr => { #Structure Type: RegField;
      Name => "ReorderSlbFreeConnectionsThr",
      RegMem => "RegField",
      Description => "Defines the number of free SLB connections inside the reorder that when the thr is crossed - send error indication to the FCM.",
      Width => "13",
      Position => "29:17", # Excel Formula: =calc_position(F53,E54)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
    ReorderSlbResetConWeight => { #Structure Type: RegField;
      Name => "ReorderSlbResetConWeight",
      RegMem => "RegField",
      Description => "Defines the weight of a connection reset when deciding if to trigger error to the FCM. 
When a connection is reset - the counter is incremented by this value. On every cc without reset the counter is decremented.
If the counter crosses theReorderSlbResetConThr - error indication is sent to the FCM.",
      Width => "13",
      Position => "42:30", # Excel Formula: =calc_position(F54,E55)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
      Comments => "Constant",
    },
    ReorderSlbResetConThr => { #Structure Type: RegField;
      Name => "ReorderSlbResetConThr",
      RegMem => "RegField",
      Width => "20",
      Position => "62:43", # Excel Formula: =calc_position(F55,E56)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "hFFFFF",
      Comments => "Constant",
    },
  },
  SlbBlockConfiguration0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 22;
    Name => "SlbBlockConfiguration[6]",
    RegMem => "Reg",
    Address => "121", # Excel Formula: =calc_reg_address(C52,A52,G52)
    Width => "12", # Excel Formula: =calc_reg_width(E58:E59,F59)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    SlbBlock0EventPipeRdFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 9;
      Name => "SlbBlock[n]EventPipeRdFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Indicates the fill level of the event chain RD fifo that will halt the event chain pipe from processing new events.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d38",
      Comments => "Constant",
    },
    SlbBlock0ReorderAlgEventFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 9;
      Name => "SlbBlock[n]ReorderAlgEventFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Indicates the fill level of the event FIFO of the reorder block that will halt the reorder blocks from processing new RDs/PDs.",
      Width => "6",
      Position => "11:6", # Excel Formula: =calc_position(F58,E59)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d30",
      Comments => "Constant",
    },
  },
  SlbBlockConfiguration1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 22;
    Name => "SlbBlockConfiguration[6]",
    RegMem => "Reg",
    Address => "122",
    Width => "12", # Excel Formula: =calc_reg_width(E58:E59,F59)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    SlbBlock1EventPipeRdFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 9;
      Name => "SlbBlock[n]EventPipeRdFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Indicates the fill level of the event chain RD fifo that will halt the event chain pipe from processing new events.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d38",
      Comments => "Constant",
    },
    SlbBlock1ReorderAlgEventFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 9;
      Name => "SlbBlock[n]ReorderAlgEventFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Indicates the fill level of the event FIFO of the reorder block that will halt the reorder blocks from processing new RDs/PDs.",
      Width => "6",
      Position => "11:6", # Excel Formula: =calc_position(F58,E59)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d30",
      Comments => "Constant",
    },
  },
  SlbBlockConfiguration2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 22;
    Name => "SlbBlockConfiguration[6]",
    RegMem => "Reg",
    Address => "123",
    Width => "12", # Excel Formula: =calc_reg_width(E58:E59,F59)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    SlbBlock2EventPipeRdFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 9;
      Name => "SlbBlock[n]EventPipeRdFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Indicates the fill level of the event chain RD fifo that will halt the event chain pipe from processing new events.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d38",
      Comments => "Constant",
    },
    SlbBlock2ReorderAlgEventFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 9;
      Name => "SlbBlock[n]ReorderAlgEventFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Indicates the fill level of the event FIFO of the reorder block that will halt the reorder blocks from processing new RDs/PDs.",
      Width => "6",
      Position => "11:6", # Excel Formula: =calc_position(F58,E59)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d30",
      Comments => "Constant",
    },
  },
  SlbBlockConfiguration3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 22;
    Name => "SlbBlockConfiguration[6]",
    RegMem => "Reg",
    Address => "124",
    Width => "12", # Excel Formula: =calc_reg_width(E58:E59,F59)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    SlbBlock3EventPipeRdFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 9;
      Name => "SlbBlock[n]EventPipeRdFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Indicates the fill level of the event chain RD fifo that will halt the event chain pipe from processing new events.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d38",
      Comments => "Constant",
    },
    SlbBlock3ReorderAlgEventFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 9;
      Name => "SlbBlock[n]ReorderAlgEventFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Indicates the fill level of the event FIFO of the reorder block that will halt the reorder blocks from processing new RDs/PDs.",
      Width => "6",
      Position => "11:6", # Excel Formula: =calc_position(F58,E59)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d30",
      Comments => "Constant",
    },
  },
  SlbBlockConfiguration4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 22;
    Name => "SlbBlockConfiguration[6]",
    RegMem => "Reg",
    Address => "125",
    Width => "12", # Excel Formula: =calc_reg_width(E58:E59,F59)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    SlbBlock4EventPipeRdFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 9;
      Name => "SlbBlock[n]EventPipeRdFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Indicates the fill level of the event chain RD fifo that will halt the event chain pipe from processing new events.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d38",
      Comments => "Constant",
    },
    SlbBlock4ReorderAlgEventFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 9;
      Name => "SlbBlock[n]ReorderAlgEventFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Indicates the fill level of the event FIFO of the reorder block that will halt the reorder blocks from processing new RDs/PDs.",
      Width => "6",
      Position => "11:6", # Excel Formula: =calc_position(F58,E59)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d30",
      Comments => "Constant",
    },
  },
  SlbBlockConfiguration5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 22;
    Name => "SlbBlockConfiguration[6]",
    RegMem => "Reg",
    Address => "126",
    Width => "12", # Excel Formula: =calc_reg_width(E58:E59,F59)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    SlbBlock5EventPipeRdFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 9;
      Name => "SlbBlock[n]EventPipeRdFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Indicates the fill level of the event chain RD fifo that will halt the event chain pipe from processing new events.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F57,E58,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d38",
      Comments => "Constant",
    },
    SlbBlock5ReorderAlgEventFifoAlmFullThr => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 9;
      Name => "SlbBlock[n]ReorderAlgEventFifoAlmFullThr",
      RegMem => "RegField",
      Description => "Indicates the fill level of the event FIFO of the reorder block that will halt the reorder blocks from processing new RDs/PDs.",
      Width => "6",
      Position => "11:6", # Excel Formula: =calc_position(F58,E59)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "d30",
      Comments => "Constant",
    },
  },
  ReorderBuffHistogram => { #Structure Type: Reg;
    Name => "ReorderBuffHistogram",
    RegMem => "Reg",
    Address => "127", # Excel Formula: =calc_reg_address(C57,A57,G57)
    Width => "1", # Excel Formula: =calc_reg_width(E61:E61,F61)
    Type => "Histogram",
    AdditionalInfo => "HistType=Static,NumOfBins=8,BinWidth=32,HistThWidth=17,TimeIntervalWidth=10,RateEventWidth=14",
    BuffHist => { #Structure Type: RegField;
      Name => "BuffHist",
      RegMem => "RegField",
      Description => "A histogram of the amount of buffers of the packets that are inside the reorder block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F60,E61,TRUE)
      Type => "Histogram",
      UsedBy => "DSN",
    },
  },
  ReorderCountersReg0 => { #Structure Type: Reg;
    Name => "ReorderCountersReg0",
    RegMem => "Reg",
    Address => "128", # Excel Formula: =calc_reg_address(C60,A60,G60)
    Width => "80", # Excel Formula: =calc_reg_width(E63:E65,F65)
    Type => "ReadOnly",
    ReorderBlocksDropCounter => { #Structure Type: RegField;
      Name => "ReorderBlocksDropCounter",
      RegMem => "RegField",
      Description => "Counts the number of PDs marked as drop by the reorder blocks",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F62,E63,TRUE)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=4",
    },
    ReorderMaxBuffersThrDropCounter => { #Structure Type: RegField;
      Name => "ReorderMaxBuffersThrDropCounter",
      RegMem => "RegField",
      Description => "Counts the number of PDs droped by the reorder due to max buffers threshold crossing.",
      Width => "32",
      Position => "63:32", # Excel Formula: =calc_position(F63,E64)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=4",
    },
    SLBResetCounter => { #Structure Type: RegField;
      Name => "SLBResetCounter",
      RegMem => "RegField",
      Description => "Counts the number of reset indications sent from the reorder to the SNA in SLB traffic.",
      Width => "16",
      Position => "79:64", # Excel Formula: =calc_position(F64,E65)
      Type => "Counter",
      UsedBy => "DSN",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  ReorderCountersReg1 => { #Structure Type: Reg;
    Name => "ReorderCountersReg1",
    RegMem => "Reg",
    Address => "129", # Excel Formula: =calc_reg_address(C62,A62,G62)
    Width => "68", # Excel Formula: =calc_reg_width(E67:E70,F70)
    Type => "ReadOnly",
    ReorderOutFifosBuffersCounter => { #Structure Type: RegField;
      Name => "ReorderOutFifosBuffersCounter",
      RegMem => "RegField",
      Description => "Reflects the total buffers of the packets currently inside the out FIFOs of the reorder.",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F66,E67,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
    ReorderTotalBuffersCounter => { #Structure Type: RegField;
      Name => "ReorderTotalBuffersCounter",
      RegMem => "RegField",
      Description => "Reflects the total buffers of the packets currently inside the reorder.",
      Width => "17",
      Position => "33:17", # Excel Formula: =calc_position(F67,E68)
      Type => "Status",
      UsedBy => "DSN",
    },
    ReorderMaxTotalBuffersCounter => { #Structure Type: RegField;
      Name => "ReorderMaxTotalBuffersCounter",
      RegMem => "RegField",
      Description => "Reflects the maximal number of buffers of packets that were simultaniously inside the reorder",
      Width => "17",
      Position => "50:34", # Excel Formula: =calc_position(F68,E69)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    ReorderMaxPdsInFbSlicesCounter => { #Structure Type: RegField;
      Name => "ReorderMaxPdsInFbSlicesCounter",
      RegMem => "RegField",
      Description => "Reflects the maximal number of PDs of packets that were simultaniously inside the fabric slices of the reorder",
      Width => "17",
      Position => "67:51", # Excel Formula: =calc_position(F69,E70)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
  },
  ReorderLastInPd => { #Structure Type: Reg;
    Name => "ReorderLastInPd",
    RegMem => "Reg",
    Address => "12A", # Excel Formula: =calc_reg_address(C66,A66,G66)
    Width => "16", # Excel Formula: =calc_reg_width(E72:E72,F72)
    Type => "ReadOnly",
    ReorderLastIncomingPd => { #Structure Type: RegField;
      Name => "ReorderLastIncomingPd",
      RegMem => "RegField",
      Description => "Holds the 16 bits of the PD muxed by LastIncomingPdMuxSel",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F71,E72,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  ReorderDebugConf => { #Structure Type: Reg;
    Name => "ReorderDebugConf",
    RegMem => "Reg",
    Address => "12B", # Excel Formula: =calc_reg_address(C71,A71,G71)
    Width => "6", # Excel Formula: =calc_reg_width(E74:E74,F74)
    Type => "Config",
    LastIncomingPdMuxSel => { #Structure Type: RegField;
      Name => "LastIncomingPdMuxSel",
      RegMem => "RegField",
      Description => "Selector for the debug mux of ReorderLastIncomingPd",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F73,E74,TRUE)
      Type => "Config",
      UsedBy => "DSN",
      DefaultValue => "h0",
    },
  },
  ReorderEventsRegister => { #Structure Type: Reg;
    Name => "ReorderEventsRegister",
    RegMem => "Reg",
    Address => "12C", # Excel Formula: =calc_reg_address(C73,A73,G73)
    Width => "3", # Excel Formula: =calc_reg_width(E76:E78,F78)
    Type => "ReadOnly",
    SlbContextManagerEmpty => { #Structure Type: RegField;
      Name => "SlbContextManagerEmpty",
      RegMem => "RegField",
      Description => "Indicates that the SLB context manager was empty",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F75,E76,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
    FcmReorderError => { #Structure Type: RegField;
      Name => "FcmReorderError",
      RegMem => "RegField",
      Description => "Indicates that the reorder issued error to the FRM",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F76,E77)
      Type => "Event",
      UsedBy => "DSN",
    },
    SrcSliceTrgSlicePdFIFOFull => { #Structure Type: RegField;
      Name => "SrcSliceTrgSlicePdFIFOFull",
      RegMem => "RegField",
      Description => "Indicates that the src slice trg slice PD FIFO is full",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F77,E78)
      Type => "Event",
      UsedBy => "DSN",
    },
  },
  BlockEventsRegister0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 20;
    Name => "BlockEventsRegister[6]",
    RegMem => "Reg",
    Address => "12D", # Excel Formula: =calc_reg_address(C75,A75,G75)
    Width => "6", # Excel Formula: =calc_reg_width(E80:E85,F85)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Block0ReorderBlockToSnDistNotReady => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]ReorderBlockToSnDistNotReady",
      RegMem => "RegField",
      Description => "Indicates that the reorder block issued not ready to the SN distribution block.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F79,E80,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block0RdManArbPdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]RdManArbPdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the out PD FIFO was full",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F80,E81)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block0RdManStage1RdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]RdManStage1RdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the stage1 RD FIFO was full",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F81,E82)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block0RdManStage2RdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]RdManStage2RdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the stage2 RD FIFO was full",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F82,E83)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block0RdManNeighReorderRdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]RdManNeighReorderRdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the neighbor reorder block RD FIFO was full",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F83,E84)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block0RdManEventChainFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]RdManEventChainFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the event chain FIFO is full",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F84,E85)
      Type => "Event",
      UsedBy => "DSN",
    },
  },
  BlockEventsRegister1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 20;
    Name => "BlockEventsRegister[6]",
    RegMem => "Reg",
    Address => "12E",
    Width => "6", # Excel Formula: =calc_reg_width(E80:E85,F85)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Block1ReorderBlockToSnDistNotReady => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]ReorderBlockToSnDistNotReady",
      RegMem => "RegField",
      Description => "Indicates that the reorder block issued not ready to the SN distribution block.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F79,E80,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block1RdManArbPdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]RdManArbPdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the out PD FIFO was full",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F80,E81)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block1RdManStage1RdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]RdManStage1RdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the stage1 RD FIFO was full",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F81,E82)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block1RdManStage2RdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]RdManStage2RdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the stage2 RD FIFO was full",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F82,E83)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block1RdManNeighReorderRdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]RdManNeighReorderRdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the neighbor reorder block RD FIFO was full",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F83,E84)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block1RdManEventChainFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]RdManEventChainFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the event chain FIFO is full",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F84,E85)
      Type => "Event",
      UsedBy => "DSN",
    },
  },
  BlockEventsRegister2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 20;
    Name => "BlockEventsRegister[6]",
    RegMem => "Reg",
    Address => "12F",
    Width => "6", # Excel Formula: =calc_reg_width(E80:E85,F85)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Block2ReorderBlockToSnDistNotReady => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]ReorderBlockToSnDistNotReady",
      RegMem => "RegField",
      Description => "Indicates that the reorder block issued not ready to the SN distribution block.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F79,E80,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block2RdManArbPdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]RdManArbPdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the out PD FIFO was full",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F80,E81)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block2RdManStage1RdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]RdManStage1RdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the stage1 RD FIFO was full",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F81,E82)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block2RdManStage2RdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]RdManStage2RdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the stage2 RD FIFO was full",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F82,E83)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block2RdManNeighReorderRdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]RdManNeighReorderRdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the neighbor reorder block RD FIFO was full",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F83,E84)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block2RdManEventChainFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]RdManEventChainFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the event chain FIFO is full",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F84,E85)
      Type => "Event",
      UsedBy => "DSN",
    },
  },
  BlockEventsRegister3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 20;
    Name => "BlockEventsRegister[6]",
    RegMem => "Reg",
    Address => "130",
    Width => "6", # Excel Formula: =calc_reg_width(E80:E85,F85)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Block3ReorderBlockToSnDistNotReady => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]ReorderBlockToSnDistNotReady",
      RegMem => "RegField",
      Description => "Indicates that the reorder block issued not ready to the SN distribution block.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F79,E80,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block3RdManArbPdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]RdManArbPdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the out PD FIFO was full",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F80,E81)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block3RdManStage1RdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]RdManStage1RdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the stage1 RD FIFO was full",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F81,E82)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block3RdManStage2RdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]RdManStage2RdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the stage2 RD FIFO was full",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F82,E83)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block3RdManNeighReorderRdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]RdManNeighReorderRdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the neighbor reorder block RD FIFO was full",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F83,E84)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block3RdManEventChainFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]RdManEventChainFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the event chain FIFO is full",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F84,E85)
      Type => "Event",
      UsedBy => "DSN",
    },
  },
  BlockEventsRegister4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 20;
    Name => "BlockEventsRegister[6]",
    RegMem => "Reg",
    Address => "131",
    Width => "6", # Excel Formula: =calc_reg_width(E80:E85,F85)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Block4ReorderBlockToSnDistNotReady => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]ReorderBlockToSnDistNotReady",
      RegMem => "RegField",
      Description => "Indicates that the reorder block issued not ready to the SN distribution block.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F79,E80,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block4RdManArbPdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]RdManArbPdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the out PD FIFO was full",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F80,E81)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block4RdManStage1RdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]RdManStage1RdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the stage1 RD FIFO was full",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F81,E82)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block4RdManStage2RdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]RdManStage2RdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the stage2 RD FIFO was full",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F82,E83)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block4RdManNeighReorderRdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]RdManNeighReorderRdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the neighbor reorder block RD FIFO was full",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F83,E84)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block4RdManEventChainFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]RdManEventChainFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the event chain FIFO is full",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F84,E85)
      Type => "Event",
      UsedBy => "DSN",
    },
  },
  BlockEventsRegister5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 20;
    Name => "BlockEventsRegister[6]",
    RegMem => "Reg",
    Address => "132",
    Width => "6", # Excel Formula: =calc_reg_width(E80:E85,F85)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Block5ReorderBlockToSnDistNotReady => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]ReorderBlockToSnDistNotReady",
      RegMem => "RegField",
      Description => "Indicates that the reorder block issued not ready to the SN distribution block.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F79,E80,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block5RdManArbPdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]RdManArbPdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the out PD FIFO was full",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F80,E81)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block5RdManStage1RdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]RdManStage1RdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the stage1 RD FIFO was full",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F81,E82)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block5RdManStage2RdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]RdManStage2RdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the stage2 RD FIFO was full",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F82,E83)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block5RdManNeighReorderRdFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]RdManNeighReorderRdFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the neighbor reorder block RD FIFO was full",
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F83,E84)
      Type => "Event",
      UsedBy => "DSN",
    },
    Block5RdManEventChainFifoFull => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]RdManEventChainFifoFull",
      RegMem => "RegField",
      Description => "Indicates that the RD management arbiter received indication that the event chain FIFO is full",
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F84,E85)
      Type => "Event",
      UsedBy => "DSN",
    },
  },
  SliceEventsRegister0 => { #Structure Type: Reg; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 20;
    Name => "SliceEventsRegister[3]",
    RegMem => "Reg",
    Address => "133", # Excel Formula: =calc_reg_address(C79,A79,G79)
    Width => "1", # Excel Formula: =calc_reg_width(E87:E87,F87)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "3",
    ArrayIndex => "0",
    Slice0ReorderRateLimiterActivated => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderRateLimiterActivated",
      RegMem => "RegField",
      Description => "Indicates that the reorder rate limiter was activated",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F86,E87,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
  },
  SliceEventsRegister1 => { #Structure Type: Reg; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 20;
    Name => "SliceEventsRegister[3]",
    RegMem => "Reg",
    Address => "134",
    Width => "1", # Excel Formula: =calc_reg_width(E87:E87,F87)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "3",
    ArrayIndex => "1",
    Slice1ReorderRateLimiterActivated => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderRateLimiterActivated",
      RegMem => "RegField",
      Description => "Indicates that the reorder rate limiter was activated",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F86,E87,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
  },
  SliceEventsRegister2 => { #Structure Type: Reg; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 20;
    Name => "SliceEventsRegister[3]",
    RegMem => "Reg",
    Address => "135",
    Width => "1", # Excel Formula: =calc_reg_width(E87:E87,F87)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "3",
    ArrayIndex => "2",
    Slice2ReorderRateLimiterActivated => { #Structure Type: RegField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Slice[n]ReorderRateLimiterActivated",
      RegMem => "RegField",
      Description => "Indicates that the reorder rate limiter was activated",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F86,E87,TRUE)
      Type => "Event",
      UsedBy => "DSN",
    },
  },
  GlobalStatusRegister => { #Structure Type: Reg;
    Name => "GlobalStatusRegister",
    RegMem => "Reg",
    Address => "136", # Excel Formula: =calc_reg_address(C86,A86,G86)
    Width => "26", # Excel Formula: =calc_reg_width(E89:E90,F90)
    Type => "ReadOnly",
    SLBFbmNumberOfFreeConnections => { #Structure Type: RegField;
      Name => "SLBFbmNumberOfFreeConnections",
      RegMem => "RegField",
      Description => "Holds the current number of free SLB contexts",
      Width => "13",
      Position => "12:0", # Excel Formula: =calc_position(F88,E89,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
    SLBFbmFreeConnectionsMinWmk => { #Structure Type: RegField;
      Name => "SLBFbmFreeConnectionsMinWmk",
      RegMem => "RegField",
      Description => "Holds the current number of free SLB contexts",
      Width => "13",
      Position => "25:13", # Excel Formula: =calc_position(F89,E90)
      Type => "MinWmk",
      UsedBy => "DSN",
    },
  },
  ReorderBlockStatusReg0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 22;
    Name => "ReorderBlockStatusReg[6]",
    RegMem => "Reg",
    Address => "137", # Excel Formula: =calc_reg_address(C88,A88,G88)
    Width => "31", # Excel Formula: =calc_reg_width(E92:E95,F95)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    Block0RdFifoMaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]RdFifoMaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the RD FIFO fill level",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block0PdFifo0MaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]PdFifo0MaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the PD FIFO 0 fill level",
      Width => "7",
      Position => "16:10", # Excel Formula: =calc_position(F92,E93)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block0PdFifo1MaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]PdFifo1MaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the PD FIFO 1 fill level",
      Width => "7",
      Position => "23:17", # Excel Formula: =calc_position(F93,E94)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block0OutPdFifoFullConsecutiveCcMaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 6;
      Name => "Block[n]OutPdFifoFullConsecutiveCcMaxWmk",
      RegMem => "RegField",
      Description => "Holds the maximal number of consecutive cc where the PD FIFO was full",
      Width => "7",
      Position => "30:24", # Excel Formula: =calc_position(F94,E95)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
  },
  ReorderBlockStatusReg1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 22;
    Name => "ReorderBlockStatusReg[6]",
    RegMem => "Reg",
    Address => "138",
    Width => "31", # Excel Formula: =calc_reg_width(E92:E95,F95)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    Block1RdFifoMaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]RdFifoMaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the RD FIFO fill level",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block1PdFifo0MaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]PdFifo0MaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the PD FIFO 0 fill level",
      Width => "7",
      Position => "16:10", # Excel Formula: =calc_position(F92,E93)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block1PdFifo1MaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]PdFifo1MaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the PD FIFO 1 fill level",
      Width => "7",
      Position => "23:17", # Excel Formula: =calc_position(F93,E94)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block1OutPdFifoFullConsecutiveCcMaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 6;
      Name => "Block[n]OutPdFifoFullConsecutiveCcMaxWmk",
      RegMem => "RegField",
      Description => "Holds the maximal number of consecutive cc where the PD FIFO was full",
      Width => "7",
      Position => "30:24", # Excel Formula: =calc_position(F94,E95)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
  },
  ReorderBlockStatusReg2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 22;
    Name => "ReorderBlockStatusReg[6]",
    RegMem => "Reg",
    Address => "139",
    Width => "31", # Excel Formula: =calc_reg_width(E92:E95,F95)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    Block2RdFifoMaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]RdFifoMaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the RD FIFO fill level",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block2PdFifo0MaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]PdFifo0MaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the PD FIFO 0 fill level",
      Width => "7",
      Position => "16:10", # Excel Formula: =calc_position(F92,E93)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block2PdFifo1MaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]PdFifo1MaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the PD FIFO 1 fill level",
      Width => "7",
      Position => "23:17", # Excel Formula: =calc_position(F93,E94)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block2OutPdFifoFullConsecutiveCcMaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 6;
      Name => "Block[n]OutPdFifoFullConsecutiveCcMaxWmk",
      RegMem => "RegField",
      Description => "Holds the maximal number of consecutive cc where the PD FIFO was full",
      Width => "7",
      Position => "30:24", # Excel Formula: =calc_position(F94,E95)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
  },
  ReorderBlockStatusReg3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 22;
    Name => "ReorderBlockStatusReg[6]",
    RegMem => "Reg",
    Address => "13A",
    Width => "31", # Excel Formula: =calc_reg_width(E92:E95,F95)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    Block3RdFifoMaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]RdFifoMaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the RD FIFO fill level",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block3PdFifo0MaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]PdFifo0MaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the PD FIFO 0 fill level",
      Width => "7",
      Position => "16:10", # Excel Formula: =calc_position(F92,E93)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block3PdFifo1MaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]PdFifo1MaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the PD FIFO 1 fill level",
      Width => "7",
      Position => "23:17", # Excel Formula: =calc_position(F93,E94)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block3OutPdFifoFullConsecutiveCcMaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 6;
      Name => "Block[n]OutPdFifoFullConsecutiveCcMaxWmk",
      RegMem => "RegField",
      Description => "Holds the maximal number of consecutive cc where the PD FIFO was full",
      Width => "7",
      Position => "30:24", # Excel Formula: =calc_position(F94,E95)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
  },
  ReorderBlockStatusReg4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 22;
    Name => "ReorderBlockStatusReg[6]",
    RegMem => "Reg",
    Address => "13B",
    Width => "31", # Excel Formula: =calc_reg_width(E92:E95,F95)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    Block4RdFifoMaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]RdFifoMaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the RD FIFO fill level",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block4PdFifo0MaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]PdFifo0MaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the PD FIFO 0 fill level",
      Width => "7",
      Position => "16:10", # Excel Formula: =calc_position(F92,E93)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block4PdFifo1MaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]PdFifo1MaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the PD FIFO 1 fill level",
      Width => "7",
      Position => "23:17", # Excel Formula: =calc_position(F93,E94)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block4OutPdFifoFullConsecutiveCcMaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 6;
      Name => "Block[n]OutPdFifoFullConsecutiveCcMaxWmk",
      RegMem => "RegField",
      Description => "Holds the maximal number of consecutive cc where the PD FIFO was full",
      Width => "7",
      Position => "30:24", # Excel Formula: =calc_position(F94,E95)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
  },
  ReorderBlockStatusReg5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 22;
    Name => "ReorderBlockStatusReg[6]",
    RegMem => "Reg",
    Address => "13C",
    Width => "31", # Excel Formula: =calc_reg_width(E92:E95,F95)
    Type => "ReadOnly",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    Block5RdFifoMaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]RdFifoMaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the RD FIFO fill level",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F91,E92,TRUE)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block5PdFifo0MaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]PdFifo0MaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the PD FIFO 0 fill level",
      Width => "7",
      Position => "16:10", # Excel Formula: =calc_position(F92,E93)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block5PdFifo1MaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]PdFifo1MaxWmk",
      RegMem => "RegField",
      Description => "Max watermark on the PD FIFO 1 fill level",
      Width => "7",
      Position => "23:17", # Excel Formula: =calc_position(F93,E94)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
    Block5OutPdFifoFullConsecutiveCcMaxWmk => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 6;
      Name => "Block[n]OutPdFifoFullConsecutiveCcMaxWmk",
      RegMem => "RegField",
      Description => "Holds the maximal number of consecutive cc where the PD FIFO was full",
      Width => "7",
      Position => "30:24", # Excel Formula: =calc_position(F94,E95)
      Type => "MaxWmk",
      UsedBy => "DSN",
    },
  },
  Fifo0NewPkts0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 13;
    Name => "Fifo0NewPkts[6]",
    RegMem => "Mem",
    Address => "100000",
    Width => "218", # Excel Formula: =calc_mem_width(E97:E97,M96,F97,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "60",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "209",
    Fifo0Data0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "Fifo0Data[n]",
      RegMem => "MemField",
      Description => "Holds outgoing PD + RD + out slice(2b) + CPS(1b) + EOS(1b) ",
      Width => "209",
      Position => "208:0", # Excel Formula: =calc_position(F96,E97,TRUE)
    },
  },
  Fifo0NewPkts1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 13;
    Name => "Fifo0NewPkts[6]",
    RegMem => "Mem",
    Address => "200000",
    Width => "218", # Excel Formula: =calc_mem_width(E97:E97,M96,F97,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "60",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "209",
    Fifo0Data1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "Fifo0Data[n]",
      RegMem => "MemField",
      Description => "Holds outgoing PD + RD + out slice(2b) + CPS(1b) + EOS(1b) ",
      Width => "209",
      Position => "208:0", # Excel Formula: =calc_position(F96,E97,TRUE)
    },
  },
  Fifo0NewPkts2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 13;
    Name => "Fifo0NewPkts[6]",
    RegMem => "Mem",
    Address => "300000",
    Width => "218", # Excel Formula: =calc_mem_width(E97:E97,M96,F97,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "60",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "209",
    Fifo0Data2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 10;
      Name => "Fifo0Data[n]",
      RegMem => "MemField",
      Description => "Holds outgoing PD + RD + out slice(2b) + CPS(1b) + EOS(1b) ",
      Width => "209",
      Position => "208:0", # Excel Formula: =calc_position(F96,E97,TRUE)
    },
  },
  Fifo0NewPkts3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 13;
    Name => "Fifo0NewPkts[6]",
    RegMem => "Mem",
    Address => "400000",
    Width => "218", # Excel Formula: =calc_mem_width(E97:E97,M96,F97,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "60",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "209",
    Fifo0Data3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 10;
      Name => "Fifo0Data[n]",
      RegMem => "MemField",
      Description => "Holds outgoing PD + RD + out slice(2b) + CPS(1b) + EOS(1b) ",
      Width => "209",
      Position => "208:0", # Excel Formula: =calc_position(F96,E97,TRUE)
    },
  },
  Fifo0NewPkts4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 13;
    Name => "Fifo0NewPkts[6]",
    RegMem => "Mem",
    Address => "500000",
    Width => "218", # Excel Formula: =calc_mem_width(E97:E97,M96,F97,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "60",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "209",
    Fifo0Data4 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 10;
      Name => "Fifo0Data[n]",
      RegMem => "MemField",
      Description => "Holds outgoing PD + RD + out slice(2b) + CPS(1b) + EOS(1b) ",
      Width => "209",
      Position => "208:0", # Excel Formula: =calc_position(F96,E97,TRUE)
    },
  },
  Fifo0NewPkts5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 13;
    Name => "Fifo0NewPkts[6]",
    RegMem => "Mem",
    Address => "600000",
    Width => "218", # Excel Formula: =calc_mem_width(E97:E97,M96,F97,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "60",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "209",
    Fifo0Data5 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 10;
      Name => "Fifo0Data[n]",
      RegMem => "MemField",
      Description => "Holds outgoing PD + RD + out slice(2b) + CPS(1b) + EOS(1b) ",
      Width => "209",
      Position => "208:0", # Excel Formula: =calc_position(F96,E97,TRUE)
    },
  },
  Fifo1NewPkts0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 13;
    Name => "Fifo1NewPkts[6]",
    RegMem => "Mem",
    Address => "700000", # Excel Formula: =calc_mem_address(C96,A96,G98,L98)
    Width => "218", # Excel Formula: =calc_mem_width(E99:E99,M98,F99,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "60",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "209",
    Fifo1Data0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "Fifo1Data[n]",
      RegMem => "MemField",
      Description => "Holds outgoing PD + RD + out slice(2b) + CPS(1b) + EOS(1b)",
      Width => "209",
      Position => "208:0", # Excel Formula: =calc_position(F98,E99,TRUE)
    },
  },
  Fifo1NewPkts1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 13;
    Name => "Fifo1NewPkts[6]",
    RegMem => "Mem",
    Address => "800000",
    Width => "218", # Excel Formula: =calc_mem_width(E99:E99,M98,F99,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "60",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "209",
    Fifo1Data1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "Fifo1Data[n]",
      RegMem => "MemField",
      Description => "Holds outgoing PD + RD + out slice(2b) + CPS(1b) + EOS(1b)",
      Width => "209",
      Position => "208:0", # Excel Formula: =calc_position(F98,E99,TRUE)
    },
  },
  Fifo1NewPkts2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 13;
    Name => "Fifo1NewPkts[6]",
    RegMem => "Mem",
    Address => "900000",
    Width => "218", # Excel Formula: =calc_mem_width(E99:E99,M98,F99,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "60",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "209",
    Fifo1Data2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 10;
      Name => "Fifo1Data[n]",
      RegMem => "MemField",
      Description => "Holds outgoing PD + RD + out slice(2b) + CPS(1b) + EOS(1b)",
      Width => "209",
      Position => "208:0", # Excel Formula: =calc_position(F98,E99,TRUE)
    },
  },
  Fifo1NewPkts3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 13;
    Name => "Fifo1NewPkts[6]",
    RegMem => "Mem",
    Address => "A00000",
    Width => "218", # Excel Formula: =calc_mem_width(E99:E99,M98,F99,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "60",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "209",
    Fifo1Data3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 10;
      Name => "Fifo1Data[n]",
      RegMem => "MemField",
      Description => "Holds outgoing PD + RD + out slice(2b) + CPS(1b) + EOS(1b)",
      Width => "209",
      Position => "208:0", # Excel Formula: =calc_position(F98,E99,TRUE)
    },
  },
  Fifo1NewPkts4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 13;
    Name => "Fifo1NewPkts[6]",
    RegMem => "Mem",
    Address => "B00000",
    Width => "218", # Excel Formula: =calc_mem_width(E99:E99,M98,F99,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "60",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "209",
    Fifo1Data4 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 10;
      Name => "Fifo1Data[n]",
      RegMem => "MemField",
      Description => "Holds outgoing PD + RD + out slice(2b) + CPS(1b) + EOS(1b)",
      Width => "209",
      Position => "208:0", # Excel Formula: =calc_position(F98,E99,TRUE)
    },
  },
  Fifo1NewPkts5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 13;
    Name => "Fifo1NewPkts[6]",
    RegMem => "Mem",
    Address => "C00000",
    Width => "218", # Excel Formula: =calc_mem_width(E99:E99,M98,F99,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "60",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "209",
    Fifo1Data5 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 10;
      Name => "Fifo1Data[n]",
      RegMem => "MemField",
      Description => "Holds outgoing PD + RD + out slice(2b) + CPS(1b) + EOS(1b)",
      Width => "209",
      Position => "208:0", # Excel Formula: =calc_position(F98,E99,TRUE)
    },
  },
  MmaFifo0 => { #Structure Type: Mem; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 8;
    Name => "MmaFifo[3]",
    RegMem => "Mem",
    Address => "D00000", # Excel Formula: =calc_mem_address(C98,A98,G100,L100)
    Width => "199", # Excel Formula: =calc_mem_width(E101:E101,M100,F101,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "96",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=3,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "3",
    ArrayIndex => "0",
    MemLogicalWidth => "190",
    MmaFifoData0 => { #Structure Type: MemField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "MmaFifoData[n]",
      RegMem => "MemField",
      Description => "Width is incoming PD plus 1 (due to MMA implementation reasons).",
      Width => "190",
      Position => "189:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
  },
  MmaFifo1 => { #Structure Type: Mem; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 8;
    Name => "MmaFifo[3]",
    RegMem => "Mem",
    Address => "E00000",
    Width => "199", # Excel Formula: =calc_mem_width(E101:E101,M100,F101,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "96",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=3,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "3",
    ArrayIndex => "1",
    MemLogicalWidth => "190",
    MmaFifoData1 => { #Structure Type: MemField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "MmaFifoData[n]",
      RegMem => "MemField",
      Description => "Width is incoming PD plus 1 (due to MMA implementation reasons).",
      Width => "190",
      Position => "189:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
  },
  MmaFifo2 => { #Structure Type: Mem; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 8;
    Name => "MmaFifo[3]",
    RegMem => "Mem",
    Address => "F00000",
    Width => "199", # Excel Formula: =calc_mem_width(E101:E101,M100,F101,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "96",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadBeforeProt=1,SampleReadAfterProt=3,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "3",
    ArrayIndex => "2",
    MemLogicalWidth => "190",
    MmaFifoData2 => { #Structure Type: MemField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 12;
      Name => "MmaFifoData[n]",
      RegMem => "MemField",
      Description => "Width is incoming PD plus 1 (due to MMA implementation reasons).",
      Width => "190",
      Position => "189:0", # Excel Formula: =calc_position(F100,E101,TRUE)
    },
  },
  NwSrcSliceTrgSlicePdFifo0 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 0; ArrayLocationInName: 25;
    Name => "NwSrcSliceTrgSlicePdFifo[9]",
    RegMem => "Mem",
    Address => "1000000", # Excel Formula: =calc_mem_address(C100,A100,G102,L102)
    Width => "163", # Excel Formula: =calc_mem_width(E103:E103,M102,F103,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "122",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "0",
    MemLogicalWidth => "154",
    NwSrcSliceTrgSlicePdFifoData0 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 0; ArrayLocationInName: 29;
      Name => "NwSrcSliceTrgSlicePdFifoData[n]",
      RegMem => "MemField",
      Description => "Width is outgoing PD width",
      Width => "154",
      Position => "153:0", # Excel Formula: =calc_position(F102,E103,TRUE)
    },
  },
  NwSrcSliceTrgSlicePdFifo1 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 1; ArrayLocationInName: 25;
    Name => "NwSrcSliceTrgSlicePdFifo[9]",
    RegMem => "Mem",
    Address => "1100000",
    Width => "163", # Excel Formula: =calc_mem_width(E103:E103,M102,F103,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "122",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "1",
    MemLogicalWidth => "154",
    NwSrcSliceTrgSlicePdFifoData1 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 1; ArrayLocationInName: 29;
      Name => "NwSrcSliceTrgSlicePdFifoData[n]",
      RegMem => "MemField",
      Description => "Width is outgoing PD width",
      Width => "154",
      Position => "153:0", # Excel Formula: =calc_position(F102,E103,TRUE)
    },
  },
  NwSrcSliceTrgSlicePdFifo2 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 2; ArrayLocationInName: 25;
    Name => "NwSrcSliceTrgSlicePdFifo[9]",
    RegMem => "Mem",
    Address => "1200000",
    Width => "163", # Excel Formula: =calc_mem_width(E103:E103,M102,F103,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "122",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "2",
    MemLogicalWidth => "154",
    NwSrcSliceTrgSlicePdFifoData2 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 2; ArrayLocationInName: 29;
      Name => "NwSrcSliceTrgSlicePdFifoData[n]",
      RegMem => "MemField",
      Description => "Width is outgoing PD width",
      Width => "154",
      Position => "153:0", # Excel Formula: =calc_position(F102,E103,TRUE)
    },
  },
  NwSrcSliceTrgSlicePdFifo3 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 3; ArrayLocationInName: 25;
    Name => "NwSrcSliceTrgSlicePdFifo[9]",
    RegMem => "Mem",
    Address => "1300000",
    Width => "163", # Excel Formula: =calc_mem_width(E103:E103,M102,F103,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "122",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "3",
    MemLogicalWidth => "154",
    NwSrcSliceTrgSlicePdFifoData3 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 3; ArrayLocationInName: 29;
      Name => "NwSrcSliceTrgSlicePdFifoData[n]",
      RegMem => "MemField",
      Description => "Width is outgoing PD width",
      Width => "154",
      Position => "153:0", # Excel Formula: =calc_position(F102,E103,TRUE)
    },
  },
  NwSrcSliceTrgSlicePdFifo4 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 4; ArrayLocationInName: 25;
    Name => "NwSrcSliceTrgSlicePdFifo[9]",
    RegMem => "Mem",
    Address => "1400000",
    Width => "163", # Excel Formula: =calc_mem_width(E103:E103,M102,F103,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "122",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "4",
    MemLogicalWidth => "154",
    NwSrcSliceTrgSlicePdFifoData4 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 4; ArrayLocationInName: 29;
      Name => "NwSrcSliceTrgSlicePdFifoData[n]",
      RegMem => "MemField",
      Description => "Width is outgoing PD width",
      Width => "154",
      Position => "153:0", # Excel Formula: =calc_position(F102,E103,TRUE)
    },
  },
  NwSrcSliceTrgSlicePdFifo5 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 5; ArrayLocationInName: 25;
    Name => "NwSrcSliceTrgSlicePdFifo[9]",
    RegMem => "Mem",
    Address => "1500000",
    Width => "163", # Excel Formula: =calc_mem_width(E103:E103,M102,F103,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "122",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "5",
    MemLogicalWidth => "154",
    NwSrcSliceTrgSlicePdFifoData5 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 5; ArrayLocationInName: 29;
      Name => "NwSrcSliceTrgSlicePdFifoData[n]",
      RegMem => "MemField",
      Description => "Width is outgoing PD width",
      Width => "154",
      Position => "153:0", # Excel Formula: =calc_position(F102,E103,TRUE)
    },
  },
  NwSrcSliceTrgSlicePdFifo6 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 6; ArrayLocationInName: 25;
    Name => "NwSrcSliceTrgSlicePdFifo[9]",
    RegMem => "Mem",
    Address => "1600000",
    Width => "163", # Excel Formula: =calc_mem_width(E103:E103,M102,F103,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "122",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "6",
    MemLogicalWidth => "154",
    NwSrcSliceTrgSlicePdFifoData6 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 6; ArrayLocationInName: 29;
      Name => "NwSrcSliceTrgSlicePdFifoData[n]",
      RegMem => "MemField",
      Description => "Width is outgoing PD width",
      Width => "154",
      Position => "153:0", # Excel Formula: =calc_position(F102,E103,TRUE)
    },
  },
  NwSrcSliceTrgSlicePdFifo7 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 7; ArrayLocationInName: 25;
    Name => "NwSrcSliceTrgSlicePdFifo[9]",
    RegMem => "Mem",
    Address => "1700000",
    Width => "163", # Excel Formula: =calc_mem_width(E103:E103,M102,F103,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "122",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "7",
    MemLogicalWidth => "154",
    NwSrcSliceTrgSlicePdFifoData7 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 7; ArrayLocationInName: 29;
      Name => "NwSrcSliceTrgSlicePdFifoData[n]",
      RegMem => "MemField",
      Description => "Width is outgoing PD width",
      Width => "154",
      Position => "153:0", # Excel Formula: =calc_position(F102,E103,TRUE)
    },
  },
  NwSrcSliceTrgSlicePdFifo8 => { #Structure Type: Mem; ArrayLength: 9; ArrayIndex: 8; ArrayLocationInName: 25;
    Name => "NwSrcSliceTrgSlicePdFifo[9]",
    RegMem => "Mem",
    Address => "1800000",
    Width => "163", # Excel Formula: =calc_mem_width(E103:E103,M102,F103,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "122",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "9",
    ArrayIndex => "8",
    MemLogicalWidth => "154",
    NwSrcSliceTrgSlicePdFifoData8 => { #Structure Type: MemField; ArrayLength: 9; ArrayIndex: 8; ArrayLocationInName: 29;
      Name => "NwSrcSliceTrgSlicePdFifoData[n]",
      RegMem => "MemField",
      Description => "Width is outgoing PD width",
      Width => "154",
      Position => "153:0", # Excel Formula: =calc_position(F102,E103,TRUE)
    },
  },
  NwSliceOutValidFifo0 => { #Structure Type: Mem; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 20;
    Name => "NwSliceOutValidFifo[3]",
    RegMem => "Mem",
    Address => "1900000", # Excel Formula: =calc_mem_address(C102,A102,G104,L104)
    Width => "14", # Excel Formula: =calc_mem_width(E105:E105,M104,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "1028",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "3",
    ArrayIndex => "0",
    MemLogicalWidth => "9",
    NwSliceOutValidFifoData0 => { #Structure Type: MemField; ArrayLength: 3; ArrayIndex: 0; ArrayLocationInName: 24;
      Name => "NwSliceOutValidFifoData[n]",
      RegMem => "MemField",
      Width => "9",
      Position => "8:0", # Excel Formula: =calc_position(F104,E105,TRUE)
    },
  },
  NwSliceOutValidFifo1 => { #Structure Type: Mem; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 20;
    Name => "NwSliceOutValidFifo[3]",
    RegMem => "Mem",
    Address => "1A00000",
    Width => "14", # Excel Formula: =calc_mem_width(E105:E105,M104,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "1028",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "3",
    ArrayIndex => "1",
    MemLogicalWidth => "9",
    NwSliceOutValidFifoData1 => { #Structure Type: MemField; ArrayLength: 3; ArrayIndex: 1; ArrayLocationInName: 24;
      Name => "NwSliceOutValidFifoData[n]",
      RegMem => "MemField",
      Width => "9",
      Position => "8:0", # Excel Formula: =calc_position(F104,E105,TRUE)
    },
  },
  NwSliceOutValidFifo2 => { #Structure Type: Mem; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 20;
    Name => "NwSliceOutValidFifo[3]",
    RegMem => "Mem",
    Address => "1B00000",
    Width => "14", # Excel Formula: =calc_mem_width(E105:E105,M104,F105,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "1028",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    ArrayLength => "3",
    ArrayIndex => "2",
    MemLogicalWidth => "9",
    NwSliceOutValidFifoData2 => { #Structure Type: MemField; ArrayLength: 3; ArrayIndex: 2; ArrayLocationInName: 24;
      Name => "NwSliceOutValidFifoData[n]",
      RegMem => "MemField",
      Width => "9",
      Position => "8:0", # Excel Formula: =calc_position(F104,E105,TRUE)
    },
  },
  NwReorderRdFifo0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 16;
    Name => "NwReorderRdFifo[6]",
    RegMem => "Mem",
    Address => "1C00000", # Excel Formula: =calc_mem_address(C104,A104,G106,L106)
    Width => "58", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "994",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "Samples on NW RD FIFO and PP RD FIFO should be identical",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "51",
    NwReorderRdFifoData0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 20;
      Name => "NwReorderRdFifoData[n]",
      RegMem => "MemField",
      Width => "51",
      Position => "50:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  NwReorderRdFifo1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 16;
    Name => "NwReorderRdFifo[6]",
    RegMem => "Mem",
    Address => "1D00000",
    Width => "58", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "994",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "Samples on NW RD FIFO and PP RD FIFO should be identical",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "51",
    NwReorderRdFifoData1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 20;
      Name => "NwReorderRdFifoData[n]",
      RegMem => "MemField",
      Width => "51",
      Position => "50:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  NwReorderRdFifo2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 16;
    Name => "NwReorderRdFifo[6]",
    RegMem => "Mem",
    Address => "1E00000",
    Width => "58", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "994",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "Samples on NW RD FIFO and PP RD FIFO should be identical",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "51",
    NwReorderRdFifoData2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 20;
      Name => "NwReorderRdFifoData[n]",
      RegMem => "MemField",
      Width => "51",
      Position => "50:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  NwReorderRdFifo3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 16;
    Name => "NwReorderRdFifo[6]",
    RegMem => "Mem",
    Address => "1F00000",
    Width => "58", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "994",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "Samples on NW RD FIFO and PP RD FIFO should be identical",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "51",
    NwReorderRdFifoData3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 20;
      Name => "NwReorderRdFifoData[n]",
      RegMem => "MemField",
      Width => "51",
      Position => "50:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  NwReorderRdFifo4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 16;
    Name => "NwReorderRdFifo[6]",
    RegMem => "Mem",
    Address => "2000000",
    Width => "58", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "994",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "Samples on NW RD FIFO and PP RD FIFO should be identical",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "51",
    NwReorderRdFifoData4 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 20;
      Name => "NwReorderRdFifoData[n]",
      RegMem => "MemField",
      Width => "51",
      Position => "50:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  NwReorderRdFifo5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 16;
    Name => "NwReorderRdFifo[6]",
    RegMem => "Mem",
    Address => "2100000",
    Width => "58", # Excel Formula: =calc_mem_width(E107:E107,M106,F107,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "N/A",
    MemEntries => "994",
    MemWrapper => "Fifo",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,PackArrayToBus=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled,CpuReadAccess=Disabled,CpuWriteAccess=Disabled",
    Comments => "Samples on NW RD FIFO and PP RD FIFO should be identical",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "51",
    NwReorderRdFifoData5 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 20;
      Name => "NwReorderRdFifoData[n]",
      RegMem => "MemField",
      Width => "51",
      Position => "50:0", # Excel Formula: =calc_position(F106,E107,TRUE)
    },
  },
  SlbFreeConnectionsManager => { #Structure Type: Mem;
    Name => "SlbFreeConnectionsManager",
    RegMem => "Mem",
    Address => "2200000", # Excel Formula: =calc_mem_address(C106,A106,G108,L108)
    Width => "72", # Excel Formula: =calc_mem_width(E109:E109,M108,F109,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "ffffffffffffffff",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleWriteBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled",
    Comments => "Must have 2cc latency and must have 1 read/write access sample",
    MemLogicalWidth => "64",
    SlbConnectionAvailable => { #Structure Type: MemField;
      Name => "SlbConnectionAvailable",
      RegMem => "MemField",
      Description => "A bit per SLB connection number that indicates if it is available for allocation",
      Width => "64",
      Position => "63:0", # Excel Formula: =calc_position(F108,E109,TRUE)
    },
  },
  SlbResetWasSent => { #Structure Type: Mem;
    Name => "SlbResetWasSent",
    RegMem => "Mem",
    Address => "2300000", # Excel Formula: =calc_mem_address(C108,A108,G110,L110)
    Width => "72", # Excel Formula: =calc_mem_width(E111:E111,M110,F111,-1)
    Type => "Dynamic",
    UsedBy => "DSN",
    DefaultValue => "0",
    MemEntries => "64",
    MemWrapper => "1R1W",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=1,SampleReadAfterProt=2,SampleWriteBeforeProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,DisableSameAddressErr=Enabled,WriteActivityFactor=50,ReadActivityFactor=50,PortErrPropagate=Disabled",
    MemLogicalWidth => "64",
    SlbConnectionWasReset => { #Structure Type: MemField;
      Name => "SlbConnectionWasReset",
      RegMem => "MemField",
      Description => "A bit per SLB connection number that indicates if reset indication on the connection was sent to the SNA.
It's purpose is to avoid sending reset on the same connection more than once due to deisgn limitations.",
      Width => "64",
      Position => "63:0", # Excel Formula: =calc_position(F110,E111,TRUE)
    },
  },
  ReorderBuffHistogramCfg => { #Structure Type: Reg; Skip Register;
    Name => "ReorderBuffHistogramCfg",
    RegMem => "Reg",
    Address => "13D", # Excel Formula: =calc_reg_address(C91,A91,G91)
    Width => "129", # Excel Formula: =calc_reg_width(E113:E120,F120)
    Type => "Config",
    Comments => "EM Skip Reg",
    ReorderBuffHistogramTh0 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramTh0",
      RegMem => "RegField",
      Width => "17",
      Position => "16:0", # Excel Formula: =calc_position(F112,E113,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    ReorderBuffHistogramTh1 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramTh1",
      RegMem => "RegField",
      Width => "17",
      Position => "33:17", # Excel Formula: =calc_position(F113,E114)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    ReorderBuffHistogramTh2 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramTh2",
      RegMem => "RegField",
      Width => "17",
      Position => "50:34", # Excel Formula: =calc_position(F114,E115)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    ReorderBuffHistogramTh3 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramTh3",
      RegMem => "RegField",
      Width => "17",
      Position => "67:51", # Excel Formula: =calc_position(F115,E116)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    ReorderBuffHistogramTh4 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramTh4",
      RegMem => "RegField",
      Width => "17",
      Position => "84:68", # Excel Formula: =calc_position(F116,E117)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    ReorderBuffHistogramTh5 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramTh5",
      RegMem => "RegField",
      Width => "17",
      Position => "101:85", # Excel Formula: =calc_position(F117,E118)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    ReorderBuffHistogramTh6 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramTh6",
      RegMem => "RegField",
      Width => "17",
      Position => "118:102", # Excel Formula: =calc_position(F118,E119)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
    ReorderBuffHistogramTimeInterval => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramTimeInterval",
      RegMem => "RegField",
      Width => "10",
      Position => "128:119", # Excel Formula: =calc_position(F119,E120)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d0",
    },
  },
  ReorderBuffHistogramStatus => { #Structure Type: Reg; Skip Register;
    Name => "ReorderBuffHistogramStatus",
    RegMem => "Reg",
    Address => "13E", # Excel Formula: =calc_reg_address(C112,A112,G112)
    Width => "264", # Excel Formula: =calc_reg_width(E122:E137,F137)
    Type => "ReadOnly",
    AdditionalInfo => "MirrorReadAccess",
    Comments => "EM Skip Reg",
    ReorderBuffHistogramValue0 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramValue0",
      RegMem => "RegField",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F121,E122,TRUE)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramOverflow0 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramOverflow0",
      RegMem => "RegField",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F122,E123)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramValue1 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramValue1",
      RegMem => "RegField",
      Width => "32",
      Position => "64:33", # Excel Formula: =calc_position(F123,E124)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramOverflow1 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramOverflow1",
      RegMem => "RegField",
      Width => "1",
      Position => "65", # Excel Formula: =calc_position(F124,E125)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramValue2 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramValue2",
      RegMem => "RegField",
      Width => "32",
      Position => "97:66", # Excel Formula: =calc_position(F125,E126)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramOverflow2 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramOverflow2",
      RegMem => "RegField",
      Width => "1",
      Position => "98", # Excel Formula: =calc_position(F126,E127)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramValue3 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramValue3",
      RegMem => "RegField",
      Width => "32",
      Position => "130:99", # Excel Formula: =calc_position(F127,E128)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramOverflow3 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramOverflow3",
      RegMem => "RegField",
      Width => "1",
      Position => "131", # Excel Formula: =calc_position(F128,E129)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramValue4 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramValue4",
      RegMem => "RegField",
      Width => "32",
      Position => "163:132", # Excel Formula: =calc_position(F129,E130)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramOverflow4 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramOverflow4",
      RegMem => "RegField",
      Width => "1",
      Position => "164", # Excel Formula: =calc_position(F130,E131)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramValue5 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramValue5",
      RegMem => "RegField",
      Width => "32",
      Position => "196:165", # Excel Formula: =calc_position(F131,E132)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramOverflow5 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramOverflow5",
      RegMem => "RegField",
      Width => "1",
      Position => "197", # Excel Formula: =calc_position(F132,E133)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramValue6 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramValue6",
      RegMem => "RegField",
      Width => "32",
      Position => "229:198", # Excel Formula: =calc_position(F133,E134)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramOverflow6 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramOverflow6",
      RegMem => "RegField",
      Width => "1",
      Position => "230", # Excel Formula: =calc_position(F134,E135)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramValue7 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramValue7",
      RegMem => "RegField",
      Width => "32",
      Position => "262:231", # Excel Formula: =calc_position(F135,E136)
      Type => "Status",
      UsedBy => "CIF",
    },
    ReorderBuffHistogramOverflow7 => { #Structure Type: RegField;
      Name => "ReorderBuffHistogramOverflow7",
      RegMem => "RegField",
      Width => "1",
      Position => "263", # Excel Formula: =calc_position(F136,E137)
      Type => "Status",
      UsedBy => "CIF",
    },
  },
};
