$block{counters} = {
  Defines_db => "Z:\\leaba_reg_db_example\\defines.v",
  ProjectName => "Pacific",
  InterruptRegister => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegister",
    RegMem => "Reg",
    Address => "0",
    Description => "Master Interrupt Register",
    Width => "4",
    Type => "Interrupt",
    MemProtectInterruptSummary => { #Structure Type: RegField;
      Name => "MemProtectInterruptSummary",
      RegMem => "RegField",
      Description => "When this bit is set, MemProtectInterrupt has asserted interrupt",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
    },
    InterruptRegSummary => { #Structure Type: RegField;
      Name => "InterruptRegSummary",
      RegMem => "RegField",
      Description => "When this bit is set, InterruptReg has asserted interrupt",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
    },
    BankGroupInterruptReg0Summary => { #Structure Type: RegField;
      Name => "BankGroupInterruptReg0Summary",
      RegMem => "RegField",
      Description => "When this bit is set, BankGroupInterruptReg0 has asserted interrupt",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
    },
    BankGroupInterruptReg1Summary => { #Structure Type: RegField;
      Name => "BankGroupInterruptReg1Summary",
      RegMem => "RegField",
      Description => "When this bit is set, BankGroupInterruptReg1 has asserted interrupt",
      Width => "1",
      Position => "3",
      Type => "Interrupt",
    },
  },
  MemProtectInterrupt => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterrupt",
    RegMem => "Reg",
    Address => "1",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "Interrupt",
    Ecc_1bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b error was detected",
      Width => "1",
      Position => "0",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    Ecc_2bErrInterrupt => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b error was detected",
      Width => "1",
      Position => "1",
      Type => "Interrupt",
      UsedBy => "SER",
    },
    ParityErrInterrupt => { #Structure Type: RegField;
      Name => "ParityErrInterrupt",
      RegMem => "RegField",
      Description => "When this bit is set, Parity error was detected",
      Width => "1",
      Position => "2",
      Type => "Interrupt",
      UsedBy => "SER",
    },
  },
  MemProtectInterruptTest => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectInterruptTest",
    RegMem => "Reg",
    Address => "2",
    Description => "ECC/Parity Interrupt Register",
    Width => "3",
    Type => "InterruptTest",
    Ecc_1bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_1bErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks Ecc_1bErrInterrupt",
      Width => "1",
      Position => "0",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    Ecc_2bErrInterruptTest => { #Structure Type: RegField;
      Name => "Ecc_2bErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks Ecc_2bErrInterrupt",
      Width => "1",
      Position => "1",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    ParityErrInterruptTest => { #Structure Type: RegField;
      Name => "ParityErrInterruptTest",
      RegMem => "RegField",
      Description => "This field masks ParityErrInterrupt",
      Width => "1",
      Position => "2",
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "3",
    Description => "ECC 1b Error Interrupt Mask Register",
    Width => "7",
    Type => "Config",
    VoqBlockMap0Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "VoqBlockMap0Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    VoqBlockMap1Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "VoqBlockMap1Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    VoqBlockMap2Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "VoqBlockMap2Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    VoqBlockMap3Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "VoqBlockMap3Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    VoqBlockMap4Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "VoqBlockMap4Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    VoqBlockMap5Ecc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "VoqBlockMap5Ecc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    MaxCountersTableEcc_1bErrInterruptMask => { #Structure Type: RegField;
      Name => "MaxCountersTableEcc_1bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },
  Ecc_2bErrInterruptRegisterMask => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInterruptRegisterMask",
    RegMem => "Reg",
    Address => "4",
    Description => "ECC 2b Error Interrupt Mask Register",
    Width => "7",
    Type => "Config",
    VoqBlockMap0Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "VoqBlockMap0Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    VoqBlockMap1Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "VoqBlockMap1Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    VoqBlockMap2Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "VoqBlockMap2Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    VoqBlockMap3Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "VoqBlockMap3Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    VoqBlockMap4Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "VoqBlockMap4Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    VoqBlockMap5Ecc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "VoqBlockMap5Ecc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
    MaxCountersTableEcc_2bErrInterruptMask => { #Structure Type: RegField;
      Name => "MaxCountersTableEcc_2bErrInterruptMask",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error indication will be masked",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b1",
    },
  },

  Ecc_1bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrInitiateRegister",
    RegMem => "Reg",
    Address => "30",
    Description => "ECC 1b Error Initiator Register",
    Width => "7",
    Type => "Config",
    VoqBlockMap0Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "VoqBlockMap0Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    VoqBlockMap1Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "VoqBlockMap1Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    VoqBlockMap2Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "VoqBlockMap2Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    VoqBlockMap3Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "VoqBlockMap3Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    VoqBlockMap4Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "VoqBlockMap4Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    VoqBlockMap5Ecc_1bErrInitiate => { #Structure Type: RegField;
      Name => "VoqBlockMap5Ecc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    MaxCountersTableEcc_1bErrInitiate => { #Structure Type: RegField;
      Name => "MaxCountersTableEcc_1bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 1b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  Ecc_2bErrInitiateRegister => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrInitiateRegister",
    RegMem => "Reg",
    Address => "31",
    Description => "ECC 2b Error Initiator Register",
    Width => "7",
    Type => "Config",
    VoqBlockMap0Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "VoqBlockMap0Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "0",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    VoqBlockMap1Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "VoqBlockMap1Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "1",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    VoqBlockMap2Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "VoqBlockMap2Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "2",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    VoqBlockMap3Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "VoqBlockMap3Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    VoqBlockMap4Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "VoqBlockMap4Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "4",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    VoqBlockMap5Ecc_2bErrInitiate => { #Structure Type: RegField;
      Name => "VoqBlockMap5Ecc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "5",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    MaxCountersTableEcc_2bErrInitiate => { #Structure Type: RegField;
      Name => "MaxCountersTableEcc_2bErrInitiate",
      RegMem => "RegField",
      Description => "When this bit is set, ECC 2b Error will be initiated",
      Width => "1",
      Position => "6",
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  MemProtectErrStatus => { #Structure Type: Reg; Skip Register;
    Name => "MemProtectErrStatus",
    RegMem => "Reg",
    Address => "33",
    Description => "Memory SER protected error status",
    Width => "7",
    Type => "ReadOnly",
    VoqBlockMap0ErrInt => { #Structure Type: RegField;
      Name => "VoqBlockMap0ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "0",
      Type => "Status",
      UsedBy => "SER",
    },
    VoqBlockMap1ErrInt => { #Structure Type: RegField;
      Name => "VoqBlockMap1ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "1",
      Type => "Status",
      UsedBy => "SER",
    },
    VoqBlockMap2ErrInt => { #Structure Type: RegField;
      Name => "VoqBlockMap2ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "2",
      Type => "Status",
      UsedBy => "SER",
    },
    VoqBlockMap3ErrInt => { #Structure Type: RegField;
      Name => "VoqBlockMap3ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "3",
      Type => "Status",
      UsedBy => "SER",
    },
    VoqBlockMap4ErrInt => { #Structure Type: RegField;
      Name => "VoqBlockMap4ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "4",
      Type => "Status",
      UsedBy => "SER",
    },
    VoqBlockMap5ErrInt => { #Structure Type: RegField;
      Name => "VoqBlockMap5ErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "5",
      Type => "Status",
      UsedBy => "SER",
    },
    MaxCountersTableErrInt => { #Structure Type: RegField;
      Name => "MaxCountersTableErrInt",
      RegMem => "RegField",
      Description => "When this bit is set, SER Error occured",
      Width => "1",
      Position => "6",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SelectedSerErrorInfo => { #Structure Type: Reg; Skip Register;
    Name => "SelectedSerErrorInfo",
    RegMem => "Reg",
    Address => "34",
    Description => "Address and Type of SER error of selected memory",
    Width => "12",
    Type => "ReadOnly",
    MemErrAddr => { #Structure Type: RegField;
      Name => "MemErrAddr",
      RegMem => "RegField",
      Description => "Address of SER error of selected memory",
      Width => "10",
      Position => "9:0",
      Type => "Status",
      UsedBy => "SER",
    },
    MemErrType => { #Structure Type: RegField;
      Name => "MemErrType",
      RegMem => "RegField",
      Description => "0 = ECC 1b, 1 = ECC 2b, 2 = Parity",
      Width => "2",
      Position => "11:10",
      Type => "Status",
      UsedBy => "SER",
    },
  },
  SerErrorDebugConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SerErrorDebugConfiguration",
    RegMem => "Reg",
    Address => "35",
    Description => "Address and Type of SER error of selected memory",
    Width => "4",
    Type => "Config",
    ErroneousMemorySelector => { #Structure Type: RegField;
      Name => "ErroneousMemorySelector",
      RegMem => "RegField",
      Description => "Selects which memory error address and error type to set on the status register",
      Width => "3",
      Position => "2:0",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
    ResetMemoryErrors => { #Structure Type: RegField;
      Name => "ResetMemoryErrors",
      RegMem => "RegField",
      Description => "When set to 1 - all the memory SER errors are reset. Need to set back to 0 to resume error recording",
      Width => "1",
      Position => "3",
      Type => "Config",
      UsedBy => "SER",
      DefaultValue => "b0",
    },
  },
  Ecc_1bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_1bErrDebug",
    RegMem => "Reg",
    Address => "36",
    Description => "ECC 1b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_1bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_1bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 1b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  Ecc_2bErrDebug => { #Structure Type: Reg; Skip Register;
    Name => "Ecc_2bErrDebug",
    RegMem => "Reg",
    Address => "37",
    Description => "ECC 2b Error Counter",
    Width => "16",
    Type => "ReadOnly",
    Ecc_2bErrCounter => { #Structure Type: RegField;
      Name => "Ecc_2bErrCounter",
      RegMem => "RegField",
      Description => "Counts number of ECC 2b errors",
      Width => "16",
      Position => "15:0",
      Type => "Counter",
      UsedBy => "SER",
      AdditionalInfo => "CounterIncrWidth=1",
    },
  },
  MbistPassStatus => { #Structure Type: Reg; Skip Register;
    Name => "MbistPassStatus",
    RegMem => "Reg",
    Address => "39",
    Description => "MBIST pass status",
    Width => "14",
    Type => "ReadOnly",
    BistDonePassOut => { #Structure Type: RegField;
      Name => "BistDonePassOut",
      RegMem => "RegField",
      Description => "When this bit is set, MBIST passed",
      Width => "14",
      Position => "13:0",
      Type => "Status",
      UsedBy => "MEM",
    },
  },
  MbistFailStatus => { #Structure Type: Reg; Skip Register;
    Name => "MbistFailStatus",
    RegMem => "Reg",
    Address => "3A",
    Description => "MBIST fail status",
    Width => "14",
    Type => "ReadOnly",
    BistDoneFailOut => { #Structure Type: RegField;
      Name => "BistDoneFailOut",
      RegMem => "RegField",
      Description => "When this bit is set, MBIST failed",
      Width => "14",
      Position => "13:0",
      Type => "Status",
      UsedBy => "MEM",
    },
  },

  CounterTimer => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimer",
    RegMem => "Reg",
    Address => "40",
    Description => "Defines Counter Timer parameters",
    Width => "33", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    CounterTimerEnable => { #Structure Type: RegField;
      Name => "CounterTimerEnable",
      RegMem => "RegField",
      Description => "If set, Counter Timer will applied for the counters, otherwise the counters are free running",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
    CounterTimerCycle => { #Structure Type: RegField;
      Name => "CounterTimerCycle",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "32",
      Position => "32:1", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h3B9ACA00",
    },
  },
  CounterTimerTriggerReg => { #Structure Type: Reg; Skip Register;
    Name => "CounterTimerTriggerReg",
    RegMem => "Reg",
    Address => "41", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Activates Counter Timer",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "External",
    UsedBy => "CIF",
    CounterTimerTrigger => { #Structure Type: RegField;
      Name => "CounterTimerTrigger",
      RegMem => "RegField",
      Description => "When activated, CounterTimer will count for CounterTimerCycle",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "External",
      DefaultValue => "b0",
    },
  },
  MemoryAccessTimeout => { #Structure Type: Reg; Skip Register;
    Name => "MemoryAccessTimeout",
    RegMem => "Reg",
    Address => "42", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "Defines parameters for memory access timer expiry",
    Width => "38", # Excel Formula: =calc_reg_width(E13:E15,F15)
    Type => "Config",
    BubbleCounterThr => { #Structure Type: RegField;
      Name => "BubbleCounterThr",
      RegMem => "RegField",
      Description => "When BubbleCounterThr clocks passed from CIF memory access without grant, Bubble Request signal raised towards the block ",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d256",
    },
    TimeoutCounterThr => { #Structure Type: RegField;
      Name => "TimeoutCounterThr",
      RegMem => "RegField",
      Description => "When TimeoutCounterThr clocks passed from CIF memory access without grant, the access is terminated with error ",
      Width => "16",
      Position => "31:16", # Excel Formula: =calc_position(F13,E14)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d4096",
    },
    AnsWindowCounterThr => { #Structure Type: RegField;
      Name => "AnsWindowCounterThr",
      RegMem => "RegField",
      Description => "When memory access is terminated because of  TimeoutCounterThr, the CIF waits AnsWindowCounterThr clocks for access termination",
      Width => "6",
      Position => "37:32", # Excel Formula: =calc_position(F14,E15)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "d16",
    },
  },
  BroadcastConfigReg => { #Structure Type: Reg; Skip Register;
    Name => "BroadcastConfigReg",
    RegMem => "Reg",
    Address => "43", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Config Top broadcast parameters",
    Width => "12", # Excel Formula: =calc_reg_width(E17:E17,F17)
    Type => "Config",
    BroadcastId => { #Structure Type: RegField;
      Name => "BroadcastId",
      RegMem => "RegField",
      Description => "Broadcast ID used by Config Top protocol for broadcast messages",
      Width => "12",
      Position => "11:0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hFFF",
    },
  },
  MemoryProtBypass => { #Structure Type: Reg; Skip Register;
    Name => "MemoryProtBypass",
    RegMem => "Reg",
    Address => "44", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Bypass for ECC/Parity, used for debug",
    Width => "3", # Excel Formula: =calc_reg_width(E19:E21,F21)
    Type => "Config",
    DisableEcc => { #Structure Type: RegField;
      Name => "DisableEcc",
      RegMem => "RegField",
      Description => "If set, ECC fix is bypassed and is taken from payload",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F18,E19,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtGenBypass => { #Structure Type: RegField;
      Name => "CifProtGenBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity generation is bypassed and is taken from payload for CIF access",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F19,E20)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CifProtFixBypass => { #Structure Type: RegField;
      Name => "CifProtFixBypass",
      RegMem => "RegField",
      Description => "If set, ECC/Parity fix is bypassed and original ECC/Parity is forwarded towards the CIF",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F20,E21)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  SoftResetConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "SoftResetConfiguration",
    RegMem => "Reg",
    Address => "45", # Excel Formula: =calc_reg_address(C18,A18,G18)
    Description => "Soft Reset Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E23:E23,F23)
    Type => "Config",
    SoftRstn => { #Structure Type: RegField;
      Name => "SoftRstn",
      RegMem => "RegField",
      Description => "Triggers soft reset signal for the block, active low register",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F22,E23,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
    },
  },
  MbistConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "MbistConfiguration",
    RegMem => "Reg",
    Address => "46", # Excel Formula: =calc_reg_address(C22,A22,G22)
    Description => "MBIST Configuration for the block",
    Width => "3", # Excel Formula: =calc_reg_width(E25:E27,F27)
    Type => "Config",
    CoreBistRprMode => { #Structure Type: RegField;
      Name => "CoreBistRprMode",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F24,E25,TRUE)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistRun => { #Structure Type: RegField;
      Name => "CoreBistRun",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F25,E26)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
    CoreBistPtrnFill => { #Structure Type: RegField;
      Name => "CoreBistPtrnFill",
      RegMem => "RegField",
      Description => "Used by MBIST logic",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F26,E27)
      Type => "Config",
      UsedBy => "MEM",
      DefaultValue => "b0",
    },
  },
  PowerDownConfiguration => { #Structure Type: Reg; Skip Register;
    Name => "PowerDownConfiguration",
    RegMem => "Reg",
    Address => "47", # Excel Formula: =calc_reg_address(C24,A24,G24)
    Description => "Power Down Configuration for the block",
    Width => "1", # Excel Formula: =calc_reg_width(E29:E29,F29)
    Type => "Config",
    PowerDown => { #Structure Type: RegField;
      Name => "PowerDown",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F28,E29,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "b0",
      Comments => "Default value should always be 0",
    },
  },
  SpareReg => { #Structure Type: Reg; Skip Register;
    Name => "SpareReg",
    RegMem => "Reg",
    Address => "48", # Excel Formula: =calc_reg_address(C28,A28,G28)
    Description => "Power Down Configuration for the block",
    Width => "128", # Excel Formula: =calc_reg_width(E31:E31,F31)
    Type => "Config",
    SpareRegister => { #Structure Type: RegField;
      Name => "SpareRegister",
      RegMem => "RegField",
      Description => "If set, disables the clock of the block",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F30,E31,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "hffffffffffffffff",
    },
  },
  PmroCtrl => { #Structure Type: Reg; Skip Register;
    Name => "PmroCtrl",
    RegMem => "Reg",
    Address => "49", # Excel Formula: =calc_reg_address(C30,A30,G30)
    Width => "39", # Excel Formula: =calc_reg_width(E33:E37,F37)
    Type => "Config",
    PmroExecute => { #Structure Type: RegField;
      Name => "PmroExecute",
      RegMem => "RegField",
      Description => "0->1: execute pmro command.",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F32,E33,TRUE)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroCmd => { #Structure Type: RegField;
      Name => "PmroCmd",
      RegMem => "RegField",
      Description => "Pmro command to execute:
0: reset.
1: write.
2: read.
3: invalid.",
      Width => "2",
      Position => "2:1", # Excel Formula: =calc_position(F33,E34)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d0",
    },
    PmroSbusReset => { #Structure Type: RegField;
      Name => "PmroSbusReset",
      RegMem => "RegField",
      Description => "Reset pmro sbus chain. Need to set to 0 before starting access to pmro registers.",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F34,E35)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroAddr => { #Structure Type: RegField;
      Name => "PmroAddr",
      RegMem => "RegField",
      Description => "PMRO register address:
0 - control register, 8b, def: 0x0.
1 - SVT Configuration Register, 16b, def: 0xFFFF.
2 - LVT Configuration Register, 16b, def: 0xFFFF.
3 - ULVT Configuration Register, 16b, def: 0xFFFF.
4 - Interconnect Configuration Register, 16b, def: 0xFFFF.
5 - Reference Clock Counter Register, 24b, def: 0xFFF000.
6 - Oscillator Counter Register, 24b, def: 0x000000.
7 - SBus ID register, read as 0x0B.
Set to '0' on reset command.",
      Width => "3",
      Position => "6:4", # Excel Formula: =calc_position(F35,E36)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
    PmroData => { #Structure Type: RegField;
      Name => "PmroData",
      RegMem => "RegField",
      Description => "PMRO data, set to 0x0 on reset and read command.",
      Width => "32",
      Position => "38:7", # Excel Formula: =calc_position(F36,E37)
      Type => "Config",
      UsedBy => "pmro",
      DefaultValue => "d1",
    },
  },
  PmroStatus => { #Structure Type: Reg; Skip Register;
    Name => "PmroStatus",
    RegMem => "Reg",
    Address => "4A", # Excel Formula: =calc_reg_address(C32,A32,G32)
    Width => "34", # Excel Formula: =calc_reg_width(E39:E41,F41)
    Type => "ReadOnly",
    PmroRdata => { #Structure Type: RegField;
      Name => "PmroRdata",
      RegMem => "RegField",
      Description => "Read data from pmro. Valid when PmroFinish=1 and PmroFailed=0.",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F38,E39,TRUE)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFailed => { #Structure Type: RegField;
      Name => "PmroFailed",
      RegMem => "RegField",
      Description => "Pmro command failed. Valid only when PmroFinish=1.",
      Width => "1",
      Position => "32", # Excel Formula: =calc_position(F39,E40)
      Type => "Capture",
      UsedBy => "pmro",
    },
    PmroFinish => { #Structure Type: RegField;
      Name => "PmroFinish",
      RegMem => "RegField",
      Description => "Pmro command finished.",
      Width => "1",
      Position => "33", # Excel Formula: =calc_position(F40,E41)
      Type => "Event",
      UsedBy => "pmro",
    },
  },
  MirrorBusConfReg => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusConfReg",
    RegMem => "Reg",
    Address => "4B", # Excel Formula: =calc_reg_address(C38,A38,G38)
    Description => "aaa",
    Width => "11", # Excel Formula: =calc_reg_width(E43:E44,F44)
    Type => "Config",
    MirrorBusEn => { #Structure Type: RegField;
      Name => "MirrorBusEn",
      RegMem => "RegField",
      Description => "aaa",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F42,E43,TRUE)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
    MirrorBusSel => { #Structure Type: RegField;
      Name => "MirrorBusSel",
      RegMem => "RegField",
      Description => "aaa",
      Width => "10",
      Position => "10:1", # Excel Formula: =calc_position(F43,E44)
      Type => "Config",
      UsedBy => "BLOCK",
      DefaultValue => "h0",
    },
  },
  MirrorBusStatus => { #Structure Type: Reg; Skip Register;
    Name => "MirrorBusStatus",
    RegMem => "Reg",
    Address => "4C", # Excel Formula: =calc_reg_address(C42,A42,G42)
    Description => "aaa",
    Width => "32", # Excel Formula: =calc_reg_width(E46:E46,F46)
    Type => "ReadOnly",
    MirrorBus => { #Structure Type: RegField;
      Name => "MirrorBus",
      RegMem => "RegField",
      Description => "aaa",
      Width => "32",
      Position => "31:0", # Excel Formula: =calc_position(F45,E46,TRUE)
      Type => "Status",
      UsedBy => "BLOCK",
    },
  },
  DeviceTimeOffsetCfg => { #Structure Type: Reg; Skip Register;
    Name => "DeviceTimeOffsetCfg",
    RegMem => "Reg",
    Address => "4D", # Excel Formula: =calc_reg_address(C45,A45,G45)
    Description => "Define time offset configuration",
    Width => "10", # Excel Formula: =calc_reg_width(E48:E48,F48)
    Type => "Config",
    DeviceTimeOffset => { #Structure Type: RegField;
      Name => "DeviceTimeOffset",
      RegMem => "RegField",
      Description => "Define time offset",
      Width => "10",
      Position => "9:0", # Excel Formula: =calc_position(F47,E48,TRUE)
      Type => "Config",
      UsedBy => "CIF",
      DefaultValue => "h0",
    },
  },
  BankAllocationConfig0 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 0; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "100",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "0",
    BankSliceAllocation0 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 0; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation0 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 0; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig1 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 1; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "101",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "1",
    BankSliceAllocation1 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 1; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation1 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 1; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig2 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 2; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "102",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "2",
    BankSliceAllocation2 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 2; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation2 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 2; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig3 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 3; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "103",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "3",
    BankSliceAllocation3 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 3; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation3 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 3; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig4 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 4; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "104",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "4",
    BankSliceAllocation4 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 4; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation4 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 4; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig5 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 5; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "105",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "5",
    BankSliceAllocation5 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 5; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation5 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 5; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig6 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 6; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "106",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "6",
    BankSliceAllocation6 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 6; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation6 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 6; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig7 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 7; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "107",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "7",
    BankSliceAllocation7 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 7; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation7 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 7; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig8 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 8; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "108",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "8",
    BankSliceAllocation8 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 8; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation8 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 8; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig9 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 9; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "109",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "9",
    BankSliceAllocation9 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 9; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation9 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 9; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig10 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 10; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "10A",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "10",
    BankSliceAllocation10 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 10; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation10 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 10; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig11 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 11; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "10B",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "11",
    BankSliceAllocation11 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 11; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation11 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 11; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig12 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 12; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "10C",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "12",
    BankSliceAllocation12 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 12; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation12 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 12; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig13 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 13; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "10D",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "13",
    BankSliceAllocation13 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 13; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation13 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 13; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig14 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 14; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "10E",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "14",
    BankSliceAllocation14 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 14; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation14 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 14; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig15 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 15; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "10F",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "15",
    BankSliceAllocation15 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 15; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation15 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 15; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig16 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 16; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "110",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "16",
    BankSliceAllocation16 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 16; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation16 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 16; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig17 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 17; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "111",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "17",
    BankSliceAllocation17 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 17; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation17 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 17; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig18 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 18; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "112",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "18",
    BankSliceAllocation18 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 18; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation18 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 18; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig19 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 19; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "113",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "19",
    BankSliceAllocation19 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 19; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation19 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 19; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig20 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 20; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "114",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "20",
    BankSliceAllocation20 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 20; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation20 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 20; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig21 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 21; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "115",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "21",
    BankSliceAllocation21 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 21; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation21 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 21; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig22 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 22; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "116",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "22",
    BankSliceAllocation22 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 22; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation22 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 22; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig23 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 23; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "117",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "23",
    BankSliceAllocation23 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 23; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation23 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 23; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig24 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 24; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "118",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "24",
    BankSliceAllocation24 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 24; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation24 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 24; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig25 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 25; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "119",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "25",
    BankSliceAllocation25 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 25; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation25 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 25; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig26 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 26; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "11A",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "26",
    BankSliceAllocation26 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 26; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation26 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 26; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig27 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 27; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "11B",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "27",
    BankSliceAllocation27 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 27; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation27 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 27; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig28 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 28; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "11C",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "28",
    BankSliceAllocation28 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 28; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation28 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 28; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig29 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 29; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "11D",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "29",
    BankSliceAllocation29 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 29; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation29 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 29; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig30 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 30; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "11E",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "30",
    BankSliceAllocation30 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 30; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation30 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 30; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig31 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 31; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "11F",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "31",
    BankSliceAllocation31 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 31; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation31 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 31; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig32 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 32; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "120",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "32",
    BankSliceAllocation32 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 32; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation32 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 32; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig33 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 33; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "121",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "33",
    BankSliceAllocation33 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 33; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation33 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 33; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig34 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 34; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "122",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "34",
    BankSliceAllocation34 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 34; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation34 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 34; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig35 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 35; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "123",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "35",
    BankSliceAllocation35 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 35; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation35 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 35; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig36 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 36; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "124",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "36",
    BankSliceAllocation36 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 36; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation36 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 36; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig37 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 37; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "125",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "37",
    BankSliceAllocation37 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 37; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation37 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 37; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig38 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 38; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "126",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "38",
    BankSliceAllocation38 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 38; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation38 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 38; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig39 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 39; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "127",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "39",
    BankSliceAllocation39 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 39; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation39 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 39; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig40 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 40; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "128",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "40",
    BankSliceAllocation40 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 40; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation40 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 40; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig41 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 41; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "129",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "41",
    BankSliceAllocation41 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 41; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation41 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 41; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig42 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 42; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "12A",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "42",
    BankSliceAllocation42 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 42; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation42 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 42; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig43 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 43; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "12B",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "43",
    BankSliceAllocation43 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 43; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation43 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 43; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig44 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 44; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "12C",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "44",
    BankSliceAllocation44 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 44; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation44 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 44; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig45 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 45; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "12D",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "45",
    BankSliceAllocation45 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 45; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation45 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 45; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig46 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 46; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "12E",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "46",
    BankSliceAllocation46 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 46; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation46 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 46; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig47 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 47; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "12F",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "47",
    BankSliceAllocation47 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 47; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation47 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 47; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig48 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 48; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "130",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "48",
    BankSliceAllocation48 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 48; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation48 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 48; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig49 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 49; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "131",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "49",
    BankSliceAllocation49 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 49; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation49 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 49; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig50 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 50; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "132",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "50",
    BankSliceAllocation50 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 50; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation50 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 50; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig51 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 51; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "133",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "51",
    BankSliceAllocation51 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 51; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation51 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 51; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig52 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 52; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "134",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "52",
    BankSliceAllocation52 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 52; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation52 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 52; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig53 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 53; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "135",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "53",
    BankSliceAllocation53 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 53; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation53 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 53; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig54 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 54; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "136",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "54",
    BankSliceAllocation54 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 54; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation54 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 54; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig55 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 55; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "137",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "55",
    BankSliceAllocation55 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 55; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation55 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 55; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig56 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 56; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "138",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "56",
    BankSliceAllocation56 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 56; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation56 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 56; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig57 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 57; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "139",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "57",
    BankSliceAllocation57 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 57; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation57 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 57; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig58 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 58; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "13A",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "58",
    BankSliceAllocation58 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 58; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation58 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 58; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig59 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 59; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "13B",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "59",
    BankSliceAllocation59 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 59; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation59 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 59; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig60 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 60; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "13C",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "60",
    BankSliceAllocation60 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 60; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation60 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 60; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig61 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 61; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "13D",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "61",
    BankSliceAllocation61 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 61; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation61 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 61; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig62 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 62; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "13E",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "62",
    BankSliceAllocation62 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 62; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation62 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 62; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig63 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 63; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "13F",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "63",
    BankSliceAllocation63 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 63; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation63 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 63; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig64 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 64; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "140",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "64",
    BankSliceAllocation64 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 64; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation64 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 64; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig65 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 65; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "141",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "65",
    BankSliceAllocation65 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 65; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation65 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 65; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig66 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 66; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "142",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "66",
    BankSliceAllocation66 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 66; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation66 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 66; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig67 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 67; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "143",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "67",
    BankSliceAllocation67 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 67; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation67 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 67; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig68 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 68; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "144",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "68",
    BankSliceAllocation68 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 68; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation68 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 68; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig69 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 69; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "145",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "69",
    BankSliceAllocation69 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 69; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation69 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 69; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig70 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 70; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "146",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "70",
    BankSliceAllocation70 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 70; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation70 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 70; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig71 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 71; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "147",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "71",
    BankSliceAllocation71 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 71; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation71 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 71; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig72 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 72; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "148",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "72",
    BankSliceAllocation72 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 72; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation72 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 72; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig73 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 73; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "149",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "73",
    BankSliceAllocation73 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 73; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation73 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 73; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig74 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 74; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "14A",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "74",
    BankSliceAllocation74 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 74; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation74 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 74; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig75 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 75; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "14B",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "75",
    BankSliceAllocation75 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 75; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation75 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 75; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig76 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 76; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "14C",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "76",
    BankSliceAllocation76 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 76; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation76 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 76; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig77 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 77; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "14D",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "77",
    BankSliceAllocation77 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 77; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation77 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 77; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig78 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 78; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "14E",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "78",
    BankSliceAllocation78 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 78; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation78 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 78; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig79 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 79; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "14F",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "79",
    BankSliceAllocation79 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 79; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation79 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 79; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig80 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 80; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "150",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "80",
    BankSliceAllocation80 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 80; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation80 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 80; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig81 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 81; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "151",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "81",
    BankSliceAllocation81 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 81; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation81 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 81; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig82 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 82; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "152",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "82",
    BankSliceAllocation82 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 82; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation82 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 82; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig83 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 83; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "153",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "83",
    BankSliceAllocation83 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 83; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation83 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 83; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig84 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 84; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "154",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "84",
    BankSliceAllocation84 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 84; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation84 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 84; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig85 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 85; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "155",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "85",
    BankSliceAllocation85 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 85; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation85 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 85; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig86 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 86; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "156",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "86",
    BankSliceAllocation86 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 86; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation86 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 86; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig87 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 87; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "157",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "87",
    BankSliceAllocation87 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 87; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation87 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 87; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig88 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 88; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "158",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "88",
    BankSliceAllocation88 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 88; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation88 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 88; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig89 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 89; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "159",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "89",
    BankSliceAllocation89 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 89; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation89 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 89; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig90 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 90; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "15A",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "90",
    BankSliceAllocation90 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 90; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation90 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 90; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig91 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 91; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "15B",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "91",
    BankSliceAllocation91 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 91; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation91 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 91; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig92 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 92; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "15C",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "92",
    BankSliceAllocation92 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 92; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation92 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 92; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig93 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 93; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "15D",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "93",
    BankSliceAllocation93 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 93; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation93 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 93; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig94 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 94; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "15E",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "94",
    BankSliceAllocation94 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 94; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation94 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 94; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig95 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 95; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "15F",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "95",
    BankSliceAllocation95 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 95; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation95 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 95; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig96 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 96; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "160",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "96",
    BankSliceAllocation96 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 96; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation96 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 96; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig97 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 97; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "161",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "97",
    BankSliceAllocation97 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 97; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation97 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 97; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig98 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 98; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "162",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "98",
    BankSliceAllocation98 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 98; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation98 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 98; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig99 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 99; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "163",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "99",
    BankSliceAllocation99 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 99; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation99 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 99; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig100 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 100; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "164",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "100",
    BankSliceAllocation100 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 100; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation100 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 100; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig101 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 101; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "165",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "101",
    BankSliceAllocation101 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 101; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation101 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 101; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig102 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 102; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "166",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "102",
    BankSliceAllocation102 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 102; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation102 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 102; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig103 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 103; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "167",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "103",
    BankSliceAllocation103 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 103; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation103 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 103; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig104 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 104; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "168",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "104",
    BankSliceAllocation104 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 104; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation104 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 104; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig105 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 105; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "169",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "105",
    BankSliceAllocation105 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 105; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation105 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 105; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig106 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 106; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "16A",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "106",
    BankSliceAllocation106 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 106; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation106 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 106; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  BankAllocationConfig107 => { #Structure Type: Reg; ArrayLength: 108; ArrayIndex: 107; ArrayLocationInName: 21;
    Name => "BankAllocationConfig[108]",
    RegMem => "Reg",
    Address => "16B",
    Description => "Allocation of each bank to a specific counting origin
Note: should not be changed under traffic
Typically bank N+1 will be allocated the same as bank N",
    Width => "5", # Excel Formula: =calc_reg_width(E8:E9,F9)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    Comments => "Used with mutlicycle so should not be changed under traffic",
    ArrayLength => "108",
    ArrayIndex => "107",
    BankSliceAllocation107 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 107; ArrayLocationInName: 20;
      Name => "BankSliceAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a slice (0-5)",
      Width => "3",
      Position => "2:0", # Excel Formula: =calc_position(F7,E8,TRUE)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
    },
    BankPipeClientAllocation107 => { #Structure Type: RegField; ArrayLength: 108; ArrayIndex: 107; ArrayLocationInName: 25;
      Name => "BankPipeClientAllocation[n]",
      RegMem => "RegField",
      Description => "Allocation to a client (RX, TX, VOQ)
0 - CLIENT_RX
1 - CLIENT_TX
2 - CLIENT_VOQ",
      Width => "2",
      Position => "4:3", # Excel Formula: =calc_position(F8,E9)
      Type => "Config",
      UsedBy => "xbar,output_dist",
      DefaultValue => "h0",
      DocName => "BankClientAllocation[n]",
    },
  },
  VoqSetTypeConfig0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 17;
    Name => "VoqSetTypeConfig[6]",
    RegMem => "Reg",
    Address => "16C", # Excel Formula: =calc_reg_address(C7,A7,G7)
    Description => "Configuration for VOQ Set-Type (per slice)",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    CountDroppedOnly0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 17;
      Name => "CountDroppedOnly[n]",
      RegMem => "RegField",
      Description => "0 - Count both dropped and not-dropped packets, each in a separate counter
1 - Count only dropped packets",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "Config",
      UsedBy => "voq_map",
      DefaultValue => "h0",
    },
  },
  VoqSetTypeConfig1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 17;
    Name => "VoqSetTypeConfig[6]",
    RegMem => "Reg",
    Address => "16D",
    Description => "Configuration for VOQ Set-Type (per slice)",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    CountDroppedOnly1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 17;
      Name => "CountDroppedOnly[n]",
      RegMem => "RegField",
      Description => "0 - Count both dropped and not-dropped packets, each in a separate counter
1 - Count only dropped packets",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "Config",
      UsedBy => "voq_map",
      DefaultValue => "h0",
    },
  },
  VoqSetTypeConfig2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 17;
    Name => "VoqSetTypeConfig[6]",
    RegMem => "Reg",
    Address => "16E",
    Description => "Configuration for VOQ Set-Type (per slice)",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    CountDroppedOnly2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 17;
      Name => "CountDroppedOnly[n]",
      RegMem => "RegField",
      Description => "0 - Count both dropped and not-dropped packets, each in a separate counter
1 - Count only dropped packets",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "Config",
      UsedBy => "voq_map",
      DefaultValue => "h0",
    },
  },
  VoqSetTypeConfig3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 17;
    Name => "VoqSetTypeConfig[6]",
    RegMem => "Reg",
    Address => "16F",
    Description => "Configuration for VOQ Set-Type (per slice)",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    CountDroppedOnly3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 17;
      Name => "CountDroppedOnly[n]",
      RegMem => "RegField",
      Description => "0 - Count both dropped and not-dropped packets, each in a separate counter
1 - Count only dropped packets",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "Config",
      UsedBy => "voq_map",
      DefaultValue => "h0",
    },
  },
  VoqSetTypeConfig4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 17;
    Name => "VoqSetTypeConfig[6]",
    RegMem => "Reg",
    Address => "170",
    Description => "Configuration for VOQ Set-Type (per slice)",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    CountDroppedOnly4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 17;
      Name => "CountDroppedOnly[n]",
      RegMem => "RegField",
      Description => "0 - Count both dropped and not-dropped packets, each in a separate counter
1 - Count only dropped packets",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "Config",
      UsedBy => "voq_map",
      DefaultValue => "h0",
    },
  },
  VoqSetTypeConfig5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 17;
    Name => "VoqSetTypeConfig[6]",
    RegMem => "Reg",
    Address => "171",
    Description => "Configuration for VOQ Set-Type (per slice)",
    Width => "1", # Excel Formula: =calc_reg_width(E11:E11,F11)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    CountDroppedOnly5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 17;
      Name => "CountDroppedOnly[n]",
      RegMem => "RegField",
      Description => "0 - Count both dropped and not-dropped packets, each in a separate counter
1 - Count only dropped packets",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F10,E11,TRUE)
      Type => "Config",
      UsedBy => "voq_map",
      DefaultValue => "h0",
    },
  },
  EnableVoqCountTcConfig0 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 23;
    Name => "EnableVoqCountTcConfig[6]",
    RegMem => "Reg",
    Address => "172", # Excel Formula: =calc_reg_address(C10,A10,G10)
    Description => "VOQ Counting per TC enable register (per slice)",
    Width => "16", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "0",
    EnableVoqCountTc0 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 17;
      Name => "EnableVoqCountTc[n]",
      RegMem => "RegField",
      Description => "Enables VOQ counting per TC based on TC-Profile
Bit index is mapped as {TC-Profile(1), TC(3)}
0 - Disable
1 - Enable",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "voq_map",
      DefaultValue => "hFFFF",
    },
  },
  EnableVoqCountTcConfig1 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 23;
    Name => "EnableVoqCountTcConfig[6]",
    RegMem => "Reg",
    Address => "173",
    Description => "VOQ Counting per TC enable register (per slice)",
    Width => "16", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "1",
    EnableVoqCountTc1 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 17;
      Name => "EnableVoqCountTc[n]",
      RegMem => "RegField",
      Description => "Enables VOQ counting per TC based on TC-Profile
Bit index is mapped as {TC-Profile(1), TC(3)}
0 - Disable
1 - Enable",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "voq_map",
      DefaultValue => "hFFFF",
    },
  },
  EnableVoqCountTcConfig2 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 23;
    Name => "EnableVoqCountTcConfig[6]",
    RegMem => "Reg",
    Address => "174",
    Description => "VOQ Counting per TC enable register (per slice)",
    Width => "16", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "2",
    EnableVoqCountTc2 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 17;
      Name => "EnableVoqCountTc[n]",
      RegMem => "RegField",
      Description => "Enables VOQ counting per TC based on TC-Profile
Bit index is mapped as {TC-Profile(1), TC(3)}
0 - Disable
1 - Enable",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "voq_map",
      DefaultValue => "hFFFF",
    },
  },
  EnableVoqCountTcConfig3 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 23;
    Name => "EnableVoqCountTcConfig[6]",
    RegMem => "Reg",
    Address => "175",
    Description => "VOQ Counting per TC enable register (per slice)",
    Width => "16", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "3",
    EnableVoqCountTc3 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 17;
      Name => "EnableVoqCountTc[n]",
      RegMem => "RegField",
      Description => "Enables VOQ counting per TC based on TC-Profile
Bit index is mapped as {TC-Profile(1), TC(3)}
0 - Disable
1 - Enable",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "voq_map",
      DefaultValue => "hFFFF",
    },
  },
  EnableVoqCountTcConfig4 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 23;
    Name => "EnableVoqCountTcConfig[6]",
    RegMem => "Reg",
    Address => "176",
    Description => "VOQ Counting per TC enable register (per slice)",
    Width => "16", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "4",
    EnableVoqCountTc4 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 17;
      Name => "EnableVoqCountTc[n]",
      RegMem => "RegField",
      Description => "Enables VOQ counting per TC based on TC-Profile
Bit index is mapped as {TC-Profile(1), TC(3)}
0 - Disable
1 - Enable",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "voq_map",
      DefaultValue => "hFFFF",
    },
  },
  EnableVoqCountTcConfig5 => { #Structure Type: Reg; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 23;
    Name => "EnableVoqCountTcConfig[6]",
    RegMem => "Reg",
    Address => "177",
    Description => "VOQ Counting per TC enable register (per slice)",
    Width => "16", # Excel Formula: =calc_reg_width(E13:E13,F13)
    Type => "Config",
    AdditionalInfo => "PackArrayToBus",
    ArrayLength => "6",
    ArrayIndex => "5",
    EnableVoqCountTc5 => { #Structure Type: RegField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 17;
      Name => "EnableVoqCountTc[n]",
      RegMem => "RegField",
      Description => "Enables VOQ counting per TC based on TC-Profile
Bit index is mapped as {TC-Profile(1), TC(3)}
0 - Disable
1 - Enable",
      Width => "16",
      Position => "15:0", # Excel Formula: =calc_position(F12,E13,TRUE)
      Type => "Config",
      UsedBy => "voq_map",
      DefaultValue => "hFFFF",
    },
  },
  RxLmConstantConfig => { #Structure Type: Reg;
    Name => "RxLmConstantConfig",
    RegMem => "Reg",
    Address => "178", # Excel Formula: =calc_reg_address(C12,A12,G12)
    Description => "Debug configuration for RX LM",
    Width => "6", # Excel Formula: =calc_reg_width(E15:E15,F15)
    Type => "Config",
    MaxRxLmGrantRoundTripTime => { #Structure Type: RegField;
      Name => "MaxRxLmGrantRoundTripTime",
      RegMem => "RegField",
      Description => "Time between RX LM grants to output
This field was used for tuning parameters during the design phase. The value of this field is optimized for the current silicon, thus the user is not expected to change its value unless instructed by Cisco Systems, Inc.",
      Width => "6",
      Position => "5:0", # Excel Formula: =calc_position(F14,E15,TRUE)
      Type => "Config",
      UsedBy => "output_dist",
      DefaultValue => "d39",
      Comments => "equals `CNT_LM_PACKET_COUNT_WIDTH/`COUNTERS2TXPP_RX_LM_READ_RESULT_PACKED_WIDTH + MAX_RX_LM_DELAY + 1 (+1 just in case)",
    },
  },
  CpuRead => { #Structure Type: Reg;
    Name => "CpuRead",
    RegMem => "Reg",
    Address => "179", # Excel Formula: =calc_reg_address(C14,A14,G14)
    Description => "Counters CPU read control register
Writing to this register triggers the counter/s read process",
    Width => "23", # Excel Formula: =calc_reg_width(E17:E20,F20)
    Type => "External",
    UsedBy => "cpu_read",
    ReadTarget => { #Structure Type: RegField;
      Name => "ReadTarget",
      RegMem => "RegField",
      Description => "Selects what to read (Max counters/specific counter)
0 - TARGET_MAX    
1 - TARGET_COUNTER",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F16,E17,TRUE)
      Type => "External",
    },
    ReadReset => { #Structure Type: RegField;
      Name => "ReadReset",
      RegMem => "RegField",
      Description => "Selects whether to reset the counter/s after read
0 - Do not reset
1 - Reset",
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F17,E18)
      Type => "External",
    },
    CounterReadAddress => { #Structure Type: RegField;
      Name => "CounterReadAddress",
      RegMem => "RegField",
      Description => "The address of the counter to read (if the target is specific counter)",
      Width => "20",
      Position => "21:2", # Excel Formula: =calc_position(F18,E19)
      Type => "External",
    },
    Ready => { #Structure Type: RegField;
      Name => "Ready",
      RegMem => "RegField",
      Description => "Indication from design that result is ready and can be read (Should be written with value 0)",
      Width => "1",
      Position => "22", # Excel Formula: =calc_position(F19,E20)
      Type => "External",
    },
  },
  CpuCounterReadResult => { #Structure Type: Reg;
    Name => "CpuCounterReadResult",
    RegMem => "Reg",
    Address => "17A", # Excel Formula: =calc_reg_address(C16,A16,G16)
    Description => "Read result of a specific counter",
    Width => "128", # Excel Formula: =calc_reg_width(E22:E22,F22)
    Type => "ReadOnly",
    CounterReadResult => { #Structure Type: RegField;
      Name => "CounterReadResult",
      RegMem => "RegField",
      Description => "64MSB are byte count, 64LSB are packet count",
      Width => "128",
      Position => "127:0", # Excel Formula: =calc_position(F21,E22,TRUE)
      Type => "Status",
      UsedBy => "cpu_read",
    },
  },
  InterruptReg => { #Structure Type: Reg;
    Name => "InterruptReg",
    RegMem => "Reg",
    Address => "17B", # Excel Formula: =calc_reg_address(C21,A21,G21)
    Description => "Interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "Interrupt",
    SamePdBankCollision => { #Structure Type: RegField;
      Name => "SamePdBankCollision",
      RegMem => "RegField",
      Description => "A configuration error - There is more than one counter pointer to the same bank in the same PD (RX or TX counting)",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "Interrupt",
      UsedBy => "xbar",
    },
  },
  InterruptRegMask => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegMask",
    RegMem => "Reg",
    Address => "17C",
    Description => "This register masks InterruptReg interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "InterruptMask",
    SamePdBankCollisionMask => { #Structure Type: RegField;
      Name => "SamePdBankCollisionMask",
      RegMem => "RegField",
      Description => "This field masks SamePdBankCollision interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  InterruptRegTest => { #Structure Type: Reg; Skip Register;
    Name => "InterruptRegTest",
    RegMem => "Reg",
    Address => "17D",
    Description => "This register tests InterruptReg interrupt register",
    Width => "1", # Excel Formula: =calc_reg_width(E24:E24,F24)
    Type => "InterruptTest",
    SamePdBankCollisionTest => { #Structure Type: RegField;
      Name => "SamePdBankCollisionTest",
      RegMem => "RegField",
      Description => "This field tests SamePdBankCollision interrupt",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F23,E24,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  BankGroupInterruptReg0 => { #Structure Type: Reg;
    Name => "BankGroupInterruptReg0",
    RegMem => "Reg",
    Address => "17E", # Excel Formula: =calc_reg_address(C23,A23,G23)
    Description => "Interrupt register from all bank groups 0-17",
    Width => "18", # Excel Formula: =calc_reg_width(E26:E43,F43)
    Type => "Interrupt",
    BankGroupInterrupt0 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt0",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 0 (banks 0-2)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A26,19,2), " (banks ", 3*MID(A26,19,2), "-", 3*MID(A26,19,2)+2, ")")
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F25,E26,TRUE)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt1 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt1",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 1 (banks 3-5)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A27,19,2), " (banks ", 3*MID(A27,19,2), "-", 3*MID(A27,19,2)+2, ")")
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F26,E27)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt2 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt2",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 2 (banks 6-8)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A28,19,2), " (banks ", 3*MID(A28,19,2), "-", 3*MID(A28,19,2)+2, ")")
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F27,E28)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt3 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt3",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 3 (banks 9-11)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A29,19,2), " (banks ", 3*MID(A29,19,2), "-", 3*MID(A29,19,2)+2, ")")
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F28,E29)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt4 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt4",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 4 (banks 12-14)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A30,19,2), " (banks ", 3*MID(A30,19,2), "-", 3*MID(A30,19,2)+2, ")")
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F29,E30)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt5 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt5",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 5 (banks 15-17)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A31,19,2), " (banks ", 3*MID(A31,19,2), "-", 3*MID(A31,19,2)+2, ")")
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F30,E31)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt6 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt6",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 6 (banks 18-20)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A32,19,2), " (banks ", 3*MID(A32,19,2), "-", 3*MID(A32,19,2)+2, ")")
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F31,E32)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt7 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt7",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 7 (banks 21-23)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A33,19,2), " (banks ", 3*MID(A33,19,2), "-", 3*MID(A33,19,2)+2, ")")
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F32,E33)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt8 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt8",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 8 (banks 24-26)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A34,19,2), " (banks ", 3*MID(A34,19,2), "-", 3*MID(A34,19,2)+2, ")")
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F33,E34)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt9 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt9",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 9 (banks 27-29)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A35,19,2), " (banks ", 3*MID(A35,19,2), "-", 3*MID(A35,19,2)+2, ")")
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F34,E35)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt10 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt10",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 10 (banks 30-32)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A36,19,2), " (banks ", 3*MID(A36,19,2), "-", 3*MID(A36,19,2)+2, ")")
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F35,E36)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt11 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt11",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 11 (banks 33-35)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A37,19,2), " (banks ", 3*MID(A37,19,2), "-", 3*MID(A37,19,2)+2, ")")
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F36,E37)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt12 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt12",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 12 (banks 36-38)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A38,19,2), " (banks ", 3*MID(A38,19,2), "-", 3*MID(A38,19,2)+2, ")")
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F37,E38)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt13 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt13",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 13 (banks 39-41)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A39,19,2), " (banks ", 3*MID(A39,19,2), "-", 3*MID(A39,19,2)+2, ")")
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F38,E39)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt14 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt14",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 14 (banks 42-44)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A40,19,2), " (banks ", 3*MID(A40,19,2), "-", 3*MID(A40,19,2)+2, ")")
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F39,E40)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt15 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt15",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 15 (banks 45-47)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A41,19,2), " (banks ", 3*MID(A41,19,2), "-", 3*MID(A41,19,2)+2, ")")
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F40,E41)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt16 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt16",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 16 (banks 48-50)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A42,19,2), " (banks ", 3*MID(A42,19,2), "-", 3*MID(A42,19,2)+2, ")")
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F41,E42)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt17 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt17",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 17 (banks 51-53)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A43,19,2), " (banks ", 3*MID(A43,19,2), "-", 3*MID(A43,19,2)+2, ")")
      Width => "1",
      Position => "17", # Excel Formula: =calc_position(F42,E43)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
  },
  BankGroupInterruptReg0Mask => { #Structure Type: Reg; Skip Register;
    Name => "BankGroupInterruptReg0Mask",
    RegMem => "Reg",
    Address => "17F",
    Description => "This register masks BankGroupInterruptReg0 interrupt register",
    Width => "18", # Excel Formula: =calc_reg_width(E26:E43,F43)
    Type => "InterruptMask",
    BankGroupInterrupt0Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt0Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt0 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A26,19,2), " (banks ", 3*MID(A26,19,2), "-", 3*MID(A26,19,2)+2, ")")
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F25,E26,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt1Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt1Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt1 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A27,19,2), " (banks ", 3*MID(A27,19,2), "-", 3*MID(A27,19,2)+2, ")")
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F26,E27)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt2Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt2Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt2 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A28,19,2), " (banks ", 3*MID(A28,19,2), "-", 3*MID(A28,19,2)+2, ")")
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F27,E28)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt3Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt3Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt3 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A29,19,2), " (banks ", 3*MID(A29,19,2), "-", 3*MID(A29,19,2)+2, ")")
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F28,E29)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt4Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt4Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt4 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A30,19,2), " (banks ", 3*MID(A30,19,2), "-", 3*MID(A30,19,2)+2, ")")
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F29,E30)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt5Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt5Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt5 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A31,19,2), " (banks ", 3*MID(A31,19,2), "-", 3*MID(A31,19,2)+2, ")")
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F30,E31)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt6Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt6Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt6 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A32,19,2), " (banks ", 3*MID(A32,19,2), "-", 3*MID(A32,19,2)+2, ")")
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F31,E32)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt7Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt7Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt7 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A33,19,2), " (banks ", 3*MID(A33,19,2), "-", 3*MID(A33,19,2)+2, ")")
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F32,E33)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt8Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt8Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt8 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A34,19,2), " (banks ", 3*MID(A34,19,2), "-", 3*MID(A34,19,2)+2, ")")
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F33,E34)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt9Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt9Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt9 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A35,19,2), " (banks ", 3*MID(A35,19,2), "-", 3*MID(A35,19,2)+2, ")")
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F34,E35)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt10Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt10Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt10 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A36,19,2), " (banks ", 3*MID(A36,19,2), "-", 3*MID(A36,19,2)+2, ")")
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F35,E36)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt11Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt11Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt11 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A37,19,2), " (banks ", 3*MID(A37,19,2), "-", 3*MID(A37,19,2)+2, ")")
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F36,E37)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt12Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt12Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt12 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A38,19,2), " (banks ", 3*MID(A38,19,2), "-", 3*MID(A38,19,2)+2, ")")
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F37,E38)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt13Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt13Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt13 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A39,19,2), " (banks ", 3*MID(A39,19,2), "-", 3*MID(A39,19,2)+2, ")")
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F38,E39)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt14Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt14Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt14 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A40,19,2), " (banks ", 3*MID(A40,19,2), "-", 3*MID(A40,19,2)+2, ")")
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F39,E40)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt15Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt15Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt15 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A41,19,2), " (banks ", 3*MID(A41,19,2), "-", 3*MID(A41,19,2)+2, ")")
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F40,E41)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt16Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt16Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt16 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A42,19,2), " (banks ", 3*MID(A42,19,2), "-", 3*MID(A42,19,2)+2, ")")
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F41,E42)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt17Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt17Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt17 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A43,19,2), " (banks ", 3*MID(A43,19,2), "-", 3*MID(A43,19,2)+2, ")")
      Width => "1",
      Position => "17", # Excel Formula: =calc_position(F42,E43)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  BankGroupInterruptReg0Test => { #Structure Type: Reg; Skip Register;
    Name => "BankGroupInterruptReg0Test",
    RegMem => "Reg",
    Address => "180",
    Description => "This register tests BankGroupInterruptReg0 interrupt register",
    Width => "18", # Excel Formula: =calc_reg_width(E26:E43,F43)
    Type => "InterruptTest",
    BankGroupInterrupt0Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt0Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt0 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A26,19,2), " (banks ", 3*MID(A26,19,2), "-", 3*MID(A26,19,2)+2, ")")
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F25,E26,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt1Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt1Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt1 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A27,19,2), " (banks ", 3*MID(A27,19,2), "-", 3*MID(A27,19,2)+2, ")")
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F26,E27)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt2Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt2Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt2 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A28,19,2), " (banks ", 3*MID(A28,19,2), "-", 3*MID(A28,19,2)+2, ")")
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F27,E28)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt3Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt3Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt3 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A29,19,2), " (banks ", 3*MID(A29,19,2), "-", 3*MID(A29,19,2)+2, ")")
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F28,E29)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt4Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt4Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt4 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A30,19,2), " (banks ", 3*MID(A30,19,2), "-", 3*MID(A30,19,2)+2, ")")
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F29,E30)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt5Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt5Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt5 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A31,19,2), " (banks ", 3*MID(A31,19,2), "-", 3*MID(A31,19,2)+2, ")")
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F30,E31)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt6Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt6Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt6 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A32,19,2), " (banks ", 3*MID(A32,19,2), "-", 3*MID(A32,19,2)+2, ")")
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F31,E32)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt7Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt7Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt7 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A33,19,2), " (banks ", 3*MID(A33,19,2), "-", 3*MID(A33,19,2)+2, ")")
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F32,E33)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt8Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt8Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt8 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A34,19,2), " (banks ", 3*MID(A34,19,2), "-", 3*MID(A34,19,2)+2, ")")
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F33,E34)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt9Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt9Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt9 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A35,19,2), " (banks ", 3*MID(A35,19,2), "-", 3*MID(A35,19,2)+2, ")")
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F34,E35)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt10Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt10Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt10 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A36,19,2), " (banks ", 3*MID(A36,19,2), "-", 3*MID(A36,19,2)+2, ")")
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F35,E36)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt11Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt11Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt11 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A37,19,2), " (banks ", 3*MID(A37,19,2), "-", 3*MID(A37,19,2)+2, ")")
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F36,E37)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt12Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt12Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt12 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A38,19,2), " (banks ", 3*MID(A38,19,2), "-", 3*MID(A38,19,2)+2, ")")
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F37,E38)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt13Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt13Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt13 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A39,19,2), " (banks ", 3*MID(A39,19,2), "-", 3*MID(A39,19,2)+2, ")")
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F38,E39)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt14Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt14Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt14 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A40,19,2), " (banks ", 3*MID(A40,19,2), "-", 3*MID(A40,19,2)+2, ")")
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F39,E40)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt15Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt15Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt15 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A41,19,2), " (banks ", 3*MID(A41,19,2), "-", 3*MID(A41,19,2)+2, ")")
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F40,E41)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt16Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt16Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt16 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A42,19,2), " (banks ", 3*MID(A42,19,2), "-", 3*MID(A42,19,2)+2, ")")
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F41,E42)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt17Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt17Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt17 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A43,19,2), " (banks ", 3*MID(A43,19,2), "-", 3*MID(A43,19,2)+2, ")")
      Width => "1",
      Position => "17", # Excel Formula: =calc_position(F42,E43)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  BankGroupInterruptReg1 => { #Structure Type: Reg;
    Name => "BankGroupInterruptReg1",
    RegMem => "Reg",
    Address => "181", # Excel Formula: =calc_reg_address(C25,A25,G25)
    Description => "Interrupt register from all bank groups 18-35",
    Width => "18", # Excel Formula: =calc_reg_width(E45:E62,F62)
    Type => "Interrupt",
    BankGroupInterrupt18 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt18",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 18 (banks 54-56)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A45,19,2), " (banks ", 3*MID(A45,19,2), "-", 3*MID(A45,19,2)+2, ")")
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F44,E45,TRUE)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt19 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt19",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 19 (banks 57-59)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A46,19,2), " (banks ", 3*MID(A46,19,2), "-", 3*MID(A46,19,2)+2, ")")
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F45,E46)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt20 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt20",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 20 (banks 60-62)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A47,19,2), " (banks ", 3*MID(A47,19,2), "-", 3*MID(A47,19,2)+2, ")")
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F46,E47)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt21 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt21",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 21 (banks 63-65)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A48,19,2), " (banks ", 3*MID(A48,19,2), "-", 3*MID(A48,19,2)+2, ")")
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F47,E48)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt22 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt22",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 22 (banks 66-68)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A49,19,2), " (banks ", 3*MID(A49,19,2), "-", 3*MID(A49,19,2)+2, ")")
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F48,E49)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt23 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt23",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 23 (banks 69-71)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A50,19,2), " (banks ", 3*MID(A50,19,2), "-", 3*MID(A50,19,2)+2, ")")
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F49,E50)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt24 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt24",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 24 (banks 72-74)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A51,19,2), " (banks ", 3*MID(A51,19,2), "-", 3*MID(A51,19,2)+2, ")")
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F50,E51)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt25 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt25",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 25 (banks 75-77)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A52,19,2), " (banks ", 3*MID(A52,19,2), "-", 3*MID(A52,19,2)+2, ")")
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F51,E52)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt26 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt26",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 26 (banks 78-80)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A53,19,2), " (banks ", 3*MID(A53,19,2), "-", 3*MID(A53,19,2)+2, ")")
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F52,E53)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt27 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt27",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 27 (banks 81-83)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A54,19,2), " (banks ", 3*MID(A54,19,2), "-", 3*MID(A54,19,2)+2, ")")
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F53,E54)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt28 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt28",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 28 (banks 84-86)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A55,19,2), " (banks ", 3*MID(A55,19,2), "-", 3*MID(A55,19,2)+2, ")")
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F54,E55)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt29 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt29",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 29 (banks 87-89)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A56,19,2), " (banks ", 3*MID(A56,19,2), "-", 3*MID(A56,19,2)+2, ")")
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F55,E56)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt30 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt30",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 30 (banks 90-92)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A57,19,2), " (banks ", 3*MID(A57,19,2), "-", 3*MID(A57,19,2)+2, ")")
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F56,E57)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt31 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt31",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 31 (banks 93-95)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A58,19,2), " (banks ", 3*MID(A58,19,2), "-", 3*MID(A58,19,2)+2, ")")
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F57,E58)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt32 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt32",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 32 (banks 96-98)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A59,19,2), " (banks ", 3*MID(A59,19,2), "-", 3*MID(A59,19,2)+2, ")")
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F58,E59)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt33 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt33",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 33 (banks 99-101)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A60,19,2), " (banks ", 3*MID(A60,19,2), "-", 3*MID(A60,19,2)+2, ")")
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F59,E60)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt34 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt34",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 34 (banks 102-104)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A61,19,2), " (banks ", 3*MID(A61,19,2), "-", 3*MID(A61,19,2)+2, ")")
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F60,E61)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
    BankGroupInterrupt35 => { #Structure Type: RegField;
      Name => "BankGroupInterrupt35",
      RegMem => "RegField",
      Description => "Interrupt occurred in bank group 35 (banks 105-107)", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A62,19,2), " (banks ", 3*MID(A62,19,2), "-", 3*MID(A62,19,2)+2, ")")
      Width => "1",
      Position => "17", # Excel Formula: =calc_position(F61,E62)
      Type => "Interrupt",
      UsedBy => "bank_group",
    },
  },
  BankGroupInterruptReg1Mask => { #Structure Type: Reg; Skip Register;
    Name => "BankGroupInterruptReg1Mask",
    RegMem => "Reg",
    Address => "182",
    Description => "This register masks BankGroupInterruptReg1 interrupt register",
    Width => "18", # Excel Formula: =calc_reg_width(E45:E62,F62)
    Type => "InterruptMask",
    BankGroupInterrupt18Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt18Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt18 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A45,19,2), " (banks ", 3*MID(A45,19,2), "-", 3*MID(A45,19,2)+2, ")")
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F44,E45,TRUE)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt19Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt19Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt19 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A46,19,2), " (banks ", 3*MID(A46,19,2), "-", 3*MID(A46,19,2)+2, ")")
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F45,E46)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt20Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt20Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt20 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A47,19,2), " (banks ", 3*MID(A47,19,2), "-", 3*MID(A47,19,2)+2, ")")
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F46,E47)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt21Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt21Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt21 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A48,19,2), " (banks ", 3*MID(A48,19,2), "-", 3*MID(A48,19,2)+2, ")")
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F47,E48)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt22Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt22Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt22 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A49,19,2), " (banks ", 3*MID(A49,19,2), "-", 3*MID(A49,19,2)+2, ")")
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F48,E49)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt23Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt23Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt23 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A50,19,2), " (banks ", 3*MID(A50,19,2), "-", 3*MID(A50,19,2)+2, ")")
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F49,E50)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt24Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt24Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt24 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A51,19,2), " (banks ", 3*MID(A51,19,2), "-", 3*MID(A51,19,2)+2, ")")
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F50,E51)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt25Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt25Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt25 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A52,19,2), " (banks ", 3*MID(A52,19,2), "-", 3*MID(A52,19,2)+2, ")")
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F51,E52)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt26Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt26Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt26 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A53,19,2), " (banks ", 3*MID(A53,19,2), "-", 3*MID(A53,19,2)+2, ")")
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F52,E53)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt27Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt27Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt27 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A54,19,2), " (banks ", 3*MID(A54,19,2), "-", 3*MID(A54,19,2)+2, ")")
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F53,E54)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt28Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt28Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt28 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A55,19,2), " (banks ", 3*MID(A55,19,2), "-", 3*MID(A55,19,2)+2, ")")
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F54,E55)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt29Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt29Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt29 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A56,19,2), " (banks ", 3*MID(A56,19,2), "-", 3*MID(A56,19,2)+2, ")")
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F55,E56)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt30Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt30Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt30 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A57,19,2), " (banks ", 3*MID(A57,19,2), "-", 3*MID(A57,19,2)+2, ")")
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F56,E57)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt31Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt31Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt31 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A58,19,2), " (banks ", 3*MID(A58,19,2), "-", 3*MID(A58,19,2)+2, ")")
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F57,E58)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt32Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt32Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt32 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A59,19,2), " (banks ", 3*MID(A59,19,2), "-", 3*MID(A59,19,2)+2, ")")
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F58,E59)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt33Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt33Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt33 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A60,19,2), " (banks ", 3*MID(A60,19,2), "-", 3*MID(A60,19,2)+2, ")")
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F59,E60)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt34Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt34Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt34 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A61,19,2), " (banks ", 3*MID(A61,19,2), "-", 3*MID(A61,19,2)+2, ")")
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F60,E61)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
    BankGroupInterrupt35Mask => { #Structure Type: RegField;
      Name => "BankGroupInterrupt35Mask",
      RegMem => "RegField",
      Description => "This field masks BankGroupInterrupt35 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A62,19,2), " (banks ", 3*MID(A62,19,2), "-", 3*MID(A62,19,2)+2, ")")
      Width => "1",
      Position => "17", # Excel Formula: =calc_position(F61,E62)
      Type => "InterruptMask",
      UsedBy => "",
      DefaultValue => "b1",
    },
  },
  BankGroupInterruptReg1Test => { #Structure Type: Reg; Skip Register;
    Name => "BankGroupInterruptReg1Test",
    RegMem => "Reg",
    Address => "183",
    Description => "This register tests BankGroupInterruptReg1 interrupt register",
    Width => "18", # Excel Formula: =calc_reg_width(E45:E62,F62)
    Type => "InterruptTest",
    BankGroupInterrupt18Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt18Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt18 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A45,19,2), " (banks ", 3*MID(A45,19,2), "-", 3*MID(A45,19,2)+2, ")")
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F44,E45,TRUE)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt19Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt19Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt19 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A46,19,2), " (banks ", 3*MID(A46,19,2), "-", 3*MID(A46,19,2)+2, ")")
      Width => "1",
      Position => "1", # Excel Formula: =calc_position(F45,E46)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt20Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt20Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt20 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A47,19,2), " (banks ", 3*MID(A47,19,2), "-", 3*MID(A47,19,2)+2, ")")
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F46,E47)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt21Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt21Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt21 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A48,19,2), " (banks ", 3*MID(A48,19,2), "-", 3*MID(A48,19,2)+2, ")")
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F47,E48)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt22Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt22Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt22 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A49,19,2), " (banks ", 3*MID(A49,19,2), "-", 3*MID(A49,19,2)+2, ")")
      Width => "1",
      Position => "4", # Excel Formula: =calc_position(F48,E49)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt23Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt23Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt23 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A50,19,2), " (banks ", 3*MID(A50,19,2), "-", 3*MID(A50,19,2)+2, ")")
      Width => "1",
      Position => "5", # Excel Formula: =calc_position(F49,E50)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt24Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt24Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt24 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A51,19,2), " (banks ", 3*MID(A51,19,2), "-", 3*MID(A51,19,2)+2, ")")
      Width => "1",
      Position => "6", # Excel Formula: =calc_position(F50,E51)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt25Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt25Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt25 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A52,19,2), " (banks ", 3*MID(A52,19,2), "-", 3*MID(A52,19,2)+2, ")")
      Width => "1",
      Position => "7", # Excel Formula: =calc_position(F51,E52)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt26Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt26Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt26 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A53,19,2), " (banks ", 3*MID(A53,19,2), "-", 3*MID(A53,19,2)+2, ")")
      Width => "1",
      Position => "8", # Excel Formula: =calc_position(F52,E53)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt27Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt27Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt27 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A54,19,2), " (banks ", 3*MID(A54,19,2), "-", 3*MID(A54,19,2)+2, ")")
      Width => "1",
      Position => "9", # Excel Formula: =calc_position(F53,E54)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt28Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt28Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt28 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A55,19,2), " (banks ", 3*MID(A55,19,2), "-", 3*MID(A55,19,2)+2, ")")
      Width => "1",
      Position => "10", # Excel Formula: =calc_position(F54,E55)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt29Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt29Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt29 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A56,19,2), " (banks ", 3*MID(A56,19,2), "-", 3*MID(A56,19,2)+2, ")")
      Width => "1",
      Position => "11", # Excel Formula: =calc_position(F55,E56)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt30Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt30Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt30 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A57,19,2), " (banks ", 3*MID(A57,19,2), "-", 3*MID(A57,19,2)+2, ")")
      Width => "1",
      Position => "12", # Excel Formula: =calc_position(F56,E57)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt31Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt31Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt31 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A58,19,2), " (banks ", 3*MID(A58,19,2), "-", 3*MID(A58,19,2)+2, ")")
      Width => "1",
      Position => "13", # Excel Formula: =calc_position(F57,E58)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt32Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt32Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt32 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A59,19,2), " (banks ", 3*MID(A59,19,2), "-", 3*MID(A59,19,2)+2, ")")
      Width => "1",
      Position => "14", # Excel Formula: =calc_position(F58,E59)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt33Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt33Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt33 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A60,19,2), " (banks ", 3*MID(A60,19,2), "-", 3*MID(A60,19,2)+2, ")")
      Width => "1",
      Position => "15", # Excel Formula: =calc_position(F59,E60)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt34Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt34Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt34 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A61,19,2), " (banks ", 3*MID(A61,19,2), "-", 3*MID(A61,19,2)+2, ")")
      Width => "1",
      Position => "16", # Excel Formula: =calc_position(F60,E61)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
    BankGroupInterrupt35Test => { #Structure Type: RegField;
      Name => "BankGroupInterrupt35Test",
      RegMem => "RegField",
      Description => "This field tests BankGroupInterrupt35 interrupt", # Excel Formula: =CONCATENATE("Interrupt occurred in bank group ", MID(A62,19,2), " (banks ", 3*MID(A62,19,2), "-", 3*MID(A62,19,2)+2, ")")
      Width => "1",
      Position => "17", # Excel Formula: =calc_position(F61,E62)
      Type => "InterruptTest",
      UsedBy => "",
      DefaultValue => "b0",
    },
  },
  StatusRegister => { #Structure Type: Reg;
    Name => "StatusRegister",
    RegMem => "Reg",
    Address => "184", # Excel Formula: =calc_reg_address(C44,A44,G44)
    Description => "Initialization status register",
    Width => "1", # Excel Formula: =calc_reg_width(E64:E64,F64)
    Type => "ReadOnly",
    InitDone => { #Structure Type: RegField;
      Name => "InitDone",
      RegMem => "RegField",
      Description => "Initialization finished",
      Width => "1",
      Position => "0", # Excel Formula: =calc_position(F63,E64,TRUE)
      Type => "Status",
      UsedBy => "DSN",
    },
  },
  CountersBankConfig0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 19;
    Name => "CountersBankConfig[6]",
    RegMem => "Mem",
    Address => "100000",
    Description => "Configuration for the TX Counters (only relevant to banks allocated to TXPP)
All 6 memories should be configured identically",
    Width => "4", # Excel Formula: =calc_mem_width(E66:E68,M65,F68,-1)
    Type => "Config",
    UsedBy => "tx_map",
    MemEntries => "108",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    Comments => "Using 6 copies for physical design",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "4",
    BankSetType0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 12;
      Name => "BankSetType[n]",
      RegMem => "MemField",
      Description => "Set Type for each counters bank
0 - Color blind - a set of 1 counter
1 - Color aware - a set of 2 counters (Green/Yellow, Red is ignored)
2 - Color aware with red - a set of 3 counters (Green/Yellow/Red)",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Comments => "0 - NO_SET
1 - COLOR_AWARE
2 - COLOR_AWARE_WITH_RED",
    },
    IncAddrForSet0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "IncAddrForSet[n]",
      RegMem => "MemField",
      Description => "Whether to multiply the address from the NPU by the number of entries in the set when calculating the final address of the counter set base address
0 - Address from NPU is the final address of the base counter
1 - Adress from the NPU is sequential number of the set - will be multiplied by number of entries in each set to calculate the final base counter address
Example:
For color-aware set (two entries in each set) with 3 active counter sets (so there are 6 counters 0-5):
Mode 0 - The counter set addresses from the NPU should be 0, 2, 4
Mode 1 - The counter set addresses from the NPU should be 0, 1, 2",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F66,E67)
    },
    IncBankForIfgB0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 15;
      Name => "IncBankForIfgB[n]",
      RegMem => "MemField",
      Description => "Whether to increase the target Bank ID by 1 for packets arriving from IFG B (configured using the original bank ID)
0 - Do not increase
1 - Increase",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F67,E68)
    },
  },
  CountersBankConfig1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 19;
    Name => "CountersBankConfig[6]",
    RegMem => "Mem",
    Address => "200000",
    Description => "Configuration for the TX Counters (only relevant to banks allocated to TXPP)
All 6 memories should be configured identically",
    Width => "4", # Excel Formula: =calc_mem_width(E66:E68,M65,F68,-1)
    Type => "Config",
    UsedBy => "tx_map",
    MemEntries => "108",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    Comments => "Using 6 copies for physical design",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "4",
    BankSetType1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 12;
      Name => "BankSetType[n]",
      RegMem => "MemField",
      Description => "Set Type for each counters bank
0 - Color blind - a set of 1 counter
1 - Color aware - a set of 2 counters (Green/Yellow, Red is ignored)
2 - Color aware with red - a set of 3 counters (Green/Yellow/Red)",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Comments => "0 - NO_SET
1 - COLOR_AWARE
2 - COLOR_AWARE_WITH_RED",
    },
    IncAddrForSet1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "IncAddrForSet[n]",
      RegMem => "MemField",
      Description => "Whether to multiply the address from the NPU by the number of entries in the set when calculating the final address of the counter set base address
0 - Address from NPU is the final address of the base counter
1 - Adress from the NPU is sequential number of the set - will be multiplied by number of entries in each set to calculate the final base counter address
Example:
For color-aware set (two entries in each set) with 3 active counter sets (so there are 6 counters 0-5):
Mode 0 - The counter set addresses from the NPU should be 0, 2, 4
Mode 1 - The counter set addresses from the NPU should be 0, 1, 2",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F66,E67)
    },
    IncBankForIfgB1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 15;
      Name => "IncBankForIfgB[n]",
      RegMem => "MemField",
      Description => "Whether to increase the target Bank ID by 1 for packets arriving from IFG B (configured using the original bank ID)
0 - Do not increase
1 - Increase",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F67,E68)
    },
  },
  CountersBankConfig2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 19;
    Name => "CountersBankConfig[6]",
    RegMem => "Mem",
    Address => "300000",
    Description => "Configuration for the TX Counters (only relevant to banks allocated to TXPP)
All 6 memories should be configured identically",
    Width => "4", # Excel Formula: =calc_mem_width(E66:E68,M65,F68,-1)
    Type => "Config",
    UsedBy => "tx_map",
    MemEntries => "108",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    Comments => "Using 6 copies for physical design",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "4",
    BankSetType2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 12;
      Name => "BankSetType[n]",
      RegMem => "MemField",
      Description => "Set Type for each counters bank
0 - Color blind - a set of 1 counter
1 - Color aware - a set of 2 counters (Green/Yellow, Red is ignored)
2 - Color aware with red - a set of 3 counters (Green/Yellow/Red)",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Comments => "0 - NO_SET
1 - COLOR_AWARE
2 - COLOR_AWARE_WITH_RED",
    },
    IncAddrForSet2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 14;
      Name => "IncAddrForSet[n]",
      RegMem => "MemField",
      Description => "Whether to multiply the address from the NPU by the number of entries in the set when calculating the final address of the counter set base address
0 - Address from NPU is the final address of the base counter
1 - Adress from the NPU is sequential number of the set - will be multiplied by number of entries in each set to calculate the final base counter address
Example:
For color-aware set (two entries in each set) with 3 active counter sets (so there are 6 counters 0-5):
Mode 0 - The counter set addresses from the NPU should be 0, 2, 4
Mode 1 - The counter set addresses from the NPU should be 0, 1, 2",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F66,E67)
    },
    IncBankForIfgB2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 15;
      Name => "IncBankForIfgB[n]",
      RegMem => "MemField",
      Description => "Whether to increase the target Bank ID by 1 for packets arriving from IFG B (configured using the original bank ID)
0 - Do not increase
1 - Increase",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F67,E68)
    },
  },
  CountersBankConfig3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 19;
    Name => "CountersBankConfig[6]",
    RegMem => "Mem",
    Address => "400000",
    Description => "Configuration for the TX Counters (only relevant to banks allocated to TXPP)
All 6 memories should be configured identically",
    Width => "4", # Excel Formula: =calc_mem_width(E66:E68,M65,F68,-1)
    Type => "Config",
    UsedBy => "tx_map",
    MemEntries => "108",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    Comments => "Using 6 copies for physical design",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "4",
    BankSetType3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 12;
      Name => "BankSetType[n]",
      RegMem => "MemField",
      Description => "Set Type for each counters bank
0 - Color blind - a set of 1 counter
1 - Color aware - a set of 2 counters (Green/Yellow, Red is ignored)
2 - Color aware with red - a set of 3 counters (Green/Yellow/Red)",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Comments => "0 - NO_SET
1 - COLOR_AWARE
2 - COLOR_AWARE_WITH_RED",
    },
    IncAddrForSet3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 14;
      Name => "IncAddrForSet[n]",
      RegMem => "MemField",
      Description => "Whether to multiply the address from the NPU by the number of entries in the set when calculating the final address of the counter set base address
0 - Address from NPU is the final address of the base counter
1 - Adress from the NPU is sequential number of the set - will be multiplied by number of entries in each set to calculate the final base counter address
Example:
For color-aware set (two entries in each set) with 3 active counter sets (so there are 6 counters 0-5):
Mode 0 - The counter set addresses from the NPU should be 0, 2, 4
Mode 1 - The counter set addresses from the NPU should be 0, 1, 2",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F66,E67)
    },
    IncBankForIfgB3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 15;
      Name => "IncBankForIfgB[n]",
      RegMem => "MemField",
      Description => "Whether to increase the target Bank ID by 1 for packets arriving from IFG B (configured using the original bank ID)
0 - Do not increase
1 - Increase",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F67,E68)
    },
  },
  CountersBankConfig4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 19;
    Name => "CountersBankConfig[6]",
    RegMem => "Mem",
    Address => "500000",
    Description => "Configuration for the TX Counters (only relevant to banks allocated to TXPP)
All 6 memories should be configured identically",
    Width => "4", # Excel Formula: =calc_mem_width(E66:E68,M65,F68,-1)
    Type => "Config",
    UsedBy => "tx_map",
    MemEntries => "108",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    Comments => "Using 6 copies for physical design",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "4",
    BankSetType4 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 12;
      Name => "BankSetType[n]",
      RegMem => "MemField",
      Description => "Set Type for each counters bank
0 - Color blind - a set of 1 counter
1 - Color aware - a set of 2 counters (Green/Yellow, Red is ignored)
2 - Color aware with red - a set of 3 counters (Green/Yellow/Red)",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Comments => "0 - NO_SET
1 - COLOR_AWARE
2 - COLOR_AWARE_WITH_RED",
    },
    IncAddrForSet4 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 14;
      Name => "IncAddrForSet[n]",
      RegMem => "MemField",
      Description => "Whether to multiply the address from the NPU by the number of entries in the set when calculating the final address of the counter set base address
0 - Address from NPU is the final address of the base counter
1 - Adress from the NPU is sequential number of the set - will be multiplied by number of entries in each set to calculate the final base counter address
Example:
For color-aware set (two entries in each set) with 3 active counter sets (so there are 6 counters 0-5):
Mode 0 - The counter set addresses from the NPU should be 0, 2, 4
Mode 1 - The counter set addresses from the NPU should be 0, 1, 2",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F66,E67)
    },
    IncBankForIfgB4 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 15;
      Name => "IncBankForIfgB[n]",
      RegMem => "MemField",
      Description => "Whether to increase the target Bank ID by 1 for packets arriving from IFG B (configured using the original bank ID)
0 - Do not increase
1 - Increase",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F67,E68)
    },
  },
  CountersBankConfig5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 19;
    Name => "CountersBankConfig[6]",
    RegMem => "Mem",
    Address => "600000",
    Description => "Configuration for the TX Counters (only relevant to banks allocated to TXPP)
All 6 memories should be configured identically",
    Width => "4", # Excel Formula: =calc_mem_width(E66:E68,M65,F68,-1)
    Type => "Config",
    UsedBy => "tx_map",
    MemEntries => "108",
    MemWrapper => "RegArray",
    MemProtect => "None",
    AdditionalInfo => "CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,PortErrPropagate=Disabled",
    Comments => "Using 6 copies for physical design",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "4",
    BankSetType5 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 12;
      Name => "BankSetType[n]",
      RegMem => "MemField",
      Description => "Set Type for each counters bank
0 - Color blind - a set of 1 counter
1 - Color aware - a set of 2 counters (Green/Yellow, Red is ignored)
2 - Color aware with red - a set of 3 counters (Green/Yellow/Red)",
      Width => "2",
      Position => "1:0", # Excel Formula: =calc_position(F65,E66,TRUE)
      Comments => "0 - NO_SET
1 - COLOR_AWARE
2 - COLOR_AWARE_WITH_RED",
    },
    IncAddrForSet5 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 14;
      Name => "IncAddrForSet[n]",
      RegMem => "MemField",
      Description => "Whether to multiply the address from the NPU by the number of entries in the set when calculating the final address of the counter set base address
0 - Address from NPU is the final address of the base counter
1 - Adress from the NPU is sequential number of the set - will be multiplied by number of entries in each set to calculate the final base counter address
Example:
For color-aware set (two entries in each set) with 3 active counter sets (so there are 6 counters 0-5):
Mode 0 - The counter set addresses from the NPU should be 0, 2, 4
Mode 1 - The counter set addresses from the NPU should be 0, 1, 2",
      Width => "1",
      Position => "2", # Excel Formula: =calc_position(F66,E67)
    },
    IncBankForIfgB5 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 15;
      Name => "IncBankForIfgB[n]",
      RegMem => "MemField",
      Description => "Whether to increase the target Bank ID by 1 for packets arriving from IFG B (configured using the original bank ID)
0 - Do not increase
1 - Increase",
      Width => "1",
      Position => "3", # Excel Formula: =calc_position(F67,E68)
    },
  },
  VoqBlockMap0 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 12;
    Name => "VoqBlockMap[6]",
    RegMem => "Mem",
    Address => "700000", # Excel Formula: =calc_mem_address(C65,A65,G69,L69)
    Description => "Mapping of VOQ number to its attributes (per slice)
Each entry corresponds to 64 consequtive VOQ numbers",
    Width => "29", # Excel Formula: =calc_mem_width(E70:E73,M69,F73,-1)
    Type => "Config",
    UsedBy => "DSN",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=100,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "0",
    MemLogicalWidth => "23",
    BankId0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 7;
      Name => "BankId[n]",
      RegMem => "MemField",
      Description => "Identifies the counting bank",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F69,E70,TRUE)
    },
    CounterOffset0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 14;
      Name => "CounterOffset[n]",
      RegMem => "MemField",
      Description => "Base counter offset in the bank - offset for the first VOQ number of this entry (i.e. counter for VOQ 64*N)",
      Width => "13",
      Position => "19:7", # Excel Formula: =calc_position(F70,E71)
    },
    TcProfile0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 10;
      Name => "TcProfile[n]",
      RegMem => "MemField",
      Description => "TC profile that affects whether each TC is counted (used with EnableVoqCountTc configuration)",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F71,E72)
    },
    MapGroupSize0 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 0; ArrayLocationInName: 13;
      Name => "MapGroupSize[n]",
      RegMem => "MemField",
      Description => "indicates whether to map 1, 2, 4 or 8 VOQs to the same counter
0 - 1 VOQ
1 - 2 VOQs
2 - 4 VOQs
3 - 8 VOQs",
      Width => "2",
      Position => "22:21", # Excel Formula: =calc_position(F72,E73)
    },
  },
  VoqBlockMap1 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 12;
    Name => "VoqBlockMap[6]",
    RegMem => "Mem",
    Address => "800000",
    Description => "Mapping of VOQ number to its attributes (per slice)
Each entry corresponds to 64 consequtive VOQ numbers",
    Width => "29", # Excel Formula: =calc_mem_width(E70:E73,M69,F73,-1)
    Type => "Config",
    UsedBy => "DSN",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=100,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "1",
    MemLogicalWidth => "23",
    BankId1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 7;
      Name => "BankId[n]",
      RegMem => "MemField",
      Description => "Identifies the counting bank",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F69,E70,TRUE)
    },
    CounterOffset1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 14;
      Name => "CounterOffset[n]",
      RegMem => "MemField",
      Description => "Base counter offset in the bank - offset for the first VOQ number of this entry (i.e. counter for VOQ 64*N)",
      Width => "13",
      Position => "19:7", # Excel Formula: =calc_position(F70,E71)
    },
    TcProfile1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 10;
      Name => "TcProfile[n]",
      RegMem => "MemField",
      Description => "TC profile that affects whether each TC is counted (used with EnableVoqCountTc configuration)",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F71,E72)
    },
    MapGroupSize1 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 1; ArrayLocationInName: 13;
      Name => "MapGroupSize[n]",
      RegMem => "MemField",
      Description => "indicates whether to map 1, 2, 4 or 8 VOQs to the same counter
0 - 1 VOQ
1 - 2 VOQs
2 - 4 VOQs
3 - 8 VOQs",
      Width => "2",
      Position => "22:21", # Excel Formula: =calc_position(F72,E73)
    },
  },
  VoqBlockMap2 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 12;
    Name => "VoqBlockMap[6]",
    RegMem => "Mem",
    Address => "900000",
    Description => "Mapping of VOQ number to its attributes (per slice)
Each entry corresponds to 64 consequtive VOQ numbers",
    Width => "29", # Excel Formula: =calc_mem_width(E70:E73,M69,F73,-1)
    Type => "Config",
    UsedBy => "DSN",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=100,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "2",
    MemLogicalWidth => "23",
    BankId2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 7;
      Name => "BankId[n]",
      RegMem => "MemField",
      Description => "Identifies the counting bank",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F69,E70,TRUE)
    },
    CounterOffset2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 14;
      Name => "CounterOffset[n]",
      RegMem => "MemField",
      Description => "Base counter offset in the bank - offset for the first VOQ number of this entry (i.e. counter for VOQ 64*N)",
      Width => "13",
      Position => "19:7", # Excel Formula: =calc_position(F70,E71)
    },
    TcProfile2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 10;
      Name => "TcProfile[n]",
      RegMem => "MemField",
      Description => "TC profile that affects whether each TC is counted (used with EnableVoqCountTc configuration)",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F71,E72)
    },
    MapGroupSize2 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 2; ArrayLocationInName: 13;
      Name => "MapGroupSize[n]",
      RegMem => "MemField",
      Description => "indicates whether to map 1, 2, 4 or 8 VOQs to the same counter
0 - 1 VOQ
1 - 2 VOQs
2 - 4 VOQs
3 - 8 VOQs",
      Width => "2",
      Position => "22:21", # Excel Formula: =calc_position(F72,E73)
    },
  },
  VoqBlockMap3 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 12;
    Name => "VoqBlockMap[6]",
    RegMem => "Mem",
    Address => "A00000",
    Description => "Mapping of VOQ number to its attributes (per slice)
Each entry corresponds to 64 consequtive VOQ numbers",
    Width => "29", # Excel Formula: =calc_mem_width(E70:E73,M69,F73,-1)
    Type => "Config",
    UsedBy => "DSN",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=100,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "3",
    MemLogicalWidth => "23",
    BankId3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 7;
      Name => "BankId[n]",
      RegMem => "MemField",
      Description => "Identifies the counting bank",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F69,E70,TRUE)
    },
    CounterOffset3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 14;
      Name => "CounterOffset[n]",
      RegMem => "MemField",
      Description => "Base counter offset in the bank - offset for the first VOQ number of this entry (i.e. counter for VOQ 64*N)",
      Width => "13",
      Position => "19:7", # Excel Formula: =calc_position(F70,E71)
    },
    TcProfile3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 10;
      Name => "TcProfile[n]",
      RegMem => "MemField",
      Description => "TC profile that affects whether each TC is counted (used with EnableVoqCountTc configuration)",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F71,E72)
    },
    MapGroupSize3 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 3; ArrayLocationInName: 13;
      Name => "MapGroupSize[n]",
      RegMem => "MemField",
      Description => "indicates whether to map 1, 2, 4 or 8 VOQs to the same counter
0 - 1 VOQ
1 - 2 VOQs
2 - 4 VOQs
3 - 8 VOQs",
      Width => "2",
      Position => "22:21", # Excel Formula: =calc_position(F72,E73)
    },
  },
  VoqBlockMap4 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 12;
    Name => "VoqBlockMap[6]",
    RegMem => "Mem",
    Address => "B00000",
    Description => "Mapping of VOQ number to its attributes (per slice)
Each entry corresponds to 64 consequtive VOQ numbers",
    Width => "29", # Excel Formula: =calc_mem_width(E70:E73,M69,F73,-1)
    Type => "Config",
    UsedBy => "DSN",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=100,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "4",
    MemLogicalWidth => "23",
    BankId4 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 7;
      Name => "BankId[n]",
      RegMem => "MemField",
      Description => "Identifies the counting bank",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F69,E70,TRUE)
    },
    CounterOffset4 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 14;
      Name => "CounterOffset[n]",
      RegMem => "MemField",
      Description => "Base counter offset in the bank - offset for the first VOQ number of this entry (i.e. counter for VOQ 64*N)",
      Width => "13",
      Position => "19:7", # Excel Formula: =calc_position(F70,E71)
    },
    TcProfile4 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 10;
      Name => "TcProfile[n]",
      RegMem => "MemField",
      Description => "TC profile that affects whether each TC is counted (used with EnableVoqCountTc configuration)",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F71,E72)
    },
    MapGroupSize4 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 4; ArrayLocationInName: 13;
      Name => "MapGroupSize[n]",
      RegMem => "MemField",
      Description => "indicates whether to map 1, 2, 4 or 8 VOQs to the same counter
0 - 1 VOQ
1 - 2 VOQs
2 - 4 VOQs
3 - 8 VOQs",
      Width => "2",
      Position => "22:21", # Excel Formula: =calc_position(F72,E73)
    },
  },
  VoqBlockMap5 => { #Structure Type: Mem; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 12;
    Name => "VoqBlockMap[6]",
    RegMem => "Mem",
    Address => "C00000",
    Description => "Mapping of VOQ number to its attributes (per slice)
Each entry corresponds to 64 consequtive VOQ numbers",
    Width => "29", # Excel Formula: =calc_mem_width(E70:E73,M69,F73,-1)
    Type => "Config",
    UsedBy => "DSN",
    MemEntries => "1024",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,CpuWriteAccess=Enabled,PackArrayToBus=Enabled,WriteActivityFactor=0,ReadActivityFactor=100,PortErrPropagate=Disabled",
    ArrayLength => "6",
    ArrayIndex => "5",
    MemLogicalWidth => "23",
    BankId5 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 7;
      Name => "BankId[n]",
      RegMem => "MemField",
      Description => "Identifies the counting bank",
      Width => "7",
      Position => "6:0", # Excel Formula: =calc_position(F69,E70,TRUE)
    },
    CounterOffset5 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 14;
      Name => "CounterOffset[n]",
      RegMem => "MemField",
      Description => "Base counter offset in the bank - offset for the first VOQ number of this entry (i.e. counter for VOQ 64*N)",
      Width => "13",
      Position => "19:7", # Excel Formula: =calc_position(F70,E71)
    },
    TcProfile5 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 10;
      Name => "TcProfile[n]",
      RegMem => "MemField",
      Description => "TC profile that affects whether each TC is counted (used with EnableVoqCountTc configuration)",
      Width => "1",
      Position => "20", # Excel Formula: =calc_position(F71,E72)
    },
    MapGroupSize5 => { #Structure Type: MemField; ArrayLength: 6; ArrayIndex: 5; ArrayLocationInName: 13;
      Name => "MapGroupSize[n]",
      RegMem => "MemField",
      Description => "indicates whether to map 1, 2, 4 or 8 VOQs to the same counter
0 - 1 VOQ
1 - 2 VOQs
2 - 4 VOQs
3 - 8 VOQs",
      Width => "2",
      Position => "22:21", # Excel Formula: =calc_position(F72,E73)
    },
  },
  MaxCountersTable => { #Structure Type: Mem;
    Name => "MaxCountersTable",
    RegMem => "Mem",
    Address => "D00000", # Excel Formula: =calc_mem_address(C69,A69,G74,L74)
    Description => "Read result of max counters read, entry per bank",
    Width => "85", # Excel Formula: =calc_mem_width(E75:E77,M74,F77,-1)
    Type => "Dynamic",
    UsedBy => "cpu_read",
    MemEntries => "108",
    MemWrapper => "1P",
    MemProtect => "ECC",
    AdditionalInfo => "SampleReadAccess=1,SampleReadBeforeProt=2,SampleReadAfterProt=1,SampleWriteAfterProt=1,CpuReadAccess=Enabled,WriteActivityFactor=1,ReadActivityFactor=0,PortErrPropagate=Disabled,CpuWriteAccess=Disabled",
    Comments => "Design never reads from this memory - only writes",
    MemLogicalWidth => "77",
    PacketCount => { #Structure Type: MemField;
      Name => "PacketCount",
      RegMem => "MemField",
      Description => "Packet count",
      Width => "29",
      Position => "28:0", # Excel Formula: =calc_position(F74,E75,TRUE)
    },
    ByteCount => { #Structure Type: MemField;
      Name => "ByteCount",
      RegMem => "MemField",
      Description => "Byte count",
      Width => "35",
      Position => "63:29", # Excel Formula: =calc_position(F75,E76)
    },
    CounterAddress => { #Structure Type: MemField;
      Name => "CounterAddress",
      RegMem => "MemField",
      Description => "The address within the bank of the max counter that was read",
      Width => "13",
      Position => "76:64", # Excel Formula: =calc_position(F76,E77)
    },
  },
};
