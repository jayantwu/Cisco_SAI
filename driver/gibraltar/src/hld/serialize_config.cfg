library-name hld

# versioned-field silicon_one::la_acl_impl::m_is_class_id_enabled 2

# avoid adding enable_shared_from_this as base class in serialization code
skip-base-class std::enable_shared_from_this
skip-field silicon_one::la_device_impl::m_mutex

# prevent creation of forward declaration for bit_vector_dynamic_storage
# since it causes cereal to find 2 serialization methods for bit_vector_dynamic_storage
skip-class silicon_one::bit_vector_dynamic_storage

# skipping operator classes
skip-class silicon_one::la_lsr_impl::la_mpls_label_operator_less
skip-class silicon_one::la_device_impl::profile_allocators::compare_v4_prefix
skip-class silicon_one::la_device_impl::profile_allocators::compare_lpts_em_entry
skip-class silicon_one::la_device_impl::profile_allocators::compare_bfd_rx_entry
skip-class silicon_one::la_device_impl::profile_allocators::compare_oam_encap_entry
skip-class silicon_one::la_device_impl::profile_allocators::probability_less
skip-class silicon_one::la_device_impl::profile_allocators::probability_equal
skip-class silicon_one::la_device_impl::profile_allocators::compare_v6_addr
skip-class silicon_one::la_device_impl::mac_port_location_less
skip-class silicon_one::la_device_impl::vxlan_nh_t_lt
skip-class silicon_one::la_device_impl::ipv4_tunnel_id_lt
skip-class silicon_one::la_switch_impl::ipv4_less_op
skip-class silicon_one::la_switch_impl::ipv6_less_op
skip-class silicon_one::la_vrf_impl::ipv4_less_op
skip-class silicon_one::la_vrf_impl::ipv6_less_op
skip-class silicon_one::la_vrf_impl::hash_ipv4_prefix
skip-class silicon_one::la_vrf_impl::hash_ipv6_prefix
skip-class silicon_one::la_vrf_port_common_base::subnet_count_map_key_less
skip-class silicon_one::device_port_handler::mac_port_config_key_hasher
skip-class silicon_one::device_port_handler::serdes_config_key_hasher
skip-class silicon_one::la_svi_port_base::la_mac_addr_key_less
skip-class silicon_one::la_ethernet_port_base::ac_port_key_operator_less
skip-class silicon_one::resolution_configurator_impl::em_key_less
skip-class silicon_one::la_ip_multicast_group_base::v4_key_hash
skip-class silicon_one::la_ip_multicast_group_base::v6_key_hash
skip-class silicon_one::la_ip_multicast_group_base::v4_key_equal
skip-class silicon_one::la_ip_multicast_group_base::v6_key_equal
skip-class silicon_one::ifg_handler_base::range_entry_less
skip-class silicon_one::la_device_impl::mc_links_key_hash
skip-class silicon_one::la_device_impl::mc_links_key_equal
skip-class silicon_one::ipv4_tunnel_ep_manager::ipv4_tunnel_ep_lt

%{
namespace cereal {
    template <class Archive, class T>
    struct specialize<Archive, silicon_one::fixed_deque<T>, specialization::member_serialize> {};
}
%}

%{
#include "api/tm/la_unicast_tc_profile.h"
#include "apb/apb.h"
#include "cpu2jtag/cpu2jtag.h"
#include "system/cud_range_manager.h"
#include "system/reconnect_handler.h"
#include "system/resource_handler.h"
#include "system/counter_allocation.h"
#include "npu/mc_copy_id_manager.h"
#include "cgm/voq_cgm_handler.h"
#include "ra/resource_manager.h"
#include "cgm/la_voq_cgm_evicted_profile_impl.h"
#include "lld/pacific_tree.h"
%}

# skipping logger callback function in udk_library (initialized as null in SDK)
skip-field runtime_flexibility_library::m_callback_print

skip-field silicon_one::reconnect_metadata::serdes_parameters # array with size 0.

# following save_state_runtime fields are not persistent over warm-boot
skip-field silicon_one::la_device_impl::save_state_runtime::task_handle
skip-field silicon_one::la_device_impl::save_state_runtime::save_state_status
skip-field silicon_one::la_device_impl::save_state_runtime::worker_thread
skip-field silicon_one::la_device_impl::save_state_runtime::thread_running

# transient data - not stored anywhere
skip-class silicon_one::attribute_management_details
skip-class silicon_one::attribute_management_details::
skip-class silicon_one::dependency_management_op
skip-class silicon_one::dependency_management_op::
skip-class silicon_one::dependency_management_op::::
skip-class silicon_one::multicast_protection_group_change_details
skip-class silicon_one::mcg_member_list_change_details

# interface only - no data
skip-class silicon_one::dependent_slot

# These trait structs are not used in storage, so we skip them to reduce compilation time.
skip-class silicon_one::acl_ingress_ipv4_mirror_trait
skip-class silicon_one::acl_ingress_ipv4_og_160_unified_trait
skip-class silicon_one::acl_ingress_ipv4_og_320_unified_trait
skip-class silicon_one::acl_ingress_ipv4_qos_trait
skip-class silicon_one::acl_ingress_ipv4_udk_160_class_id_trait
skip-class silicon_one::acl_ingress_ipv4_udk_160_unified_trait
skip-class silicon_one::acl_ingress_ipv4_udk_320_class_id_trait
skip-class silicon_one::acl_ingress_ipv4_udk_320_unified_trait
skip-class silicon_one::acl_ingress_ipv4_unified_trait
skip-class silicon_one::acl_ingress_ipv6_mirror_trait
skip-class silicon_one::acl_ingress_ipv6_og_160_unified_trait
skip-class silicon_one::acl_ingress_ipv6_og_320_unified_trait
skip-class silicon_one::acl_ingress_ipv6_qos_trait
skip-class silicon_one::acl_ingress_ipv6_udk_160_class_id_trait
skip-class silicon_one::acl_ingress_ipv6_udk_320_class_id_trait
skip-class silicon_one::acl_ingress_ipv6_udk_320_unified_trait
skip-class silicon_one::acl_ingress_ipv6_udk_160_unified_trait
skip-class silicon_one::acl_ingress_ipv6_unified_trait
skip-class silicon_one::resolution_stage0_trait_t
skip-class silicon_one::resolution_stage1_trait_t
skip-class silicon_one::resolution_stage2_trait_t
skip-class silicon_one::resolution_stage3_trait_t

# adding fwd declaration for classes required by template manual serialization
fwd-declare silicon_one::resource_monitor
fwd-declare npl_\w*_key_t
fwd-declare npl_\w*_value_t
fwd-declare silicon_one::resolution_ad_entry_allocator
fwd-declare silicon_one::la_acl_field_def
fwd-declare silicon_one::la_vrf_port_common_base::ip_host_data
fwd-declare silicon_one::la_vrf_port_common_base::subnet_count_map_key_t

# The following are stack variables only, no serialization needed
skip-class silicon_one::compound_translator_creator
skip-class silicon_one::state_writer
skip-class silicon_one::mbist
skip-class silicon_one::mbist::result
skip-class silicon_one::mbist::result::bist_type
skip-class silicon_one::spa_membership_change_details

# Not used in SDK
skip-class silicon_one::hld_translator_creator
skip-class silicon_one::init_configurator

# Not implemented feature: call back raw pointer
skip-field silicon_one::la_hbm_handler_impl::m_on_done_cb
# Temporary skip, need to find a way for restoring la_hbm_handler_impl::m_task_scheduler
skip-field silicon_one::la_hbm_handler_impl::m_task_scheduler

# task_scheduler is restored manually in warm-boot seuquence la_device_impl::warm_boot_reconnect()
skip-field silicon_one::hld_notification_base::m_task_scheduler
skip-field silicon_one::hld_notification_base::worker::th

# adding implementation of serialization functions for boost::blank
%{
#include <cereal/types/boost_variant.hpp> // needed for supporting serialization of boost::variant
namespace cereal {
    template <class Archive> static void save(Archive&, const boost::blank&) {}
    template <class Archive> static void load(Archive&, boost::blank&) {}
}
%}

# Manually serialize m_bundle
manual-field silicon_one::srm_serdes_handler::m_bundle

##########################################################
### TODO: need to clean up all the following!          ###
### final configurations should be above this comment! ###
##########################################################
# Manulal registration of polymorphic templates, not supported by the tool
skip-class silicon_one::profile_allocator_base
skip-class silicon_one::profile_allocator

%{
// Manulal registration of polymorphic templates, not supported by the tool
namespace cereal {
template <class Archive> void save(Archive&, const silicon_one::delayed_ranged_index_generator&);
template <class Archive> void load(Archive&, silicon_one::delayed_ranged_index_generator&);

template <class Archive> void save(Archive&, const silicon_one::ranged_index_generator&);
template <class Archive> void load(Archive&, silicon_one::ranged_index_generator&);

template <class Archive> void save(Archive&, const silicon_one::la_ipv4_prefix_t&);
template <class Archive> void load(Archive&, silicon_one::la_ipv4_prefix_t&);

template <class Archive> void save(Archive&, const silicon_one::bfd_packet_intervals&);
template <class Archive> void load(Archive&, silicon_one::bfd_packet_intervals&);

template <class Archive> void save(Archive&, const silicon_one::la_ipv6_addr_t&);
template <class Archive> void load(Archive&, silicon_one::la_ipv6_addr_t&);

template <class Archive> void save(Archive&, const bfd_rx_entry_data_t&);
template <class Archive> void load(Archive&, bfd_rx_entry_data_t&);

template <class Archive> void save(Archive&, const silicon_one::la_ipv6_addr_t&);
template <class Archive> void load(Archive&, silicon_one::la_ipv6_addr_t&);

template <class Archive> void save(Archive&, const silicon_one::la_device_impl::oam_encap_info_t&);
template <class Archive> void load(Archive&, silicon_one::la_device_impl::oam_encap_info_t&);

template <class Archive> void save(Archive&, const npl_lpts_payload_t&);
template <class Archive> void load(Archive&, npl_lpts_payload_t&);

template <class Archive> void save(Archive&, const l2_slp_acl_info_t&);
template <class Archive> void load(Archive&, l2_slp_acl_info_t&);

template <class Archive> void save(Archive&, const silicon_one::acl_group_info_t&);
template <class Archive> void load(Archive&, silicon_one::acl_group_info_t&);

}

CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::ipv4_sip_index_profile_allocator)
CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::l3vxlan_smac_msb_index_profile_allocator)
CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::npu_host_max_ccm_counters_profile_allocator)
CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::npu_host_packet_intervals_profile_allocator)
CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::bfd_local_ipv6_addresses_profile_allocator)
CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::npu_host_detection_times_profile_allocator)
// The tool does generate a proper registration for profile_allocators::lpts_meters_profile_allocator
//CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::lpts_meters_profile_allocator)
CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::lpts_em_entries_profile_allocator)
CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::bfd_rx_entries_profile_allocator)
CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::oam_punt_encap_profile_allocator)
CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::voq_probability_profile_profile_allocator)
CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::l2_slp_acl_indices_profile_allocator)
CEREAL_REGISTER_TYPE(silicon_one::la_device_impl::profile_allocators::acl_group_entries_profile_allocator)
CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<silicon_one::la_ipv4_prefix_t>,
			             silicon_one::la_device_impl::profile_allocators::ipv4_sip_index_profile_allocator)
CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<la_uint32_t>,
                                     silicon_one::la_device_impl::profile_allocators::l3vxlan_smac_msb_index_profile_allocator)
CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<std::chrono::microseconds>,
                                     silicon_one::la_device_impl::profile_allocators::npu_host_max_ccm_counters_profile_allocator)
CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<silicon_one::bfd_packet_intervals>,
                                     silicon_one::la_device_impl::profile_allocators::npu_host_packet_intervals_profile_allocator)
CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<silicon_one::la_ipv6_addr_t>,
                                     silicon_one::la_device_impl::profile_allocators::bfd_local_ipv6_addresses_profile_allocator)
CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<std::chrono::microseconds>,
                                     silicon_one::la_device_impl::profile_allocators::npu_host_detection_times_profile_allocator)
//CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<silicon_one::la_meter_set_wcptr>,
//                                     silicon_one::la_device_impl::profile_allocators::lpts_meters_profile_allocator)
CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<silicon_one::la_device_impl::profile_allocators::lpts_em_entry_data>,
                                     silicon_one::la_device_impl::profile_allocators::lpts_em_entries_profile_allocator)
CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<bfd_rx_entry_data_t>,
                                     silicon_one::la_device_impl::profile_allocators::bfd_rx_entries_profile_allocator)
CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<silicon_one::la_device_impl::oam_encap_info_t>,
                                     silicon_one::la_device_impl::profile_allocators::oam_punt_encap_profile_allocator)
CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<double>,
                                     silicon_one::la_device_impl::profile_allocators::voq_probability_profile_profile_allocator)
CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<l2_slp_acl_info_t>,
                                     silicon_one::la_device_impl::profile_allocators::l2_slp_acl_indices_profile_allocator)
CEREAL_REGISTER_POLYMORPHIC_RELATION(silicon_one::profile_allocator_base<silicon_one::acl_group_info_t>,
                                     silicon_one::la_device_impl::profile_allocators::acl_group_entries_profile_allocator)
%}

##########################################################
### TODO: need to clean up all the following!          ###
### final configurations should be above this comment! ###
##########################################################

# this skip is added since the tool doesn't recognize this type is actually a type defined in a template class
# should be removed after fixing this issue in the tool. this skip doesn't change the behavior of the serizlization.
skip-class silicon_one::npl_ternary_table::entry
skip-class silicon_one::npl_lpm_table::entry
skip-class silicon_one::npl_table::entry



