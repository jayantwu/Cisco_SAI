/** @file srm_registers.h
 ******************************************************************************
 *
 * @brief
 *    This module contains the register definitions for the device.
 *    Built on:   Fri Feb 12 22:38:51 2021 
 *    Build type: Public
 *
 ******************************************************************************
 * @author
 *    This file contains information that is proprietary and confidential to
 *    ABCD_CORP.
 *
 *    This file can be used under the terms of the ABCD_LICENSE
 *    Agreement. You should have received a copy of the license with this file,
 *    if not please contact your ABCD_SUPPORT staff.
 *
 *    Copyright (C) 2006-2021 ABCD_CORP, Inc. All rights reserved.
 *
 *    API Version Number: 0.33.0.1670
 *****************************************************************************/
#ifndef __SRM_REGISTERS_H__
#define __SRM_REGISTERS_H__
#include "ip_types.h"

#ifdef __cplusplus
extern "C" {
#endif

// Forward declare register access methods
uint32_t srm_reg_read(uint32_t die, uint32_t addr);
void     srm_reg_write(uint32_t die, uint32_t addr, uint32_t data);
uint32_t srm_reg_rmw(uint32_t die, uint32_t addr, uint32_t data, uint32_t mask);

// Indirect Software Registers
uint32_t srm_ireg_read(uint32_t die, uint32_t addr);
void     srm_ireg_write(uint32_t die, uint32_t addr, uint32_t data);
uint32_t srm_ireg_rmw(uint32_t die, uint32_t addr, uint32_t data, uint32_t mask);

uint32_t srm_reg_channel_addr(uint32_t die, uint32_t channel, uint32_t addr); 
uint32_t srm_reg_channel_read(uint32_t die, uint32_t channel, uint32_t addr);
void     srm_reg_channel_write(uint32_t die, uint32_t channel, uint32_t addr, uint32_t data);
uint32_t srm_reg_channel_rmw(uint32_t die, uint32_t channel, uint32_t addr, uint32_t data, uint32_t mask);



#define SRM_MMD30_PMA_CONTROL__ADDRESS                      0x0
#define SRM_MMD30_PMA_CONTROL__DEFAULT                      0x0
#define SRM_MMD30_PMA_CONTROL__READ(die)                  srm_reg_read(die, SRM_MMD30_PMA_CONTROL__ADDRESS)
#define SRM_MMD30_PMA_CONTROL__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_PMA_CONTROL__ADDRESS, (data))
#define SRM_MMD30_PMA_CONTROL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_PMA_CONTROL__ADDRESS, (data), (mask))
#  define SRM_MMD30_PMA_CONTROL__RESET__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MMD30_PMA_CONTROL__RESET__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MMD30_PMA_CONTROL__RESET__READ(die)                SRM_MMD30_PMA_CONTROL__RESET__GET(SRM_MMD30_PMA_CONTROL__READ(die))
#  define SRM_MMD30_PMA_CONTROL__RESET__WRITE(die, fdata)           SRM_MMD30_PMA_CONTROL__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MMD30_PMA_CONTROL__RESET__RMW(die, fdata)           SRM_MMD30_PMA_CONTROL__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MMD30_PMA_CONTROL__RESET__MASK                       0x1
#  define SRM_MMD30_PMA_CONTROL__RESET__OFFSET                     15
#  define SRM_MMD30_PMA_CONTROL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x8000) | (((uint32_t)(fdata) << 0) & 0x7fff))
#  define SRM_MMD30_PMA_CONTROL__RSRVD1__GET(rdata)                (((rdata) >> 0) & 0x7fff)
#  define SRM_MMD30_PMA_CONTROL__RSRVD1__READ(die)                SRM_MMD30_PMA_CONTROL__RSRVD1__GET(SRM_MMD30_PMA_CONTROL__READ(die))
#  define SRM_MMD30_PMA_CONTROL__RSRVD1__WRITE(die, fdata)           SRM_MMD30_PMA_CONTROL__RMW(die, (fdata)<<0, 0x7fff)
#  define SRM_MMD30_PMA_CONTROL__RSRVD1__RMW(die, fdata)           SRM_MMD30_PMA_CONTROL__RMW(die, (fdata)<<0, 0x7fff)
#  define SRM_MMD30_PMA_CONTROL__RSRVD1__MASK                       0x7fff
#  define SRM_MMD30_PMA_CONTROL__RSRVD1__OFFSET                     0

#define SRM_MMD30_DEVICE_ID_LOW__ADDRESS                      0x2
#define SRM_MMD30_DEVICE_ID_LOW__DEFAULT                      0x210
#define SRM_MMD30_DEVICE_ID_LOW__READ(die)                  srm_reg_read(die, SRM_MMD30_DEVICE_ID_LOW__ADDRESS)
#define SRM_MMD30_DEVICE_ID_LOW__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_DEVICE_ID_LOW__ADDRESS, (data))
#define SRM_MMD30_DEVICE_ID_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_DEVICE_ID_LOW__ADDRESS, (data), (mask))
#  define SRM_MMD30_DEVICE_ID_LOW__OUI_3_18__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_DEVICE_ID_LOW__OUI_3_18__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_DEVICE_ID_LOW__OUI_3_18__READ(die)                SRM_MMD30_DEVICE_ID_LOW__OUI_3_18__GET(SRM_MMD30_DEVICE_ID_LOW__READ(die))
#  define SRM_MMD30_DEVICE_ID_LOW__OUI_3_18__WRITE(die, fdata)           SRM_MMD30_DEVICE_ID_LOW__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_DEVICE_ID_LOW__OUI_3_18__RMW(die, fdata)           SRM_MMD30_DEVICE_ID_LOW__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_DEVICE_ID_LOW__OUI_3_18__MASK                       0xffff
#  define SRM_MMD30_DEVICE_ID_LOW__OUI_3_18__OFFSET                     0

#define SRM_MMD30_DEVICE_ID_HIGH__ADDRESS                      0x3
#define SRM_MMD30_DEVICE_ID_HIGH__DEFAULT                      0x7671
#define SRM_MMD30_DEVICE_ID_HIGH__READ(die)                  srm_reg_read(die, SRM_MMD30_DEVICE_ID_HIGH__ADDRESS)
#define SRM_MMD30_DEVICE_ID_HIGH__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_DEVICE_ID_HIGH__ADDRESS, (data))
#define SRM_MMD30_DEVICE_ID_HIGH__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_DEVICE_ID_HIGH__ADDRESS, (data), (mask))
#  define SRM_MMD30_DEVICE_ID_HIGH__OUI_19_24__SET(rdata, fdata)         (((rdata) & 0x3ff) | (((uint32_t)(fdata) << 10) & 0xfc00))
#  define SRM_MMD30_DEVICE_ID_HIGH__OUI_19_24__GET(rdata)                (((rdata) >> 10) & 0x3f)
#  define SRM_MMD30_DEVICE_ID_HIGH__OUI_19_24__READ(die)                SRM_MMD30_DEVICE_ID_HIGH__OUI_19_24__GET(SRM_MMD30_DEVICE_ID_HIGH__READ(die))
#  define SRM_MMD30_DEVICE_ID_HIGH__OUI_19_24__WRITE(die, fdata)           SRM_MMD30_DEVICE_ID_HIGH__RMW(die, (fdata)<<10, 0xfc00)
#  define SRM_MMD30_DEVICE_ID_HIGH__OUI_19_24__RMW(die, fdata)           SRM_MMD30_DEVICE_ID_HIGH__RMW(die, (fdata)<<10, 0xfc00)
#  define SRM_MMD30_DEVICE_ID_HIGH__OUI_19_24__MASK                       0x3f
#  define SRM_MMD30_DEVICE_ID_HIGH__OUI_19_24__OFFSET                     10
#  define SRM_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__SET(rdata, fdata)         (((rdata) & 0xfc0f) | (((uint32_t)(fdata) << 4) & 0x3f0))
#  define SRM_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__GET(rdata)                (((rdata) >> 4) & 0x3f)
#  define SRM_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__READ(die)                SRM_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__GET(SRM_MMD30_DEVICE_ID_HIGH__READ(die))
#  define SRM_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__WRITE(die, fdata)           SRM_MMD30_DEVICE_ID_HIGH__RMW(die, (fdata)<<4, 0x3f0)
#  define SRM_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__RMW(die, fdata)           SRM_MMD30_DEVICE_ID_HIGH__RMW(die, (fdata)<<4, 0x3f0)
#  define SRM_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__MASK                       0x3f
#  define SRM_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__OFFSET                     4
#  define SRM_MMD30_DEVICE_ID_HIGH__REVISION_CODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_MMD30_DEVICE_ID_HIGH__REVISION_CODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_MMD30_DEVICE_ID_HIGH__REVISION_CODE__READ(die)                SRM_MMD30_DEVICE_ID_HIGH__REVISION_CODE__GET(SRM_MMD30_DEVICE_ID_HIGH__READ(die))
#  define SRM_MMD30_DEVICE_ID_HIGH__REVISION_CODE__WRITE(die, fdata)           SRM_MMD30_DEVICE_ID_HIGH__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MMD30_DEVICE_ID_HIGH__REVISION_CODE__RMW(die, fdata)           SRM_MMD30_DEVICE_ID_HIGH__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MMD30_DEVICE_ID_HIGH__REVISION_CODE__MASK                       0xf
#  define SRM_MMD30_DEVICE_ID_HIGH__REVISION_CODE__OFFSET                     0

#define SRM_MMD30_CHIP_ID__ADDRESS                      0x4
#define SRM_MMD30_CHIP_ID__DEFAULT                      0x8000
#define SRM_MMD30_CHIP_ID__READ(die)                  srm_reg_read(die, SRM_MMD30_CHIP_ID__ADDRESS)
#define SRM_MMD30_CHIP_ID__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CHIP_ID__ADDRESS, (data))
#define SRM_MMD30_CHIP_ID__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CHIP_ID__ADDRESS, (data), (mask))
#  define SRM_MMD30_CHIP_ID__ID__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_CHIP_ID__ID__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_CHIP_ID__ID__READ(die)                SRM_MMD30_CHIP_ID__ID__GET(SRM_MMD30_CHIP_ID__READ(die))
#  define SRM_MMD30_CHIP_ID__ID__WRITE(die, fdata)           SRM_MMD30_CHIP_ID__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_CHIP_ID__ID__RMW(die, fdata)           SRM_MMD30_CHIP_ID__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_CHIP_ID__ID__MASK                       0xffff
#  define SRM_MMD30_CHIP_ID__ID__OFFSET                     0

#define SRM_MMD30_CHIP_REV__ADDRESS                      0x5
#define SRM_MMD30_CHIP_REV__DEFAULT                      0x0
#define SRM_MMD30_CHIP_REV__READ(die)                  srm_reg_read(die, SRM_MMD30_CHIP_REV__ADDRESS)
#define SRM_MMD30_CHIP_REV__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CHIP_REV__ADDRESS, (data))
#define SRM_MMD30_CHIP_REV__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CHIP_REV__ADDRESS, (data), (mask))
#  define SRM_MMD30_CHIP_REV__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xfff0))
#  define SRM_MMD30_CHIP_REV__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xfff)
#  define SRM_MMD30_CHIP_REV__RSRVD1__READ(die)                SRM_MMD30_CHIP_REV__RSRVD1__GET(SRM_MMD30_CHIP_REV__READ(die))
#  define SRM_MMD30_CHIP_REV__RSRVD1__WRITE(die, fdata)           SRM_MMD30_CHIP_REV__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_MMD30_CHIP_REV__RSRVD1__RMW(die, fdata)           SRM_MMD30_CHIP_REV__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_MMD30_CHIP_REV__RSRVD1__MASK                       0xfff
#  define SRM_MMD30_CHIP_REV__RSRVD1__OFFSET                     4
#  define SRM_MMD30_CHIP_REV__REV__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_MMD30_CHIP_REV__REV__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_MMD30_CHIP_REV__REV__READ(die)                SRM_MMD30_CHIP_REV__REV__GET(SRM_MMD30_CHIP_REV__READ(die))
#  define SRM_MMD30_CHIP_REV__REV__WRITE(die, fdata)           SRM_MMD30_CHIP_REV__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MMD30_CHIP_REV__REV__RMW(die, fdata)           SRM_MMD30_CHIP_REV__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MMD30_CHIP_REV__REV__MASK                       0xf
#  define SRM_MMD30_CHIP_REV__REV__OFFSET                     0

#define SRM_MMD30_RESET_CFG__ADDRESS                      0x6
#define SRM_MMD30_RESET_CFG__DEFAULT                      0xf
#define SRM_MMD30_RESET_CFG__READ(die)                  srm_reg_read(die, SRM_MMD30_RESET_CFG__ADDRESS)
#define SRM_MMD30_RESET_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_RESET_CFG__ADDRESS, (data))
#define SRM_MMD30_RESET_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_RESET_CFG__ADDRESS, (data), (mask))
#  define SRM_MMD30_RESET_CFG__MCU_SR__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MMD30_RESET_CFG__MCU_SR__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MMD30_RESET_CFG__MCU_SR__READ(die)                SRM_MMD30_RESET_CFG__MCU_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__MCU_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MMD30_RESET_CFG__MCU_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MMD30_RESET_CFG__MCU_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__MCU_SR__OFFSET                     15
#  define SRM_MMD30_RESET_CFG__DATAPATH_SR__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_MMD30_RESET_CFG__DATAPATH_SR__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_MMD30_RESET_CFG__DATAPATH_SR__READ(die)                SRM_MMD30_RESET_CFG__DATAPATH_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__DATAPATH_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_MMD30_RESET_CFG__DATAPATH_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_MMD30_RESET_CFG__DATAPATH_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__DATAPATH_SR__OFFSET                     14
#  define SRM_MMD30_RESET_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xc7ff) | (((uint32_t)(fdata) << 11) & 0x3800))
#  define SRM_MMD30_RESET_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x7)
#  define SRM_MMD30_RESET_CFG__RSRVD1__READ(die)                SRM_MMD30_RESET_CFG__RSRVD1__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__RSRVD1__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<11, 0x3800)
#  define SRM_MMD30_RESET_CFG__RSRVD1__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<11, 0x3800)
#  define SRM_MMD30_RESET_CFG__RSRVD1__MASK                       0x7
#  define SRM_MMD30_RESET_CFG__RSRVD1__OFFSET                     11
#  define SRM_MMD30_RESET_CFG__PMON_SR__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_MMD30_RESET_CFG__PMON_SR__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_MMD30_RESET_CFG__PMON_SR__READ(die)                SRM_MMD30_RESET_CFG__PMON_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__PMON_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MMD30_RESET_CFG__PMON_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MMD30_RESET_CFG__PMON_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__PMON_SR__OFFSET                     10
#  define SRM_MMD30_RESET_CFG__APBM_SR__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_MMD30_RESET_CFG__APBM_SR__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_MMD30_RESET_CFG__APBM_SR__READ(die)                SRM_MMD30_RESET_CFG__APBM_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__APBM_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MMD30_RESET_CFG__APBM_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MMD30_RESET_CFG__APBM_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__APBM_SR__OFFSET                     9
#  define SRM_MMD30_RESET_CFG__CLKMON_SR__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_MMD30_RESET_CFG__CLKMON_SR__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_MMD30_RESET_CFG__CLKMON_SR__READ(die)                SRM_MMD30_RESET_CFG__CLKMON_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__CLKMON_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MMD30_RESET_CFG__CLKMON_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MMD30_RESET_CFG__CLKMON_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__CLKMON_SR__OFFSET                     8
#  define SRM_MMD30_RESET_CFG__IP_MSG_SR__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MMD30_RESET_CFG__IP_MSG_SR__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MMD30_RESET_CFG__IP_MSG_SR__READ(die)                SRM_MMD30_RESET_CFG__IP_MSG_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__IP_MSG_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MMD30_RESET_CFG__IP_MSG_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MMD30_RESET_CFG__IP_MSG_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__IP_MSG_SR__OFFSET                     7
#  define SRM_MMD30_RESET_CFG__LT1_MSG_SR__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_MMD30_RESET_CFG__LT1_MSG_SR__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_MMD30_RESET_CFG__LT1_MSG_SR__READ(die)                SRM_MMD30_RESET_CFG__LT1_MSG_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__LT1_MSG_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<6, 0x40)
#  define SRM_MMD30_RESET_CFG__LT1_MSG_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<6, 0x40)
#  define SRM_MMD30_RESET_CFG__LT1_MSG_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__LT1_MSG_SR__OFFSET                     6
#  define SRM_MMD30_RESET_CFG__LT0_MSG_SR__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_MMD30_RESET_CFG__LT0_MSG_SR__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_MMD30_RESET_CFG__LT0_MSG_SR__READ(die)                SRM_MMD30_RESET_CFG__LT0_MSG_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__LT0_MSG_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<5, 0x20)
#  define SRM_MMD30_RESET_CFG__LT0_MSG_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<5, 0x20)
#  define SRM_MMD30_RESET_CFG__LT0_MSG_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__LT0_MSG_SR__OFFSET                     5
#  define SRM_MMD30_RESET_CFG__ERU_SR__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_MMD30_RESET_CFG__ERU_SR__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_MMD30_RESET_CFG__ERU_SR__READ(die)                SRM_MMD30_RESET_CFG__ERU_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__ERU_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MMD30_RESET_CFG__ERU_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MMD30_RESET_CFG__ERU_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__ERU_SR__OFFSET                     4
#  define SRM_MMD30_RESET_CFG__BIAS_SR__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MMD30_RESET_CFG__BIAS_SR__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MMD30_RESET_CFG__BIAS_SR__READ(die)                SRM_MMD30_RESET_CFG__BIAS_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__BIAS_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MMD30_RESET_CFG__BIAS_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MMD30_RESET_CFG__BIAS_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__BIAS_SR__OFFSET                     3
#  define SRM_MMD30_RESET_CFG__PLL_SR__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MMD30_RESET_CFG__PLL_SR__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MMD30_RESET_CFG__PLL_SR__READ(die)                SRM_MMD30_RESET_CFG__PLL_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__PLL_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MMD30_RESET_CFG__PLL_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MMD30_RESET_CFG__PLL_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__PLL_SR__OFFSET                     2
#  define SRM_MMD30_RESET_CFG__TX_SR__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MMD30_RESET_CFG__TX_SR__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MMD30_RESET_CFG__TX_SR__READ(die)                SRM_MMD30_RESET_CFG__TX_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__TX_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MMD30_RESET_CFG__TX_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MMD30_RESET_CFG__TX_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__TX_SR__OFFSET                     1
#  define SRM_MMD30_RESET_CFG__RX_SR__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_RESET_CFG__RX_SR__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_RESET_CFG__RX_SR__READ(die)                SRM_MMD30_RESET_CFG__RX_SR__GET(SRM_MMD30_RESET_CFG__READ(die))
#  define SRM_MMD30_RESET_CFG__RX_SR__WRITE(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_RESET_CFG__RX_SR__RMW(die, fdata)           SRM_MMD30_RESET_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_RESET_CFG__RX_SR__MASK                       0x1
#  define SRM_MMD30_RESET_CFG__RX_SR__OFFSET                     0

#define SRM_MMD30_PMON_CLK_CFG__ADDRESS                      0x7
#define SRM_MMD30_PMON_CLK_CFG__DEFAULT                      0xf00
#define SRM_MMD30_PMON_CLK_CFG__READ(die)                  srm_reg_read(die, SRM_MMD30_PMON_CLK_CFG__ADDRESS)
#define SRM_MMD30_PMON_CLK_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_PMON_CLK_CFG__ADDRESS, (data))
#define SRM_MMD30_PMON_CLK_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_PMON_CLK_CFG__ADDRESS, (data), (mask))
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD1__READ(die)                SRM_MMD30_PMON_CLK_CFG__RSRVD1__GET(SRM_MMD30_PMON_CLK_CFG__READ(die))
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD1__WRITE(die, fdata)           SRM_MMD30_PMON_CLK_CFG__RMW(die, (fdata)<<14, 0xc000)
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD1__RMW(die, fdata)           SRM_MMD30_PMON_CLK_CFG__RMW(die, (fdata)<<14, 0xc000)
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD1__MASK                       0x3
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD1__OFFSET                     14
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_DIVSEL__SET(rdata, fdata)         (((rdata) & 0xc0ff) | (((uint32_t)(fdata) << 8) & 0x3f00))
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_DIVSEL__GET(rdata)                (((rdata) >> 8) & 0x3f)
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_DIVSEL__READ(die)                SRM_MMD30_PMON_CLK_CFG__PMON_CLK_DIVSEL__GET(SRM_MMD30_PMON_CLK_CFG__READ(die))
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_DIVSEL__WRITE(die, fdata)           SRM_MMD30_PMON_CLK_CFG__RMW(die, (fdata)<<8, 0x3f00)
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_DIVSEL__RMW(die, fdata)           SRM_MMD30_PMON_CLK_CFG__RMW(die, (fdata)<<8, 0x3f00)
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_DIVSEL__MASK                       0x3f
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_DIVSEL__OFFSET                     8
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff07) | (((uint32_t)(fdata) << 3) & 0xf8))
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD2__GET(rdata)                (((rdata) >> 3) & 0x1f)
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD2__READ(die)                SRM_MMD30_PMON_CLK_CFG__RSRVD2__GET(SRM_MMD30_PMON_CLK_CFG__READ(die))
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD2__WRITE(die, fdata)           SRM_MMD30_PMON_CLK_CFG__RMW(die, (fdata)<<3, 0xf8)
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD2__RMW(die, fdata)           SRM_MMD30_PMON_CLK_CFG__RMW(die, (fdata)<<3, 0xf8)
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD2__MASK                       0x1f
#  define SRM_MMD30_PMON_CLK_CFG__RSRVD2__OFFSET                     3
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_SRC__SET(rdata, fdata)         (((rdata) & 0xfff9) | (((uint32_t)(fdata) << 1) & 0x6))
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_SRC__GET(rdata)                (((rdata) >> 1) & 0x3)
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_SRC__READ(die)                SRM_MMD30_PMON_CLK_CFG__PMON_CLK_SRC__GET(SRM_MMD30_PMON_CLK_CFG__READ(die))
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_SRC__WRITE(die, fdata)           SRM_MMD30_PMON_CLK_CFG__RMW(die, (fdata)<<1, 0x6)
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_SRC__RMW(die, fdata)           SRM_MMD30_PMON_CLK_CFG__RMW(die, (fdata)<<1, 0x6)
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_SRC__MASK                       0x3
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_SRC__OFFSET                     1
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_EN__READ(die)                SRM_MMD30_PMON_CLK_CFG__PMON_CLK_EN__GET(SRM_MMD30_PMON_CLK_CFG__READ(die))
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_EN__WRITE(die, fdata)           SRM_MMD30_PMON_CLK_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_EN__RMW(die, fdata)           SRM_MMD30_PMON_CLK_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_EN__MASK                       0x1
#  define SRM_MMD30_PMON_CLK_CFG__PMON_CLK_EN__OFFSET                     0

#define SRM_MMD30_TIMER_CFG__ADDRESS                      0xa
#define SRM_MMD30_TIMER_CFG__DEFAULT                      0x61a8
#define SRM_MMD30_TIMER_CFG__READ(die)                  srm_reg_read(die, SRM_MMD30_TIMER_CFG__ADDRESS)
#define SRM_MMD30_TIMER_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_TIMER_CFG__ADDRESS, (data))
#define SRM_MMD30_TIMER_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_TIMER_CFG__ADDRESS, (data), (mask))
#  define SRM_MMD30_TIMER_CFG__COUNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_TIMER_CFG__COUNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_TIMER_CFG__COUNT__READ(die)                SRM_MMD30_TIMER_CFG__COUNT__GET(SRM_MMD30_TIMER_CFG__READ(die))
#  define SRM_MMD30_TIMER_CFG__COUNT__WRITE(die, fdata)           SRM_MMD30_TIMER_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_TIMER_CFG__COUNT__RMW(die, fdata)           SRM_MMD30_TIMER_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_TIMER_CFG__COUNT__MASK                       0xffff
#  define SRM_MMD30_TIMER_CFG__COUNT__OFFSET                     0

#define SRM_MMD30_TIMER_EN_CFG__ADDRESS                      0xb
#define SRM_MMD30_TIMER_EN_CFG__DEFAULT                      0x0
#define SRM_MMD30_TIMER_EN_CFG__READ(die)                  srm_reg_read(die, SRM_MMD30_TIMER_EN_CFG__ADDRESS)
#define SRM_MMD30_TIMER_EN_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_TIMER_EN_CFG__ADDRESS, (data))
#define SRM_MMD30_TIMER_EN_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_TIMER_EN_CFG__ADDRESS, (data), (mask))
#  define SRM_MMD30_TIMER_EN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_MMD30_TIMER_EN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_MMD30_TIMER_EN_CFG__RSRVD1__READ(die)                SRM_MMD30_TIMER_EN_CFG__RSRVD1__GET(SRM_MMD30_TIMER_EN_CFG__READ(die))
#  define SRM_MMD30_TIMER_EN_CFG__RSRVD1__WRITE(die, fdata)           SRM_MMD30_TIMER_EN_CFG__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_TIMER_EN_CFG__RSRVD1__RMW(die, fdata)           SRM_MMD30_TIMER_EN_CFG__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_TIMER_EN_CFG__RSRVD1__MASK                       0x7fff
#  define SRM_MMD30_TIMER_EN_CFG__RSRVD1__OFFSET                     1
#  define SRM_MMD30_TIMER_EN_CFG__ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_TIMER_EN_CFG__ENABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_TIMER_EN_CFG__ENABLE__READ(die)                SRM_MMD30_TIMER_EN_CFG__ENABLE__GET(SRM_MMD30_TIMER_EN_CFG__READ(die))
#  define SRM_MMD30_TIMER_EN_CFG__ENABLE__WRITE(die, fdata)           SRM_MMD30_TIMER_EN_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_TIMER_EN_CFG__ENABLE__RMW(die, fdata)           SRM_MMD30_TIMER_EN_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_TIMER_EN_CFG__ENABLE__MASK                       0x1
#  define SRM_MMD30_TIMER_EN_CFG__ENABLE__OFFSET                     0

#define SRM_MMD30_SNAPSHOT_TIMER_CFG__ADDRESS                      0xc
#define SRM_MMD30_SNAPSHOT_TIMER_CFG__DEFAULT                      0x0
#define SRM_MMD30_SNAPSHOT_TIMER_CFG__READ(die)                  srm_reg_read(die, SRM_MMD30_SNAPSHOT_TIMER_CFG__ADDRESS)
#define SRM_MMD30_SNAPSHOT_TIMER_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SNAPSHOT_TIMER_CFG__ADDRESS, (data))
#define SRM_MMD30_SNAPSHOT_TIMER_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SNAPSHOT_TIMER_CFG__ADDRESS, (data), (mask))
#  define SRM_MMD30_SNAPSHOT_TIMER_CFG__DURATION__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SNAPSHOT_TIMER_CFG__DURATION__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SNAPSHOT_TIMER_CFG__DURATION__READ(die)                SRM_MMD30_SNAPSHOT_TIMER_CFG__DURATION__GET(SRM_MMD30_SNAPSHOT_TIMER_CFG__READ(die))
#  define SRM_MMD30_SNAPSHOT_TIMER_CFG__DURATION__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_TIMER_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SNAPSHOT_TIMER_CFG__DURATION__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_TIMER_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SNAPSHOT_TIMER_CFG__DURATION__MASK                       0xffff
#  define SRM_MMD30_SNAPSHOT_TIMER_CFG__DURATION__OFFSET                     0

#define SRM_MMD30_SNAPSHOT_CFG__ADDRESS                      0xd
#define SRM_MMD30_SNAPSHOT_CFG__DEFAULT                      0x0
#define SRM_MMD30_SNAPSHOT_CFG__READ(die)                  srm_reg_read(die, SRM_MMD30_SNAPSHOT_CFG__ADDRESS)
#define SRM_MMD30_SNAPSHOT_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SNAPSHOT_CFG__ADDRESS, (data))
#define SRM_MMD30_SNAPSHOT_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SNAPSHOT_CFG__ADDRESS, (data), (mask))
#  define SRM_MMD30_SNAPSHOT_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xfff0))
#  define SRM_MMD30_SNAPSHOT_CFG__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xfff)
#  define SRM_MMD30_SNAPSHOT_CFG__RSRVD1__READ(die)                SRM_MMD30_SNAPSHOT_CFG__RSRVD1__GET(SRM_MMD30_SNAPSHOT_CFG__READ(die))
#  define SRM_MMD30_SNAPSHOT_CFG__RSRVD1__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_CFG__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_MMD30_SNAPSHOT_CFG__RSRVD1__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_CFG__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_MMD30_SNAPSHOT_CFG__RSRVD1__MASK                       0xfff
#  define SRM_MMD30_SNAPSHOT_CFG__RSRVD1__OFFSET                     4
#  define SRM_MMD30_SNAPSHOT_CFG__CORE_SNAPSHOT_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MMD30_SNAPSHOT_CFG__CORE_SNAPSHOT_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MMD30_SNAPSHOT_CFG__CORE_SNAPSHOT_EN__READ(die)                SRM_MMD30_SNAPSHOT_CFG__CORE_SNAPSHOT_EN__GET(SRM_MMD30_SNAPSHOT_CFG__READ(die))
#  define SRM_MMD30_SNAPSHOT_CFG__CORE_SNAPSHOT_EN__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_CFG__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MMD30_SNAPSHOT_CFG__CORE_SNAPSHOT_EN__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_CFG__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MMD30_SNAPSHOT_CFG__CORE_SNAPSHOT_EN__MASK                       0x1
#  define SRM_MMD30_SNAPSHOT_CFG__CORE_SNAPSHOT_EN__OFFSET                     3
#  define SRM_MMD30_SNAPSHOT_CFG__TIMER_SNAPSHOT_EN__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MMD30_SNAPSHOT_CFG__TIMER_SNAPSHOT_EN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MMD30_SNAPSHOT_CFG__TIMER_SNAPSHOT_EN__READ(die)                SRM_MMD30_SNAPSHOT_CFG__TIMER_SNAPSHOT_EN__GET(SRM_MMD30_SNAPSHOT_CFG__READ(die))
#  define SRM_MMD30_SNAPSHOT_CFG__TIMER_SNAPSHOT_EN__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MMD30_SNAPSHOT_CFG__TIMER_SNAPSHOT_EN__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MMD30_SNAPSHOT_CFG__TIMER_SNAPSHOT_EN__MASK                       0x1
#  define SRM_MMD30_SNAPSHOT_CFG__TIMER_SNAPSHOT_EN__OFFSET                     2
#  define SRM_MMD30_SNAPSHOT_CFG__GPIO_SNAPSHOT_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MMD30_SNAPSHOT_CFG__GPIO_SNAPSHOT_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MMD30_SNAPSHOT_CFG__GPIO_SNAPSHOT_EN__READ(die)                SRM_MMD30_SNAPSHOT_CFG__GPIO_SNAPSHOT_EN__GET(SRM_MMD30_SNAPSHOT_CFG__READ(die))
#  define SRM_MMD30_SNAPSHOT_CFG__GPIO_SNAPSHOT_EN__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MMD30_SNAPSHOT_CFG__GPIO_SNAPSHOT_EN__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MMD30_SNAPSHOT_CFG__GPIO_SNAPSHOT_EN__MASK                       0x1
#  define SRM_MMD30_SNAPSHOT_CFG__GPIO_SNAPSHOT_EN__OFFSET                     1
#  define SRM_MMD30_SNAPSHOT_CFG__SNAPSHOT_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_SNAPSHOT_CFG__SNAPSHOT_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_SNAPSHOT_CFG__SNAPSHOT_EN__READ(die)                SRM_MMD30_SNAPSHOT_CFG__SNAPSHOT_EN__GET(SRM_MMD30_SNAPSHOT_CFG__READ(die))
#  define SRM_MMD30_SNAPSHOT_CFG__SNAPSHOT_EN__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_SNAPSHOT_CFG__SNAPSHOT_EN__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_SNAPSHOT_CFG__SNAPSHOT_EN__MASK                       0x1
#  define SRM_MMD30_SNAPSHOT_CFG__SNAPSHOT_EN__OFFSET                     0

#define SRM_MMD30_SNAPSHOT_INT__ADDRESS                      0xe
#define SRM_MMD30_SNAPSHOT_INT__DEFAULT                      0x0
#define SRM_MMD30_SNAPSHOT_INT__READ(die)                  srm_reg_read(die, SRM_MMD30_SNAPSHOT_INT__ADDRESS)
#define SRM_MMD30_SNAPSHOT_INT__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SNAPSHOT_INT__ADDRESS, (data))
#define SRM_MMD30_SNAPSHOT_INT__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SNAPSHOT_INT__ADDRESS, (data), (mask))
#  define SRM_MMD30_SNAPSHOT_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_MMD30_SNAPSHOT_INT__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_MMD30_SNAPSHOT_INT__RSRVD1__READ(die)                SRM_MMD30_SNAPSHOT_INT__RSRVD1__GET(SRM_MMD30_SNAPSHOT_INT__READ(die))
#  define SRM_MMD30_SNAPSHOT_INT__RSRVD1__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_INT__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_SNAPSHOT_INT__RSRVD1__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_INT__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_SNAPSHOT_INT__RSRVD1__MASK                       0x7fff
#  define SRM_MMD30_SNAPSHOT_INT__RSRVD1__OFFSET                     1
#  define SRM_MMD30_SNAPSHOT_INT__SNAPSHOT__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_SNAPSHOT_INT__SNAPSHOT__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_SNAPSHOT_INT__SNAPSHOT__READ(die)                SRM_MMD30_SNAPSHOT_INT__SNAPSHOT__GET(SRM_MMD30_SNAPSHOT_INT__READ(die))
#  define SRM_MMD30_SNAPSHOT_INT__SNAPSHOT__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_INT__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_SNAPSHOT_INT__SNAPSHOT__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_INT__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_SNAPSHOT_INT__SNAPSHOT__MASK                       0x1
#  define SRM_MMD30_SNAPSHOT_INT__SNAPSHOT__OFFSET                     0

#define SRM_MMD30_SNAPSHOT_INTE__ADDRESS                      0xf
#define SRM_MMD30_SNAPSHOT_INTE__DEFAULT                      0x0
#define SRM_MMD30_SNAPSHOT_INTE__READ(die)                  srm_reg_read(die, SRM_MMD30_SNAPSHOT_INTE__ADDRESS)
#define SRM_MMD30_SNAPSHOT_INTE__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SNAPSHOT_INTE__ADDRESS, (data))
#define SRM_MMD30_SNAPSHOT_INTE__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SNAPSHOT_INTE__ADDRESS, (data), (mask))
#  define SRM_MMD30_SNAPSHOT_INTE__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_MMD30_SNAPSHOT_INTE__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_MMD30_SNAPSHOT_INTE__RSRVD1__READ(die)                SRM_MMD30_SNAPSHOT_INTE__RSRVD1__GET(SRM_MMD30_SNAPSHOT_INTE__READ(die))
#  define SRM_MMD30_SNAPSHOT_INTE__RSRVD1__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_INTE__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_SNAPSHOT_INTE__RSRVD1__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_INTE__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_SNAPSHOT_INTE__RSRVD1__MASK                       0x7fff
#  define SRM_MMD30_SNAPSHOT_INTE__RSRVD1__OFFSET                     1
#  define SRM_MMD30_SNAPSHOT_INTE__SNAPSHOTE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_SNAPSHOT_INTE__SNAPSHOTE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_SNAPSHOT_INTE__SNAPSHOTE__READ(die)                SRM_MMD30_SNAPSHOT_INTE__SNAPSHOTE__GET(SRM_MMD30_SNAPSHOT_INTE__READ(die))
#  define SRM_MMD30_SNAPSHOT_INTE__SNAPSHOTE__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_INTE__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_SNAPSHOT_INTE__SNAPSHOTE__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_INTE__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_SNAPSHOT_INTE__SNAPSHOTE__MASK                       0x1
#  define SRM_MMD30_SNAPSHOT_INTE__SNAPSHOTE__OFFSET                     0

#define SRM_MMD30_SNAPSHOT_INTS__ADDRESS                      0x10
#define SRM_MMD30_SNAPSHOT_INTS__DEFAULT                      0x0
#define SRM_MMD30_SNAPSHOT_INTS__READ(die)                  srm_reg_read(die, SRM_MMD30_SNAPSHOT_INTS__ADDRESS)
#define SRM_MMD30_SNAPSHOT_INTS__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SNAPSHOT_INTS__ADDRESS, (data))
#define SRM_MMD30_SNAPSHOT_INTS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SNAPSHOT_INTS__ADDRESS, (data), (mask))
#  define SRM_MMD30_SNAPSHOT_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_MMD30_SNAPSHOT_INTS__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_MMD30_SNAPSHOT_INTS__RSRVD1__READ(die)                SRM_MMD30_SNAPSHOT_INTS__RSRVD1__GET(SRM_MMD30_SNAPSHOT_INTS__READ(die))
#  define SRM_MMD30_SNAPSHOT_INTS__RSRVD1__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_INTS__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_SNAPSHOT_INTS__RSRVD1__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_INTS__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_SNAPSHOT_INTS__RSRVD1__MASK                       0x7fff
#  define SRM_MMD30_SNAPSHOT_INTS__RSRVD1__OFFSET                     1
#  define SRM_MMD30_SNAPSHOT_INTS__SNAPSHOTS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_SNAPSHOT_INTS__SNAPSHOTS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_SNAPSHOT_INTS__SNAPSHOTS__READ(die)                SRM_MMD30_SNAPSHOT_INTS__SNAPSHOTS__GET(SRM_MMD30_SNAPSHOT_INTS__READ(die))
#  define SRM_MMD30_SNAPSHOT_INTS__SNAPSHOTS__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_INTS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_SNAPSHOT_INTS__SNAPSHOTS__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_INTS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_SNAPSHOT_INTS__SNAPSHOTS__MASK                       0x1
#  define SRM_MMD30_SNAPSHOT_INTS__SNAPSHOTS__OFFSET                     0

#define SRM_MMD30_SNAPSHOT_INTZ__ADDRESS                      0x11
#define SRM_MMD30_SNAPSHOT_INTZ__DEFAULT                      0x0
#define SRM_MMD30_SNAPSHOT_INTZ__READ(die)                  srm_reg_read(die, SRM_MMD30_SNAPSHOT_INTZ__ADDRESS)
#define SRM_MMD30_SNAPSHOT_INTZ__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SNAPSHOT_INTZ__ADDRESS, (data))
#define SRM_MMD30_SNAPSHOT_INTZ__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SNAPSHOT_INTZ__ADDRESS, (data), (mask))
#  define SRM_MMD30_SNAPSHOT_INTZ__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_MMD30_SNAPSHOT_INTZ__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_MMD30_SNAPSHOT_INTZ__RSRVD1__READ(die)                SRM_MMD30_SNAPSHOT_INTZ__RSRVD1__GET(SRM_MMD30_SNAPSHOT_INTZ__READ(die))
#  define SRM_MMD30_SNAPSHOT_INTZ__RSRVD1__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_INTZ__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_SNAPSHOT_INTZ__RSRVD1__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_INTZ__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_SNAPSHOT_INTZ__RSRVD1__MASK                       0x7fff
#  define SRM_MMD30_SNAPSHOT_INTZ__RSRVD1__OFFSET                     1
#  define SRM_MMD30_SNAPSHOT_INTZ__SNAPSHOTZ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_SNAPSHOT_INTZ__SNAPSHOTZ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_SNAPSHOT_INTZ__SNAPSHOTZ__READ(die)                SRM_MMD30_SNAPSHOT_INTZ__SNAPSHOTZ__GET(SRM_MMD30_SNAPSHOT_INTZ__READ(die))
#  define SRM_MMD30_SNAPSHOT_INTZ__SNAPSHOTZ__WRITE(die, fdata)           SRM_MMD30_SNAPSHOT_INTZ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_SNAPSHOT_INTZ__SNAPSHOTZ__RMW(die, fdata)           SRM_MMD30_SNAPSHOT_INTZ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_SNAPSHOT_INTZ__SNAPSHOTZ__MASK                       0x1
#  define SRM_MMD30_SNAPSHOT_INTZ__SNAPSHOTZ__OFFSET                     0

#define SRM_MMD30_SW_COUNTER_CFG__ADDRESS                      0x12
#define SRM_MMD30_SW_COUNTER_CFG__DEFAULT                      0x64
#define SRM_MMD30_SW_COUNTER_CFG__READ(die)                  srm_reg_read(die, SRM_MMD30_SW_COUNTER_CFG__ADDRESS)
#define SRM_MMD30_SW_COUNTER_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SW_COUNTER_CFG__ADDRESS, (data))
#define SRM_MMD30_SW_COUNTER_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SW_COUNTER_CFG__ADDRESS, (data), (mask))
#  define SRM_MMD30_SW_COUNTER_CFG__ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MMD30_SW_COUNTER_CFG__ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MMD30_SW_COUNTER_CFG__ENABLE__READ(die)                SRM_MMD30_SW_COUNTER_CFG__ENABLE__GET(SRM_MMD30_SW_COUNTER_CFG__READ(die))
#  define SRM_MMD30_SW_COUNTER_CFG__ENABLE__WRITE(die, fdata)           SRM_MMD30_SW_COUNTER_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MMD30_SW_COUNTER_CFG__ENABLE__RMW(die, fdata)           SRM_MMD30_SW_COUNTER_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MMD30_SW_COUNTER_CFG__ENABLE__MASK                       0x1
#  define SRM_MMD30_SW_COUNTER_CFG__ENABLE__OFFSET                     15
#  define SRM_MMD30_SW_COUNTER_CFG__PRESCALE__SET(rdata, fdata)         (((rdata) & 0x8000) | (((uint32_t)(fdata) << 0) & 0x7fff))
#  define SRM_MMD30_SW_COUNTER_CFG__PRESCALE__GET(rdata)                (((rdata) >> 0) & 0x7fff)
#  define SRM_MMD30_SW_COUNTER_CFG__PRESCALE__READ(die)                SRM_MMD30_SW_COUNTER_CFG__PRESCALE__GET(SRM_MMD30_SW_COUNTER_CFG__READ(die))
#  define SRM_MMD30_SW_COUNTER_CFG__PRESCALE__WRITE(die, fdata)           SRM_MMD30_SW_COUNTER_CFG__RMW(die, (fdata)<<0, 0x7fff)
#  define SRM_MMD30_SW_COUNTER_CFG__PRESCALE__RMW(die, fdata)           SRM_MMD30_SW_COUNTER_CFG__RMW(die, (fdata)<<0, 0x7fff)
#  define SRM_MMD30_SW_COUNTER_CFG__PRESCALE__MASK                       0x7fff
#  define SRM_MMD30_SW_COUNTER_CFG__PRESCALE__OFFSET                     0

#define SRM_MMD30_SW_COUNTER_STATUS0__ADDRESS                      0x13
#define SRM_MMD30_SW_COUNTER_STATUS0__DEFAULT                      0x0
#define SRM_MMD30_SW_COUNTER_STATUS0__READ(die)                  srm_reg_read(die, SRM_MMD30_SW_COUNTER_STATUS0__ADDRESS)
#define SRM_MMD30_SW_COUNTER_STATUS0__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SW_COUNTER_STATUS0__ADDRESS, (data))
#define SRM_MMD30_SW_COUNTER_STATUS0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SW_COUNTER_STATUS0__ADDRESS, (data), (mask))
#  define SRM_MMD30_SW_COUNTER_STATUS0__COUNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SW_COUNTER_STATUS0__COUNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SW_COUNTER_STATUS0__COUNT__READ(die)                SRM_MMD30_SW_COUNTER_STATUS0__COUNT__GET(SRM_MMD30_SW_COUNTER_STATUS0__READ(die))
#  define SRM_MMD30_SW_COUNTER_STATUS0__COUNT__WRITE(die, fdata)           SRM_MMD30_SW_COUNTER_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SW_COUNTER_STATUS0__COUNT__RMW(die, fdata)           SRM_MMD30_SW_COUNTER_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SW_COUNTER_STATUS0__COUNT__MASK                       0xffff
#  define SRM_MMD30_SW_COUNTER_STATUS0__COUNT__OFFSET                     0

#define SRM_MMD30_SW_COUNTER_STATUS1__ADDRESS                      0x14
#define SRM_MMD30_SW_COUNTER_STATUS1__DEFAULT                      0x0
#define SRM_MMD30_SW_COUNTER_STATUS1__READ(die)                  srm_reg_read(die, SRM_MMD30_SW_COUNTER_STATUS1__ADDRESS)
#define SRM_MMD30_SW_COUNTER_STATUS1__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SW_COUNTER_STATUS1__ADDRESS, (data))
#define SRM_MMD30_SW_COUNTER_STATUS1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SW_COUNTER_STATUS1__ADDRESS, (data), (mask))
#  define SRM_MMD30_SW_COUNTER_STATUS1__COUNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SW_COUNTER_STATUS1__COUNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SW_COUNTER_STATUS1__COUNT__READ(die)                SRM_MMD30_SW_COUNTER_STATUS1__COUNT__GET(SRM_MMD30_SW_COUNTER_STATUS1__READ(die))
#  define SRM_MMD30_SW_COUNTER_STATUS1__COUNT__WRITE(die, fdata)           SRM_MMD30_SW_COUNTER_STATUS1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SW_COUNTER_STATUS1__COUNT__RMW(die, fdata)           SRM_MMD30_SW_COUNTER_STATUS1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SW_COUNTER_STATUS1__COUNT__MASK                       0xffff
#  define SRM_MMD30_SW_COUNTER_STATUS1__COUNT__OFFSET                     0

#define SRM_MMD30_CLKMON_CFG__ADDRESS                      0x15
#define SRM_MMD30_CLKMON_CFG__DEFAULT                      0x0
#define SRM_MMD30_CLKMON_CFG__READ(die)                  srm_reg_read(die, SRM_MMD30_CLKMON_CFG__ADDRESS)
#define SRM_MMD30_CLKMON_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CLKMON_CFG__ADDRESS, (data))
#define SRM_MMD30_CLKMON_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CLKMON_CFG__ADDRESS, (data), (mask))
#  define SRM_MMD30_CLKMON_CFG__ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MMD30_CLKMON_CFG__ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MMD30_CLKMON_CFG__ENABLE__READ(die)                SRM_MMD30_CLKMON_CFG__ENABLE__GET(SRM_MMD30_CLKMON_CFG__READ(die))
#  define SRM_MMD30_CLKMON_CFG__ENABLE__WRITE(die, fdata)           SRM_MMD30_CLKMON_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MMD30_CLKMON_CFG__ENABLE__RMW(die, fdata)           SRM_MMD30_CLKMON_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MMD30_CLKMON_CFG__ENABLE__MASK                       0x1
#  define SRM_MMD30_CLKMON_CFG__ENABLE__OFFSET                     15
#  define SRM_MMD30_CLKMON_CFG__DIV_SEL__SET(rdata, fdata)         (((rdata) & 0x801f) | (((uint32_t)(fdata) << 5) & 0x7fe0))
#  define SRM_MMD30_CLKMON_CFG__DIV_SEL__GET(rdata)                (((rdata) >> 5) & 0x3ff)
#  define SRM_MMD30_CLKMON_CFG__DIV_SEL__READ(die)                SRM_MMD30_CLKMON_CFG__DIV_SEL__GET(SRM_MMD30_CLKMON_CFG__READ(die))
#  define SRM_MMD30_CLKMON_CFG__DIV_SEL__WRITE(die, fdata)           SRM_MMD30_CLKMON_CFG__RMW(die, (fdata)<<5, 0x7fe0)
#  define SRM_MMD30_CLKMON_CFG__DIV_SEL__RMW(die, fdata)           SRM_MMD30_CLKMON_CFG__RMW(die, (fdata)<<5, 0x7fe0)
#  define SRM_MMD30_CLKMON_CFG__DIV_SEL__MASK                       0x3ff
#  define SRM_MMD30_CLKMON_CFG__DIV_SEL__OFFSET                     5
#  define SRM_MMD30_CLKMON_CFG__CLOCK_SEL__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SRM_MMD30_CLKMON_CFG__CLOCK_SEL__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SRM_MMD30_CLKMON_CFG__CLOCK_SEL__READ(die)                SRM_MMD30_CLKMON_CFG__CLOCK_SEL__GET(SRM_MMD30_CLKMON_CFG__READ(die))
#  define SRM_MMD30_CLKMON_CFG__CLOCK_SEL__WRITE(die, fdata)           SRM_MMD30_CLKMON_CFG__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_MMD30_CLKMON_CFG__CLOCK_SEL__RMW(die, fdata)           SRM_MMD30_CLKMON_CFG__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_MMD30_CLKMON_CFG__CLOCK_SEL__MASK                       0x1f
#  define SRM_MMD30_CLKMON_CFG__CLOCK_SEL__OFFSET                     0

#define SRM_MMD30_CLKMON_CTR_CFG__ADDRESS                      0x16
#define SRM_MMD30_CLKMON_CTR_CFG__DEFAULT                      0x0
#define SRM_MMD30_CLKMON_CTR_CFG__READ(die)                  srm_reg_read(die, SRM_MMD30_CLKMON_CTR_CFG__ADDRESS)
#define SRM_MMD30_CLKMON_CTR_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CLKMON_CTR_CFG__ADDRESS, (data))
#define SRM_MMD30_CLKMON_CTR_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CLKMON_CTR_CFG__ADDRESS, (data), (mask))
#  define SRM_MMD30_CLKMON_CTR_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_MMD30_CLKMON_CTR_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_MMD30_CLKMON_CTR_CFG__RSRVD1__READ(die)                SRM_MMD30_CLKMON_CTR_CFG__RSRVD1__GET(SRM_MMD30_CLKMON_CTR_CFG__READ(die))
#  define SRM_MMD30_CLKMON_CTR_CFG__RSRVD1__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_CFG__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_CLKMON_CTR_CFG__RSRVD1__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_CFG__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_CLKMON_CTR_CFG__RSRVD1__MASK                       0x7fff
#  define SRM_MMD30_CLKMON_CTR_CFG__RSRVD1__OFFSET                     1
#  define SRM_MMD30_CLKMON_CTR_CFG__START__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_CLKMON_CTR_CFG__START__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_CLKMON_CTR_CFG__START__READ(die)                SRM_MMD30_CLKMON_CTR_CFG__START__GET(SRM_MMD30_CLKMON_CTR_CFG__READ(die))
#  define SRM_MMD30_CLKMON_CTR_CFG__START__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_CLKMON_CTR_CFG__START__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_CLKMON_CTR_CFG__START__MASK                       0x1
#  define SRM_MMD30_CLKMON_CTR_CFG__START__OFFSET                     0

#define SRM_MMD30_CLKMON_CTR_WIN_CFG0__ADDRESS                      0x17
#define SRM_MMD30_CLKMON_CTR_WIN_CFG0__DEFAULT                      0x0
#define SRM_MMD30_CLKMON_CTR_WIN_CFG0__READ(die)                  srm_reg_read(die, SRM_MMD30_CLKMON_CTR_WIN_CFG0__ADDRESS)
#define SRM_MMD30_CLKMON_CTR_WIN_CFG0__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CLKMON_CTR_WIN_CFG0__ADDRESS, (data))
#define SRM_MMD30_CLKMON_CTR_WIN_CFG0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CLKMON_CTR_WIN_CFG0__ADDRESS, (data), (mask))
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG0__SIZE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG0__SIZE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG0__SIZE__READ(die)                SRM_MMD30_CLKMON_CTR_WIN_CFG0__SIZE__GET(SRM_MMD30_CLKMON_CTR_WIN_CFG0__READ(die))
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG0__SIZE__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_WIN_CFG0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG0__SIZE__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_WIN_CFG0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG0__SIZE__MASK                       0xffff
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG0__SIZE__OFFSET                     0

#define SRM_MMD30_CLKMON_CTR_WIN_CFG1__ADDRESS                      0x18
#define SRM_MMD30_CLKMON_CTR_WIN_CFG1__DEFAULT                      0x0
#define SRM_MMD30_CLKMON_CTR_WIN_CFG1__READ(die)                  srm_reg_read(die, SRM_MMD30_CLKMON_CTR_WIN_CFG1__ADDRESS)
#define SRM_MMD30_CLKMON_CTR_WIN_CFG1__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CLKMON_CTR_WIN_CFG1__ADDRESS, (data))
#define SRM_MMD30_CLKMON_CTR_WIN_CFG1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CLKMON_CTR_WIN_CFG1__ADDRESS, (data), (mask))
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG1__SIZE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG1__SIZE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG1__SIZE__READ(die)                SRM_MMD30_CLKMON_CTR_WIN_CFG1__SIZE__GET(SRM_MMD30_CLKMON_CTR_WIN_CFG1__READ(die))
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG1__SIZE__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_WIN_CFG1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG1__SIZE__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_WIN_CFG1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG1__SIZE__MASK                       0xffff
#  define SRM_MMD30_CLKMON_CTR_WIN_CFG1__SIZE__OFFSET                     0

#define SRM_MMD30_CLKMON_CTR_CNT0__ADDRESS                      0x19
#define SRM_MMD30_CLKMON_CTR_CNT0__DEFAULT                      0x0
#define SRM_MMD30_CLKMON_CTR_CNT0__READ(die)                  srm_reg_read(die, SRM_MMD30_CLKMON_CTR_CNT0__ADDRESS)
#define SRM_MMD30_CLKMON_CTR_CNT0__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CLKMON_CTR_CNT0__ADDRESS, (data))
#define SRM_MMD30_CLKMON_CTR_CNT0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CLKMON_CTR_CNT0__ADDRESS, (data), (mask))
#  define SRM_MMD30_CLKMON_CTR_CNT0__CNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_CLKMON_CTR_CNT0__CNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_CLKMON_CTR_CNT0__CNT__READ(die)                SRM_MMD30_CLKMON_CTR_CNT0__CNT__GET(SRM_MMD30_CLKMON_CTR_CNT0__READ(die))
#  define SRM_MMD30_CLKMON_CTR_CNT0__CNT__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_CNT0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_CLKMON_CTR_CNT0__CNT__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_CNT0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_CLKMON_CTR_CNT0__CNT__MASK                       0xffff
#  define SRM_MMD30_CLKMON_CTR_CNT0__CNT__OFFSET                     0

#define SRM_MMD30_CLKMON_CTR_CNT1__ADDRESS                      0x1a
#define SRM_MMD30_CLKMON_CTR_CNT1__DEFAULT                      0x0
#define SRM_MMD30_CLKMON_CTR_CNT1__READ(die)                  srm_reg_read(die, SRM_MMD30_CLKMON_CTR_CNT1__ADDRESS)
#define SRM_MMD30_CLKMON_CTR_CNT1__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CLKMON_CTR_CNT1__ADDRESS, (data))
#define SRM_MMD30_CLKMON_CTR_CNT1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CLKMON_CTR_CNT1__ADDRESS, (data), (mask))
#  define SRM_MMD30_CLKMON_CTR_CNT1__CNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_CLKMON_CTR_CNT1__CNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_CLKMON_CTR_CNT1__CNT__READ(die)                SRM_MMD30_CLKMON_CTR_CNT1__CNT__GET(SRM_MMD30_CLKMON_CTR_CNT1__READ(die))
#  define SRM_MMD30_CLKMON_CTR_CNT1__CNT__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_CNT1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_CLKMON_CTR_CNT1__CNT__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_CNT1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_CLKMON_CTR_CNT1__CNT__MASK                       0xffff
#  define SRM_MMD30_CLKMON_CTR_CNT1__CNT__OFFSET                     0

#define SRM_MMD30_CLKMON_CTR_INT__ADDRESS                      0x1b
#define SRM_MMD30_CLKMON_CTR_INT__DEFAULT                      0x0
#define SRM_MMD30_CLKMON_CTR_INT__READ(die)                  srm_reg_read(die, SRM_MMD30_CLKMON_CTR_INT__ADDRESS)
#define SRM_MMD30_CLKMON_CTR_INT__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CLKMON_CTR_INT__ADDRESS, (data))
#define SRM_MMD30_CLKMON_CTR_INT__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CLKMON_CTR_INT__ADDRESS, (data), (mask))
#  define SRM_MMD30_CLKMON_CTR_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_MMD30_CLKMON_CTR_INT__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_MMD30_CLKMON_CTR_INT__RSRVD1__READ(die)                SRM_MMD30_CLKMON_CTR_INT__RSRVD1__GET(SRM_MMD30_CLKMON_CTR_INT__READ(die))
#  define SRM_MMD30_CLKMON_CTR_INT__RSRVD1__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_INT__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_CLKMON_CTR_INT__RSRVD1__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_INT__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_CLKMON_CTR_INT__RSRVD1__MASK                       0x7fff
#  define SRM_MMD30_CLKMON_CTR_INT__RSRVD1__OFFSET                     1
#  define SRM_MMD30_CLKMON_CTR_INT__DONE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_CLKMON_CTR_INT__DONE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_CLKMON_CTR_INT__DONE__READ(die)                SRM_MMD30_CLKMON_CTR_INT__DONE__GET(SRM_MMD30_CLKMON_CTR_INT__READ(die))
#  define SRM_MMD30_CLKMON_CTR_INT__DONE__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_INT__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_CLKMON_CTR_INT__DONE__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_INT__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_CLKMON_CTR_INT__DONE__MASK                       0x1
#  define SRM_MMD30_CLKMON_CTR_INT__DONE__OFFSET                     0

#define SRM_MMD30_CLKMON_CTR_INTE__ADDRESS                      0x1c
#define SRM_MMD30_CLKMON_CTR_INTE__DEFAULT                      0x0
#define SRM_MMD30_CLKMON_CTR_INTE__READ(die)                  srm_reg_read(die, SRM_MMD30_CLKMON_CTR_INTE__ADDRESS)
#define SRM_MMD30_CLKMON_CTR_INTE__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CLKMON_CTR_INTE__ADDRESS, (data))
#define SRM_MMD30_CLKMON_CTR_INTE__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CLKMON_CTR_INTE__ADDRESS, (data), (mask))
#  define SRM_MMD30_CLKMON_CTR_INTE__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_MMD30_CLKMON_CTR_INTE__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_MMD30_CLKMON_CTR_INTE__RSRVD1__READ(die)                SRM_MMD30_CLKMON_CTR_INTE__RSRVD1__GET(SRM_MMD30_CLKMON_CTR_INTE__READ(die))
#  define SRM_MMD30_CLKMON_CTR_INTE__RSRVD1__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_INTE__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_CLKMON_CTR_INTE__RSRVD1__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_INTE__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_CLKMON_CTR_INTE__RSRVD1__MASK                       0x7fff
#  define SRM_MMD30_CLKMON_CTR_INTE__RSRVD1__OFFSET                     1
#  define SRM_MMD30_CLKMON_CTR_INTE__DONEE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_CLKMON_CTR_INTE__DONEE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_CLKMON_CTR_INTE__DONEE__READ(die)                SRM_MMD30_CLKMON_CTR_INTE__DONEE__GET(SRM_MMD30_CLKMON_CTR_INTE__READ(die))
#  define SRM_MMD30_CLKMON_CTR_INTE__DONEE__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_INTE__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_CLKMON_CTR_INTE__DONEE__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_INTE__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_CLKMON_CTR_INTE__DONEE__MASK                       0x1
#  define SRM_MMD30_CLKMON_CTR_INTE__DONEE__OFFSET                     0

#define SRM_MMD30_CLKMON_CTR_INTS__ADDRESS                      0x1d
#define SRM_MMD30_CLKMON_CTR_INTS__DEFAULT                      0x0
#define SRM_MMD30_CLKMON_CTR_INTS__READ(die)                  srm_reg_read(die, SRM_MMD30_CLKMON_CTR_INTS__ADDRESS)
#define SRM_MMD30_CLKMON_CTR_INTS__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CLKMON_CTR_INTS__ADDRESS, (data))
#define SRM_MMD30_CLKMON_CTR_INTS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CLKMON_CTR_INTS__ADDRESS, (data), (mask))
#  define SRM_MMD30_CLKMON_CTR_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_MMD30_CLKMON_CTR_INTS__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_MMD30_CLKMON_CTR_INTS__RSRVD1__READ(die)                SRM_MMD30_CLKMON_CTR_INTS__RSRVD1__GET(SRM_MMD30_CLKMON_CTR_INTS__READ(die))
#  define SRM_MMD30_CLKMON_CTR_INTS__RSRVD1__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_INTS__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_CLKMON_CTR_INTS__RSRVD1__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_INTS__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_CLKMON_CTR_INTS__RSRVD1__MASK                       0x7fff
#  define SRM_MMD30_CLKMON_CTR_INTS__RSRVD1__OFFSET                     1
#  define SRM_MMD30_CLKMON_CTR_INTS__DONES__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_CLKMON_CTR_INTS__DONES__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_CLKMON_CTR_INTS__DONES__READ(die)                SRM_MMD30_CLKMON_CTR_INTS__DONES__GET(SRM_MMD30_CLKMON_CTR_INTS__READ(die))
#  define SRM_MMD30_CLKMON_CTR_INTS__DONES__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_INTS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_CLKMON_CTR_INTS__DONES__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_INTS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_CLKMON_CTR_INTS__DONES__MASK                       0x1
#  define SRM_MMD30_CLKMON_CTR_INTS__DONES__OFFSET                     0

#define SRM_MMD30_CLKMON_CTR_INTZ__ADDRESS                      0x1e
#define SRM_MMD30_CLKMON_CTR_INTZ__DEFAULT                      0x0
#define SRM_MMD30_CLKMON_CTR_INTZ__READ(die)                  srm_reg_read(die, SRM_MMD30_CLKMON_CTR_INTZ__ADDRESS)
#define SRM_MMD30_CLKMON_CTR_INTZ__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CLKMON_CTR_INTZ__ADDRESS, (data))
#define SRM_MMD30_CLKMON_CTR_INTZ__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CLKMON_CTR_INTZ__ADDRESS, (data), (mask))
#  define SRM_MMD30_CLKMON_CTR_INTZ__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_MMD30_CLKMON_CTR_INTZ__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_MMD30_CLKMON_CTR_INTZ__RSRVD1__READ(die)                SRM_MMD30_CLKMON_CTR_INTZ__RSRVD1__GET(SRM_MMD30_CLKMON_CTR_INTZ__READ(die))
#  define SRM_MMD30_CLKMON_CTR_INTZ__RSRVD1__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_INTZ__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_CLKMON_CTR_INTZ__RSRVD1__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_INTZ__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MMD30_CLKMON_CTR_INTZ__RSRVD1__MASK                       0x7fff
#  define SRM_MMD30_CLKMON_CTR_INTZ__RSRVD1__OFFSET                     1
#  define SRM_MMD30_CLKMON_CTR_INTZ__DONEZ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_CLKMON_CTR_INTZ__DONEZ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_CLKMON_CTR_INTZ__DONEZ__READ(die)                SRM_MMD30_CLKMON_CTR_INTZ__DONEZ__GET(SRM_MMD30_CLKMON_CTR_INTZ__READ(die))
#  define SRM_MMD30_CLKMON_CTR_INTZ__DONEZ__WRITE(die, fdata)           SRM_MMD30_CLKMON_CTR_INTZ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_CLKMON_CTR_INTZ__DONEZ__RMW(die, fdata)           SRM_MMD30_CLKMON_CTR_INTZ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_CLKMON_CTR_INTZ__DONEZ__MASK                       0x1
#  define SRM_MMD30_CLKMON_CTR_INTZ__DONEZ__OFFSET                     0

#define SRM_MMD30_BROADCAST_CFG__ADDRESS                      0x1f
#define SRM_MMD30_BROADCAST_CFG__DEFAULT                      0x0
#define SRM_MMD30_BROADCAST_CFG__READ(die)                  srm_reg_read(die, SRM_MMD30_BROADCAST_CFG__ADDRESS)
#define SRM_MMD30_BROADCAST_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_BROADCAST_CFG__ADDRESS, (data))
#define SRM_MMD30_BROADCAST_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_BROADCAST_CFG__ADDRESS, (data), (mask))
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_MASK__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_MASK__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_MASK__READ(die)                SRM_MMD30_BROADCAST_CFG__BANKADR_MASK__GET(SRM_MMD30_BROADCAST_CFG__READ(die))
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_MASK__WRITE(die, fdata)           SRM_MMD30_BROADCAST_CFG__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_MASK__RMW(die, fdata)           SRM_MMD30_BROADCAST_CFG__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_MASK__MASK                       0x7
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_MASK__OFFSET                     13
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_MASK__SET(rdata, fdata)         (((rdata) & 0xe0ff) | (((uint32_t)(fdata) << 8) & 0x1f00))
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_MASK__GET(rdata)                (((rdata) >> 8) & 0x1f)
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_MASK__READ(die)                SRM_MMD30_BROADCAST_CFG__PHYADR_MASK__GET(SRM_MMD30_BROADCAST_CFG__READ(die))
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_MASK__WRITE(die, fdata)           SRM_MMD30_BROADCAST_CFG__RMW(die, (fdata)<<8, 0x1f00)
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_MASK__RMW(die, fdata)           SRM_MMD30_BROADCAST_CFG__RMW(die, (fdata)<<8, 0x1f00)
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_MASK__MASK                       0x1f
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_MASK__OFFSET                     8
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_VALUE__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_VALUE__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_VALUE__READ(die)                SRM_MMD30_BROADCAST_CFG__BANKADR_VALUE__GET(SRM_MMD30_BROADCAST_CFG__READ(die))
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_VALUE__WRITE(die, fdata)           SRM_MMD30_BROADCAST_CFG__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_VALUE__RMW(die, fdata)           SRM_MMD30_BROADCAST_CFG__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_VALUE__MASK                       0x7
#  define SRM_MMD30_BROADCAST_CFG__BANKADR_VALUE__OFFSET                     5
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_VALUE__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_VALUE__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_VALUE__READ(die)                SRM_MMD30_BROADCAST_CFG__PHYADR_VALUE__GET(SRM_MMD30_BROADCAST_CFG__READ(die))
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_VALUE__WRITE(die, fdata)           SRM_MMD30_BROADCAST_CFG__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_VALUE__RMW(die, fdata)           SRM_MMD30_BROADCAST_CFG__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_VALUE__MASK                       0x1f
#  define SRM_MMD30_BROADCAST_CFG__PHYADR_VALUE__OFFSET                     0

#define SRM_MMD30_MDIO_AERR_CFG__ADDRESS                      0x25
#define SRM_MMD30_MDIO_AERR_CFG__DEFAULT                      0x8
#define SRM_MMD30_MDIO_AERR_CFG__READ(die)                  srm_reg_read(die, SRM_MMD30_MDIO_AERR_CFG__ADDRESS)
#define SRM_MMD30_MDIO_AERR_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_MDIO_AERR_CFG__ADDRESS, (data))
#define SRM_MMD30_MDIO_AERR_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_MDIO_AERR_CFG__ADDRESS, (data), (mask))
#  define SRM_MMD30_MDIO_AERR_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xfff0))
#  define SRM_MMD30_MDIO_AERR_CFG__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xfff)
#  define SRM_MMD30_MDIO_AERR_CFG__RSRVD1__READ(die)                SRM_MMD30_MDIO_AERR_CFG__RSRVD1__GET(SRM_MMD30_MDIO_AERR_CFG__READ(die))
#  define SRM_MMD30_MDIO_AERR_CFG__RSRVD1__WRITE(die, fdata)           SRM_MMD30_MDIO_AERR_CFG__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_MMD30_MDIO_AERR_CFG__RSRVD1__RMW(die, fdata)           SRM_MMD30_MDIO_AERR_CFG__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_MMD30_MDIO_AERR_CFG__RSRVD1__MASK                       0xfff
#  define SRM_MMD30_MDIO_AERR_CFG__RSRVD1__OFFSET                     4
#  define SRM_MMD30_MDIO_AERR_CFG__TIMEOUT__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_MMD30_MDIO_AERR_CFG__TIMEOUT__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_MMD30_MDIO_AERR_CFG__TIMEOUT__READ(die)                SRM_MMD30_MDIO_AERR_CFG__TIMEOUT__GET(SRM_MMD30_MDIO_AERR_CFG__READ(die))
#  define SRM_MMD30_MDIO_AERR_CFG__TIMEOUT__WRITE(die, fdata)           SRM_MMD30_MDIO_AERR_CFG__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MMD30_MDIO_AERR_CFG__TIMEOUT__RMW(die, fdata)           SRM_MMD30_MDIO_AERR_CFG__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MMD30_MDIO_AERR_CFG__TIMEOUT__MASK                       0xf
#  define SRM_MMD30_MDIO_AERR_CFG__TIMEOUT__OFFSET                     0

#define SRM_MMD30_MDIO_AERR_STATUS0__ADDRESS                      0x26
#define SRM_MMD30_MDIO_AERR_STATUS0__DEFAULT                      0x0
#define SRM_MMD30_MDIO_AERR_STATUS0__READ(die)                  srm_reg_read(die, SRM_MMD30_MDIO_AERR_STATUS0__ADDRESS)
#define SRM_MMD30_MDIO_AERR_STATUS0__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_MDIO_AERR_STATUS0__ADDRESS, (data))
#define SRM_MMD30_MDIO_AERR_STATUS0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_MDIO_AERR_STATUS0__ADDRESS, (data), (mask))
#  define SRM_MMD30_MDIO_AERR_STATUS0__ADDRESS__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_MDIO_AERR_STATUS0__ADDRESS__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_MDIO_AERR_STATUS0__ADDRESS__READ(die)                SRM_MMD30_MDIO_AERR_STATUS0__ADDRESS__GET(SRM_MMD30_MDIO_AERR_STATUS0__READ(die))
#  define SRM_MMD30_MDIO_AERR_STATUS0__ADDRESS__WRITE(die, fdata)           SRM_MMD30_MDIO_AERR_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_MDIO_AERR_STATUS0__ADDRESS__RMW(die, fdata)           SRM_MMD30_MDIO_AERR_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_MDIO_AERR_STATUS0__ADDRESS__MASK                       0xffff
#  define SRM_MMD30_MDIO_AERR_STATUS0__ADDRESS__OFFSET                     0

#define SRM_MMD30_MDIO_AERR_STATUS1__ADDRESS                      0x27
#define SRM_MMD30_MDIO_AERR_STATUS1__DEFAULT                      0x0
#define SRM_MMD30_MDIO_AERR_STATUS1__READ(die)                  srm_reg_read(die, SRM_MMD30_MDIO_AERR_STATUS1__ADDRESS)
#define SRM_MMD30_MDIO_AERR_STATUS1__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_MDIO_AERR_STATUS1__ADDRESS, (data))
#define SRM_MMD30_MDIO_AERR_STATUS1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_MDIO_AERR_STATUS1__ADDRESS, (data), (mask))
#  define SRM_MMD30_MDIO_AERR_STATUS1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SRM_MMD30_MDIO_AERR_STATUS1__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SRM_MMD30_MDIO_AERR_STATUS1__RSRVD1__READ(die)                SRM_MMD30_MDIO_AERR_STATUS1__RSRVD1__GET(SRM_MMD30_MDIO_AERR_STATUS1__READ(die))
#  define SRM_MMD30_MDIO_AERR_STATUS1__RSRVD1__WRITE(die, fdata)           SRM_MMD30_MDIO_AERR_STATUS1__RMW(die, (fdata)<<3, 0xfff8)
#  define SRM_MMD30_MDIO_AERR_STATUS1__RSRVD1__RMW(die, fdata)           SRM_MMD30_MDIO_AERR_STATUS1__RMW(die, (fdata)<<3, 0xfff8)
#  define SRM_MMD30_MDIO_AERR_STATUS1__RSRVD1__MASK                       0x1fff
#  define SRM_MMD30_MDIO_AERR_STATUS1__RSRVD1__OFFSET                     3
#  define SRM_MMD30_MDIO_AERR_STATUS1__WR__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MMD30_MDIO_AERR_STATUS1__WR__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MMD30_MDIO_AERR_STATUS1__WR__READ(die)                SRM_MMD30_MDIO_AERR_STATUS1__WR__GET(SRM_MMD30_MDIO_AERR_STATUS1__READ(die))
#  define SRM_MMD30_MDIO_AERR_STATUS1__WR__WRITE(die, fdata)           SRM_MMD30_MDIO_AERR_STATUS1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MMD30_MDIO_AERR_STATUS1__WR__RMW(die, fdata)           SRM_MMD30_MDIO_AERR_STATUS1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MMD30_MDIO_AERR_STATUS1__WR__MASK                       0x1
#  define SRM_MMD30_MDIO_AERR_STATUS1__WR__OFFSET                     2
#  define SRM_MMD30_MDIO_AERR_STATUS1__MMD_REGION__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MMD30_MDIO_AERR_STATUS1__MMD_REGION__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MMD30_MDIO_AERR_STATUS1__MMD_REGION__READ(die)                SRM_MMD30_MDIO_AERR_STATUS1__MMD_REGION__GET(SRM_MMD30_MDIO_AERR_STATUS1__READ(die))
#  define SRM_MMD30_MDIO_AERR_STATUS1__MMD_REGION__WRITE(die, fdata)           SRM_MMD30_MDIO_AERR_STATUS1__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MMD30_MDIO_AERR_STATUS1__MMD_REGION__RMW(die, fdata)           SRM_MMD30_MDIO_AERR_STATUS1__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MMD30_MDIO_AERR_STATUS1__MMD_REGION__MASK                       0x3
#  define SRM_MMD30_MDIO_AERR_STATUS1__MMD_REGION__OFFSET                     0

#define SRM_MMD30_APBM_AERR_CFG__ADDRESS                      0x2c
#define SRM_MMD30_APBM_AERR_CFG__DEFAULT                      0x9
#define SRM_MMD30_APBM_AERR_CFG__READ(die)                  srm_reg_read(die, SRM_MMD30_APBM_AERR_CFG__ADDRESS)
#define SRM_MMD30_APBM_AERR_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_APBM_AERR_CFG__ADDRESS, (data))
#define SRM_MMD30_APBM_AERR_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_APBM_AERR_CFG__ADDRESS, (data), (mask))
#  define SRM_MMD30_APBM_AERR_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xfff0))
#  define SRM_MMD30_APBM_AERR_CFG__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xfff)
#  define SRM_MMD30_APBM_AERR_CFG__RSRVD1__READ(die)                SRM_MMD30_APBM_AERR_CFG__RSRVD1__GET(SRM_MMD30_APBM_AERR_CFG__READ(die))
#  define SRM_MMD30_APBM_AERR_CFG__RSRVD1__WRITE(die, fdata)           SRM_MMD30_APBM_AERR_CFG__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_MMD30_APBM_AERR_CFG__RSRVD1__RMW(die, fdata)           SRM_MMD30_APBM_AERR_CFG__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_MMD30_APBM_AERR_CFG__RSRVD1__MASK                       0xfff
#  define SRM_MMD30_APBM_AERR_CFG__RSRVD1__OFFSET                     4
#  define SRM_MMD30_APBM_AERR_CFG__TIMEOUT__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_MMD30_APBM_AERR_CFG__TIMEOUT__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_MMD30_APBM_AERR_CFG__TIMEOUT__READ(die)                SRM_MMD30_APBM_AERR_CFG__TIMEOUT__GET(SRM_MMD30_APBM_AERR_CFG__READ(die))
#  define SRM_MMD30_APBM_AERR_CFG__TIMEOUT__WRITE(die, fdata)           SRM_MMD30_APBM_AERR_CFG__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MMD30_APBM_AERR_CFG__TIMEOUT__RMW(die, fdata)           SRM_MMD30_APBM_AERR_CFG__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MMD30_APBM_AERR_CFG__TIMEOUT__MASK                       0xf
#  define SRM_MMD30_APBM_AERR_CFG__TIMEOUT__OFFSET                     0

#define SRM_MMD30_APBM_AERR_STATUS0__ADDRESS                      0x2d
#define SRM_MMD30_APBM_AERR_STATUS0__DEFAULT                      0x0
#define SRM_MMD30_APBM_AERR_STATUS0__READ(die)                  srm_reg_read(die, SRM_MMD30_APBM_AERR_STATUS0__ADDRESS)
#define SRM_MMD30_APBM_AERR_STATUS0__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_APBM_AERR_STATUS0__ADDRESS, (data))
#define SRM_MMD30_APBM_AERR_STATUS0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_APBM_AERR_STATUS0__ADDRESS, (data), (mask))
#  define SRM_MMD30_APBM_AERR_STATUS0__ADDRESS__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_APBM_AERR_STATUS0__ADDRESS__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_APBM_AERR_STATUS0__ADDRESS__READ(die)                SRM_MMD30_APBM_AERR_STATUS0__ADDRESS__GET(SRM_MMD30_APBM_AERR_STATUS0__READ(die))
#  define SRM_MMD30_APBM_AERR_STATUS0__ADDRESS__WRITE(die, fdata)           SRM_MMD30_APBM_AERR_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_APBM_AERR_STATUS0__ADDRESS__RMW(die, fdata)           SRM_MMD30_APBM_AERR_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_APBM_AERR_STATUS0__ADDRESS__MASK                       0xffff
#  define SRM_MMD30_APBM_AERR_STATUS0__ADDRESS__OFFSET                     0

#define SRM_MMD30_APBM_AERR_STATUS1__ADDRESS                      0x2e
#define SRM_MMD30_APBM_AERR_STATUS1__DEFAULT                      0x0
#define SRM_MMD30_APBM_AERR_STATUS1__READ(die)                  srm_reg_read(die, SRM_MMD30_APBM_AERR_STATUS1__ADDRESS)
#define SRM_MMD30_APBM_AERR_STATUS1__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_APBM_AERR_STATUS1__ADDRESS, (data))
#define SRM_MMD30_APBM_AERR_STATUS1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_APBM_AERR_STATUS1__ADDRESS, (data), (mask))
#  define SRM_MMD30_APBM_AERR_STATUS1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SRM_MMD30_APBM_AERR_STATUS1__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SRM_MMD30_APBM_AERR_STATUS1__RSRVD1__READ(die)                SRM_MMD30_APBM_AERR_STATUS1__RSRVD1__GET(SRM_MMD30_APBM_AERR_STATUS1__READ(die))
#  define SRM_MMD30_APBM_AERR_STATUS1__RSRVD1__WRITE(die, fdata)           SRM_MMD30_APBM_AERR_STATUS1__RMW(die, (fdata)<<3, 0xfff8)
#  define SRM_MMD30_APBM_AERR_STATUS1__RSRVD1__RMW(die, fdata)           SRM_MMD30_APBM_AERR_STATUS1__RMW(die, (fdata)<<3, 0xfff8)
#  define SRM_MMD30_APBM_AERR_STATUS1__RSRVD1__MASK                       0x1fff
#  define SRM_MMD30_APBM_AERR_STATUS1__RSRVD1__OFFSET                     3
#  define SRM_MMD30_APBM_AERR_STATUS1__WR__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MMD30_APBM_AERR_STATUS1__WR__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MMD30_APBM_AERR_STATUS1__WR__READ(die)                SRM_MMD30_APBM_AERR_STATUS1__WR__GET(SRM_MMD30_APBM_AERR_STATUS1__READ(die))
#  define SRM_MMD30_APBM_AERR_STATUS1__WR__WRITE(die, fdata)           SRM_MMD30_APBM_AERR_STATUS1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MMD30_APBM_AERR_STATUS1__WR__RMW(die, fdata)           SRM_MMD30_APBM_AERR_STATUS1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MMD30_APBM_AERR_STATUS1__WR__MASK                       0x1
#  define SRM_MMD30_APBM_AERR_STATUS1__WR__OFFSET                     2
#  define SRM_MMD30_APBM_AERR_STATUS1__MMD_REGION__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MMD30_APBM_AERR_STATUS1__MMD_REGION__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MMD30_APBM_AERR_STATUS1__MMD_REGION__READ(die)                SRM_MMD30_APBM_AERR_STATUS1__MMD_REGION__GET(SRM_MMD30_APBM_AERR_STATUS1__READ(die))
#  define SRM_MMD30_APBM_AERR_STATUS1__MMD_REGION__WRITE(die, fdata)           SRM_MMD30_APBM_AERR_STATUS1__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MMD30_APBM_AERR_STATUS1__MMD_REGION__RMW(die, fdata)           SRM_MMD30_APBM_AERR_STATUS1__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MMD30_APBM_AERR_STATUS1__MMD_REGION__MASK                       0x3
#  define SRM_MMD30_APBM_AERR_STATUS1__MMD_REGION__OFFSET                     0

#define SRM_MMD30_DSP_READY_STATUS__ADDRESS                      0x33
#define SRM_MMD30_DSP_READY_STATUS__DEFAULT                      0x0
#define SRM_MMD30_DSP_READY_STATUS__READ(die)                  srm_reg_read(die, SRM_MMD30_DSP_READY_STATUS__ADDRESS)
#define SRM_MMD30_DSP_READY_STATUS__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_DSP_READY_STATUS__ADDRESS, (data))
#define SRM_MMD30_DSP_READY_STATUS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_DSP_READY_STATUS__ADDRESS, (data), (mask))
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xffc0))
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3ff)
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD1__READ(die)                SRM_MMD30_DSP_READY_STATUS__RSRVD1__GET(SRM_MMD30_DSP_READY_STATUS__READ(die))
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD1__WRITE(die, fdata)           SRM_MMD30_DSP_READY_STATUS__RMW(die, (fdata)<<6, 0xffc0)
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD1__RMW(die, fdata)           SRM_MMD30_DSP_READY_STATUS__RMW(die, (fdata)<<6, 0xffc0)
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD1__MASK                       0x3ff
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD1__OFFSET                     6
#  define SRM_MMD30_DSP_READY_STATUS__DSP_SDT__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SRM_MMD30_DSP_READY_STATUS__DSP_SDT__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SRM_MMD30_DSP_READY_STATUS__DSP_SDT__READ(die)                SRM_MMD30_DSP_READY_STATUS__DSP_SDT__GET(SRM_MMD30_DSP_READY_STATUS__READ(die))
#  define SRM_MMD30_DSP_READY_STATUS__DSP_SDT__WRITE(die, fdata)           SRM_MMD30_DSP_READY_STATUS__RMW(die, (fdata)<<4, 0x30)
#  define SRM_MMD30_DSP_READY_STATUS__DSP_SDT__RMW(die, fdata)           SRM_MMD30_DSP_READY_STATUS__RMW(die, (fdata)<<4, 0x30)
#  define SRM_MMD30_DSP_READY_STATUS__DSP_SDT__MASK                       0x3
#  define SRM_MMD30_DSP_READY_STATUS__DSP_SDT__OFFSET                     4
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfff3) | (((uint32_t)(fdata) << 2) & 0xc))
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD2__GET(rdata)                (((rdata) >> 2) & 0x3)
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD2__READ(die)                SRM_MMD30_DSP_READY_STATUS__RSRVD2__GET(SRM_MMD30_DSP_READY_STATUS__READ(die))
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD2__WRITE(die, fdata)           SRM_MMD30_DSP_READY_STATUS__RMW(die, (fdata)<<2, 0xc)
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD2__RMW(die, fdata)           SRM_MMD30_DSP_READY_STATUS__RMW(die, (fdata)<<2, 0xc)
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD2__MASK                       0x3
#  define SRM_MMD30_DSP_READY_STATUS__RSRVD2__OFFSET                     2
#  define SRM_MMD30_DSP_READY_STATUS__DSP_READY__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MMD30_DSP_READY_STATUS__DSP_READY__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MMD30_DSP_READY_STATUS__DSP_READY__READ(die)                SRM_MMD30_DSP_READY_STATUS__DSP_READY__GET(SRM_MMD30_DSP_READY_STATUS__READ(die))
#  define SRM_MMD30_DSP_READY_STATUS__DSP_READY__WRITE(die, fdata)           SRM_MMD30_DSP_READY_STATUS__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MMD30_DSP_READY_STATUS__DSP_READY__RMW(die, fdata)           SRM_MMD30_DSP_READY_STATUS__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MMD30_DSP_READY_STATUS__DSP_READY__MASK                       0x3
#  define SRM_MMD30_DSP_READY_STATUS__DSP_READY__OFFSET                     0

#define SRM_MMD30_CORE_CAP_STATUS__ADDRESS                      0x35
#define SRM_MMD30_CORE_CAP_STATUS__DEFAULT                      0x1100
#define SRM_MMD30_CORE_CAP_STATUS__READ(die)                  srm_reg_read(die, SRM_MMD30_CORE_CAP_STATUS__ADDRESS)
#define SRM_MMD30_CORE_CAP_STATUS__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_CORE_CAP_STATUS__ADDRESS, (data))
#define SRM_MMD30_CORE_CAP_STATUS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_CORE_CAP_STATUS__ADDRESS, (data), (mask))
#  define SRM_MMD30_CORE_CAP_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SRM_MMD30_CORE_CAP_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SRM_MMD30_CORE_CAP_STATUS__RSRVD1__READ(die)                SRM_MMD30_CORE_CAP_STATUS__RSRVD1__GET(SRM_MMD30_CORE_CAP_STATUS__READ(die))
#  define SRM_MMD30_CORE_CAP_STATUS__RSRVD1__WRITE(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<14, 0xc000)
#  define SRM_MMD30_CORE_CAP_STATUS__RSRVD1__RMW(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<14, 0xc000)
#  define SRM_MMD30_CORE_CAP_STATUS__RSRVD1__MASK                       0x3
#  define SRM_MMD30_CORE_CAP_STATUS__RSRVD1__OFFSET                     14
#  define SRM_MMD30_CORE_CAP_STATUS__RST_DISABLE__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_MMD30_CORE_CAP_STATUS__RST_DISABLE__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_MMD30_CORE_CAP_STATUS__RST_DISABLE__READ(die)                SRM_MMD30_CORE_CAP_STATUS__RST_DISABLE__GET(SRM_MMD30_CORE_CAP_STATUS__READ(die))
#  define SRM_MMD30_CORE_CAP_STATUS__RST_DISABLE__WRITE(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<13, 0x2000)
#  define SRM_MMD30_CORE_CAP_STATUS__RST_DISABLE__RMW(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<13, 0x2000)
#  define SRM_MMD30_CORE_CAP_STATUS__RST_DISABLE__MASK                       0x1
#  define SRM_MMD30_CORE_CAP_STATUS__RST_DISABLE__OFFSET                     13
#  define SRM_MMD30_CORE_CAP_STATUS__PRESCALE_DIV_SEL__SET(rdata, fdata)         (((rdata) & 0xe7ff) | (((uint32_t)(fdata) << 11) & 0x1800))
#  define SRM_MMD30_CORE_CAP_STATUS__PRESCALE_DIV_SEL__GET(rdata)                (((rdata) >> 11) & 0x3)
#  define SRM_MMD30_CORE_CAP_STATUS__PRESCALE_DIV_SEL__READ(die)                SRM_MMD30_CORE_CAP_STATUS__PRESCALE_DIV_SEL__GET(SRM_MMD30_CORE_CAP_STATUS__READ(die))
#  define SRM_MMD30_CORE_CAP_STATUS__PRESCALE_DIV_SEL__WRITE(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<11, 0x1800)
#  define SRM_MMD30_CORE_CAP_STATUS__PRESCALE_DIV_SEL__RMW(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<11, 0x1800)
#  define SRM_MMD30_CORE_CAP_STATUS__PRESCALE_DIV_SEL__MASK                       0x3
#  define SRM_MMD30_CORE_CAP_STATUS__PRESCALE_DIV_SEL__OFFSET                     11
#  define SRM_MMD30_CORE_CAP_STATUS__DIGCLK_SEL_OVR__SET(rdata, fdata)         (((rdata) & 0xf9ff) | (((uint32_t)(fdata) << 9) & 0x600))
#  define SRM_MMD30_CORE_CAP_STATUS__DIGCLK_SEL_OVR__GET(rdata)                (((rdata) >> 9) & 0x3)
#  define SRM_MMD30_CORE_CAP_STATUS__DIGCLK_SEL_OVR__READ(die)                SRM_MMD30_CORE_CAP_STATUS__DIGCLK_SEL_OVR__GET(SRM_MMD30_CORE_CAP_STATUS__READ(die))
#  define SRM_MMD30_CORE_CAP_STATUS__DIGCLK_SEL_OVR__WRITE(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<9, 0x600)
#  define SRM_MMD30_CORE_CAP_STATUS__DIGCLK_SEL_OVR__RMW(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<9, 0x600)
#  define SRM_MMD30_CORE_CAP_STATUS__DIGCLK_SEL_OVR__MASK                       0x3
#  define SRM_MMD30_CORE_CAP_STATUS__DIGCLK_SEL_OVR__OFFSET                     9
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_DIV__SET(rdata, fdata)         (((rdata) & 0xfe7f) | (((uint32_t)(fdata) << 7) & 0x180))
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_DIV__GET(rdata)                (((rdata) >> 7) & 0x3)
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_DIV__READ(die)                SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_DIV__GET(SRM_MMD30_CORE_CAP_STATUS__READ(die))
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_DIV__WRITE(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<7, 0x180)
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_DIV__RMW(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<7, 0x180)
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_DIV__MASK                       0x3
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_DIV__OFFSET                     7
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_SEL__SET(rdata, fdata)         (((rdata) & 0xff8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_SEL__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_SEL__READ(die)                SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_SEL__GET(SRM_MMD30_CORE_CAP_STATUS__READ(die))
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_SEL__WRITE(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<4, 0x70)
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_SEL__RMW(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<4, 0x70)
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_SEL__MASK                       0x7
#  define SRM_MMD30_CORE_CAP_STATUS__DIG_CLK_SEL__OFFSET                     4
#  define SRM_MMD30_CORE_CAP_STATUS__INTR_N__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MMD30_CORE_CAP_STATUS__INTR_N__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MMD30_CORE_CAP_STATUS__INTR_N__READ(die)                SRM_MMD30_CORE_CAP_STATUS__INTR_N__GET(SRM_MMD30_CORE_CAP_STATUS__READ(die))
#  define SRM_MMD30_CORE_CAP_STATUS__INTR_N__WRITE(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MMD30_CORE_CAP_STATUS__INTR_N__RMW(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MMD30_CORE_CAP_STATUS__INTR_N__MASK                       0x1
#  define SRM_MMD30_CORE_CAP_STATUS__INTR_N__OFFSET                     3
#  define SRM_MMD30_CORE_CAP_STATUS__TX1_SQUELCH__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MMD30_CORE_CAP_STATUS__TX1_SQUELCH__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MMD30_CORE_CAP_STATUS__TX1_SQUELCH__READ(die)                SRM_MMD30_CORE_CAP_STATUS__TX1_SQUELCH__GET(SRM_MMD30_CORE_CAP_STATUS__READ(die))
#  define SRM_MMD30_CORE_CAP_STATUS__TX1_SQUELCH__WRITE(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MMD30_CORE_CAP_STATUS__TX1_SQUELCH__RMW(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MMD30_CORE_CAP_STATUS__TX1_SQUELCH__MASK                       0x1
#  define SRM_MMD30_CORE_CAP_STATUS__TX1_SQUELCH__OFFSET                     2
#  define SRM_MMD30_CORE_CAP_STATUS__TX0_SQUELCH__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MMD30_CORE_CAP_STATUS__TX0_SQUELCH__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MMD30_CORE_CAP_STATUS__TX0_SQUELCH__READ(die)                SRM_MMD30_CORE_CAP_STATUS__TX0_SQUELCH__GET(SRM_MMD30_CORE_CAP_STATUS__READ(die))
#  define SRM_MMD30_CORE_CAP_STATUS__TX0_SQUELCH__WRITE(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MMD30_CORE_CAP_STATUS__TX0_SQUELCH__RMW(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MMD30_CORE_CAP_STATUS__TX0_SQUELCH__MASK                       0x1
#  define SRM_MMD30_CORE_CAP_STATUS__TX0_SQUELCH__OFFSET                     1
#  define SRM_MMD30_CORE_CAP_STATUS__SNAPSHOT_TRIG__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MMD30_CORE_CAP_STATUS__SNAPSHOT_TRIG__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MMD30_CORE_CAP_STATUS__SNAPSHOT_TRIG__READ(die)                SRM_MMD30_CORE_CAP_STATUS__SNAPSHOT_TRIG__GET(SRM_MMD30_CORE_CAP_STATUS__READ(die))
#  define SRM_MMD30_CORE_CAP_STATUS__SNAPSHOT_TRIG__WRITE(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_CORE_CAP_STATUS__SNAPSHOT_TRIG__RMW(die, fdata)           SRM_MMD30_CORE_CAP_STATUS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MMD30_CORE_CAP_STATUS__SNAPSHOT_TRIG__MASK                       0x1
#  define SRM_MMD30_CORE_CAP_STATUS__SNAPSHOT_TRIG__OFFSET                     0

#define SRM_MMD30_SCRATCH0__ADDRESS                      0x47
#define SRM_MMD30_SCRATCH0__DEFAULT                      0x0
#define SRM_MMD30_SCRATCH0__READ(die)                  srm_reg_read(die, SRM_MMD30_SCRATCH0__ADDRESS)
#define SRM_MMD30_SCRATCH0__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SCRATCH0__ADDRESS, (data))
#define SRM_MMD30_SCRATCH0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SCRATCH0__ADDRESS, (data), (mask))
#  define SRM_MMD30_SCRATCH0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SCRATCH0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SCRATCH0__VALUE__READ(die)                SRM_MMD30_SCRATCH0__VALUE__GET(SRM_MMD30_SCRATCH0__READ(die))
#  define SRM_MMD30_SCRATCH0__VALUE__WRITE(die, fdata)           SRM_MMD30_SCRATCH0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH0__VALUE__RMW(die, fdata)           SRM_MMD30_SCRATCH0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH0__VALUE__MASK                       0xffff
#  define SRM_MMD30_SCRATCH0__VALUE__OFFSET                     0

#define SRM_MMD30_SCRATCH1__ADDRESS                      0x48
#define SRM_MMD30_SCRATCH1__DEFAULT                      0x0
#define SRM_MMD30_SCRATCH1__READ(die)                  srm_reg_read(die, SRM_MMD30_SCRATCH1__ADDRESS)
#define SRM_MMD30_SCRATCH1__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SCRATCH1__ADDRESS, (data))
#define SRM_MMD30_SCRATCH1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SCRATCH1__ADDRESS, (data), (mask))
#  define SRM_MMD30_SCRATCH1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SCRATCH1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SCRATCH1__VALUE__READ(die)                SRM_MMD30_SCRATCH1__VALUE__GET(SRM_MMD30_SCRATCH1__READ(die))
#  define SRM_MMD30_SCRATCH1__VALUE__WRITE(die, fdata)           SRM_MMD30_SCRATCH1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH1__VALUE__RMW(die, fdata)           SRM_MMD30_SCRATCH1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH1__VALUE__MASK                       0xffff
#  define SRM_MMD30_SCRATCH1__VALUE__OFFSET                     0

#define SRM_MMD30_SCRATCH2__ADDRESS                      0x49
#define SRM_MMD30_SCRATCH2__DEFAULT                      0x0
#define SRM_MMD30_SCRATCH2__READ(die)                  srm_reg_read(die, SRM_MMD30_SCRATCH2__ADDRESS)
#define SRM_MMD30_SCRATCH2__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SCRATCH2__ADDRESS, (data))
#define SRM_MMD30_SCRATCH2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SCRATCH2__ADDRESS, (data), (mask))
#  define SRM_MMD30_SCRATCH2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SCRATCH2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SCRATCH2__VALUE__READ(die)                SRM_MMD30_SCRATCH2__VALUE__GET(SRM_MMD30_SCRATCH2__READ(die))
#  define SRM_MMD30_SCRATCH2__VALUE__WRITE(die, fdata)           SRM_MMD30_SCRATCH2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH2__VALUE__RMW(die, fdata)           SRM_MMD30_SCRATCH2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH2__VALUE__MASK                       0xffff
#  define SRM_MMD30_SCRATCH2__VALUE__OFFSET                     0

#define SRM_MMD30_SCRATCH3__ADDRESS                      0x4a
#define SRM_MMD30_SCRATCH3__DEFAULT                      0x0
#define SRM_MMD30_SCRATCH3__READ(die)                  srm_reg_read(die, SRM_MMD30_SCRATCH3__ADDRESS)
#define SRM_MMD30_SCRATCH3__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SCRATCH3__ADDRESS, (data))
#define SRM_MMD30_SCRATCH3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SCRATCH3__ADDRESS, (data), (mask))
#  define SRM_MMD30_SCRATCH3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SCRATCH3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SCRATCH3__VALUE__READ(die)                SRM_MMD30_SCRATCH3__VALUE__GET(SRM_MMD30_SCRATCH3__READ(die))
#  define SRM_MMD30_SCRATCH3__VALUE__WRITE(die, fdata)           SRM_MMD30_SCRATCH3__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH3__VALUE__RMW(die, fdata)           SRM_MMD30_SCRATCH3__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH3__VALUE__MASK                       0xffff
#  define SRM_MMD30_SCRATCH3__VALUE__OFFSET                     0

#define SRM_MMD30_SCRATCH4__ADDRESS                      0x4b
#define SRM_MMD30_SCRATCH4__DEFAULT                      0x0
#define SRM_MMD30_SCRATCH4__READ(die)                  srm_reg_read(die, SRM_MMD30_SCRATCH4__ADDRESS)
#define SRM_MMD30_SCRATCH4__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SCRATCH4__ADDRESS, (data))
#define SRM_MMD30_SCRATCH4__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SCRATCH4__ADDRESS, (data), (mask))
#  define SRM_MMD30_SCRATCH4__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SCRATCH4__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SCRATCH4__VALUE__READ(die)                SRM_MMD30_SCRATCH4__VALUE__GET(SRM_MMD30_SCRATCH4__READ(die))
#  define SRM_MMD30_SCRATCH4__VALUE__WRITE(die, fdata)           SRM_MMD30_SCRATCH4__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH4__VALUE__RMW(die, fdata)           SRM_MMD30_SCRATCH4__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH4__VALUE__MASK                       0xffff
#  define SRM_MMD30_SCRATCH4__VALUE__OFFSET                     0

#define SRM_MMD30_SCRATCH5__ADDRESS                      0x4c
#define SRM_MMD30_SCRATCH5__DEFAULT                      0x0
#define SRM_MMD30_SCRATCH5__READ(die)                  srm_reg_read(die, SRM_MMD30_SCRATCH5__ADDRESS)
#define SRM_MMD30_SCRATCH5__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SCRATCH5__ADDRESS, (data))
#define SRM_MMD30_SCRATCH5__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SCRATCH5__ADDRESS, (data), (mask))
#  define SRM_MMD30_SCRATCH5__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SCRATCH5__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SCRATCH5__VALUE__READ(die)                SRM_MMD30_SCRATCH5__VALUE__GET(SRM_MMD30_SCRATCH5__READ(die))
#  define SRM_MMD30_SCRATCH5__VALUE__WRITE(die, fdata)           SRM_MMD30_SCRATCH5__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH5__VALUE__RMW(die, fdata)           SRM_MMD30_SCRATCH5__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH5__VALUE__MASK                       0xffff
#  define SRM_MMD30_SCRATCH5__VALUE__OFFSET                     0

#define SRM_MMD30_SCRATCH6__ADDRESS                      0x4d
#define SRM_MMD30_SCRATCH6__DEFAULT                      0x0
#define SRM_MMD30_SCRATCH6__READ(die)                  srm_reg_read(die, SRM_MMD30_SCRATCH6__ADDRESS)
#define SRM_MMD30_SCRATCH6__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SCRATCH6__ADDRESS, (data))
#define SRM_MMD30_SCRATCH6__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SCRATCH6__ADDRESS, (data), (mask))
#  define SRM_MMD30_SCRATCH6__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SCRATCH6__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SCRATCH6__VALUE__READ(die)                SRM_MMD30_SCRATCH6__VALUE__GET(SRM_MMD30_SCRATCH6__READ(die))
#  define SRM_MMD30_SCRATCH6__VALUE__WRITE(die, fdata)           SRM_MMD30_SCRATCH6__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH6__VALUE__RMW(die, fdata)           SRM_MMD30_SCRATCH6__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH6__VALUE__MASK                       0xffff
#  define SRM_MMD30_SCRATCH6__VALUE__OFFSET                     0

#define SRM_MMD30_SCRATCH7__ADDRESS                      0x4e
#define SRM_MMD30_SCRATCH7__DEFAULT                      0x0
#define SRM_MMD30_SCRATCH7__READ(die)                  srm_reg_read(die, SRM_MMD30_SCRATCH7__ADDRESS)
#define SRM_MMD30_SCRATCH7__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SCRATCH7__ADDRESS, (data))
#define SRM_MMD30_SCRATCH7__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SCRATCH7__ADDRESS, (data), (mask))
#  define SRM_MMD30_SCRATCH7__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SCRATCH7__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SCRATCH7__VALUE__READ(die)                SRM_MMD30_SCRATCH7__VALUE__GET(SRM_MMD30_SCRATCH7__READ(die))
#  define SRM_MMD30_SCRATCH7__VALUE__WRITE(die, fdata)           SRM_MMD30_SCRATCH7__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH7__VALUE__RMW(die, fdata)           SRM_MMD30_SCRATCH7__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SCRATCH7__VALUE__MASK                       0xffff
#  define SRM_MMD30_SCRATCH7__VALUE__OFFSET                     0

#define SRM_MMD30_SELF_TEST0__ADDRESS                      0x4f
#define SRM_MMD30_SELF_TEST0__DEFAULT                      0x0
#define SRM_MMD30_SELF_TEST0__READ(die)                  srm_reg_read(die, SRM_MMD30_SELF_TEST0__ADDRESS)
#define SRM_MMD30_SELF_TEST0__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SELF_TEST0__ADDRESS, (data))
#define SRM_MMD30_SELF_TEST0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SELF_TEST0__ADDRESS, (data), (mask))
#  define SRM_MMD30_SELF_TEST0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SELF_TEST0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SELF_TEST0__VALUE__READ(die)                SRM_MMD30_SELF_TEST0__VALUE__GET(SRM_MMD30_SELF_TEST0__READ(die))
#  define SRM_MMD30_SELF_TEST0__VALUE__WRITE(die, fdata)           SRM_MMD30_SELF_TEST0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SELF_TEST0__VALUE__RMW(die, fdata)           SRM_MMD30_SELF_TEST0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SELF_TEST0__VALUE__MASK                       0xffff
#  define SRM_MMD30_SELF_TEST0__VALUE__OFFSET                     0

#define SRM_MMD30_SELF_TEST1__ADDRESS                      0x50
#define SRM_MMD30_SELF_TEST1__DEFAULT                      0x0
#define SRM_MMD30_SELF_TEST1__READ(die)                  srm_reg_read(die, SRM_MMD30_SELF_TEST1__ADDRESS)
#define SRM_MMD30_SELF_TEST1__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SELF_TEST1__ADDRESS, (data))
#define SRM_MMD30_SELF_TEST1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SELF_TEST1__ADDRESS, (data), (mask))
#  define SRM_MMD30_SELF_TEST1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SELF_TEST1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SELF_TEST1__VALUE__READ(die)                SRM_MMD30_SELF_TEST1__VALUE__GET(SRM_MMD30_SELF_TEST1__READ(die))
#  define SRM_MMD30_SELF_TEST1__VALUE__WRITE(die, fdata)           SRM_MMD30_SELF_TEST1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SELF_TEST1__VALUE__RMW(die, fdata)           SRM_MMD30_SELF_TEST1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SELF_TEST1__VALUE__MASK                       0xffff
#  define SRM_MMD30_SELF_TEST1__VALUE__OFFSET                     0

#define SRM_MMD30_SELF_TEST2__ADDRESS                      0x51
#define SRM_MMD30_SELF_TEST2__DEFAULT                      0x0
#define SRM_MMD30_SELF_TEST2__READ(die)                  srm_reg_read(die, SRM_MMD30_SELF_TEST2__ADDRESS)
#define SRM_MMD30_SELF_TEST2__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SELF_TEST2__ADDRESS, (data))
#define SRM_MMD30_SELF_TEST2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SELF_TEST2__ADDRESS, (data), (mask))
#  define SRM_MMD30_SELF_TEST2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SELF_TEST2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SELF_TEST2__VALUE__READ(die)                SRM_MMD30_SELF_TEST2__VALUE__GET(SRM_MMD30_SELF_TEST2__READ(die))
#  define SRM_MMD30_SELF_TEST2__VALUE__WRITE(die, fdata)           SRM_MMD30_SELF_TEST2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SELF_TEST2__VALUE__RMW(die, fdata)           SRM_MMD30_SELF_TEST2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SELF_TEST2__VALUE__MASK                       0xffff
#  define SRM_MMD30_SELF_TEST2__VALUE__OFFSET                     0

#define SRM_MMD30_SELF_TEST3__ADDRESS                      0x52
#define SRM_MMD30_SELF_TEST3__DEFAULT                      0x0
#define SRM_MMD30_SELF_TEST3__READ(die)                  srm_reg_read(die, SRM_MMD30_SELF_TEST3__ADDRESS)
#define SRM_MMD30_SELF_TEST3__WRITE(die, data)             srm_reg_write(die, SRM_MMD30_SELF_TEST3__ADDRESS, (data))
#define SRM_MMD30_SELF_TEST3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MMD30_SELF_TEST3__ADDRESS, (data), (mask))
#  define SRM_MMD30_SELF_TEST3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MMD30_SELF_TEST3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MMD30_SELF_TEST3__VALUE__READ(die)                SRM_MMD30_SELF_TEST3__VALUE__GET(SRM_MMD30_SELF_TEST3__READ(die))
#  define SRM_MMD30_SELF_TEST3__VALUE__WRITE(die, fdata)           SRM_MMD30_SELF_TEST3__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SELF_TEST3__VALUE__RMW(die, fdata)           SRM_MMD30_SELF_TEST3__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MMD30_SELF_TEST3__VALUE__MASK                       0xffff
#  define SRM_MMD30_SELF_TEST3__VALUE__OFFSET                     0

#define SRM_GPIO_OP_DRIVE_CFG__ADDRESS                      0x100
#define SRM_GPIO_OP_DRIVE_CFG__DEFAULT                      0x0
#define SRM_GPIO_OP_DRIVE_CFG__READ(die)                  srm_reg_read(die, SRM_GPIO_OP_DRIVE_CFG__ADDRESS)
#define SRM_GPIO_OP_DRIVE_CFG__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_OP_DRIVE_CFG__ADDRESS, (data))
#define SRM_GPIO_OP_DRIVE_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_OP_DRIVE_CFG__ADDRESS, (data), (mask))
#  define SRM_GPIO_OP_DRIVE_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xfff0))
#  define SRM_GPIO_OP_DRIVE_CFG__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xfff)
#  define SRM_GPIO_OP_DRIVE_CFG__RSRVD1__READ(die)                SRM_GPIO_OP_DRIVE_CFG__RSRVD1__GET(SRM_GPIO_OP_DRIVE_CFG__READ(die))
#  define SRM_GPIO_OP_DRIVE_CFG__RSRVD1__WRITE(die, fdata)           SRM_GPIO_OP_DRIVE_CFG__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_GPIO_OP_DRIVE_CFG__RSRVD1__RMW(die, fdata)           SRM_GPIO_OP_DRIVE_CFG__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_GPIO_OP_DRIVE_CFG__RSRVD1__MASK                       0xfff
#  define SRM_GPIO_OP_DRIVE_CFG__RSRVD1__OFFSET                     4
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO3_OUT__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO3_OUT__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO3_OUT__READ(die)                SRM_GPIO_OP_DRIVE_CFG__GPIO3_OUT__GET(SRM_GPIO_OP_DRIVE_CFG__READ(die))
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO3_OUT__WRITE(die, fdata)           SRM_GPIO_OP_DRIVE_CFG__RMW(die, (fdata)<<3, 0x8)
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO3_OUT__RMW(die, fdata)           SRM_GPIO_OP_DRIVE_CFG__RMW(die, (fdata)<<3, 0x8)
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO3_OUT__MASK                       0x1
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO3_OUT__OFFSET                     3
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO2_OUT__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO2_OUT__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO2_OUT__READ(die)                SRM_GPIO_OP_DRIVE_CFG__GPIO2_OUT__GET(SRM_GPIO_OP_DRIVE_CFG__READ(die))
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO2_OUT__WRITE(die, fdata)           SRM_GPIO_OP_DRIVE_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO2_OUT__RMW(die, fdata)           SRM_GPIO_OP_DRIVE_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO2_OUT__MASK                       0x1
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO2_OUT__OFFSET                     2
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO1_OUT__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO1_OUT__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO1_OUT__READ(die)                SRM_GPIO_OP_DRIVE_CFG__GPIO1_OUT__GET(SRM_GPIO_OP_DRIVE_CFG__READ(die))
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO1_OUT__WRITE(die, fdata)           SRM_GPIO_OP_DRIVE_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO1_OUT__RMW(die, fdata)           SRM_GPIO_OP_DRIVE_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO1_OUT__MASK                       0x1
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO1_OUT__OFFSET                     1
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO0_OUT__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO0_OUT__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO0_OUT__READ(die)                SRM_GPIO_OP_DRIVE_CFG__GPIO0_OUT__GET(SRM_GPIO_OP_DRIVE_CFG__READ(die))
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO0_OUT__WRITE(die, fdata)           SRM_GPIO_OP_DRIVE_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO0_OUT__RMW(die, fdata)           SRM_GPIO_OP_DRIVE_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO0_OUT__MASK                       0x1
#  define SRM_GPIO_OP_DRIVE_CFG__GPIO0_OUT__OFFSET                     0

#define SRM_GPIO_OP_EN_CFG__ADDRESS                      0x101
#define SRM_GPIO_OP_EN_CFG__DEFAULT                      0x0
#define SRM_GPIO_OP_EN_CFG__READ(die)                  srm_reg_read(die, SRM_GPIO_OP_EN_CFG__ADDRESS)
#define SRM_GPIO_OP_EN_CFG__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_OP_EN_CFG__ADDRESS, (data))
#define SRM_GPIO_OP_EN_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_OP_EN_CFG__ADDRESS, (data), (mask))
#  define SRM_GPIO_OP_EN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xfff0))
#  define SRM_GPIO_OP_EN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xfff)
#  define SRM_GPIO_OP_EN_CFG__RSRVD1__READ(die)                SRM_GPIO_OP_EN_CFG__RSRVD1__GET(SRM_GPIO_OP_EN_CFG__READ(die))
#  define SRM_GPIO_OP_EN_CFG__RSRVD1__WRITE(die, fdata)           SRM_GPIO_OP_EN_CFG__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_GPIO_OP_EN_CFG__RSRVD1__RMW(die, fdata)           SRM_GPIO_OP_EN_CFG__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_GPIO_OP_EN_CFG__RSRVD1__MASK                       0xfff
#  define SRM_GPIO_OP_EN_CFG__RSRVD1__OFFSET                     4
#  define SRM_GPIO_OP_EN_CFG__GPIO3_OUT_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_GPIO_OP_EN_CFG__GPIO3_OUT_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_GPIO_OP_EN_CFG__GPIO3_OUT_EN__READ(die)                SRM_GPIO_OP_EN_CFG__GPIO3_OUT_EN__GET(SRM_GPIO_OP_EN_CFG__READ(die))
#  define SRM_GPIO_OP_EN_CFG__GPIO3_OUT_EN__WRITE(die, fdata)           SRM_GPIO_OP_EN_CFG__RMW(die, (fdata)<<3, 0x8)
#  define SRM_GPIO_OP_EN_CFG__GPIO3_OUT_EN__RMW(die, fdata)           SRM_GPIO_OP_EN_CFG__RMW(die, (fdata)<<3, 0x8)
#  define SRM_GPIO_OP_EN_CFG__GPIO3_OUT_EN__MASK                       0x1
#  define SRM_GPIO_OP_EN_CFG__GPIO3_OUT_EN__OFFSET                     3
#  define SRM_GPIO_OP_EN_CFG__GPIO2_OUT_EN__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_GPIO_OP_EN_CFG__GPIO2_OUT_EN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_GPIO_OP_EN_CFG__GPIO2_OUT_EN__READ(die)                SRM_GPIO_OP_EN_CFG__GPIO2_OUT_EN__GET(SRM_GPIO_OP_EN_CFG__READ(die))
#  define SRM_GPIO_OP_EN_CFG__GPIO2_OUT_EN__WRITE(die, fdata)           SRM_GPIO_OP_EN_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SRM_GPIO_OP_EN_CFG__GPIO2_OUT_EN__RMW(die, fdata)           SRM_GPIO_OP_EN_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SRM_GPIO_OP_EN_CFG__GPIO2_OUT_EN__MASK                       0x1
#  define SRM_GPIO_OP_EN_CFG__GPIO2_OUT_EN__OFFSET                     2
#  define SRM_GPIO_OP_EN_CFG__GPIO1_OUT_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_GPIO_OP_EN_CFG__GPIO1_OUT_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_GPIO_OP_EN_CFG__GPIO1_OUT_EN__READ(die)                SRM_GPIO_OP_EN_CFG__GPIO1_OUT_EN__GET(SRM_GPIO_OP_EN_CFG__READ(die))
#  define SRM_GPIO_OP_EN_CFG__GPIO1_OUT_EN__WRITE(die, fdata)           SRM_GPIO_OP_EN_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_GPIO_OP_EN_CFG__GPIO1_OUT_EN__RMW(die, fdata)           SRM_GPIO_OP_EN_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_GPIO_OP_EN_CFG__GPIO1_OUT_EN__MASK                       0x1
#  define SRM_GPIO_OP_EN_CFG__GPIO1_OUT_EN__OFFSET                     1
#  define SRM_GPIO_OP_EN_CFG__GPIO0_OUT_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_GPIO_OP_EN_CFG__GPIO0_OUT_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_GPIO_OP_EN_CFG__GPIO0_OUT_EN__READ(die)                SRM_GPIO_OP_EN_CFG__GPIO0_OUT_EN__GET(SRM_GPIO_OP_EN_CFG__READ(die))
#  define SRM_GPIO_OP_EN_CFG__GPIO0_OUT_EN__WRITE(die, fdata)           SRM_GPIO_OP_EN_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_GPIO_OP_EN_CFG__GPIO0_OUT_EN__RMW(die, fdata)           SRM_GPIO_OP_EN_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_GPIO_OP_EN_CFG__GPIO0_OUT_EN__MASK                       0x1
#  define SRM_GPIO_OP_EN_CFG__GPIO0_OUT_EN__OFFSET                     0

#define SRM_GPIO_OP0_CFG__ADDRESS                      0x102
#define SRM_GPIO_OP0_CFG__DEFAULT                      0x0
#define SRM_GPIO_OP0_CFG__READ(die)                  srm_reg_read(die, SRM_GPIO_OP0_CFG__ADDRESS)
#define SRM_GPIO_OP0_CFG__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_OP0_CFG__ADDRESS, (data))
#define SRM_GPIO_OP0_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_OP0_CFG__ADDRESS, (data), (mask))
#  define SRM_GPIO_OP0_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_GPIO_OP0_CFG__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_GPIO_OP0_CFG__RSRVD1__READ(die)                SRM_GPIO_OP0_CFG__RSRVD1__GET(SRM_GPIO_OP0_CFG__READ(die))
#  define SRM_GPIO_OP0_CFG__RSRVD1__WRITE(die, fdata)           SRM_GPIO_OP0_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_GPIO_OP0_CFG__RSRVD1__RMW(die, fdata)           SRM_GPIO_OP0_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_GPIO_OP0_CFG__RSRVD1__MASK                       0x1
#  define SRM_GPIO_OP0_CFG__RSRVD1__OFFSET                     15
#  define SRM_GPIO_OP0_CFG__GPIO2_OP_SEL__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_GPIO_OP0_CFG__GPIO2_OP_SEL__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_GPIO_OP0_CFG__GPIO2_OP_SEL__READ(die)                SRM_GPIO_OP0_CFG__GPIO2_OP_SEL__GET(SRM_GPIO_OP0_CFG__READ(die))
#  define SRM_GPIO_OP0_CFG__GPIO2_OP_SEL__WRITE(die, fdata)           SRM_GPIO_OP0_CFG__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_GPIO_OP0_CFG__GPIO2_OP_SEL__RMW(die, fdata)           SRM_GPIO_OP0_CFG__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_GPIO_OP0_CFG__GPIO2_OP_SEL__MASK                       0x1f
#  define SRM_GPIO_OP0_CFG__GPIO2_OP_SEL__OFFSET                     10
#  define SRM_GPIO_OP0_CFG__GPIO1_OP_SEL__SET(rdata, fdata)         (((rdata) & 0xfc1f) | (((uint32_t)(fdata) << 5) & 0x3e0))
#  define SRM_GPIO_OP0_CFG__GPIO1_OP_SEL__GET(rdata)                (((rdata) >> 5) & 0x1f)
#  define SRM_GPIO_OP0_CFG__GPIO1_OP_SEL__READ(die)                SRM_GPIO_OP0_CFG__GPIO1_OP_SEL__GET(SRM_GPIO_OP0_CFG__READ(die))
#  define SRM_GPIO_OP0_CFG__GPIO1_OP_SEL__WRITE(die, fdata)           SRM_GPIO_OP0_CFG__RMW(die, (fdata)<<5, 0x3e0)
#  define SRM_GPIO_OP0_CFG__GPIO1_OP_SEL__RMW(die, fdata)           SRM_GPIO_OP0_CFG__RMW(die, (fdata)<<5, 0x3e0)
#  define SRM_GPIO_OP0_CFG__GPIO1_OP_SEL__MASK                       0x1f
#  define SRM_GPIO_OP0_CFG__GPIO1_OP_SEL__OFFSET                     5
#  define SRM_GPIO_OP0_CFG__GPIO0_OP_SEL__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SRM_GPIO_OP0_CFG__GPIO0_OP_SEL__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SRM_GPIO_OP0_CFG__GPIO0_OP_SEL__READ(die)                SRM_GPIO_OP0_CFG__GPIO0_OP_SEL__GET(SRM_GPIO_OP0_CFG__READ(die))
#  define SRM_GPIO_OP0_CFG__GPIO0_OP_SEL__WRITE(die, fdata)           SRM_GPIO_OP0_CFG__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_GPIO_OP0_CFG__GPIO0_OP_SEL__RMW(die, fdata)           SRM_GPIO_OP0_CFG__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_GPIO_OP0_CFG__GPIO0_OP_SEL__MASK                       0x1f
#  define SRM_GPIO_OP0_CFG__GPIO0_OP_SEL__OFFSET                     0

#define SRM_GPIO_OP1_CFG__ADDRESS                      0x103
#define SRM_GPIO_OP1_CFG__DEFAULT                      0x0
#define SRM_GPIO_OP1_CFG__READ(die)                  srm_reg_read(die, SRM_GPIO_OP1_CFG__ADDRESS)
#define SRM_GPIO_OP1_CFG__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_OP1_CFG__ADDRESS, (data))
#define SRM_GPIO_OP1_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_OP1_CFG__ADDRESS, (data), (mask))
#  define SRM_GPIO_OP1_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_GPIO_OP1_CFG__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_GPIO_OP1_CFG__RSRVD1__READ(die)                SRM_GPIO_OP1_CFG__RSRVD1__GET(SRM_GPIO_OP1_CFG__READ(die))
#  define SRM_GPIO_OP1_CFG__RSRVD1__WRITE(die, fdata)           SRM_GPIO_OP1_CFG__RMW(die, (fdata)<<5, 0xffe0)
#  define SRM_GPIO_OP1_CFG__RSRVD1__RMW(die, fdata)           SRM_GPIO_OP1_CFG__RMW(die, (fdata)<<5, 0xffe0)
#  define SRM_GPIO_OP1_CFG__RSRVD1__MASK                       0x7ff
#  define SRM_GPIO_OP1_CFG__RSRVD1__OFFSET                     5
#  define SRM_GPIO_OP1_CFG__GPIO3_OP_SEL__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SRM_GPIO_OP1_CFG__GPIO3_OP_SEL__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SRM_GPIO_OP1_CFG__GPIO3_OP_SEL__READ(die)                SRM_GPIO_OP1_CFG__GPIO3_OP_SEL__GET(SRM_GPIO_OP1_CFG__READ(die))
#  define SRM_GPIO_OP1_CFG__GPIO3_OP_SEL__WRITE(die, fdata)           SRM_GPIO_OP1_CFG__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_GPIO_OP1_CFG__GPIO3_OP_SEL__RMW(die, fdata)           SRM_GPIO_OP1_CFG__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_GPIO_OP1_CFG__GPIO3_OP_SEL__MASK                       0x1f
#  define SRM_GPIO_OP1_CFG__GPIO3_OP_SEL__OFFSET                     0

#define SRM_GPIO_IP0_CFG__ADDRESS                      0x104
#define SRM_GPIO_IP0_CFG__DEFAULT                      0x0
#define SRM_GPIO_IP0_CFG__READ(die)                  srm_reg_read(die, SRM_GPIO_IP0_CFG__ADDRESS)
#define SRM_GPIO_IP0_CFG__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_IP0_CFG__ADDRESS, (data))
#define SRM_GPIO_IP0_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_IP0_CFG__ADDRESS, (data), (mask))
#  define SRM_GPIO_IP0_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_GPIO_IP0_CFG__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_GPIO_IP0_CFG__RSRVD1__READ(die)                SRM_GPIO_IP0_CFG__RSRVD1__GET(SRM_GPIO_IP0_CFG__READ(die))
#  define SRM_GPIO_IP0_CFG__RSRVD1__WRITE(die, fdata)           SRM_GPIO_IP0_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_GPIO_IP0_CFG__RSRVD1__RMW(die, fdata)           SRM_GPIO_IP0_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_GPIO_IP0_CFG__RSRVD1__MASK                       0x1
#  define SRM_GPIO_IP0_CFG__RSRVD1__OFFSET                     15
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN3__SET(rdata, fdata)         (((rdata) & 0x8fff) | (((uint32_t)(fdata) << 12) & 0x7000))
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN3__GET(rdata)                (((rdata) >> 12) & 0x7)
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN3__READ(die)                SRM_GPIO_IP0_CFG__MCU_GPIO_IN3__GET(SRM_GPIO_IP0_CFG__READ(die))
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN3__WRITE(die, fdata)           SRM_GPIO_IP0_CFG__RMW(die, (fdata)<<12, 0x7000)
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN3__RMW(die, fdata)           SRM_GPIO_IP0_CFG__RMW(die, (fdata)<<12, 0x7000)
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN3__MASK                       0x7
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN3__OFFSET                     12
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN2__SET(rdata, fdata)         (((rdata) & 0xf1ff) | (((uint32_t)(fdata) << 9) & 0xe00))
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN2__GET(rdata)                (((rdata) >> 9) & 0x7)
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN2__READ(die)                SRM_GPIO_IP0_CFG__MCU_GPIO_IN2__GET(SRM_GPIO_IP0_CFG__READ(die))
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN2__WRITE(die, fdata)           SRM_GPIO_IP0_CFG__RMW(die, (fdata)<<9, 0xe00)
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN2__RMW(die, fdata)           SRM_GPIO_IP0_CFG__RMW(die, (fdata)<<9, 0xe00)
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN2__MASK                       0x7
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN2__OFFSET                     9
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN1__SET(rdata, fdata)         (((rdata) & 0xfe3f) | (((uint32_t)(fdata) << 6) & 0x1c0))
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN1__GET(rdata)                (((rdata) >> 6) & 0x7)
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN1__READ(die)                SRM_GPIO_IP0_CFG__MCU_GPIO_IN1__GET(SRM_GPIO_IP0_CFG__READ(die))
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN1__WRITE(die, fdata)           SRM_GPIO_IP0_CFG__RMW(die, (fdata)<<6, 0x1c0)
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN1__RMW(die, fdata)           SRM_GPIO_IP0_CFG__RMW(die, (fdata)<<6, 0x1c0)
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN1__MASK                       0x7
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN1__OFFSET                     6
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN0__SET(rdata, fdata)         (((rdata) & 0xffc7) | (((uint32_t)(fdata) << 3) & 0x38))
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN0__GET(rdata)                (((rdata) >> 3) & 0x7)
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN0__READ(die)                SRM_GPIO_IP0_CFG__MCU_GPIO_IN0__GET(SRM_GPIO_IP0_CFG__READ(die))
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN0__WRITE(die, fdata)           SRM_GPIO_IP0_CFG__RMW(die, (fdata)<<3, 0x38)
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN0__RMW(die, fdata)           SRM_GPIO_IP0_CFG__RMW(die, (fdata)<<3, 0x38)
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN0__MASK                       0x7
#  define SRM_GPIO_IP0_CFG__MCU_GPIO_IN0__OFFSET                     3
#  define SRM_GPIO_IP0_CFG__GPIO_SNAPSHOT_TRIG__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SRM_GPIO_IP0_CFG__GPIO_SNAPSHOT_TRIG__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SRM_GPIO_IP0_CFG__GPIO_SNAPSHOT_TRIG__READ(die)                SRM_GPIO_IP0_CFG__GPIO_SNAPSHOT_TRIG__GET(SRM_GPIO_IP0_CFG__READ(die))
#  define SRM_GPIO_IP0_CFG__GPIO_SNAPSHOT_TRIG__WRITE(die, fdata)           SRM_GPIO_IP0_CFG__RMW(die, (fdata)<<0, 0x7)
#  define SRM_GPIO_IP0_CFG__GPIO_SNAPSHOT_TRIG__RMW(die, fdata)           SRM_GPIO_IP0_CFG__RMW(die, (fdata)<<0, 0x7)
#  define SRM_GPIO_IP0_CFG__GPIO_SNAPSHOT_TRIG__MASK                       0x7
#  define SRM_GPIO_IP0_CFG__GPIO_SNAPSHOT_TRIG__OFFSET                     0

#define SRM_GPIO_IP1_CFG__ADDRESS                      0x105
#define SRM_GPIO_IP1_CFG__DEFAULT                      0x0
#define SRM_GPIO_IP1_CFG__READ(die)                  srm_reg_read(die, SRM_GPIO_IP1_CFG__ADDRESS)
#define SRM_GPIO_IP1_CFG__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_IP1_CFG__ADDRESS, (data))
#define SRM_GPIO_IP1_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_IP1_CFG__ADDRESS, (data), (mask))
#  define SRM_GPIO_IP1_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SRM_GPIO_IP1_CFG__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SRM_GPIO_IP1_CFG__RSRVD1__READ(die)                SRM_GPIO_IP1_CFG__RSRVD1__GET(SRM_GPIO_IP1_CFG__READ(die))
#  define SRM_GPIO_IP1_CFG__RSRVD1__WRITE(die, fdata)           SRM_GPIO_IP1_CFG__RMW(die, (fdata)<<3, 0xfff8)
#  define SRM_GPIO_IP1_CFG__RSRVD1__RMW(die, fdata)           SRM_GPIO_IP1_CFG__RMW(die, (fdata)<<3, 0xfff8)
#  define SRM_GPIO_IP1_CFG__RSRVD1__MASK                       0x1fff
#  define SRM_GPIO_IP1_CFG__RSRVD1__OFFSET                     3
#  define SRM_GPIO_IP1_CFG__GPIO_IN_CLK__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SRM_GPIO_IP1_CFG__GPIO_IN_CLK__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SRM_GPIO_IP1_CFG__GPIO_IN_CLK__READ(die)                SRM_GPIO_IP1_CFG__GPIO_IN_CLK__GET(SRM_GPIO_IP1_CFG__READ(die))
#  define SRM_GPIO_IP1_CFG__GPIO_IN_CLK__WRITE(die, fdata)           SRM_GPIO_IP1_CFG__RMW(die, (fdata)<<0, 0x7)
#  define SRM_GPIO_IP1_CFG__GPIO_IN_CLK__RMW(die, fdata)           SRM_GPIO_IP1_CFG__RMW(die, (fdata)<<0, 0x7)
#  define SRM_GPIO_IP1_CFG__GPIO_IN_CLK__MASK                       0x7
#  define SRM_GPIO_IP1_CFG__GPIO_IN_CLK__OFFSET                     0

#define SRM_GPIO_IP_INT__ADDRESS                      0x106
#define SRM_GPIO_IP_INT__DEFAULT                      0x0
#define SRM_GPIO_IP_INT__READ(die)                  srm_reg_read(die, SRM_GPIO_IP_INT__ADDRESS)
#define SRM_GPIO_IP_INT__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_IP_INT__ADDRESS, (data))
#define SRM_GPIO_IP_INT__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_IP_INT__ADDRESS, (data), (mask))
#  define SRM_GPIO_IP_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xfff0))
#  define SRM_GPIO_IP_INT__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xfff)
#  define SRM_GPIO_IP_INT__RSRVD1__READ(die)                SRM_GPIO_IP_INT__RSRVD1__GET(SRM_GPIO_IP_INT__READ(die))
#  define SRM_GPIO_IP_INT__RSRVD1__WRITE(die, fdata)           SRM_GPIO_IP_INT__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_GPIO_IP_INT__RSRVD1__RMW(die, fdata)           SRM_GPIO_IP_INT__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_GPIO_IP_INT__RSRVD1__MASK                       0xfff
#  define SRM_GPIO_IP_INT__RSRVD1__OFFSET                     4
#  define SRM_GPIO_IP_INT__GPIO3_EVENT__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_GPIO_IP_INT__GPIO3_EVENT__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_GPIO_IP_INT__GPIO3_EVENT__READ(die)                SRM_GPIO_IP_INT__GPIO3_EVENT__GET(SRM_GPIO_IP_INT__READ(die))
#  define SRM_GPIO_IP_INT__GPIO3_EVENT__WRITE(die, fdata)           SRM_GPIO_IP_INT__RMW(die, (fdata)<<3, 0x8)
#  define SRM_GPIO_IP_INT__GPIO3_EVENT__RMW(die, fdata)           SRM_GPIO_IP_INT__RMW(die, (fdata)<<3, 0x8)
#  define SRM_GPIO_IP_INT__GPIO3_EVENT__MASK                       0x1
#  define SRM_GPIO_IP_INT__GPIO3_EVENT__OFFSET                     3
#  define SRM_GPIO_IP_INT__GPIO2_EVENT__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_GPIO_IP_INT__GPIO2_EVENT__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_GPIO_IP_INT__GPIO2_EVENT__READ(die)                SRM_GPIO_IP_INT__GPIO2_EVENT__GET(SRM_GPIO_IP_INT__READ(die))
#  define SRM_GPIO_IP_INT__GPIO2_EVENT__WRITE(die, fdata)           SRM_GPIO_IP_INT__RMW(die, (fdata)<<2, 0x4)
#  define SRM_GPIO_IP_INT__GPIO2_EVENT__RMW(die, fdata)           SRM_GPIO_IP_INT__RMW(die, (fdata)<<2, 0x4)
#  define SRM_GPIO_IP_INT__GPIO2_EVENT__MASK                       0x1
#  define SRM_GPIO_IP_INT__GPIO2_EVENT__OFFSET                     2
#  define SRM_GPIO_IP_INT__GPIO1_EVENT__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_GPIO_IP_INT__GPIO1_EVENT__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_GPIO_IP_INT__GPIO1_EVENT__READ(die)                SRM_GPIO_IP_INT__GPIO1_EVENT__GET(SRM_GPIO_IP_INT__READ(die))
#  define SRM_GPIO_IP_INT__GPIO1_EVENT__WRITE(die, fdata)           SRM_GPIO_IP_INT__RMW(die, (fdata)<<1, 0x2)
#  define SRM_GPIO_IP_INT__GPIO1_EVENT__RMW(die, fdata)           SRM_GPIO_IP_INT__RMW(die, (fdata)<<1, 0x2)
#  define SRM_GPIO_IP_INT__GPIO1_EVENT__MASK                       0x1
#  define SRM_GPIO_IP_INT__GPIO1_EVENT__OFFSET                     1
#  define SRM_GPIO_IP_INT__GPIO0_EVENT__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_GPIO_IP_INT__GPIO0_EVENT__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_GPIO_IP_INT__GPIO0_EVENT__READ(die)                SRM_GPIO_IP_INT__GPIO0_EVENT__GET(SRM_GPIO_IP_INT__READ(die))
#  define SRM_GPIO_IP_INT__GPIO0_EVENT__WRITE(die, fdata)           SRM_GPIO_IP_INT__RMW(die, (fdata)<<0, 0x1)
#  define SRM_GPIO_IP_INT__GPIO0_EVENT__RMW(die, fdata)           SRM_GPIO_IP_INT__RMW(die, (fdata)<<0, 0x1)
#  define SRM_GPIO_IP_INT__GPIO0_EVENT__MASK                       0x1
#  define SRM_GPIO_IP_INT__GPIO0_EVENT__OFFSET                     0

#define SRM_GPIO_IP_INTE__ADDRESS                      0x107
#define SRM_GPIO_IP_INTE__DEFAULT                      0x0
#define SRM_GPIO_IP_INTE__READ(die)                  srm_reg_read(die, SRM_GPIO_IP_INTE__ADDRESS)
#define SRM_GPIO_IP_INTE__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_IP_INTE__ADDRESS, (data))
#define SRM_GPIO_IP_INTE__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_IP_INTE__ADDRESS, (data), (mask))
#  define SRM_GPIO_IP_INTE__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xfff0))
#  define SRM_GPIO_IP_INTE__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xfff)
#  define SRM_GPIO_IP_INTE__RSRVD1__READ(die)                SRM_GPIO_IP_INTE__RSRVD1__GET(SRM_GPIO_IP_INTE__READ(die))
#  define SRM_GPIO_IP_INTE__RSRVD1__WRITE(die, fdata)           SRM_GPIO_IP_INTE__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_GPIO_IP_INTE__RSRVD1__RMW(die, fdata)           SRM_GPIO_IP_INTE__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_GPIO_IP_INTE__RSRVD1__MASK                       0xfff
#  define SRM_GPIO_IP_INTE__RSRVD1__OFFSET                     4
#  define SRM_GPIO_IP_INTE__GPIO3_EVENTE__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_GPIO_IP_INTE__GPIO3_EVENTE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_GPIO_IP_INTE__GPIO3_EVENTE__READ(die)                SRM_GPIO_IP_INTE__GPIO3_EVENTE__GET(SRM_GPIO_IP_INTE__READ(die))
#  define SRM_GPIO_IP_INTE__GPIO3_EVENTE__WRITE(die, fdata)           SRM_GPIO_IP_INTE__RMW(die, (fdata)<<3, 0x8)
#  define SRM_GPIO_IP_INTE__GPIO3_EVENTE__RMW(die, fdata)           SRM_GPIO_IP_INTE__RMW(die, (fdata)<<3, 0x8)
#  define SRM_GPIO_IP_INTE__GPIO3_EVENTE__MASK                       0x1
#  define SRM_GPIO_IP_INTE__GPIO3_EVENTE__OFFSET                     3
#  define SRM_GPIO_IP_INTE__GPIO2_EVENTE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_GPIO_IP_INTE__GPIO2_EVENTE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_GPIO_IP_INTE__GPIO2_EVENTE__READ(die)                SRM_GPIO_IP_INTE__GPIO2_EVENTE__GET(SRM_GPIO_IP_INTE__READ(die))
#  define SRM_GPIO_IP_INTE__GPIO2_EVENTE__WRITE(die, fdata)           SRM_GPIO_IP_INTE__RMW(die, (fdata)<<2, 0x4)
#  define SRM_GPIO_IP_INTE__GPIO2_EVENTE__RMW(die, fdata)           SRM_GPIO_IP_INTE__RMW(die, (fdata)<<2, 0x4)
#  define SRM_GPIO_IP_INTE__GPIO2_EVENTE__MASK                       0x1
#  define SRM_GPIO_IP_INTE__GPIO2_EVENTE__OFFSET                     2
#  define SRM_GPIO_IP_INTE__GPIO1_EVENTE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_GPIO_IP_INTE__GPIO1_EVENTE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_GPIO_IP_INTE__GPIO1_EVENTE__READ(die)                SRM_GPIO_IP_INTE__GPIO1_EVENTE__GET(SRM_GPIO_IP_INTE__READ(die))
#  define SRM_GPIO_IP_INTE__GPIO1_EVENTE__WRITE(die, fdata)           SRM_GPIO_IP_INTE__RMW(die, (fdata)<<1, 0x2)
#  define SRM_GPIO_IP_INTE__GPIO1_EVENTE__RMW(die, fdata)           SRM_GPIO_IP_INTE__RMW(die, (fdata)<<1, 0x2)
#  define SRM_GPIO_IP_INTE__GPIO1_EVENTE__MASK                       0x1
#  define SRM_GPIO_IP_INTE__GPIO1_EVENTE__OFFSET                     1
#  define SRM_GPIO_IP_INTE__GPIO0_EVENTE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_GPIO_IP_INTE__GPIO0_EVENTE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_GPIO_IP_INTE__GPIO0_EVENTE__READ(die)                SRM_GPIO_IP_INTE__GPIO0_EVENTE__GET(SRM_GPIO_IP_INTE__READ(die))
#  define SRM_GPIO_IP_INTE__GPIO0_EVENTE__WRITE(die, fdata)           SRM_GPIO_IP_INTE__RMW(die, (fdata)<<0, 0x1)
#  define SRM_GPIO_IP_INTE__GPIO0_EVENTE__RMW(die, fdata)           SRM_GPIO_IP_INTE__RMW(die, (fdata)<<0, 0x1)
#  define SRM_GPIO_IP_INTE__GPIO0_EVENTE__MASK                       0x1
#  define SRM_GPIO_IP_INTE__GPIO0_EVENTE__OFFSET                     0

#define SRM_GPIO_IP_INTS__ADDRESS                      0x108
#define SRM_GPIO_IP_INTS__DEFAULT                      0x0
#define SRM_GPIO_IP_INTS__READ(die)                  srm_reg_read(die, SRM_GPIO_IP_INTS__ADDRESS)
#define SRM_GPIO_IP_INTS__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_IP_INTS__ADDRESS, (data))
#define SRM_GPIO_IP_INTS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_IP_INTS__ADDRESS, (data), (mask))
#  define SRM_GPIO_IP_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xfff0))
#  define SRM_GPIO_IP_INTS__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xfff)
#  define SRM_GPIO_IP_INTS__RSRVD1__READ(die)                SRM_GPIO_IP_INTS__RSRVD1__GET(SRM_GPIO_IP_INTS__READ(die))
#  define SRM_GPIO_IP_INTS__RSRVD1__WRITE(die, fdata)           SRM_GPIO_IP_INTS__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_GPIO_IP_INTS__RSRVD1__RMW(die, fdata)           SRM_GPIO_IP_INTS__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_GPIO_IP_INTS__RSRVD1__MASK                       0xfff
#  define SRM_GPIO_IP_INTS__RSRVD1__OFFSET                     4
#  define SRM_GPIO_IP_INTS__GPIO3_EVENTS__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_GPIO_IP_INTS__GPIO3_EVENTS__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_GPIO_IP_INTS__GPIO3_EVENTS__READ(die)                SRM_GPIO_IP_INTS__GPIO3_EVENTS__GET(SRM_GPIO_IP_INTS__READ(die))
#  define SRM_GPIO_IP_INTS__GPIO3_EVENTS__WRITE(die, fdata)           SRM_GPIO_IP_INTS__RMW(die, (fdata)<<3, 0x8)
#  define SRM_GPIO_IP_INTS__GPIO3_EVENTS__RMW(die, fdata)           SRM_GPIO_IP_INTS__RMW(die, (fdata)<<3, 0x8)
#  define SRM_GPIO_IP_INTS__GPIO3_EVENTS__MASK                       0x1
#  define SRM_GPIO_IP_INTS__GPIO3_EVENTS__OFFSET                     3
#  define SRM_GPIO_IP_INTS__GPIO2_EVENTS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_GPIO_IP_INTS__GPIO2_EVENTS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_GPIO_IP_INTS__GPIO2_EVENTS__READ(die)                SRM_GPIO_IP_INTS__GPIO2_EVENTS__GET(SRM_GPIO_IP_INTS__READ(die))
#  define SRM_GPIO_IP_INTS__GPIO2_EVENTS__WRITE(die, fdata)           SRM_GPIO_IP_INTS__RMW(die, (fdata)<<2, 0x4)
#  define SRM_GPIO_IP_INTS__GPIO2_EVENTS__RMW(die, fdata)           SRM_GPIO_IP_INTS__RMW(die, (fdata)<<2, 0x4)
#  define SRM_GPIO_IP_INTS__GPIO2_EVENTS__MASK                       0x1
#  define SRM_GPIO_IP_INTS__GPIO2_EVENTS__OFFSET                     2
#  define SRM_GPIO_IP_INTS__GPIO1_EVENTS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_GPIO_IP_INTS__GPIO1_EVENTS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_GPIO_IP_INTS__GPIO1_EVENTS__READ(die)                SRM_GPIO_IP_INTS__GPIO1_EVENTS__GET(SRM_GPIO_IP_INTS__READ(die))
#  define SRM_GPIO_IP_INTS__GPIO1_EVENTS__WRITE(die, fdata)           SRM_GPIO_IP_INTS__RMW(die, (fdata)<<1, 0x2)
#  define SRM_GPIO_IP_INTS__GPIO1_EVENTS__RMW(die, fdata)           SRM_GPIO_IP_INTS__RMW(die, (fdata)<<1, 0x2)
#  define SRM_GPIO_IP_INTS__GPIO1_EVENTS__MASK                       0x1
#  define SRM_GPIO_IP_INTS__GPIO1_EVENTS__OFFSET                     1
#  define SRM_GPIO_IP_INTS__GPIO0_EVENTS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_GPIO_IP_INTS__GPIO0_EVENTS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_GPIO_IP_INTS__GPIO0_EVENTS__READ(die)                SRM_GPIO_IP_INTS__GPIO0_EVENTS__GET(SRM_GPIO_IP_INTS__READ(die))
#  define SRM_GPIO_IP_INTS__GPIO0_EVENTS__WRITE(die, fdata)           SRM_GPIO_IP_INTS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_GPIO_IP_INTS__GPIO0_EVENTS__RMW(die, fdata)           SRM_GPIO_IP_INTS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_GPIO_IP_INTS__GPIO0_EVENTS__MASK                       0x1
#  define SRM_GPIO_IP_INTS__GPIO0_EVENTS__OFFSET                     0

#define SRM_GPIO_IP_INTZ__ADDRESS                      0x109
#define SRM_GPIO_IP_INTZ__DEFAULT                      0x0
#define SRM_GPIO_IP_INTZ__READ(die)                  srm_reg_read(die, SRM_GPIO_IP_INTZ__ADDRESS)
#define SRM_GPIO_IP_INTZ__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_IP_INTZ__ADDRESS, (data))
#define SRM_GPIO_IP_INTZ__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_IP_INTZ__ADDRESS, (data), (mask))
#  define SRM_GPIO_IP_INTZ__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xfff0))
#  define SRM_GPIO_IP_INTZ__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xfff)
#  define SRM_GPIO_IP_INTZ__RSRVD1__READ(die)                SRM_GPIO_IP_INTZ__RSRVD1__GET(SRM_GPIO_IP_INTZ__READ(die))
#  define SRM_GPIO_IP_INTZ__RSRVD1__WRITE(die, fdata)           SRM_GPIO_IP_INTZ__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_GPIO_IP_INTZ__RSRVD1__RMW(die, fdata)           SRM_GPIO_IP_INTZ__RMW(die, (fdata)<<4, 0xfff0)
#  define SRM_GPIO_IP_INTZ__RSRVD1__MASK                       0xfff
#  define SRM_GPIO_IP_INTZ__RSRVD1__OFFSET                     4
#  define SRM_GPIO_IP_INTZ__GPIO3_EVENTZ__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_GPIO_IP_INTZ__GPIO3_EVENTZ__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_GPIO_IP_INTZ__GPIO3_EVENTZ__READ(die)                SRM_GPIO_IP_INTZ__GPIO3_EVENTZ__GET(SRM_GPIO_IP_INTZ__READ(die))
#  define SRM_GPIO_IP_INTZ__GPIO3_EVENTZ__WRITE(die, fdata)           SRM_GPIO_IP_INTZ__RMW(die, (fdata)<<3, 0x8)
#  define SRM_GPIO_IP_INTZ__GPIO3_EVENTZ__RMW(die, fdata)           SRM_GPIO_IP_INTZ__RMW(die, (fdata)<<3, 0x8)
#  define SRM_GPIO_IP_INTZ__GPIO3_EVENTZ__MASK                       0x1
#  define SRM_GPIO_IP_INTZ__GPIO3_EVENTZ__OFFSET                     3
#  define SRM_GPIO_IP_INTZ__GPIO2_EVENTZ__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_GPIO_IP_INTZ__GPIO2_EVENTZ__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_GPIO_IP_INTZ__GPIO2_EVENTZ__READ(die)                SRM_GPIO_IP_INTZ__GPIO2_EVENTZ__GET(SRM_GPIO_IP_INTZ__READ(die))
#  define SRM_GPIO_IP_INTZ__GPIO2_EVENTZ__WRITE(die, fdata)           SRM_GPIO_IP_INTZ__RMW(die, (fdata)<<2, 0x4)
#  define SRM_GPIO_IP_INTZ__GPIO2_EVENTZ__RMW(die, fdata)           SRM_GPIO_IP_INTZ__RMW(die, (fdata)<<2, 0x4)
#  define SRM_GPIO_IP_INTZ__GPIO2_EVENTZ__MASK                       0x1
#  define SRM_GPIO_IP_INTZ__GPIO2_EVENTZ__OFFSET                     2
#  define SRM_GPIO_IP_INTZ__GPIO1_EVENTZ__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_GPIO_IP_INTZ__GPIO1_EVENTZ__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_GPIO_IP_INTZ__GPIO1_EVENTZ__READ(die)                SRM_GPIO_IP_INTZ__GPIO1_EVENTZ__GET(SRM_GPIO_IP_INTZ__READ(die))
#  define SRM_GPIO_IP_INTZ__GPIO1_EVENTZ__WRITE(die, fdata)           SRM_GPIO_IP_INTZ__RMW(die, (fdata)<<1, 0x2)
#  define SRM_GPIO_IP_INTZ__GPIO1_EVENTZ__RMW(die, fdata)           SRM_GPIO_IP_INTZ__RMW(die, (fdata)<<1, 0x2)
#  define SRM_GPIO_IP_INTZ__GPIO1_EVENTZ__MASK                       0x1
#  define SRM_GPIO_IP_INTZ__GPIO1_EVENTZ__OFFSET                     1
#  define SRM_GPIO_IP_INTZ__GPIO0_EVENTZ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_GPIO_IP_INTZ__GPIO0_EVENTZ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_GPIO_IP_INTZ__GPIO0_EVENTZ__READ(die)                SRM_GPIO_IP_INTZ__GPIO0_EVENTZ__GET(SRM_GPIO_IP_INTZ__READ(die))
#  define SRM_GPIO_IP_INTZ__GPIO0_EVENTZ__WRITE(die, fdata)           SRM_GPIO_IP_INTZ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_GPIO_IP_INTZ__GPIO0_EVENTZ__RMW(die, fdata)           SRM_GPIO_IP_INTZ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_GPIO_IP_INTZ__GPIO0_EVENTZ__MASK                       0x1
#  define SRM_GPIO_IP_INTZ__GPIO0_EVENTZ__OFFSET                     0

#define SRM_GPIO_TOGGLE0_CFG__ADDRESS                      0x10a
#define SRM_GPIO_TOGGLE0_CFG__DEFAULT                      0x0
#define SRM_GPIO_TOGGLE0_CFG__READ(die)                  srm_reg_read(die, SRM_GPIO_TOGGLE0_CFG__ADDRESS)
#define SRM_GPIO_TOGGLE0_CFG__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_TOGGLE0_CFG__ADDRESS, (data))
#define SRM_GPIO_TOGGLE0_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_TOGGLE0_CFG__ADDRESS, (data), (mask))
#  define SRM_GPIO_TOGGLE0_CFG__TOGGLE_COUNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_GPIO_TOGGLE0_CFG__TOGGLE_COUNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_GPIO_TOGGLE0_CFG__TOGGLE_COUNT__READ(die)                SRM_GPIO_TOGGLE0_CFG__TOGGLE_COUNT__GET(SRM_GPIO_TOGGLE0_CFG__READ(die))
#  define SRM_GPIO_TOGGLE0_CFG__TOGGLE_COUNT__WRITE(die, fdata)           SRM_GPIO_TOGGLE0_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_GPIO_TOGGLE0_CFG__TOGGLE_COUNT__RMW(die, fdata)           SRM_GPIO_TOGGLE0_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_GPIO_TOGGLE0_CFG__TOGGLE_COUNT__MASK                       0xffff
#  define SRM_GPIO_TOGGLE0_CFG__TOGGLE_COUNT__OFFSET                     0

#define SRM_GPIO_TOGGLE1_CFG__ADDRESS                      0x10b
#define SRM_GPIO_TOGGLE1_CFG__DEFAULT                      0x0
#define SRM_GPIO_TOGGLE1_CFG__READ(die)                  srm_reg_read(die, SRM_GPIO_TOGGLE1_CFG__ADDRESS)
#define SRM_GPIO_TOGGLE1_CFG__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_TOGGLE1_CFG__ADDRESS, (data))
#define SRM_GPIO_TOGGLE1_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_TOGGLE1_CFG__ADDRESS, (data), (mask))
#  define SRM_GPIO_TOGGLE1_CFG__TOGGLE_COUNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_GPIO_TOGGLE1_CFG__TOGGLE_COUNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_GPIO_TOGGLE1_CFG__TOGGLE_COUNT__READ(die)                SRM_GPIO_TOGGLE1_CFG__TOGGLE_COUNT__GET(SRM_GPIO_TOGGLE1_CFG__READ(die))
#  define SRM_GPIO_TOGGLE1_CFG__TOGGLE_COUNT__WRITE(die, fdata)           SRM_GPIO_TOGGLE1_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_GPIO_TOGGLE1_CFG__TOGGLE_COUNT__RMW(die, fdata)           SRM_GPIO_TOGGLE1_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_GPIO_TOGGLE1_CFG__TOGGLE_COUNT__MASK                       0xffff
#  define SRM_GPIO_TOGGLE1_CFG__TOGGLE_COUNT__OFFSET                     0

#define SRM_GPIO_TOGGLE2_CFG__ADDRESS                      0x10c
#define SRM_GPIO_TOGGLE2_CFG__DEFAULT                      0x0
#define SRM_GPIO_TOGGLE2_CFG__READ(die)                  srm_reg_read(die, SRM_GPIO_TOGGLE2_CFG__ADDRESS)
#define SRM_GPIO_TOGGLE2_CFG__WRITE(die, data)             srm_reg_write(die, SRM_GPIO_TOGGLE2_CFG__ADDRESS, (data))
#define SRM_GPIO_TOGGLE2_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_GPIO_TOGGLE2_CFG__ADDRESS, (data), (mask))
#  define SRM_GPIO_TOGGLE2_CFG__TOGGLE_COUNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_GPIO_TOGGLE2_CFG__TOGGLE_COUNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_GPIO_TOGGLE2_CFG__TOGGLE_COUNT__READ(die)                SRM_GPIO_TOGGLE2_CFG__TOGGLE_COUNT__GET(SRM_GPIO_TOGGLE2_CFG__READ(die))
#  define SRM_GPIO_TOGGLE2_CFG__TOGGLE_COUNT__WRITE(die, fdata)           SRM_GPIO_TOGGLE2_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_GPIO_TOGGLE2_CFG__TOGGLE_COUNT__RMW(die, fdata)           SRM_GPIO_TOGGLE2_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_GPIO_TOGGLE2_CFG__TOGGLE_COUNT__MASK                       0xffff
#  define SRM_GPIO_TOGGLE2_CFG__TOGGLE_COUNT__OFFSET                     0

#define SRM_LT_MSG_RESET__ADDRESS                      0x300
#define SRM_LT_MSG_RESET__DEFAULT                      0x0
#define SRM_LT_MSG_RESET__ICOUNT                        2
#define SRM_LT_MSG_RESET__ISPAN                         0x20
#define SRM_LT_MSG_RESET__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_RESET__ADDRESS)
#define SRM_LT_MSG_RESET__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_RESET__ADDRESS)
#define SRM_LT_MSG_RESET__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_RESET__ADDRESS, (data))
#define SRM_LT_MSG_RESET__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_RESET__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3ff) | (((uint32_t)(fdata) << 10) & 0xfc00))
#  define SRM_LT_MSG_RESET__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x3f)
#  define SRM_LT_MSG_RESET__RSRVD1__READ(die, channel)         SRM_LT_MSG_RESET__RSRVD1__GET(SRM_LT_MSG_RESET__READ(die, channel))
#  define SRM_LT_MSG_RESET__RSRVD1__WRITE(die, channel, fdata) SRM_LT_MSG_RESET__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SRM_LT_MSG_RESET__RSRVD1__RMW(die, channel, fdata) SRM_LT_MSG_RESET__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SRM_LT_MSG_RESET__RSRVD1__MASK                       0x3f
#  define SRM_LT_MSG_RESET__RSRVD1__OFFSET                     10
#  define SRM_LT_MSG_RESET__TX_MSG_FIFO__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_LT_MSG_RESET__TX_MSG_FIFO__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_LT_MSG_RESET__TX_MSG_FIFO__READ(die, channel)         SRM_LT_MSG_RESET__TX_MSG_FIFO__GET(SRM_LT_MSG_RESET__READ(die, channel))
#  define SRM_LT_MSG_RESET__TX_MSG_FIFO__WRITE(die, channel, fdata) SRM_LT_MSG_RESET__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_LT_MSG_RESET__TX_MSG_FIFO__RMW(die, channel, fdata) SRM_LT_MSG_RESET__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_LT_MSG_RESET__TX_MSG_FIFO__MASK                       0x1
#  define SRM_LT_MSG_RESET__TX_MSG_FIFO__OFFSET                     9
#  define SRM_LT_MSG_RESET__RX_MSG_FIFO__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_LT_MSG_RESET__RX_MSG_FIFO__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_LT_MSG_RESET__RX_MSG_FIFO__READ(die, channel)         SRM_LT_MSG_RESET__RX_MSG_FIFO__GET(SRM_LT_MSG_RESET__READ(die, channel))
#  define SRM_LT_MSG_RESET__RX_MSG_FIFO__WRITE(die, channel, fdata) SRM_LT_MSG_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_LT_MSG_RESET__RX_MSG_FIFO__RMW(die, channel, fdata) SRM_LT_MSG_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_LT_MSG_RESET__RX_MSG_FIFO__MASK                       0x1
#  define SRM_LT_MSG_RESET__RX_MSG_FIFO__OFFSET                     8
#  define SRM_LT_MSG_RESET__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff03) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SRM_LT_MSG_RESET__RSRVD2__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SRM_LT_MSG_RESET__RSRVD2__READ(die, channel)         SRM_LT_MSG_RESET__RSRVD2__GET(SRM_LT_MSG_RESET__READ(die, channel))
#  define SRM_LT_MSG_RESET__RSRVD2__WRITE(die, channel, fdata) SRM_LT_MSG_RESET__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SRM_LT_MSG_RESET__RSRVD2__RMW(die, channel, fdata) SRM_LT_MSG_RESET__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SRM_LT_MSG_RESET__RSRVD2__MASK                       0x3f
#  define SRM_LT_MSG_RESET__RSRVD2__OFFSET                     2
#  define SRM_LT_MSG_RESET__TX__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_LT_MSG_RESET__TX__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_LT_MSG_RESET__TX__READ(die, channel)         SRM_LT_MSG_RESET__TX__GET(SRM_LT_MSG_RESET__READ(die, channel))
#  define SRM_LT_MSG_RESET__TX__WRITE(die, channel, fdata) SRM_LT_MSG_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_RESET__TX__RMW(die, channel, fdata) SRM_LT_MSG_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_RESET__TX__MASK                       0x1
#  define SRM_LT_MSG_RESET__TX__OFFSET                     1
#  define SRM_LT_MSG_RESET__RX__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_LT_MSG_RESET__RX__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_LT_MSG_RESET__RX__READ(die, channel)         SRM_LT_MSG_RESET__RX__GET(SRM_LT_MSG_RESET__READ(die, channel))
#  define SRM_LT_MSG_RESET__RX__WRITE(die, channel, fdata) SRM_LT_MSG_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_RESET__RX__RMW(die, channel, fdata) SRM_LT_MSG_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_RESET__RX__MASK                       0x1
#  define SRM_LT_MSG_RESET__RX__OFFSET                     0

#define SRM_LT_MSG_GEN_CFG__ADDRESS                      0x301
#define SRM_LT_MSG_GEN_CFG__DEFAULT                      0x0
#define SRM_LT_MSG_GEN_CFG__ICOUNT                        2
#define SRM_LT_MSG_GEN_CFG__ISPAN                         0x20
#define SRM_LT_MSG_GEN_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_GEN_CFG__ADDRESS)
#define SRM_LT_MSG_GEN_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_GEN_CFG__ADDRESS)
#define SRM_LT_MSG_GEN_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_GEN_CFG__ADDRESS, (data))
#define SRM_LT_MSG_GEN_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_GEN_CFG__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_GEN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_LT_MSG_GEN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_LT_MSG_GEN_CFG__RSRVD1__READ(die, channel)         SRM_LT_MSG_GEN_CFG__RSRVD1__GET(SRM_LT_MSG_GEN_CFG__READ(die, channel))
#  define SRM_LT_MSG_GEN_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_LT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_LT_MSG_GEN_CFG__RSRVD1__RMW(die, channel, fdata) SRM_LT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_LT_MSG_GEN_CFG__RSRVD1__MASK                       0x3fff
#  define SRM_LT_MSG_GEN_CFG__RSRVD1__OFFSET                     2
#  define SRM_LT_MSG_GEN_CFG__EN_RX_DESER__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_LT_MSG_GEN_CFG__EN_RX_DESER__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_LT_MSG_GEN_CFG__EN_RX_DESER__READ(die, channel)         SRM_LT_MSG_GEN_CFG__EN_RX_DESER__GET(SRM_LT_MSG_GEN_CFG__READ(die, channel))
#  define SRM_LT_MSG_GEN_CFG__EN_RX_DESER__WRITE(die, channel, fdata) SRM_LT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_GEN_CFG__EN_RX_DESER__RMW(die, channel, fdata) SRM_LT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_GEN_CFG__EN_RX_DESER__MASK                       0x1
#  define SRM_LT_MSG_GEN_CFG__EN_RX_DESER__OFFSET                     1
#  define SRM_LT_MSG_GEN_CFG__EN_TX_SER__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_LT_MSG_GEN_CFG__EN_TX_SER__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_LT_MSG_GEN_CFG__EN_TX_SER__READ(die, channel)         SRM_LT_MSG_GEN_CFG__EN_TX_SER__GET(SRM_LT_MSG_GEN_CFG__READ(die, channel))
#  define SRM_LT_MSG_GEN_CFG__EN_TX_SER__WRITE(die, channel, fdata) SRM_LT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_GEN_CFG__EN_TX_SER__RMW(die, channel, fdata) SRM_LT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_GEN_CFG__EN_TX_SER__MASK                       0x1
#  define SRM_LT_MSG_GEN_CFG__EN_TX_SER__OFFSET                     0

#define SRM_LT_MSG_TX_MSG_DATA0__ADDRESS                      0x302
#define SRM_LT_MSG_TX_MSG_DATA0__DEFAULT                      0x0
#define SRM_LT_MSG_TX_MSG_DATA0__ICOUNT                        2
#define SRM_LT_MSG_TX_MSG_DATA0__ISPAN                         0x20
#define SRM_LT_MSG_TX_MSG_DATA0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_TX_MSG_DATA0__ADDRESS)
#define SRM_LT_MSG_TX_MSG_DATA0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_TX_MSG_DATA0__ADDRESS)
#define SRM_LT_MSG_TX_MSG_DATA0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_TX_MSG_DATA0__ADDRESS, (data))
#define SRM_LT_MSG_TX_MSG_DATA0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_TX_MSG_DATA0__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_TX_MSG_DATA0__MSG0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_LT_MSG_TX_MSG_DATA0__MSG0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_LT_MSG_TX_MSG_DATA0__MSG0__READ(die, channel)         SRM_LT_MSG_TX_MSG_DATA0__MSG0__GET(SRM_LT_MSG_TX_MSG_DATA0__READ(die, channel))
#  define SRM_LT_MSG_TX_MSG_DATA0__MSG0__WRITE(die, channel, fdata) SRM_LT_MSG_TX_MSG_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_TX_MSG_DATA0__MSG0__RMW(die, channel, fdata) SRM_LT_MSG_TX_MSG_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_TX_MSG_DATA0__MSG0__MASK                       0xffff
#  define SRM_LT_MSG_TX_MSG_DATA0__MSG0__OFFSET                     0

#define SRM_LT_MSG_TX_MSG_DATA1__ADDRESS                      0x303
#define SRM_LT_MSG_TX_MSG_DATA1__DEFAULT                      0x0
#define SRM_LT_MSG_TX_MSG_DATA1__ICOUNT                        2
#define SRM_LT_MSG_TX_MSG_DATA1__ISPAN                         0x20
#define SRM_LT_MSG_TX_MSG_DATA1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_TX_MSG_DATA1__ADDRESS)
#define SRM_LT_MSG_TX_MSG_DATA1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_TX_MSG_DATA1__ADDRESS)
#define SRM_LT_MSG_TX_MSG_DATA1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_TX_MSG_DATA1__ADDRESS, (data))
#define SRM_LT_MSG_TX_MSG_DATA1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_TX_MSG_DATA1__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_TX_MSG_DATA1__MSG1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_LT_MSG_TX_MSG_DATA1__MSG1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_LT_MSG_TX_MSG_DATA1__MSG1__READ(die, channel)         SRM_LT_MSG_TX_MSG_DATA1__MSG1__GET(SRM_LT_MSG_TX_MSG_DATA1__READ(die, channel))
#  define SRM_LT_MSG_TX_MSG_DATA1__MSG1__WRITE(die, channel, fdata) SRM_LT_MSG_TX_MSG_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_TX_MSG_DATA1__MSG1__RMW(die, channel, fdata) SRM_LT_MSG_TX_MSG_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_TX_MSG_DATA1__MSG1__MASK                       0xffff
#  define SRM_LT_MSG_TX_MSG_DATA1__MSG1__OFFSET                     0

#define SRM_LT_MSG_TX_FIFO_STATUS__ADDRESS                      0x304
#define SRM_LT_MSG_TX_FIFO_STATUS__DEFAULT                      0x2
#define SRM_LT_MSG_TX_FIFO_STATUS__ICOUNT                        2
#define SRM_LT_MSG_TX_FIFO_STATUS__ISPAN                         0x20
#define SRM_LT_MSG_TX_FIFO_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_TX_FIFO_STATUS__ADDRESS)
#define SRM_LT_MSG_TX_FIFO_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_TX_FIFO_STATUS__ADDRESS)
#define SRM_LT_MSG_TX_FIFO_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_TX_FIFO_STATUS__ADDRESS, (data))
#define SRM_LT_MSG_TX_FIFO_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_TX_FIFO_STATUS__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_TX_FIFO_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xffc0))
#  define SRM_LT_MSG_TX_FIFO_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3ff)
#  define SRM_LT_MSG_TX_FIFO_STATUS__RSRVD1__READ(die, channel)         SRM_LT_MSG_TX_FIFO_STATUS__RSRVD1__GET(SRM_LT_MSG_TX_FIFO_STATUS__READ(die, channel))
#  define SRM_LT_MSG_TX_FIFO_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_LT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SRM_LT_MSG_TX_FIFO_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_LT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SRM_LT_MSG_TX_FIFO_STATUS__RSRVD1__MASK                       0x3ff
#  define SRM_LT_MSG_TX_FIFO_STATUS__RSRVD1__OFFSET                     6
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__SET(rdata, fdata)         (((rdata) & 0xffc3) | (((uint32_t)(fdata) << 2) & 0x3c))
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__GET(rdata)                (((rdata) >> 2) & 0xf)
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__READ(die, channel)         SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__GET(SRM_LT_MSG_TX_FIFO_STATUS__READ(die, channel))
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__WRITE(die, channel, fdata) SRM_LT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<2, 0x3c)
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__RMW(die, channel, fdata) SRM_LT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<2, 0x3c)
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__MASK                       0xf
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__OFFSET                     2
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__READ(die, channel)         SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__GET(SRM_LT_MSG_TX_FIFO_STATUS__READ(die, channel))
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__WRITE(die, channel, fdata) SRM_LT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__RMW(die, channel, fdata) SRM_LT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__MASK                       0x1
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__OFFSET                     1
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__READ(die, channel)         SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__GET(SRM_LT_MSG_TX_FIFO_STATUS__READ(die, channel))
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__WRITE(die, channel, fdata) SRM_LT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__RMW(die, channel, fdata) SRM_LT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__MASK                       0x1
#  define SRM_LT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__OFFSET                     0

#define SRM_LT_MSG_RX_FIFO_STATUS__ADDRESS                      0x305
#define SRM_LT_MSG_RX_FIFO_STATUS__DEFAULT                      0x2
#define SRM_LT_MSG_RX_FIFO_STATUS__ICOUNT                        2
#define SRM_LT_MSG_RX_FIFO_STATUS__ISPAN                         0x20
#define SRM_LT_MSG_RX_FIFO_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_RX_FIFO_STATUS__ADDRESS)
#define SRM_LT_MSG_RX_FIFO_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_RX_FIFO_STATUS__ADDRESS)
#define SRM_LT_MSG_RX_FIFO_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_RX_FIFO_STATUS__ADDRESS, (data))
#define SRM_LT_MSG_RX_FIFO_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_RX_FIFO_STATUS__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_RX_FIFO_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SRM_LT_MSG_RX_FIFO_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SRM_LT_MSG_RX_FIFO_STATUS__RSRVD1__READ(die, channel)         SRM_LT_MSG_RX_FIFO_STATUS__RSRVD1__GET(SRM_LT_MSG_RX_FIFO_STATUS__READ(die, channel))
#  define SRM_LT_MSG_RX_FIFO_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_LT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_LT_MSG_RX_FIFO_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_LT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_LT_MSG_RX_FIFO_STATUS__RSRVD1__MASK                       0x1ff
#  define SRM_LT_MSG_RX_FIFO_STATUS__RSRVD1__OFFSET                     7
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__SET(rdata, fdata)         (((rdata) & 0xff83) | (((uint32_t)(fdata) << 2) & 0x7c))
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__GET(rdata)                (((rdata) >> 2) & 0x1f)
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__READ(die, channel)         SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__GET(SRM_LT_MSG_RX_FIFO_STATUS__READ(die, channel))
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__WRITE(die, channel, fdata) SRM_LT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<2, 0x7c)
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__RMW(die, channel, fdata) SRM_LT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<2, 0x7c)
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__MASK                       0x1f
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__OFFSET                     2
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__READ(die, channel)         SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__GET(SRM_LT_MSG_RX_FIFO_STATUS__READ(die, channel))
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__WRITE(die, channel, fdata) SRM_LT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__RMW(die, channel, fdata) SRM_LT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__MASK                       0x1
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__OFFSET                     1
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__READ(die, channel)         SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__GET(SRM_LT_MSG_RX_FIFO_STATUS__READ(die, channel))
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__WRITE(die, channel, fdata) SRM_LT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__RMW(die, channel, fdata) SRM_LT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__MASK                       0x1
#  define SRM_LT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__OFFSET                     0

#define SRM_LT_MSG_RX_MSG_POP__ADDRESS                      0x306
#define SRM_LT_MSG_RX_MSG_POP__DEFAULT                      0x0
#define SRM_LT_MSG_RX_MSG_POP__ICOUNT                        2
#define SRM_LT_MSG_RX_MSG_POP__ISPAN                         0x20
#define SRM_LT_MSG_RX_MSG_POP__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_RX_MSG_POP__ADDRESS)
#define SRM_LT_MSG_RX_MSG_POP__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_RX_MSG_POP__ADDRESS)
#define SRM_LT_MSG_RX_MSG_POP__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_RX_MSG_POP__ADDRESS, (data))
#define SRM_LT_MSG_RX_MSG_POP__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_RX_MSG_POP__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_RX_MSG_POP__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_LT_MSG_RX_MSG_POP__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_LT_MSG_RX_MSG_POP__RSRVD1__READ(die, channel)         SRM_LT_MSG_RX_MSG_POP__RSRVD1__GET(SRM_LT_MSG_RX_MSG_POP__READ(die, channel))
#  define SRM_LT_MSG_RX_MSG_POP__RSRVD1__WRITE(die, channel, fdata) SRM_LT_MSG_RX_MSG_POP__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_LT_MSG_RX_MSG_POP__RSRVD1__RMW(die, channel, fdata) SRM_LT_MSG_RX_MSG_POP__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_LT_MSG_RX_MSG_POP__RSRVD1__MASK                       0x7fff
#  define SRM_LT_MSG_RX_MSG_POP__RSRVD1__OFFSET                     1
#  define SRM_LT_MSG_RX_MSG_POP__POP__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_LT_MSG_RX_MSG_POP__POP__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_LT_MSG_RX_MSG_POP__POP__READ(die, channel)         SRM_LT_MSG_RX_MSG_POP__POP__GET(SRM_LT_MSG_RX_MSG_POP__READ(die, channel))
#  define SRM_LT_MSG_RX_MSG_POP__POP__WRITE(die, channel, fdata) SRM_LT_MSG_RX_MSG_POP__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_RX_MSG_POP__POP__RMW(die, channel, fdata) SRM_LT_MSG_RX_MSG_POP__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_RX_MSG_POP__POP__MASK                       0x1
#  define SRM_LT_MSG_RX_MSG_POP__POP__OFFSET                     0

#define SRM_LT_MSG_RX_MSG_STATUS__ADDRESS                      0x307
#define SRM_LT_MSG_RX_MSG_STATUS__DEFAULT                      0x0
#define SRM_LT_MSG_RX_MSG_STATUS__ICOUNT                        2
#define SRM_LT_MSG_RX_MSG_STATUS__ISPAN                         0x20
#define SRM_LT_MSG_RX_MSG_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_RX_MSG_STATUS__ADDRESS)
#define SRM_LT_MSG_RX_MSG_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_RX_MSG_STATUS__ADDRESS)
#define SRM_LT_MSG_RX_MSG_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_RX_MSG_STATUS__ADDRESS, (data))
#define SRM_LT_MSG_RX_MSG_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_RX_MSG_STATUS__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_RX_MSG_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_LT_MSG_RX_MSG_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_LT_MSG_RX_MSG_STATUS__RSRVD1__READ(die, channel)         SRM_LT_MSG_RX_MSG_STATUS__RSRVD1__GET(SRM_LT_MSG_RX_MSG_STATUS__READ(die, channel))
#  define SRM_LT_MSG_RX_MSG_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_LT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_LT_MSG_RX_MSG_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_LT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_LT_MSG_RX_MSG_STATUS__RSRVD1__MASK                       0x3fff
#  define SRM_LT_MSG_RX_MSG_STATUS__RSRVD1__OFFSET                     2
#  define SRM_LT_MSG_RX_MSG_STATUS__ERR__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_LT_MSG_RX_MSG_STATUS__ERR__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_LT_MSG_RX_MSG_STATUS__ERR__READ(die, channel)         SRM_LT_MSG_RX_MSG_STATUS__ERR__GET(SRM_LT_MSG_RX_MSG_STATUS__READ(die, channel))
#  define SRM_LT_MSG_RX_MSG_STATUS__ERR__WRITE(die, channel, fdata) SRM_LT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_RX_MSG_STATUS__ERR__RMW(die, channel, fdata) SRM_LT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_RX_MSG_STATUS__ERR__MASK                       0x1
#  define SRM_LT_MSG_RX_MSG_STATUS__ERR__OFFSET                     1
#  define SRM_LT_MSG_RX_MSG_STATUS__VALID__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_LT_MSG_RX_MSG_STATUS__VALID__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_LT_MSG_RX_MSG_STATUS__VALID__READ(die, channel)         SRM_LT_MSG_RX_MSG_STATUS__VALID__GET(SRM_LT_MSG_RX_MSG_STATUS__READ(die, channel))
#  define SRM_LT_MSG_RX_MSG_STATUS__VALID__WRITE(die, channel, fdata) SRM_LT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_RX_MSG_STATUS__VALID__RMW(die, channel, fdata) SRM_LT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_RX_MSG_STATUS__VALID__MASK                       0x1
#  define SRM_LT_MSG_RX_MSG_STATUS__VALID__OFFSET                     0

#define SRM_LT_MSG_RX_MSG_DATA0__ADDRESS                      0x308
#define SRM_LT_MSG_RX_MSG_DATA0__DEFAULT                      0x0
#define SRM_LT_MSG_RX_MSG_DATA0__ICOUNT                        2
#define SRM_LT_MSG_RX_MSG_DATA0__ISPAN                         0x20
#define SRM_LT_MSG_RX_MSG_DATA0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_RX_MSG_DATA0__ADDRESS)
#define SRM_LT_MSG_RX_MSG_DATA0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_RX_MSG_DATA0__ADDRESS)
#define SRM_LT_MSG_RX_MSG_DATA0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_RX_MSG_DATA0__ADDRESS, (data))
#define SRM_LT_MSG_RX_MSG_DATA0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_RX_MSG_DATA0__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_RX_MSG_DATA0__MSG0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_LT_MSG_RX_MSG_DATA0__MSG0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_LT_MSG_RX_MSG_DATA0__MSG0__READ(die, channel)         SRM_LT_MSG_RX_MSG_DATA0__MSG0__GET(SRM_LT_MSG_RX_MSG_DATA0__READ(die, channel))
#  define SRM_LT_MSG_RX_MSG_DATA0__MSG0__WRITE(die, channel, fdata) SRM_LT_MSG_RX_MSG_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_RX_MSG_DATA0__MSG0__RMW(die, channel, fdata) SRM_LT_MSG_RX_MSG_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_RX_MSG_DATA0__MSG0__MASK                       0xffff
#  define SRM_LT_MSG_RX_MSG_DATA0__MSG0__OFFSET                     0

#define SRM_LT_MSG_RX_MSG_DATA1__ADDRESS                      0x309
#define SRM_LT_MSG_RX_MSG_DATA1__DEFAULT                      0x0
#define SRM_LT_MSG_RX_MSG_DATA1__ICOUNT                        2
#define SRM_LT_MSG_RX_MSG_DATA1__ISPAN                         0x20
#define SRM_LT_MSG_RX_MSG_DATA1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_RX_MSG_DATA1__ADDRESS)
#define SRM_LT_MSG_RX_MSG_DATA1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_RX_MSG_DATA1__ADDRESS)
#define SRM_LT_MSG_RX_MSG_DATA1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_RX_MSG_DATA1__ADDRESS, (data))
#define SRM_LT_MSG_RX_MSG_DATA1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_RX_MSG_DATA1__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_RX_MSG_DATA1__MSG1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_LT_MSG_RX_MSG_DATA1__MSG1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_LT_MSG_RX_MSG_DATA1__MSG1__READ(die, channel)         SRM_LT_MSG_RX_MSG_DATA1__MSG1__GET(SRM_LT_MSG_RX_MSG_DATA1__READ(die, channel))
#  define SRM_LT_MSG_RX_MSG_DATA1__MSG1__WRITE(die, channel, fdata) SRM_LT_MSG_RX_MSG_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_RX_MSG_DATA1__MSG1__RMW(die, channel, fdata) SRM_LT_MSG_RX_MSG_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_RX_MSG_DATA1__MSG1__MASK                       0xffff
#  define SRM_LT_MSG_RX_MSG_DATA1__MSG1__OFFSET                     0

#define SRM_LT_MSG_RX_DEBUG_STATUS0__ADDRESS                      0x30a
#define SRM_LT_MSG_RX_DEBUG_STATUS0__DEFAULT                      0x0
#define SRM_LT_MSG_RX_DEBUG_STATUS0__ICOUNT                        2
#define SRM_LT_MSG_RX_DEBUG_STATUS0__ISPAN                         0x20
#define SRM_LT_MSG_RX_DEBUG_STATUS0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_RX_DEBUG_STATUS0__ADDRESS)
#define SRM_LT_MSG_RX_DEBUG_STATUS0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_RX_DEBUG_STATUS0__ADDRESS)
#define SRM_LT_MSG_RX_DEBUG_STATUS0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_RX_DEBUG_STATUS0__ADDRESS, (data))
#define SRM_LT_MSG_RX_DEBUG_STATUS0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_RX_DEBUG_STATUS0__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_RX_DEBUG_STATUS0__STATE0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_LT_MSG_RX_DEBUG_STATUS0__STATE0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_LT_MSG_RX_DEBUG_STATUS0__STATE0__READ(die, channel)         SRM_LT_MSG_RX_DEBUG_STATUS0__STATE0__GET(SRM_LT_MSG_RX_DEBUG_STATUS0__READ(die, channel))
#  define SRM_LT_MSG_RX_DEBUG_STATUS0__STATE0__WRITE(die, channel, fdata) SRM_LT_MSG_RX_DEBUG_STATUS0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_RX_DEBUG_STATUS0__STATE0__RMW(die, channel, fdata) SRM_LT_MSG_RX_DEBUG_STATUS0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_RX_DEBUG_STATUS0__STATE0__MASK                       0xffff
#  define SRM_LT_MSG_RX_DEBUG_STATUS0__STATE0__OFFSET                     0

#define SRM_LT_MSG_RX_DEBUG_STATUS1__ADDRESS                      0x30b
#define SRM_LT_MSG_RX_DEBUG_STATUS1__DEFAULT                      0x0
#define SRM_LT_MSG_RX_DEBUG_STATUS1__ICOUNT                        2
#define SRM_LT_MSG_RX_DEBUG_STATUS1__ISPAN                         0x20
#define SRM_LT_MSG_RX_DEBUG_STATUS1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_RX_DEBUG_STATUS1__ADDRESS)
#define SRM_LT_MSG_RX_DEBUG_STATUS1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_RX_DEBUG_STATUS1__ADDRESS)
#define SRM_LT_MSG_RX_DEBUG_STATUS1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_RX_DEBUG_STATUS1__ADDRESS, (data))
#define SRM_LT_MSG_RX_DEBUG_STATUS1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_RX_DEBUG_STATUS1__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_RX_DEBUG_STATUS1__STATE1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_LT_MSG_RX_DEBUG_STATUS1__STATE1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_LT_MSG_RX_DEBUG_STATUS1__STATE1__READ(die, channel)         SRM_LT_MSG_RX_DEBUG_STATUS1__STATE1__GET(SRM_LT_MSG_RX_DEBUG_STATUS1__READ(die, channel))
#  define SRM_LT_MSG_RX_DEBUG_STATUS1__STATE1__WRITE(die, channel, fdata) SRM_LT_MSG_RX_DEBUG_STATUS1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_RX_DEBUG_STATUS1__STATE1__RMW(die, channel, fdata) SRM_LT_MSG_RX_DEBUG_STATUS1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_RX_DEBUG_STATUS1__STATE1__MASK                       0xffff
#  define SRM_LT_MSG_RX_DEBUG_STATUS1__STATE1__OFFSET                     0

#define SRM_LT_MSG_RX_DEBUG_STATUS2__ADDRESS                      0x30c
#define SRM_LT_MSG_RX_DEBUG_STATUS2__DEFAULT                      0x0
#define SRM_LT_MSG_RX_DEBUG_STATUS2__ICOUNT                        2
#define SRM_LT_MSG_RX_DEBUG_STATUS2__ISPAN                         0x20
#define SRM_LT_MSG_RX_DEBUG_STATUS2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_RX_DEBUG_STATUS2__ADDRESS)
#define SRM_LT_MSG_RX_DEBUG_STATUS2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_RX_DEBUG_STATUS2__ADDRESS)
#define SRM_LT_MSG_RX_DEBUG_STATUS2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_RX_DEBUG_STATUS2__ADDRESS, (data))
#define SRM_LT_MSG_RX_DEBUG_STATUS2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_RX_DEBUG_STATUS2__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_RX_DEBUG_STATUS2__STATE2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_LT_MSG_RX_DEBUG_STATUS2__STATE2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_LT_MSG_RX_DEBUG_STATUS2__STATE2__READ(die, channel)         SRM_LT_MSG_RX_DEBUG_STATUS2__STATE2__GET(SRM_LT_MSG_RX_DEBUG_STATUS2__READ(die, channel))
#  define SRM_LT_MSG_RX_DEBUG_STATUS2__STATE2__WRITE(die, channel, fdata) SRM_LT_MSG_RX_DEBUG_STATUS2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_RX_DEBUG_STATUS2__STATE2__RMW(die, channel, fdata) SRM_LT_MSG_RX_DEBUG_STATUS2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_RX_DEBUG_STATUS2__STATE2__MASK                       0xffff
#  define SRM_LT_MSG_RX_DEBUG_STATUS2__STATE2__OFFSET                     0

#define SRM_LT_MSG_RX_DEBUG_STATUS3__ADDRESS                      0x30d
#define SRM_LT_MSG_RX_DEBUG_STATUS3__DEFAULT                      0x0
#define SRM_LT_MSG_RX_DEBUG_STATUS3__ICOUNT                        2
#define SRM_LT_MSG_RX_DEBUG_STATUS3__ISPAN                         0x20
#define SRM_LT_MSG_RX_DEBUG_STATUS3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_RX_DEBUG_STATUS3__ADDRESS)
#define SRM_LT_MSG_RX_DEBUG_STATUS3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_RX_DEBUG_STATUS3__ADDRESS)
#define SRM_LT_MSG_RX_DEBUG_STATUS3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_RX_DEBUG_STATUS3__ADDRESS, (data))
#define SRM_LT_MSG_RX_DEBUG_STATUS3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_RX_DEBUG_STATUS3__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_RX_DEBUG_STATUS3__STATE3__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_LT_MSG_RX_DEBUG_STATUS3__STATE3__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_LT_MSG_RX_DEBUG_STATUS3__STATE3__READ(die, channel)         SRM_LT_MSG_RX_DEBUG_STATUS3__STATE3__GET(SRM_LT_MSG_RX_DEBUG_STATUS3__READ(die, channel))
#  define SRM_LT_MSG_RX_DEBUG_STATUS3__STATE3__WRITE(die, channel, fdata) SRM_LT_MSG_RX_DEBUG_STATUS3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_RX_DEBUG_STATUS3__STATE3__RMW(die, channel, fdata) SRM_LT_MSG_RX_DEBUG_STATUS3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LT_MSG_RX_DEBUG_STATUS3__STATE3__MASK                       0xffff
#  define SRM_LT_MSG_RX_DEBUG_STATUS3__STATE3__OFFSET                     0

#define SRM_LT_MSG_RX_MSG_INT__ADDRESS                      0x30e
#define SRM_LT_MSG_RX_MSG_INT__DEFAULT                      0x0
#define SRM_LT_MSG_RX_MSG_INT__ICOUNT                        2
#define SRM_LT_MSG_RX_MSG_INT__ISPAN                         0x20
#define SRM_LT_MSG_RX_MSG_INT__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_RX_MSG_INT__ADDRESS)
#define SRM_LT_MSG_RX_MSG_INT__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_RX_MSG_INT__ADDRESS)
#define SRM_LT_MSG_RX_MSG_INT__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_RX_MSG_INT__ADDRESS, (data))
#define SRM_LT_MSG_RX_MSG_INT__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_RX_MSG_INT__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_RX_MSG_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_LT_MSG_RX_MSG_INT__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_LT_MSG_RX_MSG_INT__RSRVD1__READ(die, channel)         SRM_LT_MSG_RX_MSG_INT__RSRVD1__GET(SRM_LT_MSG_RX_MSG_INT__READ(die, channel))
#  define SRM_LT_MSG_RX_MSG_INT__RSRVD1__WRITE(die, channel, fdata) SRM_LT_MSG_RX_MSG_INT__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_LT_MSG_RX_MSG_INT__RSRVD1__RMW(die, channel, fdata) SRM_LT_MSG_RX_MSG_INT__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_LT_MSG_RX_MSG_INT__RSRVD1__MASK                       0x7fff
#  define SRM_LT_MSG_RX_MSG_INT__RSRVD1__OFFSET                     1
#  define SRM_LT_MSG_RX_MSG_INT__RX_VALID__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_LT_MSG_RX_MSG_INT__RX_VALID__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_LT_MSG_RX_MSG_INT__RX_VALID__READ(die, channel)         SRM_LT_MSG_RX_MSG_INT__RX_VALID__GET(SRM_LT_MSG_RX_MSG_INT__READ(die, channel))
#  define SRM_LT_MSG_RX_MSG_INT__RX_VALID__WRITE(die, channel, fdata) SRM_LT_MSG_RX_MSG_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_RX_MSG_INT__RX_VALID__RMW(die, channel, fdata) SRM_LT_MSG_RX_MSG_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_RX_MSG_INT__RX_VALID__MASK                       0x1
#  define SRM_LT_MSG_RX_MSG_INT__RX_VALID__OFFSET                     0

#define SRM_LT_MSG_LT_STATUS_TX__ADDRESS                      0x312
#define SRM_LT_MSG_LT_STATUS_TX__DEFAULT                      0x0
#define SRM_LT_MSG_LT_STATUS_TX__ICOUNT                        2
#define SRM_LT_MSG_LT_STATUS_TX__ISPAN                         0x20
#define SRM_LT_MSG_LT_STATUS_TX__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_LT_STATUS_TX__ADDRESS)
#define SRM_LT_MSG_LT_STATUS_TX__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_LT_STATUS_TX__ADDRESS)
#define SRM_LT_MSG_LT_STATUS_TX__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_LT_STATUS_TX__ADDRESS, (data))
#define SRM_LT_MSG_LT_STATUS_TX__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_LT_STATUS_TX__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_LT_STATUS_TX__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_LT_MSG_LT_STATUS_TX__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_LT_MSG_LT_STATUS_TX__RSRVD1__READ(die, channel)         SRM_LT_MSG_LT_STATUS_TX__RSRVD1__GET(SRM_LT_MSG_LT_STATUS_TX__READ(die, channel))
#  define SRM_LT_MSG_LT_STATUS_TX__RSRVD1__WRITE(die, channel, fdata) SRM_LT_MSG_LT_STATUS_TX__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_LT_MSG_LT_STATUS_TX__RSRVD1__RMW(die, channel, fdata) SRM_LT_MSG_LT_STATUS_TX__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_LT_MSG_LT_STATUS_TX__RSRVD1__MASK                       0x3fff
#  define SRM_LT_MSG_LT_STATUS_TX__RSRVD1__OFFSET                     2
#  define SRM_LT_MSG_LT_STATUS_TX__ERR__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_LT_MSG_LT_STATUS_TX__ERR__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_LT_MSG_LT_STATUS_TX__ERR__READ(die, channel)         SRM_LT_MSG_LT_STATUS_TX__ERR__GET(SRM_LT_MSG_LT_STATUS_TX__READ(die, channel))
#  define SRM_LT_MSG_LT_STATUS_TX__ERR__WRITE(die, channel, fdata) SRM_LT_MSG_LT_STATUS_TX__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_LT_STATUS_TX__ERR__RMW(die, channel, fdata) SRM_LT_MSG_LT_STATUS_TX__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_LT_STATUS_TX__ERR__MASK                       0x1
#  define SRM_LT_MSG_LT_STATUS_TX__ERR__OFFSET                     1
#  define SRM_LT_MSG_LT_STATUS_TX__LT_DONE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_LT_MSG_LT_STATUS_TX__LT_DONE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_LT_MSG_LT_STATUS_TX__LT_DONE__READ(die, channel)         SRM_LT_MSG_LT_STATUS_TX__LT_DONE__GET(SRM_LT_MSG_LT_STATUS_TX__READ(die, channel))
#  define SRM_LT_MSG_LT_STATUS_TX__LT_DONE__WRITE(die, channel, fdata) SRM_LT_MSG_LT_STATUS_TX__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_LT_STATUS_TX__LT_DONE__RMW(die, channel, fdata) SRM_LT_MSG_LT_STATUS_TX__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_LT_STATUS_TX__LT_DONE__MASK                       0x1
#  define SRM_LT_MSG_LT_STATUS_TX__LT_DONE__OFFSET                     0

#define SRM_LT_MSG_LT_STATUS_RX__ADDRESS                      0x313
#define SRM_LT_MSG_LT_STATUS_RX__DEFAULT                      0x0
#define SRM_LT_MSG_LT_STATUS_RX__ICOUNT                        2
#define SRM_LT_MSG_LT_STATUS_RX__ISPAN                         0x20
#define SRM_LT_MSG_LT_STATUS_RX__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_LT_STATUS_RX__ADDRESS)
#define SRM_LT_MSG_LT_STATUS_RX__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_LT_STATUS_RX__ADDRESS)
#define SRM_LT_MSG_LT_STATUS_RX__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_LT_STATUS_RX__ADDRESS, (data))
#define SRM_LT_MSG_LT_STATUS_RX__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_LT_STATUS_RX__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_LT_STATUS_RX__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_LT_MSG_LT_STATUS_RX__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_LT_MSG_LT_STATUS_RX__RSRVD1__READ(die, channel)         SRM_LT_MSG_LT_STATUS_RX__RSRVD1__GET(SRM_LT_MSG_LT_STATUS_RX__READ(die, channel))
#  define SRM_LT_MSG_LT_STATUS_RX__RSRVD1__WRITE(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_LT_MSG_LT_STATUS_RX__RSRVD1__RMW(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_LT_MSG_LT_STATUS_RX__RSRVD1__MASK                       0x3fff
#  define SRM_LT_MSG_LT_STATUS_RX__RSRVD1__OFFSET                     2
#  define SRM_LT_MSG_LT_STATUS_RX__ERR__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_LT_MSG_LT_STATUS_RX__ERR__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_LT_MSG_LT_STATUS_RX__ERR__READ(die, channel)         SRM_LT_MSG_LT_STATUS_RX__ERR__GET(SRM_LT_MSG_LT_STATUS_RX__READ(die, channel))
#  define SRM_LT_MSG_LT_STATUS_RX__ERR__WRITE(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_LT_STATUS_RX__ERR__RMW(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_LT_STATUS_RX__ERR__MASK                       0x1
#  define SRM_LT_MSG_LT_STATUS_RX__ERR__OFFSET                     1
#  define SRM_LT_MSG_LT_STATUS_RX__LT_DONE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_LT_MSG_LT_STATUS_RX__LT_DONE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_LT_MSG_LT_STATUS_RX__LT_DONE__READ(die, channel)         SRM_LT_MSG_LT_STATUS_RX__LT_DONE__GET(SRM_LT_MSG_LT_STATUS_RX__READ(die, channel))
#  define SRM_LT_MSG_LT_STATUS_RX__LT_DONE__WRITE(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_LT_STATUS_RX__LT_DONE__RMW(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_LT_STATUS_RX__LT_DONE__MASK                       0x1
#  define SRM_LT_MSG_LT_STATUS_RX__LT_DONE__OFFSET                     0

#define SRM_LT_MSG_MISC_CFG__ADDRESS                      0x314
#define SRM_LT_MSG_MISC_CFG__DEFAULT                      0x1
#define SRM_LT_MSG_MISC_CFG__ICOUNT                        2
#define SRM_LT_MSG_MISC_CFG__ISPAN                         0x20
#define SRM_LT_MSG_MISC_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_MISC_CFG__ADDRESS)
#define SRM_LT_MSG_MISC_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_MISC_CFG__ADDRESS)
#define SRM_LT_MSG_MISC_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_MISC_CFG__ADDRESS, (data))
#define SRM_LT_MSG_MISC_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_MISC_CFG__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_MISC_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SRM_LT_MSG_MISC_CFG__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SRM_LT_MSG_MISC_CFG__RSRVD1__READ(die, channel)         SRM_LT_MSG_MISC_CFG__RSRVD1__GET(SRM_LT_MSG_MISC_CFG__READ(die, channel))
#  define SRM_LT_MSG_MISC_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_LT_MSG_MISC_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_LT_MSG_MISC_CFG__RSRVD1__RMW(die, channel, fdata) SRM_LT_MSG_MISC_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_LT_MSG_MISC_CFG__RSRVD1__MASK                       0x1fff
#  define SRM_LT_MSG_MISC_CFG__RSRVD1__OFFSET                     3
#  define SRM_LT_MSG_MISC_CFG__LT_DONE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_LT_MSG_MISC_CFG__LT_DONE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_LT_MSG_MISC_CFG__LT_DONE__READ(die, channel)         SRM_LT_MSG_MISC_CFG__LT_DONE__GET(SRM_LT_MSG_MISC_CFG__READ(die, channel))
#  define SRM_LT_MSG_MISC_CFG__LT_DONE__WRITE(die, channel, fdata) SRM_LT_MSG_MISC_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_LT_MSG_MISC_CFG__LT_DONE__RMW(die, channel, fdata) SRM_LT_MSG_MISC_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_LT_MSG_MISC_CFG__LT_DONE__MASK                       0x1
#  define SRM_LT_MSG_MISC_CFG__LT_DONE__OFFSET                     2
#  define SRM_LT_MSG_MISC_CFG__AN_DONE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_LT_MSG_MISC_CFG__AN_DONE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_LT_MSG_MISC_CFG__AN_DONE__READ(die, channel)         SRM_LT_MSG_MISC_CFG__AN_DONE__GET(SRM_LT_MSG_MISC_CFG__READ(die, channel))
#  define SRM_LT_MSG_MISC_CFG__AN_DONE__WRITE(die, channel, fdata) SRM_LT_MSG_MISC_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_MISC_CFG__AN_DONE__RMW(die, channel, fdata) SRM_LT_MSG_MISC_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_MISC_CFG__AN_DONE__MASK                       0x1
#  define SRM_LT_MSG_MISC_CFG__AN_DONE__OFFSET                     1
#  define SRM_LT_MSG_MISC_CFG__ANLT_INTR_N__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_LT_MSG_MISC_CFG__ANLT_INTR_N__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_LT_MSG_MISC_CFG__ANLT_INTR_N__READ(die, channel)         SRM_LT_MSG_MISC_CFG__ANLT_INTR_N__GET(SRM_LT_MSG_MISC_CFG__READ(die, channel))
#  define SRM_LT_MSG_MISC_CFG__ANLT_INTR_N__WRITE(die, channel, fdata) SRM_LT_MSG_MISC_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_MISC_CFG__ANLT_INTR_N__RMW(die, channel, fdata) SRM_LT_MSG_MISC_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_MISC_CFG__ANLT_INTR_N__MASK                       0x1
#  define SRM_LT_MSG_MISC_CFG__ANLT_INTR_N__OFFSET                     0

#define SRM_RX_TOP_RESET__ADDRESS                      0x2000
#define SRM_RX_TOP_RESET__DEFAULT                      0x0
#define SRM_RX_TOP_RESET__READ(die)                  srm_reg_read(die, SRM_RX_TOP_RESET__ADDRESS)
#define SRM_RX_TOP_RESET__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_RESET__ADDRESS, (data))
#define SRM_RX_TOP_RESET__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_RESET__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3ff) | (((uint32_t)(fdata) << 10) & 0xfc00))
#  define SRM_RX_TOP_RESET__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x3f)
#  define SRM_RX_TOP_RESET__RSRVD1__READ(die)                SRM_RX_TOP_RESET__RSRVD1__GET(SRM_RX_TOP_RESET__READ(die))
#  define SRM_RX_TOP_RESET__RSRVD1__WRITE(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<10, 0xfc00)
#  define SRM_RX_TOP_RESET__RSRVD1__RMW(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<10, 0xfc00)
#  define SRM_RX_TOP_RESET__RSRVD1__MASK                       0x3f
#  define SRM_RX_TOP_RESET__RSRVD1__OFFSET                     10
#  define SRM_RX_TOP_RESET__RXA__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_RX_TOP_RESET__RXA__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_RX_TOP_RESET__RXA__READ(die)                SRM_RX_TOP_RESET__RXA__GET(SRM_RX_TOP_RESET__READ(die))
#  define SRM_RX_TOP_RESET__RXA__WRITE(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<8, 0x300)
#  define SRM_RX_TOP_RESET__RXA__RMW(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<8, 0x300)
#  define SRM_RX_TOP_RESET__RXA__MASK                       0x3
#  define SRM_RX_TOP_RESET__RXA__OFFSET                     8
#  define SRM_RX_TOP_RESET__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SRM_RX_TOP_RESET__RSRVD2__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SRM_RX_TOP_RESET__RSRVD2__READ(die)                SRM_RX_TOP_RESET__RSRVD2__GET(SRM_RX_TOP_RESET__READ(die))
#  define SRM_RX_TOP_RESET__RSRVD2__WRITE(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<6, 0xc0)
#  define SRM_RX_TOP_RESET__RSRVD2__RMW(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<6, 0xc0)
#  define SRM_RX_TOP_RESET__RSRVD2__MASK                       0x3
#  define SRM_RX_TOP_RESET__RSRVD2__OFFSET                     6
#  define SRM_RX_TOP_RESET__HISTOGRAM__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_TOP_RESET__HISTOGRAM__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_TOP_RESET__HISTOGRAM__READ(die)                SRM_RX_TOP_RESET__HISTOGRAM__GET(SRM_RX_TOP_RESET__READ(die))
#  define SRM_RX_TOP_RESET__HISTOGRAM__WRITE(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<5, 0x20)
#  define SRM_RX_TOP_RESET__HISTOGRAM__RMW(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<5, 0x20)
#  define SRM_RX_TOP_RESET__HISTOGRAM__MASK                       0x1
#  define SRM_RX_TOP_RESET__HISTOGRAM__OFFSET                     5
#  define SRM_RX_TOP_RESET__DEBUG_MEM__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_TOP_RESET__DEBUG_MEM__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_TOP_RESET__DEBUG_MEM__READ(die)                SRM_RX_TOP_RESET__DEBUG_MEM__GET(SRM_RX_TOP_RESET__READ(die))
#  define SRM_RX_TOP_RESET__DEBUG_MEM__WRITE(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<4, 0x10)
#  define SRM_RX_TOP_RESET__DEBUG_MEM__RMW(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<4, 0x10)
#  define SRM_RX_TOP_RESET__DEBUG_MEM__MASK                       0x1
#  define SRM_RX_TOP_RESET__DEBUG_MEM__OFFSET                     4
#  define SRM_RX_TOP_RESET__RXD_REG__SET(rdata, fdata)         (((rdata) & 0xfff3) | (((uint32_t)(fdata) << 2) & 0xc))
#  define SRM_RX_TOP_RESET__RXD_REG__GET(rdata)                (((rdata) >> 2) & 0x3)
#  define SRM_RX_TOP_RESET__RXD_REG__READ(die)                SRM_RX_TOP_RESET__RXD_REG__GET(SRM_RX_TOP_RESET__READ(die))
#  define SRM_RX_TOP_RESET__RXD_REG__WRITE(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<2, 0xc)
#  define SRM_RX_TOP_RESET__RXD_REG__RMW(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<2, 0xc)
#  define SRM_RX_TOP_RESET__RXD_REG__MASK                       0x3
#  define SRM_RX_TOP_RESET__RXD_REG__OFFSET                     2
#  define SRM_RX_TOP_RESET__RXD_SR__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_RX_TOP_RESET__RXD_SR__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_RX_TOP_RESET__RXD_SR__READ(die)                SRM_RX_TOP_RESET__RXD_SR__GET(SRM_RX_TOP_RESET__READ(die))
#  define SRM_RX_TOP_RESET__RXD_SR__WRITE(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<0, 0x3)
#  define SRM_RX_TOP_RESET__RXD_SR__RMW(die, fdata)           SRM_RX_TOP_RESET__RMW(die, (fdata)<<0, 0x3)
#  define SRM_RX_TOP_RESET__RXD_SR__MASK                       0x3
#  define SRM_RX_TOP_RESET__RXD_SR__OFFSET                     0

#define SRM_RX_TOP_BROADCAST_CFG__ADDRESS                      0x2001
#define SRM_RX_TOP_BROADCAST_CFG__DEFAULT                      0x3
#define SRM_RX_TOP_BROADCAST_CFG__READ(die)                  srm_reg_read(die, SRM_RX_TOP_BROADCAST_CFG__ADDRESS)
#define SRM_RX_TOP_BROADCAST_CFG__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_BROADCAST_CFG__ADDRESS, (data))
#define SRM_RX_TOP_BROADCAST_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_BROADCAST_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_BROADCAST_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_RX_TOP_BROADCAST_CFG__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_RX_TOP_BROADCAST_CFG__RSRVD1__READ(die)                SRM_RX_TOP_BROADCAST_CFG__RSRVD1__GET(SRM_RX_TOP_BROADCAST_CFG__READ(die))
#  define SRM_RX_TOP_BROADCAST_CFG__RSRVD1__WRITE(die, fdata)           SRM_RX_TOP_BROADCAST_CFG__RMW(die, (fdata)<<2, 0xfffc)
#  define SRM_RX_TOP_BROADCAST_CFG__RSRVD1__RMW(die, fdata)           SRM_RX_TOP_BROADCAST_CFG__RMW(die, (fdata)<<2, 0xfffc)
#  define SRM_RX_TOP_BROADCAST_CFG__RSRVD1__MASK                       0x3fff
#  define SRM_RX_TOP_BROADCAST_CFG__RSRVD1__OFFSET                     2
#  define SRM_RX_TOP_BROADCAST_CFG__BCAST__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_RX_TOP_BROADCAST_CFG__BCAST__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_RX_TOP_BROADCAST_CFG__BCAST__READ(die)                SRM_RX_TOP_BROADCAST_CFG__BCAST__GET(SRM_RX_TOP_BROADCAST_CFG__READ(die))
#  define SRM_RX_TOP_BROADCAST_CFG__BCAST__WRITE(die, fdata)           SRM_RX_TOP_BROADCAST_CFG__RMW(die, (fdata)<<0, 0x3)
#  define SRM_RX_TOP_BROADCAST_CFG__BCAST__RMW(die, fdata)           SRM_RX_TOP_BROADCAST_CFG__RMW(die, (fdata)<<0, 0x3)
#  define SRM_RX_TOP_BROADCAST_CFG__BCAST__MASK                       0x3
#  define SRM_RX_TOP_BROADCAST_CFG__BCAST__OFFSET                     0

#define SRM_RX_TOP_GEN_CFG__ADDRESS                      0x2002
#define SRM_RX_TOP_GEN_CFG__DEFAULT                      0x0
#define SRM_RX_TOP_GEN_CFG__READ(die)                  srm_reg_read(die, SRM_RX_TOP_GEN_CFG__ADDRESS)
#define SRM_RX_TOP_GEN_CFG__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_GEN_CFG__ADDRESS, (data))
#define SRM_RX_TOP_GEN_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_GEN_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_GEN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_RX_TOP_GEN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_RX_TOP_GEN_CFG__RSRVD1__READ(die)                SRM_RX_TOP_GEN_CFG__RSRVD1__GET(SRM_RX_TOP_GEN_CFG__READ(die))
#  define SRM_RX_TOP_GEN_CFG__RSRVD1__WRITE(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_RX_TOP_GEN_CFG__RSRVD1__RMW(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_RX_TOP_GEN_CFG__RSRVD1__MASK                       0x1
#  define SRM_RX_TOP_GEN_CFG__RSRVD1__OFFSET                     15
#  define SRM_RX_TOP_GEN_CFG__CLKMON_SEL__SET(rdata, fdata)         (((rdata) & 0x8fff) | (((uint32_t)(fdata) << 12) & 0x7000))
#  define SRM_RX_TOP_GEN_CFG__CLKMON_SEL__GET(rdata)                (((rdata) >> 12) & 0x7)
#  define SRM_RX_TOP_GEN_CFG__CLKMON_SEL__READ(die)                SRM_RX_TOP_GEN_CFG__CLKMON_SEL__GET(SRM_RX_TOP_GEN_CFG__READ(die))
#  define SRM_RX_TOP_GEN_CFG__CLKMON_SEL__WRITE(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<12, 0x7000)
#  define SRM_RX_TOP_GEN_CFG__CLKMON_SEL__RMW(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<12, 0x7000)
#  define SRM_RX_TOP_GEN_CFG__CLKMON_SEL__MASK                       0x7
#  define SRM_RX_TOP_GEN_CFG__CLKMON_SEL__OFFSET                     12
#  define SRM_RX_TOP_GEN_CFG__RX1_SRC__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SRM_RX_TOP_GEN_CFG__RX1_SRC__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SRM_RX_TOP_GEN_CFG__RX1_SRC__READ(die)                SRM_RX_TOP_GEN_CFG__RX1_SRC__GET(SRM_RX_TOP_GEN_CFG__READ(die))
#  define SRM_RX_TOP_GEN_CFG__RX1_SRC__WRITE(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<10, 0xc00)
#  define SRM_RX_TOP_GEN_CFG__RX1_SRC__RMW(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<10, 0xc00)
#  define SRM_RX_TOP_GEN_CFG__RX1_SRC__MASK                       0x3
#  define SRM_RX_TOP_GEN_CFG__RX1_SRC__OFFSET                     10
#  define SRM_RX_TOP_GEN_CFG__RX0_SRC__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_RX_TOP_GEN_CFG__RX0_SRC__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_RX_TOP_GEN_CFG__RX0_SRC__READ(die)                SRM_RX_TOP_GEN_CFG__RX0_SRC__GET(SRM_RX_TOP_GEN_CFG__READ(die))
#  define SRM_RX_TOP_GEN_CFG__RX0_SRC__WRITE(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<8, 0x300)
#  define SRM_RX_TOP_GEN_CFG__RX0_SRC__RMW(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<8, 0x300)
#  define SRM_RX_TOP_GEN_CFG__RX0_SRC__MASK                       0x3
#  define SRM_RX_TOP_GEN_CFG__RX0_SRC__OFFSET                     8
#  define SRM_RX_TOP_GEN_CFG__BITSWAP1__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SRM_RX_TOP_GEN_CFG__BITSWAP1__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SRM_RX_TOP_GEN_CFG__BITSWAP1__READ(die)                SRM_RX_TOP_GEN_CFG__BITSWAP1__GET(SRM_RX_TOP_GEN_CFG__READ(die))
#  define SRM_RX_TOP_GEN_CFG__BITSWAP1__WRITE(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<6, 0xc0)
#  define SRM_RX_TOP_GEN_CFG__BITSWAP1__RMW(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<6, 0xc0)
#  define SRM_RX_TOP_GEN_CFG__BITSWAP1__MASK                       0x3
#  define SRM_RX_TOP_GEN_CFG__BITSWAP1__OFFSET                     6
#  define SRM_RX_TOP_GEN_CFG__BITSWAP0__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SRM_RX_TOP_GEN_CFG__BITSWAP0__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SRM_RX_TOP_GEN_CFG__BITSWAP0__READ(die)                SRM_RX_TOP_GEN_CFG__BITSWAP0__GET(SRM_RX_TOP_GEN_CFG__READ(die))
#  define SRM_RX_TOP_GEN_CFG__BITSWAP0__WRITE(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<4, 0x30)
#  define SRM_RX_TOP_GEN_CFG__BITSWAP0__RMW(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<4, 0x30)
#  define SRM_RX_TOP_GEN_CFG__BITSWAP0__MASK                       0x3
#  define SRM_RX_TOP_GEN_CFG__BITSWAP0__OFFSET                     4
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL1__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL1__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL1__READ(die)                SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL1__GET(SRM_RX_TOP_GEN_CFG__READ(die))
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL1__WRITE(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<3, 0x8)
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL1__RMW(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<3, 0x8)
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL1__MASK                       0x1
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL1__OFFSET                     3
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL0__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL0__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL0__READ(die)                SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL0__GET(SRM_RX_TOP_GEN_CFG__READ(die))
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL0__WRITE(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL0__RMW(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL0__MASK                       0x1
#  define SRM_RX_TOP_GEN_CFG__LT_LPBK_CTRL0__OFFSET                     2
#  define SRM_RX_TOP_GEN_CFG__STARTUP_EN__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_RX_TOP_GEN_CFG__STARTUP_EN__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_RX_TOP_GEN_CFG__STARTUP_EN__READ(die)                SRM_RX_TOP_GEN_CFG__STARTUP_EN__GET(SRM_RX_TOP_GEN_CFG__READ(die))
#  define SRM_RX_TOP_GEN_CFG__STARTUP_EN__WRITE(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<0, 0x3)
#  define SRM_RX_TOP_GEN_CFG__STARTUP_EN__RMW(die, fdata)           SRM_RX_TOP_GEN_CFG__RMW(die, (fdata)<<0, 0x3)
#  define SRM_RX_TOP_GEN_CFG__STARTUP_EN__MASK                       0x3
#  define SRM_RX_TOP_GEN_CFG__STARTUP_EN__OFFSET                     0

#define SRM_RX_TOP_GEN_STATUS__ADDRESS                      0x2003
#define SRM_RX_TOP_GEN_STATUS__DEFAULT                      0x0
#define SRM_RX_TOP_GEN_STATUS__READ(die)                  srm_reg_read(die, SRM_RX_TOP_GEN_STATUS__ADDRESS)
#define SRM_RX_TOP_GEN_STATUS__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_GEN_STATUS__ADDRESS, (data))
#define SRM_RX_TOP_GEN_STATUS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_GEN_STATUS__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_GEN_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_RX_TOP_GEN_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_RX_TOP_GEN_STATUS__RSRVD1__READ(die)                SRM_RX_TOP_GEN_STATUS__RSRVD1__GET(SRM_RX_TOP_GEN_STATUS__READ(die))
#  define SRM_RX_TOP_GEN_STATUS__RSRVD1__WRITE(die, fdata)           SRM_RX_TOP_GEN_STATUS__RMW(die, (fdata)<<2, 0xfffc)
#  define SRM_RX_TOP_GEN_STATUS__RSRVD1__RMW(die, fdata)           SRM_RX_TOP_GEN_STATUS__RMW(die, (fdata)<<2, 0xfffc)
#  define SRM_RX_TOP_GEN_STATUS__RSRVD1__MASK                       0x3fff
#  define SRM_RX_TOP_GEN_STATUS__RSRVD1__OFFSET                     2
#  define SRM_RX_TOP_GEN_STATUS__SEQ_INIT_DONE__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_RX_TOP_GEN_STATUS__SEQ_INIT_DONE__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_RX_TOP_GEN_STATUS__SEQ_INIT_DONE__READ(die)                SRM_RX_TOP_GEN_STATUS__SEQ_INIT_DONE__GET(SRM_RX_TOP_GEN_STATUS__READ(die))
#  define SRM_RX_TOP_GEN_STATUS__SEQ_INIT_DONE__WRITE(die, fdata)           SRM_RX_TOP_GEN_STATUS__RMW(die, (fdata)<<0, 0x3)
#  define SRM_RX_TOP_GEN_STATUS__SEQ_INIT_DONE__RMW(die, fdata)           SRM_RX_TOP_GEN_STATUS__RMW(die, (fdata)<<0, 0x3)
#  define SRM_RX_TOP_GEN_STATUS__SEQ_INIT_DONE__MASK                       0x3
#  define SRM_RX_TOP_GEN_STATUS__SEQ_INIT_DONE__OFFSET                     0

#define SRM_RX_TOP_HISTOGRAM_CFG__ADDRESS                      0x200e
#define SRM_RX_TOP_HISTOGRAM_CFG__DEFAULT                      0x0
#define SRM_RX_TOP_HISTOGRAM_CFG__READ(die)                  srm_reg_read(die, SRM_RX_TOP_HISTOGRAM_CFG__ADDRESS)
#define SRM_RX_TOP_HISTOGRAM_CFG__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_HISTOGRAM_CFG__ADDRESS, (data))
#define SRM_RX_TOP_HISTOGRAM_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_HISTOGRAM_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7ff) | (((uint32_t)(fdata) << 11) & 0xf800))
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1f)
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD1__READ(die)                SRM_RX_TOP_HISTOGRAM_CFG__RSRVD1__GET(SRM_RX_TOP_HISTOGRAM_CFG__READ(die))
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD1__WRITE(die, fdata)           SRM_RX_TOP_HISTOGRAM_CFG__RMW(die, (fdata)<<11, 0xf800)
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD1__RMW(die, fdata)           SRM_RX_TOP_HISTOGRAM_CFG__RMW(die, (fdata)<<11, 0xf800)
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD1__MASK                       0x1f
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD1__OFFSET                     11
#  define SRM_RX_TOP_HISTOGRAM_CFG__OUT_EN__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_RX_TOP_HISTOGRAM_CFG__OUT_EN__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_RX_TOP_HISTOGRAM_CFG__OUT_EN__READ(die)                SRM_RX_TOP_HISTOGRAM_CFG__OUT_EN__GET(SRM_RX_TOP_HISTOGRAM_CFG__READ(die))
#  define SRM_RX_TOP_HISTOGRAM_CFG__OUT_EN__WRITE(die, fdata)           SRM_RX_TOP_HISTOGRAM_CFG__RMW(die, (fdata)<<10, 0x400)
#  define SRM_RX_TOP_HISTOGRAM_CFG__OUT_EN__RMW(die, fdata)           SRM_RX_TOP_HISTOGRAM_CFG__RMW(die, (fdata)<<10, 0x400)
#  define SRM_RX_TOP_HISTOGRAM_CFG__OUT_EN__MASK                       0x1
#  define SRM_RX_TOP_HISTOGRAM_CFG__OUT_EN__OFFSET                     10
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD2__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD2__READ(die)                SRM_RX_TOP_HISTOGRAM_CFG__RSRVD2__GET(SRM_RX_TOP_HISTOGRAM_CFG__READ(die))
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD2__WRITE(die, fdata)           SRM_RX_TOP_HISTOGRAM_CFG__RMW(die, (fdata)<<9, 0x200)
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD2__RMW(die, fdata)           SRM_RX_TOP_HISTOGRAM_CFG__RMW(die, (fdata)<<9, 0x200)
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD2__MASK                       0x1
#  define SRM_RX_TOP_HISTOGRAM_CFG__RSRVD2__OFFSET                     9
#  define SRM_RX_TOP_HISTOGRAM_CFG__LANE__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_RX_TOP_HISTOGRAM_CFG__LANE__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_RX_TOP_HISTOGRAM_CFG__LANE__READ(die)                SRM_RX_TOP_HISTOGRAM_CFG__LANE__GET(SRM_RX_TOP_HISTOGRAM_CFG__READ(die))
#  define SRM_RX_TOP_HISTOGRAM_CFG__LANE__WRITE(die, fdata)           SRM_RX_TOP_HISTOGRAM_CFG__RMW(die, (fdata)<<8, 0x100)
#  define SRM_RX_TOP_HISTOGRAM_CFG__LANE__RMW(die, fdata)           SRM_RX_TOP_HISTOGRAM_CFG__RMW(die, (fdata)<<8, 0x100)
#  define SRM_RX_TOP_HISTOGRAM_CFG__LANE__MASK                       0x1
#  define SRM_RX_TOP_HISTOGRAM_CFG__LANE__OFFSET                     8
#  define SRM_RX_TOP_HISTOGRAM_CFG__RD_ADDR__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_RX_TOP_HISTOGRAM_CFG__RD_ADDR__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_RX_TOP_HISTOGRAM_CFG__RD_ADDR__READ(die)                SRM_RX_TOP_HISTOGRAM_CFG__RD_ADDR__GET(SRM_RX_TOP_HISTOGRAM_CFG__READ(die))
#  define SRM_RX_TOP_HISTOGRAM_CFG__RD_ADDR__WRITE(die, fdata)           SRM_RX_TOP_HISTOGRAM_CFG__RMW(die, (fdata)<<0, 0xff)
#  define SRM_RX_TOP_HISTOGRAM_CFG__RD_ADDR__RMW(die, fdata)           SRM_RX_TOP_HISTOGRAM_CFG__RMW(die, (fdata)<<0, 0xff)
#  define SRM_RX_TOP_HISTOGRAM_CFG__RD_ADDR__MASK                       0xff
#  define SRM_RX_TOP_HISTOGRAM_CFG__RD_ADDR__OFFSET                     0

#define SRM_RX_TOP_HISTOGRAM_RDDATA1__ADDRESS                      0x200f
#define SRM_RX_TOP_HISTOGRAM_RDDATA1__DEFAULT                      0x0
#define SRM_RX_TOP_HISTOGRAM_RDDATA1__READ(die)                  srm_reg_read(die, SRM_RX_TOP_HISTOGRAM_RDDATA1__ADDRESS)
#define SRM_RX_TOP_HISTOGRAM_RDDATA1__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_HISTOGRAM_RDDATA1__ADDRESS, (data))
#define SRM_RX_TOP_HISTOGRAM_RDDATA1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_HISTOGRAM_RDDATA1__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_HISTOGRAM_RDDATA1__RDDATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_TOP_HISTOGRAM_RDDATA1__RDDATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_TOP_HISTOGRAM_RDDATA1__RDDATA__READ(die)                SRM_RX_TOP_HISTOGRAM_RDDATA1__RDDATA__GET(SRM_RX_TOP_HISTOGRAM_RDDATA1__READ(die))
#  define SRM_RX_TOP_HISTOGRAM_RDDATA1__RDDATA__WRITE(die, fdata)           SRM_RX_TOP_HISTOGRAM_RDDATA1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_HISTOGRAM_RDDATA1__RDDATA__RMW(die, fdata)           SRM_RX_TOP_HISTOGRAM_RDDATA1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_HISTOGRAM_RDDATA1__RDDATA__MASK                       0xffff
#  define SRM_RX_TOP_HISTOGRAM_RDDATA1__RDDATA__OFFSET                     0

#define SRM_RX_TOP_HISTOGRAM_RDDATA2__ADDRESS                      0x2010
#define SRM_RX_TOP_HISTOGRAM_RDDATA2__DEFAULT                      0x0
#define SRM_RX_TOP_HISTOGRAM_RDDATA2__READ(die)                  srm_reg_read(die, SRM_RX_TOP_HISTOGRAM_RDDATA2__ADDRESS)
#define SRM_RX_TOP_HISTOGRAM_RDDATA2__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_HISTOGRAM_RDDATA2__ADDRESS, (data))
#define SRM_RX_TOP_HISTOGRAM_RDDATA2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_HISTOGRAM_RDDATA2__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RSRVD1__READ(die)                SRM_RX_TOP_HISTOGRAM_RDDATA2__RSRVD1__GET(SRM_RX_TOP_HISTOGRAM_RDDATA2__READ(die))
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RSRVD1__WRITE(die, fdata)           SRM_RX_TOP_HISTOGRAM_RDDATA2__RMW(die, (fdata)<<5, 0xffe0)
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RSRVD1__RMW(die, fdata)           SRM_RX_TOP_HISTOGRAM_RDDATA2__RMW(die, (fdata)<<5, 0xffe0)
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RSRVD1__MASK                       0x7ff
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RSRVD1__OFFSET                     5
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__READY__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__READY__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__READY__READ(die)                SRM_RX_TOP_HISTOGRAM_RDDATA2__READY__GET(SRM_RX_TOP_HISTOGRAM_RDDATA2__READ(die))
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__READY__WRITE(die, fdata)           SRM_RX_TOP_HISTOGRAM_RDDATA2__RMW(die, (fdata)<<4, 0x10)
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__READY__RMW(die, fdata)           SRM_RX_TOP_HISTOGRAM_RDDATA2__RMW(die, (fdata)<<4, 0x10)
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__READY__MASK                       0x1
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__READY__OFFSET                     4
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RDDATA__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RDDATA__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RDDATA__READ(die)                SRM_RX_TOP_HISTOGRAM_RDDATA2__RDDATA__GET(SRM_RX_TOP_HISTOGRAM_RDDATA2__READ(die))
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RDDATA__WRITE(die, fdata)           SRM_RX_TOP_HISTOGRAM_RDDATA2__RMW(die, (fdata)<<0, 0xf)
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RDDATA__RMW(die, fdata)           SRM_RX_TOP_HISTOGRAM_RDDATA2__RMW(die, (fdata)<<0, 0xf)
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RDDATA__MASK                       0xf
#  define SRM_RX_TOP_HISTOGRAM_RDDATA2__RDDATA__OFFSET                     0

#define SRM_RX_TOP_SCRATCH0__ADDRESS                      0x2013
#define SRM_RX_TOP_SCRATCH0__DEFAULT                      0x0
#define SRM_RX_TOP_SCRATCH0__READ(die)                  srm_reg_read(die, SRM_RX_TOP_SCRATCH0__ADDRESS)
#define SRM_RX_TOP_SCRATCH0__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_SCRATCH0__ADDRESS, (data))
#define SRM_RX_TOP_SCRATCH0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_SCRATCH0__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_SCRATCH0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_TOP_SCRATCH0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_TOP_SCRATCH0__VALUE__READ(die)                SRM_RX_TOP_SCRATCH0__VALUE__GET(SRM_RX_TOP_SCRATCH0__READ(die))
#  define SRM_RX_TOP_SCRATCH0__VALUE__WRITE(die, fdata)           SRM_RX_TOP_SCRATCH0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH0__VALUE__RMW(die, fdata)           SRM_RX_TOP_SCRATCH0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH0__VALUE__MASK                       0xffff
#  define SRM_RX_TOP_SCRATCH0__VALUE__OFFSET                     0

#define SRM_RX_TOP_SCRATCH1__ADDRESS                      0x2014
#define SRM_RX_TOP_SCRATCH1__DEFAULT                      0x0
#define SRM_RX_TOP_SCRATCH1__READ(die)                  srm_reg_read(die, SRM_RX_TOP_SCRATCH1__ADDRESS)
#define SRM_RX_TOP_SCRATCH1__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_SCRATCH1__ADDRESS, (data))
#define SRM_RX_TOP_SCRATCH1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_SCRATCH1__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_SCRATCH1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_TOP_SCRATCH1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_TOP_SCRATCH1__VALUE__READ(die)                SRM_RX_TOP_SCRATCH1__VALUE__GET(SRM_RX_TOP_SCRATCH1__READ(die))
#  define SRM_RX_TOP_SCRATCH1__VALUE__WRITE(die, fdata)           SRM_RX_TOP_SCRATCH1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH1__VALUE__RMW(die, fdata)           SRM_RX_TOP_SCRATCH1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH1__VALUE__MASK                       0xffff
#  define SRM_RX_TOP_SCRATCH1__VALUE__OFFSET                     0

#define SRM_RX_TOP_SCRATCH2__ADDRESS                      0x2015
#define SRM_RX_TOP_SCRATCH2__DEFAULT                      0x0
#define SRM_RX_TOP_SCRATCH2__READ(die)                  srm_reg_read(die, SRM_RX_TOP_SCRATCH2__ADDRESS)
#define SRM_RX_TOP_SCRATCH2__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_SCRATCH2__ADDRESS, (data))
#define SRM_RX_TOP_SCRATCH2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_SCRATCH2__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_SCRATCH2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_TOP_SCRATCH2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_TOP_SCRATCH2__VALUE__READ(die)                SRM_RX_TOP_SCRATCH2__VALUE__GET(SRM_RX_TOP_SCRATCH2__READ(die))
#  define SRM_RX_TOP_SCRATCH2__VALUE__WRITE(die, fdata)           SRM_RX_TOP_SCRATCH2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH2__VALUE__RMW(die, fdata)           SRM_RX_TOP_SCRATCH2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH2__VALUE__MASK                       0xffff
#  define SRM_RX_TOP_SCRATCH2__VALUE__OFFSET                     0

#define SRM_RX_TOP_SCRATCH3__ADDRESS                      0x2016
#define SRM_RX_TOP_SCRATCH3__DEFAULT                      0x0
#define SRM_RX_TOP_SCRATCH3__READ(die)                  srm_reg_read(die, SRM_RX_TOP_SCRATCH3__ADDRESS)
#define SRM_RX_TOP_SCRATCH3__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_SCRATCH3__ADDRESS, (data))
#define SRM_RX_TOP_SCRATCH3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_SCRATCH3__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_SCRATCH3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_TOP_SCRATCH3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_TOP_SCRATCH3__VALUE__READ(die)                SRM_RX_TOP_SCRATCH3__VALUE__GET(SRM_RX_TOP_SCRATCH3__READ(die))
#  define SRM_RX_TOP_SCRATCH3__VALUE__WRITE(die, fdata)           SRM_RX_TOP_SCRATCH3__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH3__VALUE__RMW(die, fdata)           SRM_RX_TOP_SCRATCH3__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH3__VALUE__MASK                       0xffff
#  define SRM_RX_TOP_SCRATCH3__VALUE__OFFSET                     0

#define SRM_RX_TOP_SCRATCH4__ADDRESS                      0x2017
#define SRM_RX_TOP_SCRATCH4__DEFAULT                      0x0
#define SRM_RX_TOP_SCRATCH4__READ(die)                  srm_reg_read(die, SRM_RX_TOP_SCRATCH4__ADDRESS)
#define SRM_RX_TOP_SCRATCH4__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_SCRATCH4__ADDRESS, (data))
#define SRM_RX_TOP_SCRATCH4__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_SCRATCH4__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_SCRATCH4__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_TOP_SCRATCH4__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_TOP_SCRATCH4__VALUE__READ(die)                SRM_RX_TOP_SCRATCH4__VALUE__GET(SRM_RX_TOP_SCRATCH4__READ(die))
#  define SRM_RX_TOP_SCRATCH4__VALUE__WRITE(die, fdata)           SRM_RX_TOP_SCRATCH4__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH4__VALUE__RMW(die, fdata)           SRM_RX_TOP_SCRATCH4__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH4__VALUE__MASK                       0xffff
#  define SRM_RX_TOP_SCRATCH4__VALUE__OFFSET                     0

#define SRM_RX_TOP_SCRATCH5__ADDRESS                      0x2018
#define SRM_RX_TOP_SCRATCH5__DEFAULT                      0x0
#define SRM_RX_TOP_SCRATCH5__READ(die)                  srm_reg_read(die, SRM_RX_TOP_SCRATCH5__ADDRESS)
#define SRM_RX_TOP_SCRATCH5__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_SCRATCH5__ADDRESS, (data))
#define SRM_RX_TOP_SCRATCH5__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_SCRATCH5__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_SCRATCH5__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_TOP_SCRATCH5__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_TOP_SCRATCH5__VALUE__READ(die)                SRM_RX_TOP_SCRATCH5__VALUE__GET(SRM_RX_TOP_SCRATCH5__READ(die))
#  define SRM_RX_TOP_SCRATCH5__VALUE__WRITE(die, fdata)           SRM_RX_TOP_SCRATCH5__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH5__VALUE__RMW(die, fdata)           SRM_RX_TOP_SCRATCH5__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH5__VALUE__MASK                       0xffff
#  define SRM_RX_TOP_SCRATCH5__VALUE__OFFSET                     0

#define SRM_RX_TOP_SCRATCH6__ADDRESS                      0x2019
#define SRM_RX_TOP_SCRATCH6__DEFAULT                      0x0
#define SRM_RX_TOP_SCRATCH6__READ(die)                  srm_reg_read(die, SRM_RX_TOP_SCRATCH6__ADDRESS)
#define SRM_RX_TOP_SCRATCH6__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_SCRATCH6__ADDRESS, (data))
#define SRM_RX_TOP_SCRATCH6__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_SCRATCH6__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_SCRATCH6__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_TOP_SCRATCH6__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_TOP_SCRATCH6__VALUE__READ(die)                SRM_RX_TOP_SCRATCH6__VALUE__GET(SRM_RX_TOP_SCRATCH6__READ(die))
#  define SRM_RX_TOP_SCRATCH6__VALUE__WRITE(die, fdata)           SRM_RX_TOP_SCRATCH6__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH6__VALUE__RMW(die, fdata)           SRM_RX_TOP_SCRATCH6__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH6__VALUE__MASK                       0xffff
#  define SRM_RX_TOP_SCRATCH6__VALUE__OFFSET                     0

#define SRM_RX_TOP_SCRATCH7__ADDRESS                      0x201a
#define SRM_RX_TOP_SCRATCH7__DEFAULT                      0x0
#define SRM_RX_TOP_SCRATCH7__READ(die)                  srm_reg_read(die, SRM_RX_TOP_SCRATCH7__ADDRESS)
#define SRM_RX_TOP_SCRATCH7__WRITE(die, data)             srm_reg_write(die, SRM_RX_TOP_SCRATCH7__ADDRESS, (data))
#define SRM_RX_TOP_SCRATCH7__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RX_TOP_SCRATCH7__ADDRESS, (data), (mask))
#  define SRM_RX_TOP_SCRATCH7__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_TOP_SCRATCH7__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_TOP_SCRATCH7__VALUE__READ(die)                SRM_RX_TOP_SCRATCH7__VALUE__GET(SRM_RX_TOP_SCRATCH7__READ(die))
#  define SRM_RX_TOP_SCRATCH7__VALUE__WRITE(die, fdata)           SRM_RX_TOP_SCRATCH7__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH7__VALUE__RMW(die, fdata)           SRM_RX_TOP_SCRATCH7__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RX_TOP_SCRATCH7__VALUE__MASK                       0xffff
#  define SRM_RX_TOP_SCRATCH7__VALUE__OFFSET                     0

#define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__ADDRESS                      0x2802
#define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DEFAULT                      0x1
#define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__ICOUNT                        3
#define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__ISPAN                         0x800
#define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_DSP_MODE_CONTROL_CFG__ADDRESS)
#define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_DSP_MODE_CONTROL_CFG__ADDRESS)
#define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_DSP_MODE_CONTROL_CFG__ADDRESS, (data))
#define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_DSP_MODE_CONTROL_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__MASK                       0x1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__OFFSET                     15
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__LINEAR_DFE_EN__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__LINEAR_DFE_EN__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__LINEAR_DFE_EN__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__LINEAR_DFE_EN__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__LINEAR_DFE_EN__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__LINEAR_DFE_EN__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__LINEAR_DFE_EN__MASK                       0x1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__LINEAR_DFE_EN__OFFSET                     14
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__IPP_EN__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__IPP_EN__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__IPP_EN__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__IPP_EN__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__IPP_EN__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__IPP_EN__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__IPP_EN__MASK                       0x1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__IPP_EN__OFFSET                     13
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__MASK                       0x1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__OFFSET                     12
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DC_MODE__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DC_MODE__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DC_MODE__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DC_MODE__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DC_MODE__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DC_MODE__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DC_MODE__MASK                       0x1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__DC_MODE__OFFSET                     11
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__MASK                       0x1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__OFFSET                     10
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__SET(rdata, fdata)         (((rdata) & 0xfc3f) | (((uint32_t)(fdata) << 6) & 0x3c0))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__GET(rdata)                (((rdata) >> 6) & 0xf)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<6, 0x3c0)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<6, 0x3c0)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__MASK                       0xf
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__OFFSET                     6
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE2_LMS_SLEEP__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE2_LMS_SLEEP__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE2_LMS_SLEEP__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE2_LMS_SLEEP__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE2_LMS_SLEEP__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE2_LMS_SLEEP__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE2_LMS_SLEEP__MASK                       0x1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE2_LMS_SLEEP__OFFSET                     5
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PRBS_EN__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PRBS_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PRBS_EN__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PRBS_EN__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PRBS_EN__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PRBS_EN__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PRBS_EN__MASK                       0x1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PRBS_EN__OFFSET                     4
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4EGEN2_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4EGEN2_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4EGEN2_EN__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4EGEN2_EN__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4EGEN2_EN__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4EGEN2_EN__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4EGEN2_EN__MASK                       0x1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4EGEN2_EN__OFFSET                     3
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4OPD_EN__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4OPD_EN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4OPD_EN__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4OPD_EN__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4OPD_EN__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4OPD_EN__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4OPD_EN__MASK                       0x1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__PAM4OPD_EN__OFFSET                     2
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RSRVD1__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RSRVD1__MASK                       0x1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RSRVD1__OFFSET                     1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE_MODE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE_MODE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE_MODE__READ(die, channel)         SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE_MODE__GET(SRM_RX_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE_MODE__WRITE(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE_MODE__RMW(die, channel, fdata) SRM_RX_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE_MODE__MASK                       0x1
#  define SRM_RX_DSP_DSP_MODE_CONTROL_CFG__FFE_MODE__OFFSET                     0

#define SRM_RX_DSP_INTS__ADDRESS                      0x2806
#define SRM_RX_DSP_INTS__DEFAULT                      0x0
#define SRM_RX_DSP_INTS__ICOUNT                        3
#define SRM_RX_DSP_INTS__ISPAN                         0x800
#define SRM_RX_DSP_INTS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_INTS__ADDRESS)
#define SRM_RX_DSP_INTS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_INTS__ADDRESS)
#define SRM_RX_DSP_INTS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_INTS__ADDRESS, (data))
#define SRM_RX_DSP_INTS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_INTS__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_INTS__INTERRUPT_SPARES__SET(rdata, fdata)         (((rdata) & 0x3ff) | (((uint32_t)(fdata) << 10) & 0xfc00))
#  define SRM_RX_DSP_INTS__INTERRUPT_SPARES__GET(rdata)                (((rdata) >> 10) & 0x3f)
#  define SRM_RX_DSP_INTS__INTERRUPT_SPARES__READ(die, channel)         SRM_RX_DSP_INTS__INTERRUPT_SPARES__GET(SRM_RX_DSP_INTS__READ(die, channel))
#  define SRM_RX_DSP_INTS__INTERRUPT_SPARES__WRITE(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SRM_RX_DSP_INTS__INTERRUPT_SPARES__RMW(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SRM_RX_DSP_INTS__INTERRUPT_SPARES__MASK                       0x3f
#  define SRM_RX_DSP_INTS__INTERRUPT_SPARES__OFFSET                     10
#  define SRM_RX_DSP_INTS__SFEC_FRAMER_LOCK_LOSTS__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_RX_DSP_INTS__SFEC_FRAMER_LOCK_LOSTS__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_RX_DSP_INTS__SFEC_FRAMER_LOCK_LOSTS__READ(die, channel)         SRM_RX_DSP_INTS__SFEC_FRAMER_LOCK_LOSTS__GET(SRM_RX_DSP_INTS__READ(die, channel))
#  define SRM_RX_DSP_INTS__SFEC_FRAMER_LOCK_LOSTS__WRITE(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_DSP_INTS__SFEC_FRAMER_LOCK_LOSTS__RMW(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_DSP_INTS__SFEC_FRAMER_LOCK_LOSTS__MASK                       0x1
#  define SRM_RX_DSP_INTS__SFEC_FRAMER_LOCK_LOSTS__OFFSET                     9
#  define SRM_RX_DSP_INTS__PRBS_ERR_64BS__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_RX_DSP_INTS__PRBS_ERR_64BS__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_RX_DSP_INTS__PRBS_ERR_64BS__READ(die, channel)         SRM_RX_DSP_INTS__PRBS_ERR_64BS__GET(SRM_RX_DSP_INTS__READ(die, channel))
#  define SRM_RX_DSP_INTS__PRBS_ERR_64BS__WRITE(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_DSP_INTS__PRBS_ERR_64BS__RMW(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_DSP_INTS__PRBS_ERR_64BS__MASK                       0x1
#  define SRM_RX_DSP_INTS__PRBS_ERR_64BS__OFFSET                     8
#  define SRM_RX_DSP_INTS__PRBS_ERR_32OS__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_RX_DSP_INTS__PRBS_ERR_32OS__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_RX_DSP_INTS__PRBS_ERR_32OS__READ(die, channel)         SRM_RX_DSP_INTS__PRBS_ERR_32OS__GET(SRM_RX_DSP_INTS__READ(die, channel))
#  define SRM_RX_DSP_INTS__PRBS_ERR_32OS__WRITE(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_INTS__PRBS_ERR_32OS__RMW(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_INTS__PRBS_ERR_32OS__MASK                       0x1
#  define SRM_RX_DSP_INTS__PRBS_ERR_32OS__OFFSET                     7
#  define SRM_RX_DSP_INTS__PRBS_ERR_32ES__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_RX_DSP_INTS__PRBS_ERR_32ES__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_RX_DSP_INTS__PRBS_ERR_32ES__READ(die, channel)         SRM_RX_DSP_INTS__PRBS_ERR_32ES__GET(SRM_RX_DSP_INTS__READ(die, channel))
#  define SRM_RX_DSP_INTS__PRBS_ERR_32ES__WRITE(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_INTS__PRBS_ERR_32ES__RMW(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_INTS__PRBS_ERR_32ES__MASK                       0x1
#  define SRM_RX_DSP_INTS__PRBS_ERR_32ES__OFFSET                     6
#  define SRM_RX_DSP_INTS__FFE_GAIN_LESS_THAN_4S__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_DSP_INTS__FFE_GAIN_LESS_THAN_4S__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_DSP_INTS__FFE_GAIN_LESS_THAN_4S__READ(die, channel)         SRM_RX_DSP_INTS__FFE_GAIN_LESS_THAN_4S__GET(SRM_RX_DSP_INTS__READ(die, channel))
#  define SRM_RX_DSP_INTS__FFE_GAIN_LESS_THAN_4S__WRITE(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_INTS__FFE_GAIN_LESS_THAN_4S__RMW(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_INTS__FFE_GAIN_LESS_THAN_4S__MASK                       0x1
#  define SRM_RX_DSP_INTS__FFE_GAIN_LESS_THAN_4S__OFFSET                     5
#  define SRM_RX_DSP_INTS__PPM_OUT_OF_RANGES__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_DSP_INTS__PPM_OUT_OF_RANGES__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_DSP_INTS__PPM_OUT_OF_RANGES__READ(die, channel)         SRM_RX_DSP_INTS__PPM_OUT_OF_RANGES__GET(SRM_RX_DSP_INTS__READ(die, channel))
#  define SRM_RX_DSP_INTS__PPM_OUT_OF_RANGES__WRITE(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_INTS__PPM_OUT_OF_RANGES__RMW(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_INTS__PPM_OUT_OF_RANGES__MASK                       0x1
#  define SRM_RX_DSP_INTS__PPM_OUT_OF_RANGES__OFFSET                     4
#  define SRM_RX_DSP_INTS__SNR_DROPSS__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_DSP_INTS__SNR_DROPSS__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_DSP_INTS__SNR_DROPSS__READ(die, channel)         SRM_RX_DSP_INTS__SNR_DROPSS__GET(SRM_RX_DSP_INTS__READ(die, channel))
#  define SRM_RX_DSP_INTS__SNR_DROPSS__WRITE(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_INTS__SNR_DROPSS__RMW(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_INTS__SNR_DROPSS__MASK                       0x1
#  define SRM_RX_DSP_INTS__SNR_DROPSS__OFFSET                     3
#  define SRM_RX_DSP_INTS__DSP_FAILSS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_DSP_INTS__DSP_FAILSS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_DSP_INTS__DSP_FAILSS__READ(die, channel)         SRM_RX_DSP_INTS__DSP_FAILSS__GET(SRM_RX_DSP_INTS__READ(die, channel))
#  define SRM_RX_DSP_INTS__DSP_FAILSS__WRITE(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_INTS__DSP_FAILSS__RMW(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_INTS__DSP_FAILSS__MASK                       0x1
#  define SRM_RX_DSP_INTS__DSP_FAILSS__OFFSET                     2
#  define SRM_RX_DSP_INTS__DSP_READYS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_DSP_INTS__DSP_READYS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_DSP_INTS__DSP_READYS__READ(die, channel)         SRM_RX_DSP_INTS__DSP_READYS__GET(SRM_RX_DSP_INTS__READ(die, channel))
#  define SRM_RX_DSP_INTS__DSP_READYS__WRITE(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_INTS__DSP_READYS__RMW(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_INTS__DSP_READYS__MASK                       0x1
#  define SRM_RX_DSP_INTS__DSP_READYS__OFFSET                     1
#  define SRM_RX_DSP_INTS__SDT_DROPSS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_DSP_INTS__SDT_DROPSS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_DSP_INTS__SDT_DROPSS__READ(die, channel)         SRM_RX_DSP_INTS__SDT_DROPSS__GET(SRM_RX_DSP_INTS__READ(die, channel))
#  define SRM_RX_DSP_INTS__SDT_DROPSS__WRITE(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_INTS__SDT_DROPSS__RMW(die, channel, fdata) SRM_RX_DSP_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_INTS__SDT_DROPSS__MASK                       0x1
#  define SRM_RX_DSP_INTS__SDT_DROPSS__OFFSET                     0

#define SRM_RX_DSP_FFE_GAINDC_MU_CFG__ADDRESS                      0x280a
#define SRM_RX_DSP_FFE_GAINDC_MU_CFG__DEFAULT                      0x657
#define SRM_RX_DSP_FFE_GAINDC_MU_CFG__ICOUNT                        3
#define SRM_RX_DSP_FFE_GAINDC_MU_CFG__ISPAN                         0x800
#define SRM_RX_DSP_FFE_GAINDC_MU_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_FFE_GAINDC_MU_CFG__ADDRESS)
#define SRM_RX_DSP_FFE_GAINDC_MU_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_FFE_GAINDC_MU_CFG__ADDRESS)
#define SRM_RX_DSP_FFE_GAINDC_MU_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_FFE_GAINDC_MU_CFG__ADDRESS, (data))
#define SRM_RX_DSP_FFE_GAINDC_MU_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_FFE_GAINDC_MU_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__RSRVD1__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_FFE_GAINDC_MU_CFG__RSRVD1__GET(SRM_RX_DSP_FFE_GAINDC_MU_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_FFE_GAINDC_MU_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_FFE_GAINDC_MU_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__RSRVD1__MASK                       0xf
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__RSRVD1__OFFSET                     12
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCDM__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCDM__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCDM__READ(die, channel)         SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCDM__GET(SRM_RX_DSP_FFE_GAINDC_MU_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCDM__WRITE(die, channel, fdata) SRM_RX_DSP_FFE_GAINDC_MU_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCDM__RMW(die, channel, fdata) SRM_RX_DSP_FFE_GAINDC_MU_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCDM__MASK                       0xf
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCDM__OFFSET                     8
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCCM__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCCM__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCCM__READ(die, channel)         SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCCM__GET(SRM_RX_DSP_FFE_GAINDC_MU_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCCM__WRITE(die, channel, fdata) SRM_RX_DSP_FFE_GAINDC_MU_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCCM__RMW(die, channel, fdata) SRM_RX_DSP_FFE_GAINDC_MU_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCCM__MASK                       0xf
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_DCCM__OFFSET                     4
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_GAIN__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_GAIN__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_GAIN__READ(die, channel)         SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_GAIN__GET(SRM_RX_DSP_FFE_GAINDC_MU_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_GAIN__WRITE(die, channel, fdata) SRM_RX_DSP_FFE_GAINDC_MU_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_GAIN__RMW(die, channel, fdata) SRM_RX_DSP_FFE_GAINDC_MU_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_GAIN__MASK                       0xf
#  define SRM_RX_DSP_FFE_GAINDC_MU_CFG__FFE1_MU_GAIN__OFFSET                     0

#define SRM_RX_DSP_FFE2_TAP_CFG__ADDRESS                      0x280b
#define SRM_RX_DSP_FFE2_TAP_CFG__DEFAULT                      0x407
#define SRM_RX_DSP_FFE2_TAP_CFG__ICOUNT                        3
#define SRM_RX_DSP_FFE2_TAP_CFG__ISPAN                         0x800
#define SRM_RX_DSP_FFE2_TAP_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_FFE2_TAP_CFG__ADDRESS)
#define SRM_RX_DSP_FFE2_TAP_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_FFE2_TAP_CFG__ADDRESS)
#define SRM_RX_DSP_FFE2_TAP_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_FFE2_TAP_CFG__ADDRESS, (data))
#define SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_FFE2_TAP_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_FFE2_TAP_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7ff) | (((uint32_t)(fdata) << 11) & 0xf800))
#  define SRM_RX_DSP_FFE2_TAP_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1f)
#  define SRM_RX_DSP_FFE2_TAP_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_FFE2_TAP_CFG__RSRVD1__GET(SRM_RX_DSP_FFE2_TAP_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE2_TAP_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SRM_RX_DSP_FFE2_TAP_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SRM_RX_DSP_FFE2_TAP_CFG__RSRVD1__MASK                       0x1f
#  define SRM_RX_DSP_FFE2_TAP_CFG__RSRVD1__OFFSET                     11
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_FULLTAP_EN__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_FULLTAP_EN__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_FULLTAP_EN__READ(die, channel)         SRM_RX_DSP_FFE2_TAP_CFG__FFE2_FULLTAP_EN__GET(SRM_RX_DSP_FFE2_TAP_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_FULLTAP_EN__WRITE(die, channel, fdata) SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_FULLTAP_EN__RMW(die, channel, fdata) SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_FULLTAP_EN__MASK                       0x1
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_FULLTAP_EN__OFFSET                     10
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MVTAP_SEL__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MVTAP_SEL__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MVTAP_SEL__READ(die, channel)         SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MVTAP_SEL__GET(SRM_RX_DSP_FFE2_TAP_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MVTAP_SEL__WRITE(die, channel, fdata) SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MVTAP_SEL__RMW(die, channel, fdata) SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MVTAP_SEL__MASK                       0x1
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MVTAP_SEL__OFFSET                     9
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_ADAPT_MAINTAP__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_ADAPT_MAINTAP__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_ADAPT_MAINTAP__READ(die, channel)         SRM_RX_DSP_FFE2_TAP_CFG__FFE2_ADAPT_MAINTAP__GET(SRM_RX_DSP_FFE2_TAP_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_ADAPT_MAINTAP__WRITE(die, channel, fdata) SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_ADAPT_MAINTAP__RMW(die, channel, fdata) SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_ADAPT_MAINTAP__MASK                       0x1
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_ADAPT_MAINTAP__OFFSET                     8
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFEP1__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFEP1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFEP1__READ(die, channel)         SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFEP1__GET(SRM_RX_DSP_FFE2_TAP_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFEP1__WRITE(die, channel, fdata) SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFEP1__RMW(die, channel, fdata) SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFEP1__MASK                       0xf
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFEP1__OFFSET                     4
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFE__READ(die, channel)         SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFE__GET(SRM_RX_DSP_FFE2_TAP_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFE__WRITE(die, channel, fdata) SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFE__RMW(die, channel, fdata) SRM_RX_DSP_FFE2_TAP_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFE__MASK                       0xf
#  define SRM_RX_DSP_FFE2_TAP_CFG__FFE2_MU_FFE__OFFSET                     0

#define SRM_RX_DSP_FFE_TAP_READ_CFG__ADDRESS                      0x2817
#define SRM_RX_DSP_FFE_TAP_READ_CFG__DEFAULT                      0x0
#define SRM_RX_DSP_FFE_TAP_READ_CFG__ICOUNT                        3
#define SRM_RX_DSP_FFE_TAP_READ_CFG__ISPAN                         0x800
#define SRM_RX_DSP_FFE_TAP_READ_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_FFE_TAP_READ_CFG__ADDRESS)
#define SRM_RX_DSP_FFE_TAP_READ_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_FFE_TAP_READ_CFG__ADDRESS)
#define SRM_RX_DSP_FFE_TAP_READ_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_FFE_TAP_READ_CFG__ADDRESS, (data))
#define SRM_RX_DSP_FFE_TAP_READ_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_FFE_TAP_READ_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_FFE_TAP_READ_CFG__RSRVD1__GET(SRM_RX_DSP_FFE_TAP_READ_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_FFE_TAP_READ_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_FFE_TAP_READ_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__RSRVD1__MASK                       0x7f
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__RSRVD1__OFFSET                     9
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_INDEX__SET(rdata, fdata)         (((rdata) & 0xfe0f) | (((uint32_t)(fdata) << 4) & 0x1f0))
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_INDEX__GET(rdata)                (((rdata) >> 4) & 0x1f)
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_INDEX__READ(die, channel)         SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_INDEX__GET(SRM_RX_DSP_FFE_TAP_READ_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_INDEX__WRITE(die, channel, fdata) SRM_RX_DSP_FFE_TAP_READ_CFG__RMW(die, (channel), (fdata)<<4, 0x1f0)
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_INDEX__RMW(die, channel, fdata) SRM_RX_DSP_FFE_TAP_READ_CFG__RMW(die, (channel), (fdata)<<4, 0x1f0)
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_INDEX__MASK                       0x1f
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_INDEX__OFFSET                     4
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_TAP__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_TAP__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_TAP__READ(die, channel)         SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_TAP__GET(SRM_RX_DSP_FFE_TAP_READ_CFG__READ(die, channel))
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_TAP__WRITE(die, channel, fdata) SRM_RX_DSP_FFE_TAP_READ_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_TAP__RMW(die, channel, fdata) SRM_RX_DSP_FFE_TAP_READ_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_TAP__MASK                       0xf
#  define SRM_RX_DSP_FFE_TAP_READ_CFG__FFE_COEF_RD_TAP__OFFSET                     0

#define SRM_RX_DSP_FFE_TAP_READ_STATUS__ADDRESS                      0x2818
#define SRM_RX_DSP_FFE_TAP_READ_STATUS__DEFAULT                      0x0
#define SRM_RX_DSP_FFE_TAP_READ_STATUS__ICOUNT                        3
#define SRM_RX_DSP_FFE_TAP_READ_STATUS__ISPAN                         0x800
#define SRM_RX_DSP_FFE_TAP_READ_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_FFE_TAP_READ_STATUS__ADDRESS)
#define SRM_RX_DSP_FFE_TAP_READ_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_FFE_TAP_READ_STATUS__ADDRESS)
#define SRM_RX_DSP_FFE_TAP_READ_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_FFE_TAP_READ_STATUS__ADDRESS, (data))
#define SRM_RX_DSP_FFE_TAP_READ_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_FFE_TAP_READ_STATUS__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__RSRVD1__READ(die, channel)         SRM_RX_DSP_FFE_TAP_READ_STATUS__RSRVD1__GET(SRM_RX_DSP_FFE_TAP_READ_STATUS__READ(die, channel))
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_FFE_TAP_READ_STATUS__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_FFE_TAP_READ_STATUS__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__RSRVD1__MASK                       0x1ff
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__RSRVD1__OFFSET                     7
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__FFE_COEF_RD_VALUE__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__FFE_COEF_RD_VALUE__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__FFE_COEF_RD_VALUE__READ(die, channel)         SRM_RX_DSP_FFE_TAP_READ_STATUS__FFE_COEF_RD_VALUE__GET(SRM_RX_DSP_FFE_TAP_READ_STATUS__READ(die, channel))
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__FFE_COEF_RD_VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_FFE_TAP_READ_STATUS__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__FFE_COEF_RD_VALUE__RMW(die, channel, fdata) SRM_RX_DSP_FFE_TAP_READ_STATUS__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__FFE_COEF_RD_VALUE__MASK                       0x7f
#  define SRM_RX_DSP_FFE_TAP_READ_STATUS__FFE_COEF_RD_VALUE__OFFSET                     0

#define SRM_RX_DSP_SNR_MONITOR_CFG__ADDRESS                      0x282a
#define SRM_RX_DSP_SNR_MONITOR_CFG__DEFAULT                      0x2
#define SRM_RX_DSP_SNR_MONITOR_CFG__ICOUNT                        3
#define SRM_RX_DSP_SNR_MONITOR_CFG__ISPAN                         0x800
#define SRM_RX_DSP_SNR_MONITOR_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SNR_MONITOR_CFG__ADDRESS)
#define SRM_RX_DSP_SNR_MONITOR_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SNR_MONITOR_CFG__ADDRESS)
#define SRM_RX_DSP_SNR_MONITOR_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SNR_MONITOR_CFG__ADDRESS, (data))
#define SRM_RX_DSP_SNR_MONITOR_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SNR_MONITOR_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SNR_MONITOR_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xfff0))
#  define SRM_RX_DSP_SNR_MONITOR_CFG__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xfff)
#  define SRM_RX_DSP_SNR_MONITOR_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_SNR_MONITOR_CFG__RSRVD1__GET(SRM_RX_DSP_SNR_MONITOR_CFG__READ(die, channel))
#  define SRM_RX_DSP_SNR_MONITOR_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_CFG__RMW(die, (channel), (fdata)<<4, 0xfff0)
#  define SRM_RX_DSP_SNR_MONITOR_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_CFG__RMW(die, (channel), (fdata)<<4, 0xfff0)
#  define SRM_RX_DSP_SNR_MONITOR_CFG__RSRVD1__MASK                       0xfff
#  define SRM_RX_DSP_SNR_MONITOR_CFG__RSRVD1__OFFSET                     4
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_OUT_RD_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_OUT_RD_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_OUT_RD_EN__READ(die, channel)         SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_OUT_RD_EN__GET(SRM_RX_DSP_SNR_MONITOR_CFG__READ(die, channel))
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_OUT_RD_EN__WRITE(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_OUT_RD_EN__RMW(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_OUT_RD_EN__MASK                       0x1
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_OUT_RD_EN__OFFSET                     3
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_INSEL__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_INSEL__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_INSEL__READ(die, channel)         SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_INSEL__GET(SRM_RX_DSP_SNR_MONITOR_CFG__READ(die, channel))
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_INSEL__WRITE(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_INSEL__RMW(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_INSEL__MASK                       0x1
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_INSEL__OFFSET                     2
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_BLOCK_CNT__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_BLOCK_CNT__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_BLOCK_CNT__READ(die, channel)         SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_BLOCK_CNT__GET(SRM_RX_DSP_SNR_MONITOR_CFG__READ(die, channel))
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_BLOCK_CNT__WRITE(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_BLOCK_CNT__RMW(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_BLOCK_CNT__MASK                       0x3
#  define SRM_RX_DSP_SNR_MONITOR_CFG__SNRM_BLOCK_CNT__OFFSET                     0

#define SRM_RX_DSP_SNR_MONITOR_STATUS__ADDRESS                      0x282b
#define SRM_RX_DSP_SNR_MONITOR_STATUS__DEFAULT                      0x0
#define SRM_RX_DSP_SNR_MONITOR_STATUS__ICOUNT                        3
#define SRM_RX_DSP_SNR_MONITOR_STATUS__ISPAN                         0x800
#define SRM_RX_DSP_SNR_MONITOR_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SNR_MONITOR_STATUS__ADDRESS)
#define SRM_RX_DSP_SNR_MONITOR_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SNR_MONITOR_STATUS__ADDRESS)
#define SRM_RX_DSP_SNR_MONITOR_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SNR_MONITOR_STATUS__ADDRESS, (data))
#define SRM_RX_DSP_SNR_MONITOR_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SNR_MONITOR_STATUS__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7ff) | (((uint32_t)(fdata) << 11) & 0xf800))
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1f)
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__RSRVD1__READ(die, channel)         SRM_RX_DSP_SNR_MONITOR_STATUS__RSRVD1__GET(SRM_RX_DSP_SNR_MONITOR_STATUS__READ(die, channel))
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_STATUS__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_STATUS__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__RSRVD1__MASK                       0x1f
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__RSRVD1__OFFSET                     11
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNR_READY__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNR_READY__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNR_READY__READ(die, channel)         SRM_RX_DSP_SNR_MONITOR_STATUS__SNR_READY__GET(SRM_RX_DSP_SNR_MONITOR_STATUS__READ(die, channel))
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNR_READY__WRITE(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_STATUS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNR_READY__RMW(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_STATUS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNR_READY__MASK                       0x1
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNR_READY__OFFSET                     10
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNRM_OUT_RD_VALUE__SET(rdata, fdata)         (((rdata) & 0xfc00) | (((uint32_t)(fdata) << 0) & 0x3ff))
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNRM_OUT_RD_VALUE__GET(rdata)                (((rdata) >> 0) & 0x3ff)
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNRM_OUT_RD_VALUE__READ(die, channel)         SRM_RX_DSP_SNR_MONITOR_STATUS__SNRM_OUT_RD_VALUE__GET(SRM_RX_DSP_SNR_MONITOR_STATUS__READ(die, channel))
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNRM_OUT_RD_VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_STATUS__RMW(die, (channel), (fdata)<<0, 0x3ff)
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNRM_OUT_RD_VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SNR_MONITOR_STATUS__RMW(die, (channel), (fdata)<<0, 0x3ff)
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNRM_OUT_RD_VALUE__MASK                       0x3ff
#  define SRM_RX_DSP_SNR_MONITOR_STATUS__SNRM_OUT_RD_VALUE__OFFSET                     0

#define SRM_RX_DSP_EYE_HISTOGRAM_CFG__ADDRESS                      0x282c
#define SRM_RX_DSP_EYE_HISTOGRAM_CFG__DEFAULT                      0x0
#define SRM_RX_DSP_EYE_HISTOGRAM_CFG__ICOUNT                        3
#define SRM_RX_DSP_EYE_HISTOGRAM_CFG__ISPAN                         0x800
#define SRM_RX_DSP_EYE_HISTOGRAM_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_EYE_HISTOGRAM_CFG__ADDRESS)
#define SRM_RX_DSP_EYE_HISTOGRAM_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_EYE_HISTOGRAM_CFG__ADDRESS)
#define SRM_RX_DSP_EYE_HISTOGRAM_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_EYE_HISTOGRAM_CFG__ADDRESS, (data))
#define SRM_RX_DSP_EYE_HISTOGRAM_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_EYE_HISTOGRAM_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_EYE_HISTOGRAM_CFG__RSRVD1__GET(SRM_RX_DSP_EYE_HISTOGRAM_CFG__READ(die, channel))
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_EYE_HISTOGRAM_CFG__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_EYE_HISTOGRAM_CFG__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__RSRVD1__MASK                       0x1ff
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__RSRVD1__OFFSET                     7
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_INSEL__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_INSEL__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_INSEL__READ(die, channel)         SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_INSEL__GET(SRM_RX_DSP_EYE_HISTOGRAM_CFG__READ(die, channel))
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_INSEL__WRITE(die, channel, fdata) SRM_RX_DSP_EYE_HISTOGRAM_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_INSEL__RMW(die, channel, fdata) SRM_RX_DSP_EYE_HISTOGRAM_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_INSEL__MASK                       0x1
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_INSEL__OFFSET                     6
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_ENA__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_ENA__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_ENA__READ(die, channel)         SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_ENA__GET(SRM_RX_DSP_EYE_HISTOGRAM_CFG__READ(die, channel))
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_ENA__WRITE(die, channel, fdata) SRM_RX_DSP_EYE_HISTOGRAM_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_ENA__RMW(die, channel, fdata) SRM_RX_DSP_EYE_HISTOGRAM_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_ENA__MASK                       0x1
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_ENA__OFFSET                     5
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_VAL__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_VAL__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_VAL__READ(die, channel)         SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_VAL__GET(SRM_RX_DSP_EYE_HISTOGRAM_CFG__READ(die, channel))
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_VAL__WRITE(die, channel, fdata) SRM_RX_DSP_EYE_HISTOGRAM_CFG__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_VAL__RMW(die, channel, fdata) SRM_RX_DSP_EYE_HISTOGRAM_CFG__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_VAL__MASK                       0x1f
#  define SRM_RX_DSP_EYE_HISTOGRAM_CFG__HIST_MUX_SEL_VAL__OFFSET                     0

#define SRM_RX_DSP_SIGNAL_DETECT_CFG__ADDRESS                      0x282e
#define SRM_RX_DSP_SIGNAL_DETECT_CFG__DEFAULT                      0x6
#define SRM_RX_DSP_SIGNAL_DETECT_CFG__ICOUNT                        3
#define SRM_RX_DSP_SIGNAL_DETECT_CFG__ISPAN                         0x800
#define SRM_RX_DSP_SIGNAL_DETECT_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SIGNAL_DETECT_CFG__ADDRESS)
#define SRM_RX_DSP_SIGNAL_DETECT_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SIGNAL_DETECT_CFG__ADDRESS)
#define SRM_RX_DSP_SIGNAL_DETECT_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SIGNAL_DETECT_CFG__ADDRESS, (data))
#define SRM_RX_DSP_SIGNAL_DETECT_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SIGNAL_DETECT_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_SIGNAL_DETECT_CFG__RSRVD1__GET(SRM_RX_DSP_SIGNAL_DETECT_CFG__READ(die, channel))
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_CFG__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_CFG__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__RSRVD1__MASK                       0x1ff
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__RSRVD1__OFFSET                     7
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_RD_NR_SPLES__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_RD_NR_SPLES__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_RD_NR_SPLES__READ(die, channel)         SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_RD_NR_SPLES__GET(SRM_RX_DSP_SIGNAL_DETECT_CFG__READ(die, channel))
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_RD_NR_SPLES__WRITE(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_RD_NR_SPLES__RMW(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_RD_NR_SPLES__MASK                       0x1
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_RD_NR_SPLES__OFFSET                     6
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_HIGH__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_HIGH__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_HIGH__READ(die, channel)         SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_HIGH__GET(SRM_RX_DSP_SIGNAL_DETECT_CFG__READ(die, channel))
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_HIGH__WRITE(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_HIGH__RMW(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_HIGH__MASK                       0x1
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_HIGH__OFFSET                     5
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_LOW__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_LOW__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_LOW__READ(die, channel)         SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_LOW__GET(SRM_RX_DSP_SIGNAL_DETECT_CFG__READ(die, channel))
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_LOW__WRITE(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_LOW__RMW(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_LOW__MASK                       0x1
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_FORCE_LOW__OFFSET                     4
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_BLOCK_CNT__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_BLOCK_CNT__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_BLOCK_CNT__READ(die, channel)         SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_BLOCK_CNT__GET(SRM_RX_DSP_SIGNAL_DETECT_CFG__READ(die, channel))
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_BLOCK_CNT__WRITE(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_BLOCK_CNT__RMW(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_BLOCK_CNT__MASK                       0xf
#  define SRM_RX_DSP_SIGNAL_DETECT_CFG__SDT_BLOCK_CNT__OFFSET                     0

#define SRM_RX_DSP_SIGNAL_DETECT_STATUS__ADDRESS                      0x282f
#define SRM_RX_DSP_SIGNAL_DETECT_STATUS__DEFAULT                      0x0
#define SRM_RX_DSP_SIGNAL_DETECT_STATUS__ICOUNT                        3
#define SRM_RX_DSP_SIGNAL_DETECT_STATUS__ISPAN                         0x800
#define SRM_RX_DSP_SIGNAL_DETECT_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SIGNAL_DETECT_STATUS__ADDRESS)
#define SRM_RX_DSP_SIGNAL_DETECT_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SIGNAL_DETECT_STATUS__ADDRESS)
#define SRM_RX_DSP_SIGNAL_DETECT_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SIGNAL_DETECT_STATUS__ADDRESS, (data))
#define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SIGNAL_DETECT_STATUS__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xfff0))
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xfff)
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD1__READ(die, channel)         SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD1__GET(SRM_RX_DSP_SIGNAL_DETECT_STATUS__READ(die, channel))
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_STATUS__RMW(die, (channel), (fdata)<<4, 0xfff0)
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_STATUS__RMW(die, (channel), (fdata)<<4, 0xfff0)
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD1__MASK                       0xfff
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD1__OFFSET                     4
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__SDT_OUT__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__SDT_OUT__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__SDT_OUT__READ(die, channel)         SRM_RX_DSP_SIGNAL_DETECT_STATUS__SDT_OUT__GET(SRM_RX_DSP_SIGNAL_DETECT_STATUS__READ(die, channel))
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__SDT_OUT__WRITE(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_STATUS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__SDT_OUT__RMW(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_STATUS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__SDT_OUT__MASK                       0x1
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__SDT_OUT__OFFSET                     3
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD2__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD2__READ(die, channel)         SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD2__GET(SRM_RX_DSP_SIGNAL_DETECT_STATUS__READ(die, channel))
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD2__WRITE(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_STATUS__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD2__RMW(die, channel, fdata) SRM_RX_DSP_SIGNAL_DETECT_STATUS__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD2__MASK                       0x7
#  define SRM_RX_DSP_SIGNAL_DETECT_STATUS__RSRVD2__OFFSET                     0

#define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__ADDRESS                      0x283d
#define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__DEFAULT                      0x14
#define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__ICOUNT                        3
#define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__ISPAN                         0x800
#define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__ADDRESS)
#define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__ADDRESS)
#define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__ADDRESS, (data))
#define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xffc0))
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3ff)
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RSRVD1__GET(SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__READ(die, channel))
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RSRVD1__MASK                       0x3ff
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RSRVD1__OFFSET                     6
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_STB_SEL__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_STB_SEL__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_STB_SEL__READ(die, channel)         SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_STB_SEL__GET(SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__READ(die, channel))
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_STB_SEL__WRITE(die, channel, fdata) SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_STB_SEL__RMW(die, channel, fdata) SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_STB_SEL__MASK                       0x1
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_STB_SEL__OFFSET                     5
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_POLARITY_INVERT__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_POLARITY_INVERT__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_POLARITY_INVERT__READ(die, channel)         SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_POLARITY_INVERT__GET(SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__READ(die, channel))
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_POLARITY_INVERT__WRITE(die, channel, fdata) SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_POLARITY_INVERT__RMW(die, channel, fdata) SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_POLARITY_INVERT__MASK                       0x1
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_POLARITY_INVERT__OFFSET                     4
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_MU__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_MU__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_MU__READ(die, channel)         SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_MU__GET(SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__READ(die, channel))
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_MU__WRITE(die, channel, fdata) SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_MU__RMW(die, channel, fdata) SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_MU__MASK                       0xf
#  define SRM_RX_DSP_TIMING_OFFSET_CALIBRATION_CFG__TOC_MU__OFFSET                     0

#define SRM_RX_DSP_PAM4_SLICER_CFG__ADDRESS                      0x283e
#define SRM_RX_DSP_PAM4_SLICER_CFG__DEFAULT                      0xe6
#define SRM_RX_DSP_PAM4_SLICER_CFG__ICOUNT                        3
#define SRM_RX_DSP_PAM4_SLICER_CFG__ISPAN                         0x800
#define SRM_RX_DSP_PAM4_SLICER_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PAM4_SLICER_CFG__ADDRESS)
#define SRM_RX_DSP_PAM4_SLICER_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PAM4_SLICER_CFG__ADDRESS)
#define SRM_RX_DSP_PAM4_SLICER_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PAM4_SLICER_CFG__ADDRESS, (data))
#define SRM_RX_DSP_PAM4_SLICER_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PAM4_SLICER_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD1__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD1__GET(SRM_RX_DSP_PAM4_SLICER_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_SLICER_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_SLICER_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD1__MASK                       0xff
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD1__OFFSET                     8
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_DELTA_SELECT__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_DELTA_SELECT__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_DELTA_SELECT__READ(die, channel)         SRM_RX_DSP_PAM4_SLICER_CFG__SLC_DELTA_SELECT__GET(SRM_RX_DSP_PAM4_SLICER_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_DELTA_SELECT__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_SLICER_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_DELTA_SELECT__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_SLICER_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_DELTA_SELECT__MASK                       0x1
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_DELTA_SELECT__OFFSET                     7
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_THRES__SET(rdata, fdata)         (((rdata) & 0xff8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_THRES__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_THRES__READ(die, channel)         SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_THRES__GET(SRM_RX_DSP_PAM4_SLICER_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_THRES__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_SLICER_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_THRES__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_SLICER_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_THRES__MASK                       0x7
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_THRES__OFFSET                     4
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD2__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD2__READ(die, channel)         SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD2__GET(SRM_RX_DSP_PAM4_SLICER_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD2__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_SLICER_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD2__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_SLICER_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD2__MASK                       0x1
#  define SRM_RX_DSP_PAM4_SLICER_CFG__RSRVD2__OFFSET                     3
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_LEVEL__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_LEVEL__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_LEVEL__READ(die, channel)         SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_LEVEL__GET(SRM_RX_DSP_PAM4_SLICER_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_LEVEL__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_SLICER_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_LEVEL__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_SLICER_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_LEVEL__MASK                       0x7
#  define SRM_RX_DSP_PAM4_SLICER_CFG__SLC_MU_LEVEL__OFFSET                     0

#define SRM_RX_DSP_PAM4_DFE_CFG__ADDRESS                      0x2846
#define SRM_RX_DSP_PAM4_DFE_CFG__DEFAULT                      0x68
#define SRM_RX_DSP_PAM4_DFE_CFG__ICOUNT                        3
#define SRM_RX_DSP_PAM4_DFE_CFG__ISPAN                         0x800
#define SRM_RX_DSP_PAM4_DFE_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PAM4_DFE_CFG__ADDRESS)
#define SRM_RX_DSP_PAM4_DFE_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PAM4_DFE_CFG__ADDRESS)
#define SRM_RX_DSP_PAM4_DFE_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PAM4_DFE_CFG__ADDRESS, (data))
#define SRM_RX_DSP_PAM4_DFE_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PAM4_DFE_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PAM4_DFE_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7ff) | (((uint32_t)(fdata) << 11) & 0xf800))
#  define SRM_RX_DSP_PAM4_DFE_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1f)
#  define SRM_RX_DSP_PAM4_DFE_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_CFG__RSRVD1__GET(SRM_RX_DSP_PAM4_DFE_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_CFG__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SRM_RX_DSP_PAM4_DFE_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_CFG__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SRM_RX_DSP_PAM4_DFE_CFG__RSRVD1__MASK                       0x1f
#  define SRM_RX_DSP_PAM4_DFE_CFG__RSRVD1__OFFSET                     11
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_ADAPT_FORCE__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_ADAPT_FORCE__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_ADAPT_FORCE__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_ADAPT_FORCE__GET(SRM_RX_DSP_PAM4_DFE_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_ADAPT_FORCE__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_ADAPT_FORCE__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_ADAPT_FORCE__MASK                       0x1
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_ADAPT_FORCE__OFFSET                     10
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_SAT_SEL__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_SAT_SEL__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_SAT_SEL__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_SAT_SEL__GET(SRM_RX_DSP_PAM4_DFE_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_SAT_SEL__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_SAT_SEL__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_SAT_SEL__MASK                       0x3
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_SAT_SEL__OFFSET                     8
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_NLFB__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_NLFB__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_NLFB__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_NLFB__GET(SRM_RX_DSP_PAM4_DFE_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_NLFB__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_NLFB__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_NLFB__MASK                       0xf
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_NLFB__OFFSET                     4
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_F1__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_F1__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_F1__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_F1__GET(SRM_RX_DSP_PAM4_DFE_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_F1__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_F1__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_F1__MASK                       0xf
#  define SRM_RX_DSP_PAM4_DFE_CFG__PAM4DFE_MU_F1__OFFSET                     0

#define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__ADDRESS                      0x284c
#define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__DEFAULT                      0x0
#define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__ICOUNT                        3
#define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__ISPAN                         0x800
#define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__ADDRESS)
#define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__ADDRESS)
#define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__ADDRESS, (data))
#define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RSRVD1__GET(SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RSRVD1__MASK                       0x7f
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RSRVD1__OFFSET                     9
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_F1_RD_INDEX__SET(rdata, fdata)         (((rdata) & 0xfe3f) | (((uint32_t)(fdata) << 6) & 0x1c0))
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_F1_RD_INDEX__GET(rdata)                (((rdata) >> 6) & 0x7)
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_F1_RD_INDEX__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_F1_RD_INDEX__GET(SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_F1_RD_INDEX__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RMW(die, (channel), (fdata)<<6, 0x1c0)
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_F1_RD_INDEX__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RMW(die, (channel), (fdata)<<6, 0x1c0)
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_F1_RD_INDEX__MASK                       0x7
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_F1_RD_INDEX__OFFSET                     6
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB0_RD_INDEX__SET(rdata, fdata)         (((rdata) & 0xffc7) | (((uint32_t)(fdata) << 3) & 0x38))
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB0_RD_INDEX__GET(rdata)                (((rdata) >> 3) & 0x7)
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB0_RD_INDEX__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB0_RD_INDEX__GET(SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB0_RD_INDEX__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RMW(die, (channel), (fdata)<<3, 0x38)
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB0_RD_INDEX__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RMW(die, (channel), (fdata)<<3, 0x38)
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB0_RD_INDEX__MASK                       0x7
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB0_RD_INDEX__OFFSET                     3
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB1_RD_INDEX__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB1_RD_INDEX__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB1_RD_INDEX__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB1_RD_INDEX__GET(SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB1_RD_INDEX__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB1_RD_INDEX__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB1_RD_INDEX__MASK                       0x7
#  define SRM_RX_DSP_PAM4_DFE_F1_READ_CFG__PAM4DFE_NLFB1_RD_INDEX__OFFSET                     0

#define SRM_RX_DSP_PAM4_DFE_F1_STATUS__ADDRESS                      0x284d
#define SRM_RX_DSP_PAM4_DFE_F1_STATUS__DEFAULT                      0x0
#define SRM_RX_DSP_PAM4_DFE_F1_STATUS__ICOUNT                        3
#define SRM_RX_DSP_PAM4_DFE_F1_STATUS__ISPAN                         0x800
#define SRM_RX_DSP_PAM4_DFE_F1_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PAM4_DFE_F1_STATUS__ADDRESS)
#define SRM_RX_DSP_PAM4_DFE_F1_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PAM4_DFE_F1_STATUS__ADDRESS)
#define SRM_RX_DSP_PAM4_DFE_F1_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PAM4_DFE_F1_STATUS__ADDRESS, (data))
#define SRM_RX_DSP_PAM4_DFE_F1_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PAM4_DFE_F1_STATUS__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__RSRVD1__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_F1_STATUS__RSRVD1__GET(SRM_RX_DSP_PAM4_DFE_F1_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_F1_STATUS__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_F1_STATUS__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__RSRVD1__MASK                       0xff
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__RSRVD1__OFFSET                     8
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__PAM4DFE_F1_RD_VALUE__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__PAM4DFE_F1_RD_VALUE__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__PAM4DFE_F1_RD_VALUE__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_F1_STATUS__PAM4DFE_F1_RD_VALUE__GET(SRM_RX_DSP_PAM4_DFE_F1_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__PAM4DFE_F1_RD_VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_F1_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__PAM4DFE_F1_RD_VALUE__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_F1_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__PAM4DFE_F1_RD_VALUE__MASK                       0xff
#  define SRM_RX_DSP_PAM4_DFE_F1_STATUS__PAM4DFE_F1_RD_VALUE__OFFSET                     0

#define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__ADDRESS                      0x284e
#define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__DEFAULT                      0x0
#define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__ICOUNT                        3
#define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__ISPAN                         0x800
#define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__ADDRESS)
#define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__ADDRESS)
#define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__ADDRESS, (data))
#define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RSRVD1__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RSRVD1__GET(SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RSRVD1__MASK                       0x3
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RSRVD1__OFFSET                     14
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB0_RD_VALUE__SET(rdata, fdata)         (((rdata) & 0xc07f) | (((uint32_t)(fdata) << 7) & 0x3f80))
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB0_RD_VALUE__GET(rdata)                (((rdata) >> 7) & 0x7f)
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB0_RD_VALUE__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB0_RD_VALUE__GET(SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB0_RD_VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RMW(die, (channel), (fdata)<<7, 0x3f80)
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB0_RD_VALUE__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RMW(die, (channel), (fdata)<<7, 0x3f80)
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB0_RD_VALUE__MASK                       0x7f
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB0_RD_VALUE__OFFSET                     7
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB1_RD_VALUE__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB1_RD_VALUE__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB1_RD_VALUE__READ(die, channel)         SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB1_RD_VALUE__GET(SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB1_RD_VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB1_RD_VALUE__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB1_RD_VALUE__MASK                       0x7f
#  define SRM_RX_DSP_PAM4_DFE_NLFB_STATUS__PAM4DFE_NLFB1_RD_VALUE__OFFSET                     0

#define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__ADDRESS                      0x284f
#define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__DEFAULT                      0x25
#define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__ICOUNT                        3
#define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__ISPAN                         0x800
#define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__ADDRESS)
#define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__ADDRESS)
#define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__ADDRESS, (data))
#define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RSRVD1__GET(SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RSRVD1__MASK                       0x1ff
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RSRVD1__OFFSET                     7
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DUOBIN_EN__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DUOBIN_EN__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DUOBIN_EN__READ(die, channel)         SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DUOBIN_EN__GET(SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DUOBIN_EN__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DUOBIN_EN__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DUOBIN_EN__MASK                       0x1
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DUOBIN_EN__OFFSET                     6
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DELAY_N__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DELAY_N__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DELAY_N__READ(die, channel)         SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DELAY_N__GET(SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DELAY_N__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DELAY_N__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DELAY_N__MASK                       0x3
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_DELAY_N__OFFSET                     4
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_MU__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_MU__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_MU__READ(die, channel)         SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_MU__GET(SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_MU__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_MU__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_MU__MASK                       0xf
#  define SRM_RX_DSP_PAM4_REFLECTION_CANCELLER_CFG__PAM4RC_MU__OFFSET                     0

#define SRM_RX_DSP_PAM4_LDEQ_CFG__ADDRESS                      0x2853
#define SRM_RX_DSP_PAM4_LDEQ_CFG__DEFAULT                      0x7
#define SRM_RX_DSP_PAM4_LDEQ_CFG__ICOUNT                        3
#define SRM_RX_DSP_PAM4_LDEQ_CFG__ISPAN                         0x800
#define SRM_RX_DSP_PAM4_LDEQ_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PAM4_LDEQ_CFG__ADDRESS)
#define SRM_RX_DSP_PAM4_LDEQ_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PAM4_LDEQ_CFG__ADDRESS)
#define SRM_RX_DSP_PAM4_LDEQ_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PAM4_LDEQ_CFG__ADDRESS, (data))
#define SRM_RX_DSP_PAM4_LDEQ_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PAM4_LDEQ_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xffc0))
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3ff)
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_PAM4_LDEQ_CFG__RSRVD1__GET(SRM_RX_DSP_PAM4_LDEQ_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_LDEQ_CFG__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_LDEQ_CFG__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__RSRVD1__MASK                       0x3ff
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__RSRVD1__OFFSET                     6
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_COEF_RD_INDEX__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_COEF_RD_INDEX__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_COEF_RD_INDEX__READ(die, channel)         SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_COEF_RD_INDEX__GET(SRM_RX_DSP_PAM4_LDEQ_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_COEF_RD_INDEX__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_LDEQ_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_COEF_RD_INDEX__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_LDEQ_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_COEF_RD_INDEX__MASK                       0x3
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_COEF_RD_INDEX__OFFSET                     4
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_LMS_FORCE__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_LMS_FORCE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_LMS_FORCE__READ(die, channel)         SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_LMS_FORCE__GET(SRM_RX_DSP_PAM4_LDEQ_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_LMS_FORCE__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_LDEQ_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_LMS_FORCE__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_LDEQ_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_LMS_FORCE__MASK                       0x1
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_LMS_FORCE__OFFSET                     3
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_FIR_MU__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_FIR_MU__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_FIR_MU__READ(die, channel)         SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_FIR_MU__GET(SRM_RX_DSP_PAM4_LDEQ_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_FIR_MU__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_LDEQ_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_FIR_MU__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_LDEQ_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_FIR_MU__MASK                       0x7
#  define SRM_RX_DSP_PAM4_LDEQ_CFG__PAM4LDEQ_FIR_MU__OFFSET                     0

#define SRM_RX_DSP_PAM4_DEMAP_CFG__ADDRESS                      0x2856
#define SRM_RX_DSP_PAM4_DEMAP_CFG__DEFAULT                      0x2d
#define SRM_RX_DSP_PAM4_DEMAP_CFG__ICOUNT                        3
#define SRM_RX_DSP_PAM4_DEMAP_CFG__ISPAN                         0x800
#define SRM_RX_DSP_PAM4_DEMAP_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PAM4_DEMAP_CFG__ADDRESS)
#define SRM_RX_DSP_PAM4_DEMAP_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PAM4_DEMAP_CFG__ADDRESS)
#define SRM_RX_DSP_PAM4_DEMAP_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PAM4_DEMAP_CFG__ADDRESS, (data))
#define SRM_RX_DSP_PAM4_DEMAP_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PAM4_DEMAP_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__RSRVD1__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_PAM4_DEMAP_CFG__RSRVD1__GET(SRM_RX_DSP_PAM4_DEMAP_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DEMAP_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DEMAP_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__RSRVD1__MASK                       0xff
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__RSRVD1__OFFSET                     8
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__PAM4DMP_LUT__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__PAM4DMP_LUT__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__PAM4DMP_LUT__READ(die, channel)         SRM_RX_DSP_PAM4_DEMAP_CFG__PAM4DMP_LUT__GET(SRM_RX_DSP_PAM4_DEMAP_CFG__READ(die, channel))
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__PAM4DMP_LUT__WRITE(die, channel, fdata) SRM_RX_DSP_PAM4_DEMAP_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__PAM4DMP_LUT__RMW(die, channel, fdata) SRM_RX_DSP_PAM4_DEMAP_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__PAM4DMP_LUT__MASK                       0xff
#  define SRM_RX_DSP_PAM4_DEMAP_CFG__PAM4DMP_LUT__OFFSET                     0

#define SRM_RX_DSP_STM_ENABLE_CFG__ADDRESS                      0x2857
#define SRM_RX_DSP_STM_ENABLE_CFG__DEFAULT                      0x0
#define SRM_RX_DSP_STM_ENABLE_CFG__ICOUNT                        3
#define SRM_RX_DSP_STM_ENABLE_CFG__ISPAN                         0x800
#define SRM_RX_DSP_STM_ENABLE_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_STM_ENABLE_CFG__ADDRESS)
#define SRM_RX_DSP_STM_ENABLE_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_STM_ENABLE_CFG__ADDRESS)
#define SRM_RX_DSP_STM_ENABLE_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_STM_ENABLE_CFG__ADDRESS, (data))
#define SRM_RX_DSP_STM_ENABLE_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_STM_ENABLE_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_STM_ENABLE_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_RX_DSP_STM_ENABLE_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_RX_DSP_STM_ENABLE_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_STM_ENABLE_CFG__RSRVD1__GET(SRM_RX_DSP_STM_ENABLE_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_ENABLE_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_STM_ENABLE_CFG__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_RX_DSP_STM_ENABLE_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_STM_ENABLE_CFG__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_RX_DSP_STM_ENABLE_CFG__RSRVD1__MASK                       0x7fff
#  define SRM_RX_DSP_STM_ENABLE_CFG__RSRVD1__OFFSET                     1
#  define SRM_RX_DSP_STM_ENABLE_CFG__DSP_STM_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_DSP_STM_ENABLE_CFG__DSP_STM_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_DSP_STM_ENABLE_CFG__DSP_STM_EN__READ(die, channel)         SRM_RX_DSP_STM_ENABLE_CFG__DSP_STM_EN__GET(SRM_RX_DSP_STM_ENABLE_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_ENABLE_CFG__DSP_STM_EN__WRITE(die, channel, fdata) SRM_RX_DSP_STM_ENABLE_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_STM_ENABLE_CFG__DSP_STM_EN__RMW(die, channel, fdata) SRM_RX_DSP_STM_ENABLE_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_STM_ENABLE_CFG__DSP_STM_EN__MASK                       0x1
#  define SRM_RX_DSP_STM_ENABLE_CFG__DSP_STM_EN__OFFSET                     0

#define SRM_RX_DSP_PRBS_CFG1__ADDRESS                      0x288d
#define SRM_RX_DSP_PRBS_CFG1__DEFAULT                      0x400
#define SRM_RX_DSP_PRBS_CFG1__ICOUNT                        3
#define SRM_RX_DSP_PRBS_CFG1__ISPAN                         0x800
#define SRM_RX_DSP_PRBS_CFG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PRBS_CFG1__ADDRESS)
#define SRM_RX_DSP_PRBS_CFG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PRBS_CFG1__ADDRESS)
#define SRM_RX_DSP_PRBS_CFG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PRBS_CFG1__ADDRESS, (data))
#define SRM_RX_DSP_PRBS_CFG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PRBS_CFG1__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_ERR_TH_IRQ__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_ERR_TH_IRQ__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_ERR_TH_IRQ__READ(die, channel)         SRM_RX_DSP_PRBS_CFG1__PRBS_ERR_TH_IRQ__GET(SRM_RX_DSP_PRBS_CFG1__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_ERR_TH_IRQ__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_ERR_TH_IRQ__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_ERR_TH_IRQ__MASK                       0xff
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_ERR_TH_IRQ__OFFSET                     8
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_MODE__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_MODE__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_MODE__READ(die, channel)         SRM_RX_DSP_PRBS_CFG1__PRBS_MODE__GET(SRM_RX_DSP_PRBS_CFG1__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_MODE__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_MODE__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_MODE__MASK                       0x1
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_MODE__OFFSET                     7
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_STATUS_RD__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_STATUS_RD__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_STATUS_RD__READ(die, channel)         SRM_RX_DSP_PRBS_CFG1__PRBS_STATUS_RD__GET(SRM_RX_DSP_PRBS_CFG1__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_STATUS_RD__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_STATUS_RD__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_STATUS_RD__MASK                       0x1
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_STATUS_RD__OFFSET                     6
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_READ_64EO__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_READ_64EO__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_READ_64EO__READ(die, channel)         SRM_RX_DSP_PRBS_CFG1__PRBS_READ_64EO__GET(SRM_RX_DSP_PRBS_CFG1__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_READ_64EO__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_READ_64EO__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_READ_64EO__MASK                       0x1
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_READ_64EO__OFFSET                     5
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_EN__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_EN__READ(die, channel)         SRM_RX_DSP_PRBS_CFG1__PRBS_VER_EN__GET(SRM_RX_DSP_PRBS_CFG1__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_EN__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_EN__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_EN__MASK                       0x1
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_EN__OFFSET                     4
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64E__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64E__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64E__READ(die, channel)         SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64E__GET(SRM_RX_DSP_PRBS_CFG1__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64E__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64E__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64E__MASK                       0x1
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64E__OFFSET                     3
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64O__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64O__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64O__READ(die, channel)         SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64O__GET(SRM_RX_DSP_PRBS_CFG1__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64O__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64O__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64O__MASK                       0x1
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_64O__OFFSET                     2
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_128__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_128__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_128__READ(die, channel)         SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_128__GET(SRM_RX_DSP_PRBS_CFG1__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_128__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_128__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_128__MASK                       0x1
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_VER_INV_128__OFFSET                     1
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_AUTO_LOCK__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_AUTO_LOCK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_AUTO_LOCK__READ(die, channel)         SRM_RX_DSP_PRBS_CFG1__PRBS_AUTO_LOCK__GET(SRM_RX_DSP_PRBS_CFG1__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_AUTO_LOCK__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_AUTO_LOCK__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG1__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_AUTO_LOCK__MASK                       0x1
#  define SRM_RX_DSP_PRBS_CFG1__PRBS_AUTO_LOCK__OFFSET                     0

#define SRM_RX_DSP_PRBS_CFG2__ADDRESS                      0x288e
#define SRM_RX_DSP_PRBS_CFG2__DEFAULT                      0x111
#define SRM_RX_DSP_PRBS_CFG2__ICOUNT                        3
#define SRM_RX_DSP_PRBS_CFG2__ISPAN                         0x800
#define SRM_RX_DSP_PRBS_CFG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PRBS_CFG2__ADDRESS)
#define SRM_RX_DSP_PRBS_CFG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PRBS_CFG2__ADDRESS)
#define SRM_RX_DSP_PRBS_CFG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PRBS_CFG2__ADDRESS, (data))
#define SRM_RX_DSP_PRBS_CFG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PRBS_CFG2__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PRBS_CFG2__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_RX_DSP_PRBS_CFG2__RSRVD1__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_RX_DSP_PRBS_CFG2__RSRVD1__READ(die, channel)         SRM_RX_DSP_PRBS_CFG2__RSRVD1__GET(SRM_RX_DSP_PRBS_CFG2__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG2__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG2__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SRM_RX_DSP_PRBS_CFG2__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG2__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SRM_RX_DSP_PRBS_CFG2__RSRVD1__MASK                       0xf
#  define SRM_RX_DSP_PRBS_CFG2__RSRVD1__OFFSET                     12
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_128__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_128__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_128__READ(die, channel)         SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_128__GET(SRM_RX_DSP_PRBS_CFG2__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_128__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG2__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_128__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG2__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_128__MASK                       0xf
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_128__OFFSET                     8
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64O__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64O__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64O__READ(die, channel)         SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64O__GET(SRM_RX_DSP_PRBS_CFG2__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64O__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG2__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64O__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG2__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64O__MASK                       0xf
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64O__OFFSET                     4
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64E__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64E__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64E__READ(die, channel)         SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64E__GET(SRM_RX_DSP_PRBS_CFG2__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64E__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG2__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64E__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG2__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64E__MASK                       0xf
#  define SRM_RX_DSP_PRBS_CFG2__PRBS_VER_MODE_IN_64E__OFFSET                     0

#define SRM_RX_DSP_PRBS_CFG3__ADDRESS                      0x288f
#define SRM_RX_DSP_PRBS_CFG3__DEFAULT                      0x840
#define SRM_RX_DSP_PRBS_CFG3__ICOUNT                        3
#define SRM_RX_DSP_PRBS_CFG3__ISPAN                         0x800
#define SRM_RX_DSP_PRBS_CFG3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PRBS_CFG3__ADDRESS)
#define SRM_RX_DSP_PRBS_CFG3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PRBS_CFG3__ADDRESS)
#define SRM_RX_DSP_PRBS_CFG3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PRBS_CFG3__ADDRESS, (data))
#define SRM_RX_DSP_PRBS_CFG3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PRBS_CFG3__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PRBS_CFG3__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SRM_RX_DSP_PRBS_CFG3__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SRM_RX_DSP_PRBS_CFG3__RSRVD1__READ(die, channel)         SRM_RX_DSP_PRBS_CFG3__RSRVD1__GET(SRM_RX_DSP_PRBS_CFG3__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG3__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG3__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SRM_RX_DSP_PRBS_CFG3__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG3__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SRM_RX_DSP_PRBS_CFG3__RSRVD1__MASK                       0x3
#  define SRM_RX_DSP_PRBS_CFG3__RSRVD1__OFFSET                     14
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_ERR_TH_LOCK__SET(rdata, fdata)         (((rdata) & 0xc1ff) | (((uint32_t)(fdata) << 9) & 0x3e00))
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_ERR_TH_LOCK__GET(rdata)                (((rdata) >> 9) & 0x1f)
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_ERR_TH_LOCK__READ(die, channel)         SRM_RX_DSP_PRBS_CFG3__PRBS_ERR_TH_LOCK__GET(SRM_RX_DSP_PRBS_CFG3__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_ERR_TH_LOCK__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG3__RMW(die, (channel), (fdata)<<9, 0x3e00)
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_ERR_TH_LOCK__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG3__RMW(die, (channel), (fdata)<<9, 0x3e00)
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_ERR_TH_LOCK__MASK                       0x1f
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_ERR_TH_LOCK__OFFSET                     9
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_CYC_TH_LOCK__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_CYC_TH_LOCK__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_CYC_TH_LOCK__READ(die, channel)         SRM_RX_DSP_PRBS_CFG3__PRBS_CYC_TH_LOCK__GET(SRM_RX_DSP_PRBS_CFG3__READ(die, channel))
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_CYC_TH_LOCK__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_CFG3__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_CYC_TH_LOCK__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_CFG3__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_CYC_TH_LOCK__MASK                       0x1ff
#  define SRM_RX_DSP_PRBS_CFG3__PRBS_CYC_TH_LOCK__OFFSET                     0

#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__ADDRESS                      0x2890
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__DEFAULT                      0x0
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__ICOUNT                        3
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__ISPAN                         0x800
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__ADDRESS)
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__ADDRESS)
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__ADDRESS, (data))
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__PRBS_ERR_CNT_1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__PRBS_ERR_CNT_1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__PRBS_ERR_CNT_1__READ(die, channel)         SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__PRBS_ERR_CNT_1__GET(SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__READ(die, channel))
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__PRBS_ERR_CNT_1__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__PRBS_ERR_CNT_1__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__PRBS_ERR_CNT_1__MASK                       0xffff
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS1__PRBS_ERR_CNT_1__OFFSET                     0

#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__ADDRESS                      0x2891
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__DEFAULT                      0x0
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__ICOUNT                        3
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__ISPAN                         0x800
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__ADDRESS)
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__ADDRESS)
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__ADDRESS, (data))
#define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__PRBS_ERR_CNT_2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__PRBS_ERR_CNT_2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__PRBS_ERR_CNT_2__READ(die, channel)         SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__PRBS_ERR_CNT_2__GET(SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__READ(die, channel))
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__PRBS_ERR_CNT_2__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__PRBS_ERR_CNT_2__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__PRBS_ERR_CNT_2__MASK                       0xffff
#  define SRM_RX_DSP_PRBS_ERROR_COUNT_STATUS2__PRBS_ERR_CNT_2__OFFSET                     0

#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__ADDRESS                      0x2892
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__DEFAULT                      0x0
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__ICOUNT                        3
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__ISPAN                         0x800
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__ADDRESS)
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__ADDRESS)
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__ADDRESS, (data))
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__PRBS_ERRS_CYCLES__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__PRBS_ERRS_CYCLES__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__PRBS_ERRS_CYCLES__READ(die, channel)         SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__PRBS_ERRS_CYCLES__GET(SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__READ(die, channel))
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__PRBS_ERRS_CYCLES__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__PRBS_ERRS_CYCLES__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__PRBS_ERRS_CYCLES__MASK                       0xffff
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS0__PRBS_ERRS_CYCLES__OFFSET                     0

#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__ADDRESS                      0x2893
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__DEFAULT                      0x0
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__ICOUNT                        3
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__ISPAN                         0x800
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__ADDRESS)
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__ADDRESS)
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__ADDRESS, (data))
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__PRBS_ERRS_CYCLES__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__PRBS_ERRS_CYCLES__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__PRBS_ERRS_CYCLES__READ(die, channel)         SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__PRBS_ERRS_CYCLES__GET(SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__READ(die, channel))
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__PRBS_ERRS_CYCLES__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__PRBS_ERRS_CYCLES__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__PRBS_ERRS_CYCLES__MASK                       0xffff
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS1__PRBS_ERRS_CYCLES__OFFSET                     0

#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__ADDRESS                      0x2894
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__DEFAULT                      0x0
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__ICOUNT                        3
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__ISPAN                         0x800
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__ADDRESS)
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__ADDRESS)
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__ADDRESS, (data))
#define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__PRBS_ERRS_CYCLES__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__PRBS_ERRS_CYCLES__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__PRBS_ERRS_CYCLES__READ(die, channel)         SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__PRBS_ERRS_CYCLES__GET(SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__READ(die, channel))
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__PRBS_ERRS_CYCLES__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__PRBS_ERRS_CYCLES__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__PRBS_ERRS_CYCLES__MASK                       0xffff
#  define SRM_RX_DSP_PRBS_ERROR_CYCLES_STATUS2__PRBS_ERRS_CYCLES__OFFSET                     0

#define SRM_RX_DSP_PRBS_LOCK_STATUS__ADDRESS                      0x2897
#define SRM_RX_DSP_PRBS_LOCK_STATUS__DEFAULT                      0x0
#define SRM_RX_DSP_PRBS_LOCK_STATUS__ICOUNT                        3
#define SRM_RX_DSP_PRBS_LOCK_STATUS__ISPAN                         0x800
#define SRM_RX_DSP_PRBS_LOCK_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_PRBS_LOCK_STATUS__ADDRESS)
#define SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_PRBS_LOCK_STATUS__ADDRESS)
#define SRM_RX_DSP_PRBS_LOCK_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_PRBS_LOCK_STATUS__ADDRESS, (data))
#define SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_PRBS_LOCK_STATUS__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK__READ(die, channel)         SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK__GET(SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK__MASK                       0x1
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK__OFFSET                     15
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64O__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64O__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64O__READ(die, channel)         SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64O__GET(SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64O__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64O__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64O__MASK                       0x1
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64O__OFFSET                     14
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64E__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64E__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64E__READ(die, channel)         SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64E__GET(SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64E__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64E__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64E__MASK                       0x1
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_LOCK_64E__OFFSET                     13
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64O__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64O__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64O__READ(die, channel)         SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64O__GET(SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64O__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64O__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64O__MASK                       0x1
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64O__OFFSET                     12
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64E__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64E__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64E__READ(die, channel)         SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64E__GET(SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64E__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64E__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64E__MASK                       0x1
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV_64E__OFFSET                     11
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD1__READ(die, channel)         SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD1__GET(SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD1__MASK                       0x1
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD1__OFFSET                     10
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64O__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64O__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64O__READ(die, channel)         SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64O__GET(SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64O__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64O__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64O__MASK                       0x1
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64O__OFFSET                     9
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64E__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64E__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64E__READ(die, channel)         SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64E__GET(SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64E__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64E__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64E__MASK                       0x1
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT_64E__OFFSET                     8
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD2__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD2__READ(die, channel)         SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD2__GET(SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD2__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD2__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD2__MASK                       0x3
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__RSRVD2__OFFSET                     6
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT__READ(die, channel)         SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT__GET(SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT__MASK                       0x1
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_CNT_SAT__OFFSET                     5
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV__READ(die, channel)         SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV__GET(SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV__MASK                       0x1
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_INV__OFFSET                     4
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_VER_MODE_OUT__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_VER_MODE_OUT__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_VER_MODE_OUT__READ(die, channel)         SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_VER_MODE_OUT__GET(SRM_RX_DSP_PRBS_LOCK_STATUS__READ(die, channel))
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_VER_MODE_OUT__WRITE(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_VER_MODE_OUT__RMW(die, channel, fdata) SRM_RX_DSP_PRBS_LOCK_STATUS__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_VER_MODE_OUT__MASK                       0xf
#  define SRM_RX_DSP_PRBS_LOCK_STATUS__PRBS_VER_MODE_OUT__OFFSET                     0

#define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADDRESS                      0x2898
#define SRM_RX_DSP_ADC_OFFSET_MU_CFG__DEFAULT                      0x3c
#define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ICOUNT                        3
#define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ISPAN                         0x800
#define SRM_RX_DSP_ADC_OFFSET_MU_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADDRESS)
#define SRM_RX_DSP_ADC_OFFSET_MU_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADDRESS)
#define SRM_RX_DSP_ADC_OFFSET_MU_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADDRESS, (data))
#define SRM_RX_DSP_ADC_OFFSET_MU_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_ADC_OFFSET_MU_CFG__RSRVD1__GET(SRM_RX_DSP_ADC_OFFSET_MU_CFG__READ(die, channel))
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_ADC_OFFSET_MU_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_ADC_OFFSET_MU_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__RSRVD1__MASK                       0x7f
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__RSRVD1__OFFSET                     9
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_DATA__SET(rdata, fdata)         (((rdata) & 0xfe3f) | (((uint32_t)(fdata) << 6) & 0x1c0))
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_DATA__GET(rdata)                (((rdata) >> 6) & 0x7)
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_DATA__READ(die, channel)         SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_DATA__GET(SRM_RX_DSP_ADC_OFFSET_MU_CFG__READ(die, channel))
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_DATA__WRITE(die, channel, fdata) SRM_RX_DSP_ADC_OFFSET_MU_CFG__RMW(die, (channel), (fdata)<<6, 0x1c0)
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_DATA__RMW(die, channel, fdata) SRM_RX_DSP_ADC_OFFSET_MU_CFG__RMW(die, (channel), (fdata)<<6, 0x1c0)
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_DATA__MASK                       0x7
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_DATA__OFFSET                     6
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_FINE__SET(rdata, fdata)         (((rdata) & 0xffc7) | (((uint32_t)(fdata) << 3) & 0x38))
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_FINE__GET(rdata)                (((rdata) >> 3) & 0x7)
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_FINE__READ(die, channel)         SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_FINE__GET(SRM_RX_DSP_ADC_OFFSET_MU_CFG__READ(die, channel))
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_FINE__WRITE(die, channel, fdata) SRM_RX_DSP_ADC_OFFSET_MU_CFG__RMW(die, (channel), (fdata)<<3, 0x38)
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_FINE__RMW(die, channel, fdata) SRM_RX_DSP_ADC_OFFSET_MU_CFG__RMW(die, (channel), (fdata)<<3, 0x38)
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_FINE__MASK                       0x7
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_FINE__OFFSET                     3
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_COARSE__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_COARSE__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_COARSE__READ(die, channel)         SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_COARSE__GET(SRM_RX_DSP_ADC_OFFSET_MU_CFG__READ(die, channel))
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_COARSE__WRITE(die, channel, fdata) SRM_RX_DSP_ADC_OFFSET_MU_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_COARSE__RMW(die, channel, fdata) SRM_RX_DSP_ADC_OFFSET_MU_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_COARSE__MASK                       0x7
#  define SRM_RX_DSP_ADC_OFFSET_MU_CFG__ADC_FILT_MU_COARSE__OFFSET                     0

#define SRM_RX_DSP_ADC_SUBRATE_CFG__ADDRESS                      0x28a7
#define SRM_RX_DSP_ADC_SUBRATE_CFG__DEFAULT                      0x0
#define SRM_RX_DSP_ADC_SUBRATE_CFG__ICOUNT                        3
#define SRM_RX_DSP_ADC_SUBRATE_CFG__ISPAN                         0x800
#define SRM_RX_DSP_ADC_SUBRATE_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_ADC_SUBRATE_CFG__ADDRESS)
#define SRM_RX_DSP_ADC_SUBRATE_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_ADC_SUBRATE_CFG__ADDRESS)
#define SRM_RX_DSP_ADC_SUBRATE_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_ADC_SUBRATE_CFG__ADDRESS, (data))
#define SRM_RX_DSP_ADC_SUBRATE_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_ADC_SUBRATE_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_ADC_SUBRATE_CFG__RSRVD1__GET(SRM_RX_DSP_ADC_SUBRATE_CFG__READ(die, channel))
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_ADC_SUBRATE_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_ADC_SUBRATE_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__RSRVD1__MASK                       0x1fff
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__RSRVD1__OFFSET                     3
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__SUBRATE_RATIO__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__SUBRATE_RATIO__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__SUBRATE_RATIO__READ(die, channel)         SRM_RX_DSP_ADC_SUBRATE_CFG__SUBRATE_RATIO__GET(SRM_RX_DSP_ADC_SUBRATE_CFG__READ(die, channel))
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__SUBRATE_RATIO__WRITE(die, channel, fdata) SRM_RX_DSP_ADC_SUBRATE_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__SUBRATE_RATIO__RMW(die, channel, fdata) SRM_RX_DSP_ADC_SUBRATE_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__SUBRATE_RATIO__MASK                       0x7
#  define SRM_RX_DSP_ADC_SUBRATE_CFG__SUBRATE_RATIO__OFFSET                     0

#define SRM_RX_DSP_CLOCK_GATING_CFG1__ADDRESS                      0x28d3
#define SRM_RX_DSP_CLOCK_GATING_CFG1__DEFAULT                      0x0
#define SRM_RX_DSP_CLOCK_GATING_CFG1__ICOUNT                        3
#define SRM_RX_DSP_CLOCK_GATING_CFG1__ISPAN                         0x800
#define SRM_RX_DSP_CLOCK_GATING_CFG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_CLOCK_GATING_CFG1__ADDRESS)
#define SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_CLOCK_GATING_CFG1__ADDRESS)
#define SRM_RX_DSP_CLOCK_GATING_CFG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_CLOCK_GATING_CFG1__ADDRESS, (data))
#define SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_CLOCK_GATING_CFG1__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__EG2_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__EG2_CLK_ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__EG2_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__EG2_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__EG2_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__EG2_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__EG2_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__EG2_CLK_ENABLE__OFFSET                     15
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RSRVD1__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__RSRVD1__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RSRVD1__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RSRVD1__OFFSET                     14
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC2_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC2_CLK_ENABLE__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC2_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__SLC2_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC2_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC2_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC2_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC2_CLK_ENABLE__OFFSET                     13
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DFE_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DFE_CLK_ENABLE__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DFE_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__DFE_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DFE_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DFE_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DFE_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DFE_CLK_ENABLE__OFFSET                     12
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC_CLK_ENABLE__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__SLC_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SLC_CLK_ENABLE__OFFSET                     11
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__PGA_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__PGA_CLK_ENABLE__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__PGA_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__PGA_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__PGA_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__PGA_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__PGA_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__PGA_CLK_ENABLE__OFFSET                     10
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__TOC_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__TOC_CLK_ENABLE__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__TOC_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__TOC_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__TOC_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__TOC_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__TOC_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__TOC_CLK_ENABLE__OFFSET                     9
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__HIST_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__HIST_CLK_ENABLE__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__HIST_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__HIST_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__HIST_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__HIST_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__HIST_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__HIST_CLK_ENABLE__OFFSET                     8
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SNR_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SNR_CLK_ENABLE__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SNR_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__SNR_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SNR_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SNR_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SNR_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__SNR_CLK_ENABLE__OFFSET                     7
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RCM_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RCM_CLK_ENABLE__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RCM_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__RCM_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RCM_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RCM_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RCM_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__RCM_CLK_ENABLE__OFFSET                     6
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2L_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2L_CLK_ENABLE__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2L_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__FE2L_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2L_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2L_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2L_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2L_CLK_ENABLE__OFFSET                     5
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2T_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2T_CLK_ENABLE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2T_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__FE2T_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2T_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2T_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2T_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2T_CLK_ENABLE__OFFSET                     4
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2_CLK_ENABLE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__FE2_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE2_CLK_ENABLE__OFFSET                     3
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE1_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE1_CLK_ENABLE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE1_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__FE1_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE1_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE1_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE1_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__FE1_CLK_ENABLE__OFFSET                     2
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DTL_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DTL_CLK_ENABLE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DTL_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__DTL_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DTL_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DTL_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DTL_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DTL_CLK_ENABLE__OFFSET                     1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DSP_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DSP_CLK_ENABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DSP_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG1__DSP_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG1__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DSP_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DSP_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG1__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DSP_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG1__DSP_CLK_ENABLE__OFFSET                     0

#define SRM_RX_DSP_CLOCK_GATING_CFG2__ADDRESS                      0x28d4
#define SRM_RX_DSP_CLOCK_GATING_CFG2__DEFAULT                      0x0
#define SRM_RX_DSP_CLOCK_GATING_CFG2__ICOUNT                        3
#define SRM_RX_DSP_CLOCK_GATING_CFG2__ISPAN                         0x800
#define SRM_RX_DSP_CLOCK_GATING_CFG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_CLOCK_GATING_CFG2__ADDRESS)
#define SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_CLOCK_GATING_CFG2__ADDRESS)
#define SRM_RX_DSP_CLOCK_GATING_CFG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_CLOCK_GATING_CFG2__ADDRESS, (data))
#define SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_CLOCK_GATING_CFG2__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADC_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADC_CLK_ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADC_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__ADC_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADC_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADC_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADC_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADC_CLK_ENABLE__OFFSET                     15
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__IPP_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__IPP_CLK_ENABLE__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__IPP_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__IPP_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__IPP_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__IPP_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__IPP_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__IPP_CLK_ENABLE__OFFSET                     14
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__DTL_CKOUT_ENABLE__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__DTL_CKOUT_ENABLE__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__DTL_CKOUT_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__DTL_CKOUT_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__DTL_CKOUT_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__DTL_CKOUT_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__DTL_CKOUT_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__DTL_CKOUT_ENABLE__OFFSET                     13
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__TRK_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__TRK_CLK_ENABLE__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__TRK_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__TRK_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__TRK_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__TRK_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__TRK_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__TRK_CLK_ENABLE__OFFSET                     12
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCX_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCX_CLK_ENABLE__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCX_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__RCX_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCX_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCX_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCX_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCX_CLK_ENABLE__OFFSET                     11
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCD_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCD_CLK_ENABLE__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCD_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__RCD_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCD_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCD_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCD_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RCD_CLK_ENABLE__OFFSET                     10
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LPBACK_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LPBACK_CLK_ENABLE__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LPBACK_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__LPBACK_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LPBACK_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LPBACK_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LPBACK_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LPBACK_CLK_ENABLE__OFFSET                     9
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDEBUG_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDEBUG_CLK_ENABLE__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDEBUG_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__HSDEBUG_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDEBUG_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDEBUG_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDEBUG_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDEBUG_CLK_ENABLE__OFFSET                     8
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__SFEC_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__SFEC_CLK_ENABLE__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__SFEC_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__SFEC_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__SFEC_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__SFEC_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__SFEC_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__SFEC_CLK_ENABLE__OFFSET                     7
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LDEQ_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LDEQ_CLK_ENABLE__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LDEQ_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__LDEQ_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LDEQ_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LDEQ_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LDEQ_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__LDEQ_CLK_ENABLE__OFFSET                     6
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADCIN_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADCIN_CLK_ENABLE__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADCIN_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__ADCIN_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADCIN_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADCIN_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADCIN_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__ADCIN_CLK_ENABLE__OFFSET                     5
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDAC_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDAC_CLK_ENABLE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDAC_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__HSDAC_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDAC_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDAC_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDAC_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__HSDAC_CLK_ENABLE__OFFSET                     4
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RXPI_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RXPI_CLK_ENABLE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RXPI_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__RXPI_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RXPI_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RXPI_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RXPI_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__RXPI_CLK_ENABLE__OFFSET                     3
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__STM_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__STM_CLK_ENABLE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__STM_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__STM_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__STM_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__STM_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__STM_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__STM_CLK_ENABLE__OFFSET                     2
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__MMT_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__MMT_CLK_ENABLE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__MMT_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__MMT_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__MMT_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__MMT_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__MMT_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__MMT_CLK_ENABLE__OFFSET                     1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__PRBS_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__PRBS_CLK_ENABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__PRBS_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG2__PRBS_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG2__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__PRBS_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__PRBS_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG2__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__PRBS_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG2__PRBS_CLK_ENABLE__OFFSET                     0

#define SRM_RX_DSP_CLOCK_GATING_CFG3__ADDRESS                      0x28d5
#define SRM_RX_DSP_CLOCK_GATING_CFG3__DEFAULT                      0x0
#define SRM_RX_DSP_CLOCK_GATING_CFG3__ICOUNT                        3
#define SRM_RX_DSP_CLOCK_GATING_CFG3__ISPAN                         0x800
#define SRM_RX_DSP_CLOCK_GATING_CFG3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_CLOCK_GATING_CFG3__ADDRESS)
#define SRM_RX_DSP_CLOCK_GATING_CFG3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_CLOCK_GATING_CFG3__ADDRESS)
#define SRM_RX_DSP_CLOCK_GATING_CFG3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_CLOCK_GATING_CFG3__ADDRESS, (data))
#define SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_CLOCK_GATING_CFG3__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__RSRVD1__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG3__RSRVD1__GET(SRM_RX_DSP_CLOCK_GATING_CFG3__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__RSRVD1__MASK                       0x7ff
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__RSRVD1__OFFSET                     5
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE2_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE2_CLK_ENABLE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE2_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE2_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG3__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE2_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE2_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE2_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE2_CLK_ENABLE__OFFSET                     4
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE2_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE2_CLK_ENABLE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE2_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE2_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG3__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE2_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE2_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE2_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE2_CLK_ENABLE__OFFSET                     3
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE1_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE1_CLK_ENABLE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE1_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE1_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG3__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE1_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE1_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE1_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__LPDFE1_CLK_ENABLE__OFFSET                     2
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE1_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE1_CLK_ENABLE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE1_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE1_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG3__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE1_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE1_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE1_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__NLPDFE1_CLK_ENABLE__OFFSET                     1
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__ANLT_CLK_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__ANLT_CLK_ENABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__ANLT_CLK_ENABLE__READ(die, channel)         SRM_RX_DSP_CLOCK_GATING_CFG3__ANLT_CLK_ENABLE__GET(SRM_RX_DSP_CLOCK_GATING_CFG3__READ(die, channel))
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__ANLT_CLK_ENABLE__WRITE(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__ANLT_CLK_ENABLE__RMW(die, channel, fdata) SRM_RX_DSP_CLOCK_GATING_CFG3__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__ANLT_CLK_ENABLE__MASK                       0x1
#  define SRM_RX_DSP_CLOCK_GATING_CFG3__ANLT_CLK_ENABLE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH0__ADDRESS                      0x295d
#define SRM_RX_DSP_SCRATCH0__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH0__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH0__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH0__ADDRESS)
#define SRM_RX_DSP_SCRATCH0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH0__ADDRESS)
#define SRM_RX_DSP_SCRATCH0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH0__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH0__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH0__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH0__VALUE__GET(SRM_RX_DSP_SCRATCH0__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH0__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH0__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH0__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH0__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH1__ADDRESS                      0x295e
#define SRM_RX_DSP_SCRATCH1__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH1__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH1__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH1__ADDRESS)
#define SRM_RX_DSP_SCRATCH1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH1__ADDRESS)
#define SRM_RX_DSP_SCRATCH1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH1__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH1__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH1__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH1__VALUE__GET(SRM_RX_DSP_SCRATCH1__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH1__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH1__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH1__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH1__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH2__ADDRESS                      0x295f
#define SRM_RX_DSP_SCRATCH2__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH2__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH2__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH2__ADDRESS)
#define SRM_RX_DSP_SCRATCH2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH2__ADDRESS)
#define SRM_RX_DSP_SCRATCH2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH2__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH2__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH2__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH2__VALUE__GET(SRM_RX_DSP_SCRATCH2__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH2__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH2__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH2__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH2__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH3__ADDRESS                      0x2960
#define SRM_RX_DSP_SCRATCH3__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH3__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH3__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH3__ADDRESS)
#define SRM_RX_DSP_SCRATCH3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH3__ADDRESS)
#define SRM_RX_DSP_SCRATCH3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH3__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH3__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH3__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH3__VALUE__GET(SRM_RX_DSP_SCRATCH3__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH3__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH3__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH3__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH3__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH4__ADDRESS                      0x2961
#define SRM_RX_DSP_SCRATCH4__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH4__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH4__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH4__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH4__ADDRESS)
#define SRM_RX_DSP_SCRATCH4__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH4__ADDRESS)
#define SRM_RX_DSP_SCRATCH4__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH4__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH4__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH4__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH4__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH4__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH4__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH4__VALUE__GET(SRM_RX_DSP_SCRATCH4__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH4__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH4__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH4__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH4__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH5__ADDRESS                      0x2962
#define SRM_RX_DSP_SCRATCH5__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH5__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH5__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH5__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH5__ADDRESS)
#define SRM_RX_DSP_SCRATCH5__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH5__ADDRESS)
#define SRM_RX_DSP_SCRATCH5__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH5__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH5__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH5__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH5__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH5__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH5__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH5__VALUE__GET(SRM_RX_DSP_SCRATCH5__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH5__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH5__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH5__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH5__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH6__ADDRESS                      0x2963
#define SRM_RX_DSP_SCRATCH6__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH6__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH6__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH6__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH6__ADDRESS)
#define SRM_RX_DSP_SCRATCH6__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH6__ADDRESS)
#define SRM_RX_DSP_SCRATCH6__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH6__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH6__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH6__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH6__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH6__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH6__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH6__VALUE__GET(SRM_RX_DSP_SCRATCH6__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH6__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH6__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH6__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH6__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH7__ADDRESS                      0x2964
#define SRM_RX_DSP_SCRATCH7__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH7__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH7__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH7__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH7__ADDRESS)
#define SRM_RX_DSP_SCRATCH7__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH7__ADDRESS)
#define SRM_RX_DSP_SCRATCH7__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH7__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH7__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH7__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH7__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH7__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH7__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH7__VALUE__GET(SRM_RX_DSP_SCRATCH7__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH7__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH7__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH7__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH7__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH8__ADDRESS                      0x2965
#define SRM_RX_DSP_SCRATCH8__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH8__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH8__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH8__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH8__ADDRESS)
#define SRM_RX_DSP_SCRATCH8__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH8__ADDRESS)
#define SRM_RX_DSP_SCRATCH8__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH8__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH8__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH8__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH8__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH8__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH8__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH8__VALUE__GET(SRM_RX_DSP_SCRATCH8__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH8__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH8__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH8__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH8__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH9__ADDRESS                      0x2966
#define SRM_RX_DSP_SCRATCH9__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH9__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH9__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH9__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH9__ADDRESS)
#define SRM_RX_DSP_SCRATCH9__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH9__ADDRESS)
#define SRM_RX_DSP_SCRATCH9__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH9__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH9__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH9__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH9__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH9__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH9__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH9__VALUE__GET(SRM_RX_DSP_SCRATCH9__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH9__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH9__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH9__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH9__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH10__ADDRESS                      0x2967
#define SRM_RX_DSP_SCRATCH10__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH10__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH10__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH10__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH10__ADDRESS)
#define SRM_RX_DSP_SCRATCH10__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH10__ADDRESS)
#define SRM_RX_DSP_SCRATCH10__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH10__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH10__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH10__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH10__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH10__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH10__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH10__VALUE__GET(SRM_RX_DSP_SCRATCH10__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH10__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH10__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH10__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH10__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH10__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH10__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH11__ADDRESS                      0x2968
#define SRM_RX_DSP_SCRATCH11__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH11__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH11__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH11__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH11__ADDRESS)
#define SRM_RX_DSP_SCRATCH11__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH11__ADDRESS)
#define SRM_RX_DSP_SCRATCH11__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH11__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH11__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH11__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH11__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH11__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH11__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH11__VALUE__GET(SRM_RX_DSP_SCRATCH11__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH11__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH11__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH11__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH11__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH11__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH11__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH12__ADDRESS                      0x2969
#define SRM_RX_DSP_SCRATCH12__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH12__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH12__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH12__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH12__ADDRESS)
#define SRM_RX_DSP_SCRATCH12__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH12__ADDRESS)
#define SRM_RX_DSP_SCRATCH12__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH12__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH12__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH12__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH12__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH12__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH12__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH12__VALUE__GET(SRM_RX_DSP_SCRATCH12__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH12__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH12__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH12__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH12__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH12__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH12__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH13__ADDRESS                      0x296a
#define SRM_RX_DSP_SCRATCH13__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH13__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH13__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH13__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH13__ADDRESS)
#define SRM_RX_DSP_SCRATCH13__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH13__ADDRESS)
#define SRM_RX_DSP_SCRATCH13__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH13__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH13__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH13__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH13__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH13__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH13__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH13__VALUE__GET(SRM_RX_DSP_SCRATCH13__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH13__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH13__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH13__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH13__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH13__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH13__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH14__ADDRESS                      0x296b
#define SRM_RX_DSP_SCRATCH14__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH14__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH14__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH14__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH14__ADDRESS)
#define SRM_RX_DSP_SCRATCH14__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH14__ADDRESS)
#define SRM_RX_DSP_SCRATCH14__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH14__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH14__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH14__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH14__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH14__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH14__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH14__VALUE__GET(SRM_RX_DSP_SCRATCH14__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH14__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH14__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH14__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH14__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH14__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH14__VALUE__OFFSET                     0

#define SRM_RX_DSP_SCRATCH15__ADDRESS                      0x296c
#define SRM_RX_DSP_SCRATCH15__DEFAULT                      0x0
#define SRM_RX_DSP_SCRATCH15__ICOUNT                        3
#define SRM_RX_DSP_SCRATCH15__ISPAN                         0x800
#define SRM_RX_DSP_SCRATCH15__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_SCRATCH15__ADDRESS)
#define SRM_RX_DSP_SCRATCH15__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_SCRATCH15__ADDRESS)
#define SRM_RX_DSP_SCRATCH15__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_SCRATCH15__ADDRESS, (data))
#define SRM_RX_DSP_SCRATCH15__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_SCRATCH15__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_SCRATCH15__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_DSP_SCRATCH15__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_DSP_SCRATCH15__VALUE__READ(die, channel)         SRM_RX_DSP_SCRATCH15__VALUE__GET(SRM_RX_DSP_SCRATCH15__READ(die, channel))
#  define SRM_RX_DSP_SCRATCH15__VALUE__WRITE(die, channel, fdata) SRM_RX_DSP_SCRATCH15__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH15__VALUE__RMW(die, channel, fdata) SRM_RX_DSP_SCRATCH15__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_DSP_SCRATCH15__VALUE__MASK                       0xffff
#  define SRM_RX_DSP_SCRATCH15__VALUE__OFFSET                     0

#define SRM_RX_DSP_STM_RESET_CFG__ADDRESS                      0x2a00
#define SRM_RX_DSP_STM_RESET_CFG__DEFAULT                      0x0
#define SRM_RX_DSP_STM_RESET_CFG__ICOUNT                        3
#define SRM_RX_DSP_STM_RESET_CFG__ISPAN                         0x800
#define SRM_RX_DSP_STM_RESET_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_STM_RESET_CFG__ADDRESS)
#define SRM_RX_DSP_STM_RESET_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_STM_RESET_CFG__ADDRESS)
#define SRM_RX_DSP_STM_RESET_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_STM_RESET_CFG__ADDRESS, (data))
#define SRM_RX_DSP_STM_RESET_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_STM_RESET_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_STM_RESET_CFG__SFEC_RESET__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_RX_DSP_STM_RESET_CFG__SFEC_RESET__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__SFEC_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__SFEC_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__SFEC_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_DSP_STM_RESET_CFG__SFEC_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_DSP_STM_RESET_CFG__SFEC_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__SFEC_RESET__OFFSET                     15
#  define SRM_RX_DSP_STM_RESET_CFG__DSM_RESET__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_RX_DSP_STM_RESET_CFG__DSM_RESET__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__DSM_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__DSM_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__DSM_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_DSP_STM_RESET_CFG__DSM_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_DSP_STM_RESET_CFG__DSM_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__DSM_RESET__OFFSET                     14
#  define SRM_RX_DSP_STM_RESET_CFG__ADCIN_RESET__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_RX_DSP_STM_RESET_CFG__ADCIN_RESET__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__ADCIN_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__ADCIN_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__ADCIN_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_RX_DSP_STM_RESET_CFG__ADCIN_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_RX_DSP_STM_RESET_CFG__ADCIN_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__ADCIN_RESET__OFFSET                     13
#  define SRM_RX_DSP_STM_RESET_CFG__STM_RESET__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_RX_DSP_STM_RESET_CFG__STM_RESET__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__STM_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__STM_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__STM_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_DSP_STM_RESET_CFG__STM_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_DSP_STM_RESET_CFG__STM_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__STM_RESET__OFFSET                     12
#  define SRM_RX_DSP_STM_RESET_CFG__SDT_RESET__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_RX_DSP_STM_RESET_CFG__SDT_RESET__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__SDT_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__SDT_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__SDT_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_DSP_STM_RESET_CFG__SDT_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_DSP_STM_RESET_CFG__SDT_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__SDT_RESET__OFFSET                     11
#  define SRM_RX_DSP_STM_RESET_CFG__DBG_RESET__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_RX_DSP_STM_RESET_CFG__DBG_RESET__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__DBG_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__DBG_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__DBG_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_STM_RESET_CFG__DBG_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_STM_RESET_CFG__DBG_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__DBG_RESET__OFFSET                     10
#  define SRM_RX_DSP_STM_RESET_CFG__PRBS_RESET__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_RX_DSP_STM_RESET_CFG__PRBS_RESET__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__PRBS_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__PRBS_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__PRBS_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_DSP_STM_RESET_CFG__PRBS_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_DSP_STM_RESET_CFG__PRBS_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__PRBS_RESET__OFFSET                     9
#  define SRM_RX_DSP_STM_RESET_CFG__DTL_RESET__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_RX_DSP_STM_RESET_CFG__DTL_RESET__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__DTL_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__DTL_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__DTL_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_DSP_STM_RESET_CFG__DTL_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_DSP_STM_RESET_CFG__DTL_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__DTL_RESET__OFFSET                     8
#  define SRM_RX_DSP_STM_RESET_CFG__PGA_RESET__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_RX_DSP_STM_RESET_CFG__PGA_RESET__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__PGA_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__PGA_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__PGA_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_STM_RESET_CFG__PGA_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_STM_RESET_CFG__PGA_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__PGA_RESET__OFFSET                     7
#  define SRM_RX_DSP_STM_RESET_CFG__SNR_RESET__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_RX_DSP_STM_RESET_CFG__SNR_RESET__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__SNR_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__SNR_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__SNR_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_STM_RESET_CFG__SNR_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_STM_RESET_CFG__SNR_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__SNR_RESET__OFFSET                     6
#  define SRM_RX_DSP_STM_RESET_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_DSP_STM_RESET_CFG__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__RSRVD1__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_STM_RESET_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_STM_RESET_CFG__RSRVD1__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__RSRVD1__OFFSET                     5
#  define SRM_RX_DSP_STM_RESET_CFG__HIST_RESET__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_DSP_STM_RESET_CFG__HIST_RESET__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__HIST_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__HIST_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__HIST_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_STM_RESET_CFG__HIST_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_STM_RESET_CFG__HIST_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__HIST_RESET__OFFSET                     4
#  define SRM_RX_DSP_STM_RESET_CFG__TOC_RESET__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_DSP_STM_RESET_CFG__TOC_RESET__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__TOC_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__TOC_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__TOC_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_STM_RESET_CFG__TOC_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_STM_RESET_CFG__TOC_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__TOC_RESET__OFFSET                     3
#  define SRM_RX_DSP_STM_RESET_CFG__PI_RESET__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_DSP_STM_RESET_CFG__PI_RESET__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__PI_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__PI_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__PI_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_STM_RESET_CFG__PI_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_STM_RESET_CFG__PI_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__PI_RESET__OFFSET                     2
#  define SRM_RX_DSP_STM_RESET_CFG__DSP_RESET__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_DSP_STM_RESET_CFG__DSP_RESET__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__DSP_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__DSP_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__DSP_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_STM_RESET_CFG__DSP_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_STM_RESET_CFG__DSP_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__DSP_RESET__OFFSET                     1
#  define SRM_RX_DSP_STM_RESET_CFG__SOFT_RESET__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_DSP_STM_RESET_CFG__SOFT_RESET__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__SOFT_RESET__READ(die, channel)         SRM_RX_DSP_STM_RESET_CFG__SOFT_RESET__GET(SRM_RX_DSP_STM_RESET_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_RESET_CFG__SOFT_RESET__WRITE(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__SOFT_RESET__RMW(die, channel, fdata) SRM_RX_DSP_STM_RESET_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_STM_RESET_CFG__SOFT_RESET__MASK                       0x1
#  define SRM_RX_DSP_STM_RESET_CFG__SOFT_RESET__OFFSET                     0

#define SRM_RX_DSP_STM_DSP_CFG__ADDRESS                      0x2a01
#define SRM_RX_DSP_STM_DSP_CFG__DEFAULT                      0x1c0a
#define SRM_RX_DSP_STM_DSP_CFG__ICOUNT                        3
#define SRM_RX_DSP_STM_DSP_CFG__ISPAN                         0x800
#define SRM_RX_DSP_STM_DSP_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_STM_DSP_CFG__ADDRESS)
#define SRM_RX_DSP_STM_DSP_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_STM_DSP_CFG__ADDRESS)
#define SRM_RX_DSP_STM_DSP_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_STM_DSP_CFG__ADDRESS, (data))
#define SRM_RX_DSP_STM_DSP_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_STM_DSP_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_STM_DSP_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SRM_RX_DSP_STM_DSP_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SRM_RX_DSP_STM_DSP_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__RSRVD1__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SRM_RX_DSP_STM_DSP_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SRM_RX_DSP_STM_DSP_CFG__RSRVD1__MASK                       0x7
#  define SRM_RX_DSP_STM_DSP_CFG__RSRVD1__OFFSET                     13
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_ADAPT_FULLSPEED__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_ADAPT_FULLSPEED__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_ADAPT_FULLSPEED__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__TOC_ADAPT_FULLSPEED__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_ADAPT_FULLSPEED__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_ADAPT_FULLSPEED__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_ADAPT_FULLSPEED__MASK                       0x1
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_ADAPT_FULLSPEED__OFFSET                     12
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_ADAPT_FULLSPEED__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_ADAPT_FULLSPEED__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_ADAPT_FULLSPEED__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_ADAPT_FULLSPEED__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_ADAPT_FULLSPEED__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_ADAPT_FULLSPEED__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_ADAPT_FULLSPEED__MASK                       0x1
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_ADAPT_FULLSPEED__OFFSET                     11
#  define SRM_RX_DSP_STM_DSP_CFG__DCCM_ADAPT_FULLSPEED__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_RX_DSP_STM_DSP_CFG__DCCM_ADAPT_FULLSPEED__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__DCCM_ADAPT_FULLSPEED__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__DCCM_ADAPT_FULLSPEED__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__DCCM_ADAPT_FULLSPEED__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_STM_DSP_CFG__DCCM_ADAPT_FULLSPEED__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_RX_DSP_STM_DSP_CFG__DCCM_ADAPT_FULLSPEED__MASK                       0x1
#  define SRM_RX_DSP_STM_DSP_CFG__DCCM_ADAPT_FULLSPEED__OFFSET                     10
#  define SRM_RX_DSP_STM_DSP_CFG__FFE2_ADAPT_WAITTIME__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_RX_DSP_STM_DSP_CFG__FFE2_ADAPT_WAITTIME__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_RX_DSP_STM_DSP_CFG__FFE2_ADAPT_WAITTIME__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__FFE2_ADAPT_WAITTIME__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__FFE2_ADAPT_WAITTIME__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SRM_RX_DSP_STM_DSP_CFG__FFE2_ADAPT_WAITTIME__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SRM_RX_DSP_STM_DSP_CFG__FFE2_ADAPT_WAITTIME__MASK                       0x3
#  define SRM_RX_DSP_STM_DSP_CFG__FFE2_ADAPT_WAITTIME__OFFSET                     8
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_LMS_MODE__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_LMS_MODE__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_LMS_MODE__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_LMS_MODE__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_LMS_MODE__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_LMS_MODE__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_LMS_MODE__MASK                       0x1
#  define SRM_RX_DSP_STM_DSP_CFG__PAM4DFE_LMS_MODE__OFFSET                     7
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_GAIN_MODE__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_GAIN_MODE__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_GAIN_MODE__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__FFE_GAIN_MODE__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_GAIN_MODE__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_GAIN_MODE__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_GAIN_MODE__MASK                       0x1
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_GAIN_MODE__OFFSET                     6
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_FIR_MODE__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_FIR_MODE__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_FIR_MODE__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__FFE_FIR_MODE__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_FIR_MODE__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_FIR_MODE__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_FIR_MODE__MASK                       0x1
#  define SRM_RX_DSP_STM_DSP_CFG__FFE_FIR_MODE__OFFSET                     5
#  define SRM_RX_DSP_STM_DSP_CFG__DTL_TED_SELECT__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_DSP_STM_DSP_CFG__DTL_TED_SELECT__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__DTL_TED_SELECT__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__DTL_TED_SELECT__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__DTL_TED_SELECT__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_STM_DSP_CFG__DTL_TED_SELECT__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_DSP_STM_DSP_CFG__DTL_TED_SELECT__MASK                       0x1
#  define SRM_RX_DSP_STM_DSP_CFG__DTL_TED_SELECT__OFFSET                     4
#  define SRM_RX_DSP_STM_DSP_CFG__ADCIN_LMS_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_DSP_STM_DSP_CFG__ADCIN_LMS_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__ADCIN_LMS_EN__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__ADCIN_LMS_EN__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__ADCIN_LMS_EN__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_STM_DSP_CFG__ADCIN_LMS_EN__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_DSP_STM_DSP_CFG__ADCIN_LMS_EN__MASK                       0x1
#  define SRM_RX_DSP_STM_DSP_CFG__ADCIN_LMS_EN__OFFSET                     3
#  define SRM_RX_DSP_STM_DSP_CFG__PGA_CTRL_EN__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_DSP_STM_DSP_CFG__PGA_CTRL_EN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__PGA_CTRL_EN__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__PGA_CTRL_EN__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__PGA_CTRL_EN__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_STM_DSP_CFG__PGA_CTRL_EN__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_DSP_STM_DSP_CFG__PGA_CTRL_EN__MASK                       0x1
#  define SRM_RX_DSP_STM_DSP_CFG__PGA_CTRL_EN__OFFSET                     2
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_EN__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__TOC_EN__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_EN__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_EN__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_EN__MASK                       0x1
#  define SRM_RX_DSP_STM_DSP_CFG__TOC_EN__OFFSET                     1
#  define SRM_RX_DSP_STM_DSP_CFG__SNRM_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_DSP_STM_DSP_CFG__SNRM_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__SNRM_EN__READ(die, channel)         SRM_RX_DSP_STM_DSP_CFG__SNRM_EN__GET(SRM_RX_DSP_STM_DSP_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DSP_CFG__SNRM_EN__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__SNRM_EN__RMW(die, channel, fdata) SRM_RX_DSP_STM_DSP_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_DSP_STM_DSP_CFG__SNRM_EN__MASK                       0x1
#  define SRM_RX_DSP_STM_DSP_CFG__SNRM_EN__OFFSET                     0

#define SRM_RX_DSP_STM_PGA_GAIN_CFG__ADDRESS                      0x2a02
#define SRM_RX_DSP_STM_PGA_GAIN_CFG__DEFAULT                      0x80
#define SRM_RX_DSP_STM_PGA_GAIN_CFG__ICOUNT                        3
#define SRM_RX_DSP_STM_PGA_GAIN_CFG__ISPAN                         0x800
#define SRM_RX_DSP_STM_PGA_GAIN_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_STM_PGA_GAIN_CFG__ADDRESS)
#define SRM_RX_DSP_STM_PGA_GAIN_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_STM_PGA_GAIN_CFG__ADDRESS)
#define SRM_RX_DSP_STM_PGA_GAIN_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_STM_PGA_GAIN_CFG__ADDRESS, (data))
#define SRM_RX_DSP_STM_PGA_GAIN_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_STM_PGA_GAIN_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_SEL__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_SEL__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_SEL__READ(die, channel)         SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_SEL__GET(SRM_RX_DSP_STM_PGA_GAIN_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_SEL__WRITE(die, channel, fdata) SRM_RX_DSP_STM_PGA_GAIN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_SEL__RMW(die, channel, fdata) SRM_RX_DSP_STM_PGA_GAIN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_SEL__MASK                       0x1
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_SEL__OFFSET                     15
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_IDX__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_IDX__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_IDX__READ(die, channel)         SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_IDX__GET(SRM_RX_DSP_STM_PGA_GAIN_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_IDX__WRITE(die, channel, fdata) SRM_RX_DSP_STM_PGA_GAIN_CFG__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_IDX__RMW(die, channel, fdata) SRM_RX_DSP_STM_PGA_GAIN_CFG__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_IDX__MASK                       0x1f
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__PGA_ONE_CHANNEL_IDX__OFFSET                     10
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__AFE_TRIM__SET(rdata, fdata)         (((rdata) & 0xfc1f) | (((uint32_t)(fdata) << 5) & 0x3e0))
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__AFE_TRIM__GET(rdata)                (((rdata) >> 5) & 0x1f)
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__AFE_TRIM__READ(die, channel)         SRM_RX_DSP_STM_PGA_GAIN_CFG__AFE_TRIM__GET(SRM_RX_DSP_STM_PGA_GAIN_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__AFE_TRIM__WRITE(die, channel, fdata) SRM_RX_DSP_STM_PGA_GAIN_CFG__RMW(die, (channel), (fdata)<<5, 0x3e0)
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__AFE_TRIM__RMW(die, channel, fdata) SRM_RX_DSP_STM_PGA_GAIN_CFG__RMW(die, (channel), (fdata)<<5, 0x3e0)
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__AFE_TRIM__MASK                       0x1f
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__AFE_TRIM__OFFSET                     5
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_STM_PGA_GAIN_CFG__RSRVD1__GET(SRM_RX_DSP_STM_PGA_GAIN_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_STM_PGA_GAIN_CFG__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_STM_PGA_GAIN_CFG__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__RSRVD1__MASK                       0x1f
#  define SRM_RX_DSP_STM_PGA_GAIN_CFG__RSRVD1__OFFSET                     0

#define SRM_RX_DSP_STM_DTL_THETA_CFG__ADDRESS                      0x2a05
#define SRM_RX_DSP_STM_DTL_THETA_CFG__DEFAULT                      0x0
#define SRM_RX_DSP_STM_DTL_THETA_CFG__ICOUNT                        3
#define SRM_RX_DSP_STM_DTL_THETA_CFG__ISPAN                         0x800
#define SRM_RX_DSP_STM_DTL_THETA_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_DSP_STM_DTL_THETA_CFG__ADDRESS)
#define SRM_RX_DSP_STM_DTL_THETA_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_DSP_STM_DTL_THETA_CFG__ADDRESS)
#define SRM_RX_DSP_STM_DTL_THETA_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_DSP_STM_DTL_THETA_CFG__ADDRESS, (data))
#define SRM_RX_DSP_STM_DTL_THETA_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_DSP_STM_DTL_THETA_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__RSRVD1__READ(die, channel)         SRM_RX_DSP_STM_DTL_THETA_CFG__RSRVD1__GET(SRM_RX_DSP_STM_DTL_THETA_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DTL_THETA_CFG__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_DSP_STM_DTL_THETA_CFG__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__RSRVD1__MASK                       0x1ff
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__RSRVD1__OFFSET                     7
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__DTL_THETA__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__DTL_THETA__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__DTL_THETA__READ(die, channel)         SRM_RX_DSP_STM_DTL_THETA_CFG__DTL_THETA__GET(SRM_RX_DSP_STM_DTL_THETA_CFG__READ(die, channel))
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__DTL_THETA__WRITE(die, channel, fdata) SRM_RX_DSP_STM_DTL_THETA_CFG__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__DTL_THETA__RMW(die, channel, fdata) SRM_RX_DSP_STM_DTL_THETA_CFG__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__DTL_THETA__MASK                       0x7f
#  define SRM_RX_DSP_STM_DTL_THETA_CFG__DTL_THETA__OFFSET                     0

#define SRM_RX_AN_ABMSG0__ADDRESS                      0x2a43
#define SRM_RX_AN_ABMSG0__DEFAULT                      0x0
#define SRM_RX_AN_ABMSG0__ICOUNT                        3
#define SRM_RX_AN_ABMSG0__ISPAN                         0x800
#define SRM_RX_AN_ABMSG0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_ABMSG0__ADDRESS)
#define SRM_RX_AN_ABMSG0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_ABMSG0__ADDRESS)
#define SRM_RX_AN_ABMSG0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_ABMSG0__ADDRESS, (data))
#define SRM_RX_AN_ABMSG0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_ABMSG0__ADDRESS, (data), (mask))
#  define SRM_RX_AN_ABMSG0__ABILITY_MATCH_WORD__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_ABMSG0__ABILITY_MATCH_WORD__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_ABMSG0__ABILITY_MATCH_WORD__READ(die, channel)         SRM_RX_AN_ABMSG0__ABILITY_MATCH_WORD__GET(SRM_RX_AN_ABMSG0__READ(die, channel))
#  define SRM_RX_AN_ABMSG0__ABILITY_MATCH_WORD__WRITE(die, channel, fdata) SRM_RX_AN_ABMSG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_ABMSG0__ABILITY_MATCH_WORD__RMW(die, channel, fdata) SRM_RX_AN_ABMSG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_ABMSG0__ABILITY_MATCH_WORD__MASK                       0xffff
#  define SRM_RX_AN_ABMSG0__ABILITY_MATCH_WORD__OFFSET                     0

#define SRM_RX_AN_ABMSG1__ADDRESS                      0x2a44
#define SRM_RX_AN_ABMSG1__DEFAULT                      0x0
#define SRM_RX_AN_ABMSG1__ICOUNT                        3
#define SRM_RX_AN_ABMSG1__ISPAN                         0x800
#define SRM_RX_AN_ABMSG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_ABMSG1__ADDRESS)
#define SRM_RX_AN_ABMSG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_ABMSG1__ADDRESS)
#define SRM_RX_AN_ABMSG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_ABMSG1__ADDRESS, (data))
#define SRM_RX_AN_ABMSG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_ABMSG1__ADDRESS, (data), (mask))
#  define SRM_RX_AN_ABMSG1__ABILITY_MATCH_WORD__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_ABMSG1__ABILITY_MATCH_WORD__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_ABMSG1__ABILITY_MATCH_WORD__READ(die, channel)         SRM_RX_AN_ABMSG1__ABILITY_MATCH_WORD__GET(SRM_RX_AN_ABMSG1__READ(die, channel))
#  define SRM_RX_AN_ABMSG1__ABILITY_MATCH_WORD__WRITE(die, channel, fdata) SRM_RX_AN_ABMSG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_ABMSG1__ABILITY_MATCH_WORD__RMW(die, channel, fdata) SRM_RX_AN_ABMSG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_ABMSG1__ABILITY_MATCH_WORD__MASK                       0xffff
#  define SRM_RX_AN_ABMSG1__ABILITY_MATCH_WORD__OFFSET                     0

#define SRM_RX_AN_ABMSG2__ADDRESS                      0x2a45
#define SRM_RX_AN_ABMSG2__DEFAULT                      0x0
#define SRM_RX_AN_ABMSG2__ICOUNT                        3
#define SRM_RX_AN_ABMSG2__ISPAN                         0x800
#define SRM_RX_AN_ABMSG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_ABMSG2__ADDRESS)
#define SRM_RX_AN_ABMSG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_ABMSG2__ADDRESS)
#define SRM_RX_AN_ABMSG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_ABMSG2__ADDRESS, (data))
#define SRM_RX_AN_ABMSG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_ABMSG2__ADDRESS, (data), (mask))
#  define SRM_RX_AN_ABMSG2__ABILITY_MATCH_WORD__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_ABMSG2__ABILITY_MATCH_WORD__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_ABMSG2__ABILITY_MATCH_WORD__READ(die, channel)         SRM_RX_AN_ABMSG2__ABILITY_MATCH_WORD__GET(SRM_RX_AN_ABMSG2__READ(die, channel))
#  define SRM_RX_AN_ABMSG2__ABILITY_MATCH_WORD__WRITE(die, channel, fdata) SRM_RX_AN_ABMSG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_ABMSG2__ABILITY_MATCH_WORD__RMW(die, channel, fdata) SRM_RX_AN_ABMSG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_ABMSG2__ABILITY_MATCH_WORD__MASK                       0xffff
#  define SRM_RX_AN_ABMSG2__ABILITY_MATCH_WORD__OFFSET                     0

#define SRM_RX_AN_ACKMSG0__ADDRESS                      0x2a46
#define SRM_RX_AN_ACKMSG0__DEFAULT                      0x0
#define SRM_RX_AN_ACKMSG0__ICOUNT                        3
#define SRM_RX_AN_ACKMSG0__ISPAN                         0x800
#define SRM_RX_AN_ACKMSG0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_ACKMSG0__ADDRESS)
#define SRM_RX_AN_ACKMSG0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_ACKMSG0__ADDRESS)
#define SRM_RX_AN_ACKMSG0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_ACKMSG0__ADDRESS, (data))
#define SRM_RX_AN_ACKMSG0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_ACKMSG0__ADDRESS, (data), (mask))
#  define SRM_RX_AN_ACKMSG0__ACKNOWLEDGE_MATCH_WORD__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_ACKMSG0__ACKNOWLEDGE_MATCH_WORD__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_ACKMSG0__ACKNOWLEDGE_MATCH_WORD__READ(die, channel)         SRM_RX_AN_ACKMSG0__ACKNOWLEDGE_MATCH_WORD__GET(SRM_RX_AN_ACKMSG0__READ(die, channel))
#  define SRM_RX_AN_ACKMSG0__ACKNOWLEDGE_MATCH_WORD__WRITE(die, channel, fdata) SRM_RX_AN_ACKMSG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_ACKMSG0__ACKNOWLEDGE_MATCH_WORD__RMW(die, channel, fdata) SRM_RX_AN_ACKMSG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_ACKMSG0__ACKNOWLEDGE_MATCH_WORD__MASK                       0xffff
#  define SRM_RX_AN_ACKMSG0__ACKNOWLEDGE_MATCH_WORD__OFFSET                     0

#define SRM_RX_AN_ACKMSG1__ADDRESS                      0x2a47
#define SRM_RX_AN_ACKMSG1__DEFAULT                      0x0
#define SRM_RX_AN_ACKMSG1__ICOUNT                        3
#define SRM_RX_AN_ACKMSG1__ISPAN                         0x800
#define SRM_RX_AN_ACKMSG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_ACKMSG1__ADDRESS)
#define SRM_RX_AN_ACKMSG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_ACKMSG1__ADDRESS)
#define SRM_RX_AN_ACKMSG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_ACKMSG1__ADDRESS, (data))
#define SRM_RX_AN_ACKMSG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_ACKMSG1__ADDRESS, (data), (mask))
#  define SRM_RX_AN_ACKMSG1__ACKNOWLEDGE_MATCH_WORD__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_ACKMSG1__ACKNOWLEDGE_MATCH_WORD__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_ACKMSG1__ACKNOWLEDGE_MATCH_WORD__READ(die, channel)         SRM_RX_AN_ACKMSG1__ACKNOWLEDGE_MATCH_WORD__GET(SRM_RX_AN_ACKMSG1__READ(die, channel))
#  define SRM_RX_AN_ACKMSG1__ACKNOWLEDGE_MATCH_WORD__WRITE(die, channel, fdata) SRM_RX_AN_ACKMSG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_ACKMSG1__ACKNOWLEDGE_MATCH_WORD__RMW(die, channel, fdata) SRM_RX_AN_ACKMSG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_ACKMSG1__ACKNOWLEDGE_MATCH_WORD__MASK                       0xffff
#  define SRM_RX_AN_ACKMSG1__ACKNOWLEDGE_MATCH_WORD__OFFSET                     0

#define SRM_RX_AN_ACKMSG2__ADDRESS                      0x2a48
#define SRM_RX_AN_ACKMSG2__DEFAULT                      0x0
#define SRM_RX_AN_ACKMSG2__ICOUNT                        3
#define SRM_RX_AN_ACKMSG2__ISPAN                         0x800
#define SRM_RX_AN_ACKMSG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_ACKMSG2__ADDRESS)
#define SRM_RX_AN_ACKMSG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_ACKMSG2__ADDRESS)
#define SRM_RX_AN_ACKMSG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_ACKMSG2__ADDRESS, (data))
#define SRM_RX_AN_ACKMSG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_ACKMSG2__ADDRESS, (data), (mask))
#  define SRM_RX_AN_ACKMSG2__ACKNOWLEDGE_MATCH_WORD__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_ACKMSG2__ACKNOWLEDGE_MATCH_WORD__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_ACKMSG2__ACKNOWLEDGE_MATCH_WORD__READ(die, channel)         SRM_RX_AN_ACKMSG2__ACKNOWLEDGE_MATCH_WORD__GET(SRM_RX_AN_ACKMSG2__READ(die, channel))
#  define SRM_RX_AN_ACKMSG2__ACKNOWLEDGE_MATCH_WORD__WRITE(die, channel, fdata) SRM_RX_AN_ACKMSG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_ACKMSG2__ACKNOWLEDGE_MATCH_WORD__RMW(die, channel, fdata) SRM_RX_AN_ACKMSG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_ACKMSG2__ACKNOWLEDGE_MATCH_WORD__MASK                       0xffff
#  define SRM_RX_AN_ACKMSG2__ACKNOWLEDGE_MATCH_WORD__OFFSET                     0

#define SRM_RX_AN_SPARE0__ADDRESS                      0x2a4d
#define SRM_RX_AN_SPARE0__DEFAULT                      0x0
#define SRM_RX_AN_SPARE0__ICOUNT                        3
#define SRM_RX_AN_SPARE0__ISPAN                         0x800
#define SRM_RX_AN_SPARE0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_SPARE0__ADDRESS)
#define SRM_RX_AN_SPARE0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_SPARE0__ADDRESS)
#define SRM_RX_AN_SPARE0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_SPARE0__ADDRESS, (data))
#define SRM_RX_AN_SPARE0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_SPARE0__ADDRESS, (data), (mask))
#  define SRM_RX_AN_SPARE0__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_SPARE0__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_SPARE0__SPARE__READ(die, channel)         SRM_RX_AN_SPARE0__SPARE__GET(SRM_RX_AN_SPARE0__READ(die, channel))
#  define SRM_RX_AN_SPARE0__SPARE__WRITE(die, channel, fdata) SRM_RX_AN_SPARE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE0__SPARE__RMW(die, channel, fdata) SRM_RX_AN_SPARE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE0__SPARE__MASK                       0xffff
#  define SRM_RX_AN_SPARE0__SPARE__OFFSET                     0

#define SRM_RX_AN_SPARE1__ADDRESS                      0x2a4e
#define SRM_RX_AN_SPARE1__DEFAULT                      0x0
#define SRM_RX_AN_SPARE1__ICOUNT                        3
#define SRM_RX_AN_SPARE1__ISPAN                         0x800
#define SRM_RX_AN_SPARE1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_SPARE1__ADDRESS)
#define SRM_RX_AN_SPARE1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_SPARE1__ADDRESS)
#define SRM_RX_AN_SPARE1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_SPARE1__ADDRESS, (data))
#define SRM_RX_AN_SPARE1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_SPARE1__ADDRESS, (data), (mask))
#  define SRM_RX_AN_SPARE1__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_SPARE1__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_SPARE1__SPARE__READ(die, channel)         SRM_RX_AN_SPARE1__SPARE__GET(SRM_RX_AN_SPARE1__READ(die, channel))
#  define SRM_RX_AN_SPARE1__SPARE__WRITE(die, channel, fdata) SRM_RX_AN_SPARE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE1__SPARE__RMW(die, channel, fdata) SRM_RX_AN_SPARE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE1__SPARE__MASK                       0xffff
#  define SRM_RX_AN_SPARE1__SPARE__OFFSET                     0

#define SRM_RX_AN_SPARE2__ADDRESS                      0x2a4f
#define SRM_RX_AN_SPARE2__DEFAULT                      0x0
#define SRM_RX_AN_SPARE2__ICOUNT                        3
#define SRM_RX_AN_SPARE2__ISPAN                         0x800
#define SRM_RX_AN_SPARE2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_SPARE2__ADDRESS)
#define SRM_RX_AN_SPARE2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_SPARE2__ADDRESS)
#define SRM_RX_AN_SPARE2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_SPARE2__ADDRESS, (data))
#define SRM_RX_AN_SPARE2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_SPARE2__ADDRESS, (data), (mask))
#  define SRM_RX_AN_SPARE2__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_SPARE2__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_SPARE2__SPARE__READ(die, channel)         SRM_RX_AN_SPARE2__SPARE__GET(SRM_RX_AN_SPARE2__READ(die, channel))
#  define SRM_RX_AN_SPARE2__SPARE__WRITE(die, channel, fdata) SRM_RX_AN_SPARE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE2__SPARE__RMW(die, channel, fdata) SRM_RX_AN_SPARE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE2__SPARE__MASK                       0xffff
#  define SRM_RX_AN_SPARE2__SPARE__OFFSET                     0

#define SRM_RX_AN_SPARE3__ADDRESS                      0x2a50
#define SRM_RX_AN_SPARE3__DEFAULT                      0x0
#define SRM_RX_AN_SPARE3__ICOUNT                        3
#define SRM_RX_AN_SPARE3__ISPAN                         0x800
#define SRM_RX_AN_SPARE3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_SPARE3__ADDRESS)
#define SRM_RX_AN_SPARE3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_SPARE3__ADDRESS)
#define SRM_RX_AN_SPARE3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_SPARE3__ADDRESS, (data))
#define SRM_RX_AN_SPARE3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_SPARE3__ADDRESS, (data), (mask))
#  define SRM_RX_AN_SPARE3__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_SPARE3__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_SPARE3__SPARE__READ(die, channel)         SRM_RX_AN_SPARE3__SPARE__GET(SRM_RX_AN_SPARE3__READ(die, channel))
#  define SRM_RX_AN_SPARE3__SPARE__WRITE(die, channel, fdata) SRM_RX_AN_SPARE3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE3__SPARE__RMW(die, channel, fdata) SRM_RX_AN_SPARE3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE3__SPARE__MASK                       0xffff
#  define SRM_RX_AN_SPARE3__SPARE__OFFSET                     0

#define SRM_RX_AN_SPARE4__ADDRESS                      0x2a51
#define SRM_RX_AN_SPARE4__DEFAULT                      0x0
#define SRM_RX_AN_SPARE4__ICOUNT                        3
#define SRM_RX_AN_SPARE4__ISPAN                         0x800
#define SRM_RX_AN_SPARE4__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_SPARE4__ADDRESS)
#define SRM_RX_AN_SPARE4__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_SPARE4__ADDRESS)
#define SRM_RX_AN_SPARE4__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_SPARE4__ADDRESS, (data))
#define SRM_RX_AN_SPARE4__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_SPARE4__ADDRESS, (data), (mask))
#  define SRM_RX_AN_SPARE4__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_SPARE4__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_SPARE4__SPARE__READ(die, channel)         SRM_RX_AN_SPARE4__SPARE__GET(SRM_RX_AN_SPARE4__READ(die, channel))
#  define SRM_RX_AN_SPARE4__SPARE__WRITE(die, channel, fdata) SRM_RX_AN_SPARE4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE4__SPARE__RMW(die, channel, fdata) SRM_RX_AN_SPARE4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE4__SPARE__MASK                       0xffff
#  define SRM_RX_AN_SPARE4__SPARE__OFFSET                     0

#define SRM_RX_AN_SPARE5__ADDRESS                      0x2a52
#define SRM_RX_AN_SPARE5__DEFAULT                      0x0
#define SRM_RX_AN_SPARE5__ICOUNT                        3
#define SRM_RX_AN_SPARE5__ISPAN                         0x800
#define SRM_RX_AN_SPARE5__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_SPARE5__ADDRESS)
#define SRM_RX_AN_SPARE5__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_SPARE5__ADDRESS)
#define SRM_RX_AN_SPARE5__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_SPARE5__ADDRESS, (data))
#define SRM_RX_AN_SPARE5__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_SPARE5__ADDRESS, (data), (mask))
#  define SRM_RX_AN_SPARE5__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_SPARE5__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_SPARE5__SPARE__READ(die, channel)         SRM_RX_AN_SPARE5__SPARE__GET(SRM_RX_AN_SPARE5__READ(die, channel))
#  define SRM_RX_AN_SPARE5__SPARE__WRITE(die, channel, fdata) SRM_RX_AN_SPARE5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE5__SPARE__RMW(die, channel, fdata) SRM_RX_AN_SPARE5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE5__SPARE__MASK                       0xffff
#  define SRM_RX_AN_SPARE5__SPARE__OFFSET                     0

#define SRM_RX_AN_SPARE6__ADDRESS                      0x2a53
#define SRM_RX_AN_SPARE6__DEFAULT                      0x0
#define SRM_RX_AN_SPARE6__ICOUNT                        3
#define SRM_RX_AN_SPARE6__ISPAN                         0x800
#define SRM_RX_AN_SPARE6__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_SPARE6__ADDRESS)
#define SRM_RX_AN_SPARE6__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_SPARE6__ADDRESS)
#define SRM_RX_AN_SPARE6__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_SPARE6__ADDRESS, (data))
#define SRM_RX_AN_SPARE6__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_SPARE6__ADDRESS, (data), (mask))
#  define SRM_RX_AN_SPARE6__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_SPARE6__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_SPARE6__SPARE__READ(die, channel)         SRM_RX_AN_SPARE6__SPARE__GET(SRM_RX_AN_SPARE6__READ(die, channel))
#  define SRM_RX_AN_SPARE6__SPARE__WRITE(die, channel, fdata) SRM_RX_AN_SPARE6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE6__SPARE__RMW(die, channel, fdata) SRM_RX_AN_SPARE6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE6__SPARE__MASK                       0xffff
#  define SRM_RX_AN_SPARE6__SPARE__OFFSET                     0

#define SRM_RX_AN_SPARE7__ADDRESS                      0x2a54
#define SRM_RX_AN_SPARE7__DEFAULT                      0x0
#define SRM_RX_AN_SPARE7__ICOUNT                        3
#define SRM_RX_AN_SPARE7__ISPAN                         0x800
#define SRM_RX_AN_SPARE7__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_SPARE7__ADDRESS)
#define SRM_RX_AN_SPARE7__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_SPARE7__ADDRESS)
#define SRM_RX_AN_SPARE7__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_SPARE7__ADDRESS, (data))
#define SRM_RX_AN_SPARE7__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_SPARE7__ADDRESS, (data), (mask))
#  define SRM_RX_AN_SPARE7__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_SPARE7__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_SPARE7__SPARE__READ(die, channel)         SRM_RX_AN_SPARE7__SPARE__GET(SRM_RX_AN_SPARE7__READ(die, channel))
#  define SRM_RX_AN_SPARE7__SPARE__WRITE(die, channel, fdata) SRM_RX_AN_SPARE7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE7__SPARE__RMW(die, channel, fdata) SRM_RX_AN_SPARE7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE7__SPARE__MASK                       0xffff
#  define SRM_RX_AN_SPARE7__SPARE__OFFSET                     0

#define SRM_RX_AN_SPARE8__ADDRESS                      0x2a55
#define SRM_RX_AN_SPARE8__DEFAULT                      0x0
#define SRM_RX_AN_SPARE8__ICOUNT                        3
#define SRM_RX_AN_SPARE8__ISPAN                         0x800
#define SRM_RX_AN_SPARE8__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_SPARE8__ADDRESS)
#define SRM_RX_AN_SPARE8__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_SPARE8__ADDRESS)
#define SRM_RX_AN_SPARE8__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_SPARE8__ADDRESS, (data))
#define SRM_RX_AN_SPARE8__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_SPARE8__ADDRESS, (data), (mask))
#  define SRM_RX_AN_SPARE8__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_SPARE8__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_SPARE8__SPARE__READ(die, channel)         SRM_RX_AN_SPARE8__SPARE__GET(SRM_RX_AN_SPARE8__READ(die, channel))
#  define SRM_RX_AN_SPARE8__SPARE__WRITE(die, channel, fdata) SRM_RX_AN_SPARE8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE8__SPARE__RMW(die, channel, fdata) SRM_RX_AN_SPARE8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE8__SPARE__MASK                       0xffff
#  define SRM_RX_AN_SPARE8__SPARE__OFFSET                     0

#define SRM_RX_AN_SPARE9__ADDRESS                      0x2a56
#define SRM_RX_AN_SPARE9__DEFAULT                      0x0
#define SRM_RX_AN_SPARE9__ICOUNT                        3
#define SRM_RX_AN_SPARE9__ISPAN                         0x800
#define SRM_RX_AN_SPARE9__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_AN_SPARE9__ADDRESS)
#define SRM_RX_AN_SPARE9__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_AN_SPARE9__ADDRESS)
#define SRM_RX_AN_SPARE9__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_AN_SPARE9__ADDRESS, (data))
#define SRM_RX_AN_SPARE9__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_AN_SPARE9__ADDRESS, (data), (mask))
#  define SRM_RX_AN_SPARE9__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_AN_SPARE9__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_AN_SPARE9__SPARE__READ(die, channel)         SRM_RX_AN_SPARE9__SPARE__GET(SRM_RX_AN_SPARE9__READ(die, channel))
#  define SRM_RX_AN_SPARE9__SPARE__WRITE(die, channel, fdata) SRM_RX_AN_SPARE9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE9__SPARE__RMW(die, channel, fdata) SRM_RX_AN_SPARE9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_AN_SPARE9__SPARE__MASK                       0xffff
#  define SRM_RX_AN_SPARE9__SPARE__OFFSET                     0

#define SRM_RX_LT_SPARE0__ADDRESS                      0x2a8a
#define SRM_RX_LT_SPARE0__DEFAULT                      0x0
#define SRM_RX_LT_SPARE0__ICOUNT                        3
#define SRM_RX_LT_SPARE0__ISPAN                         0x800
#define SRM_RX_LT_SPARE0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_LT_SPARE0__ADDRESS)
#define SRM_RX_LT_SPARE0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_LT_SPARE0__ADDRESS)
#define SRM_RX_LT_SPARE0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_LT_SPARE0__ADDRESS, (data))
#define SRM_RX_LT_SPARE0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_LT_SPARE0__ADDRESS, (data), (mask))
#  define SRM_RX_LT_SPARE0__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_LT_SPARE0__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_LT_SPARE0__SPARE__READ(die, channel)         SRM_RX_LT_SPARE0__SPARE__GET(SRM_RX_LT_SPARE0__READ(die, channel))
#  define SRM_RX_LT_SPARE0__SPARE__WRITE(die, channel, fdata) SRM_RX_LT_SPARE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_LT_SPARE0__SPARE__RMW(die, channel, fdata) SRM_RX_LT_SPARE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_LT_SPARE0__SPARE__MASK                       0xffff
#  define SRM_RX_LT_SPARE0__SPARE__OFFSET                     0

#define SRM_RX_LT_SPARE1__ADDRESS                      0x2a8b
#define SRM_RX_LT_SPARE1__DEFAULT                      0x0
#define SRM_RX_LT_SPARE1__ICOUNT                        3
#define SRM_RX_LT_SPARE1__ISPAN                         0x800
#define SRM_RX_LT_SPARE1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_LT_SPARE1__ADDRESS)
#define SRM_RX_LT_SPARE1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_LT_SPARE1__ADDRESS)
#define SRM_RX_LT_SPARE1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_LT_SPARE1__ADDRESS, (data))
#define SRM_RX_LT_SPARE1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_LT_SPARE1__ADDRESS, (data), (mask))
#  define SRM_RX_LT_SPARE1__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_LT_SPARE1__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_LT_SPARE1__SPARE__READ(die, channel)         SRM_RX_LT_SPARE1__SPARE__GET(SRM_RX_LT_SPARE1__READ(die, channel))
#  define SRM_RX_LT_SPARE1__SPARE__WRITE(die, channel, fdata) SRM_RX_LT_SPARE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_LT_SPARE1__SPARE__RMW(die, channel, fdata) SRM_RX_LT_SPARE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_LT_SPARE1__SPARE__MASK                       0xffff
#  define SRM_RX_LT_SPARE1__SPARE__OFFSET                     0

#define SRM_RX_LT_SPARE2__ADDRESS                      0x2a8c
#define SRM_RX_LT_SPARE2__DEFAULT                      0x0
#define SRM_RX_LT_SPARE2__ICOUNT                        3
#define SRM_RX_LT_SPARE2__ISPAN                         0x800
#define SRM_RX_LT_SPARE2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_LT_SPARE2__ADDRESS)
#define SRM_RX_LT_SPARE2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_LT_SPARE2__ADDRESS)
#define SRM_RX_LT_SPARE2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_LT_SPARE2__ADDRESS, (data))
#define SRM_RX_LT_SPARE2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_LT_SPARE2__ADDRESS, (data), (mask))
#  define SRM_RX_LT_SPARE2__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_LT_SPARE2__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_LT_SPARE2__SPARE__READ(die, channel)         SRM_RX_LT_SPARE2__SPARE__GET(SRM_RX_LT_SPARE2__READ(die, channel))
#  define SRM_RX_LT_SPARE2__SPARE__WRITE(die, channel, fdata) SRM_RX_LT_SPARE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_LT_SPARE2__SPARE__RMW(die, channel, fdata) SRM_RX_LT_SPARE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_LT_SPARE2__SPARE__MASK                       0xffff
#  define SRM_RX_LT_SPARE2__SPARE__OFFSET                     0

#define SRM_RX_LT_SPARE3__ADDRESS                      0x2a8d
#define SRM_RX_LT_SPARE3__DEFAULT                      0x0
#define SRM_RX_LT_SPARE3__ICOUNT                        3
#define SRM_RX_LT_SPARE3__ISPAN                         0x800
#define SRM_RX_LT_SPARE3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_LT_SPARE3__ADDRESS)
#define SRM_RX_LT_SPARE3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_LT_SPARE3__ADDRESS)
#define SRM_RX_LT_SPARE3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_LT_SPARE3__ADDRESS, (data))
#define SRM_RX_LT_SPARE3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_LT_SPARE3__ADDRESS, (data), (mask))
#  define SRM_RX_LT_SPARE3__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_LT_SPARE3__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_LT_SPARE3__SPARE__READ(die, channel)         SRM_RX_LT_SPARE3__SPARE__GET(SRM_RX_LT_SPARE3__READ(die, channel))
#  define SRM_RX_LT_SPARE3__SPARE__WRITE(die, channel, fdata) SRM_RX_LT_SPARE3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_LT_SPARE3__SPARE__RMW(die, channel, fdata) SRM_RX_LT_SPARE3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_LT_SPARE3__SPARE__MASK                       0xffff
#  define SRM_RX_LT_SPARE3__SPARE__OFFSET                     0

#define SRM_RX_ANLT_MSG_RESET__ADDRESS                      0x2b00
#define SRM_RX_ANLT_MSG_RESET__DEFAULT                      0x0
#define SRM_RX_ANLT_MSG_RESET__ICOUNT                        3
#define SRM_RX_ANLT_MSG_RESET__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_RESET__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_RESET__ADDRESS)
#define SRM_RX_ANLT_MSG_RESET__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_RESET__ADDRESS)
#define SRM_RX_ANLT_MSG_RESET__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_RESET__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_RESET__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_RESET__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3ff) | (((uint32_t)(fdata) << 10) & 0xfc00))
#  define SRM_RX_ANLT_MSG_RESET__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x3f)
#  define SRM_RX_ANLT_MSG_RESET__RSRVD1__READ(die, channel)         SRM_RX_ANLT_MSG_RESET__RSRVD1__GET(SRM_RX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RESET__RSRVD1__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SRM_RX_ANLT_MSG_RESET__RSRVD1__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SRM_RX_ANLT_MSG_RESET__RSRVD1__MASK                       0x3f
#  define SRM_RX_ANLT_MSG_RESET__RSRVD1__OFFSET                     10
#  define SRM_RX_ANLT_MSG_RESET__TX_MSG_FIFO__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_RX_ANLT_MSG_RESET__TX_MSG_FIFO__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_RX_ANLT_MSG_RESET__TX_MSG_FIFO__READ(die, channel)         SRM_RX_ANLT_MSG_RESET__TX_MSG_FIFO__GET(SRM_RX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RESET__TX_MSG_FIFO__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_ANLT_MSG_RESET__TX_MSG_FIFO__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_ANLT_MSG_RESET__TX_MSG_FIFO__MASK                       0x1
#  define SRM_RX_ANLT_MSG_RESET__TX_MSG_FIFO__OFFSET                     9
#  define SRM_RX_ANLT_MSG_RESET__RX_MSG_FIFO__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_RX_ANLT_MSG_RESET__RX_MSG_FIFO__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_RX_ANLT_MSG_RESET__RX_MSG_FIFO__READ(die, channel)         SRM_RX_ANLT_MSG_RESET__RX_MSG_FIFO__GET(SRM_RX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RESET__RX_MSG_FIFO__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_ANLT_MSG_RESET__RX_MSG_FIFO__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_ANLT_MSG_RESET__RX_MSG_FIFO__MASK                       0x1
#  define SRM_RX_ANLT_MSG_RESET__RX_MSG_FIFO__OFFSET                     8
#  define SRM_RX_ANLT_MSG_RESET__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff03) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SRM_RX_ANLT_MSG_RESET__RSRVD2__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SRM_RX_ANLT_MSG_RESET__RSRVD2__READ(die, channel)         SRM_RX_ANLT_MSG_RESET__RSRVD2__GET(SRM_RX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RESET__RSRVD2__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SRM_RX_ANLT_MSG_RESET__RSRVD2__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SRM_RX_ANLT_MSG_RESET__RSRVD2__MASK                       0x3f
#  define SRM_RX_ANLT_MSG_RESET__RSRVD2__OFFSET                     2
#  define SRM_RX_ANLT_MSG_RESET__TX__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_ANLT_MSG_RESET__TX__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_ANLT_MSG_RESET__TX__READ(die, channel)         SRM_RX_ANLT_MSG_RESET__TX__GET(SRM_RX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RESET__TX__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_ANLT_MSG_RESET__TX__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_ANLT_MSG_RESET__TX__MASK                       0x1
#  define SRM_RX_ANLT_MSG_RESET__TX__OFFSET                     1
#  define SRM_RX_ANLT_MSG_RESET__RX__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_ANLT_MSG_RESET__RX__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_ANLT_MSG_RESET__RX__READ(die, channel)         SRM_RX_ANLT_MSG_RESET__RX__GET(SRM_RX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RESET__RX__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_RESET__RX__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_RESET__RX__MASK                       0x1
#  define SRM_RX_ANLT_MSG_RESET__RX__OFFSET                     0

#define SRM_RX_ANLT_MSG_GEN_CFG__ADDRESS                      0x2b01
#define SRM_RX_ANLT_MSG_GEN_CFG__DEFAULT                      0x4
#define SRM_RX_ANLT_MSG_GEN_CFG__ICOUNT                        3
#define SRM_RX_ANLT_MSG_GEN_CFG__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_GEN_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_GEN_CFG__ADDRESS)
#define SRM_RX_ANLT_MSG_GEN_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_GEN_CFG__ADDRESS)
#define SRM_RX_ANLT_MSG_GEN_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_GEN_CFG__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_GEN_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_GEN_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_GEN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SRM_RX_ANLT_MSG_GEN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SRM_RX_ANLT_MSG_GEN_CFG__RSRVD1__READ(die, channel)         SRM_RX_ANLT_MSG_GEN_CFG__RSRVD1__GET(SRM_RX_ANLT_MSG_GEN_CFG__READ(die, channel))
#  define SRM_RX_ANLT_MSG_GEN_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_RX_ANLT_MSG_GEN_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_RX_ANLT_MSG_GEN_CFG__RSRVD1__MASK                       0x1fff
#  define SRM_RX_ANLT_MSG_GEN_CFG__RSRVD1__OFFSET                     3
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_HW_MSG__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_HW_MSG__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_HW_MSG__READ(die, channel)         SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_HW_MSG__GET(SRM_RX_ANLT_MSG_GEN_CFG__READ(die, channel))
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_HW_MSG__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_HW_MSG__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_HW_MSG__MASK                       0x1
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_HW_MSG__OFFSET                     2
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_RX_DESER__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_RX_DESER__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_RX_DESER__READ(die, channel)         SRM_RX_ANLT_MSG_GEN_CFG__EN_RX_DESER__GET(SRM_RX_ANLT_MSG_GEN_CFG__READ(die, channel))
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_RX_DESER__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_RX_DESER__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_RX_DESER__MASK                       0x1
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_RX_DESER__OFFSET                     1
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_SER__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_SER__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_SER__READ(die, channel)         SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_SER__GET(SRM_RX_ANLT_MSG_GEN_CFG__READ(die, channel))
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_SER__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_SER__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_SER__MASK                       0x1
#  define SRM_RX_ANLT_MSG_GEN_CFG__EN_TX_SER__OFFSET                     0

#define SRM_RX_ANLT_MSG_TX_MSG_DATA0__ADDRESS                      0x2b02
#define SRM_RX_ANLT_MSG_TX_MSG_DATA0__DEFAULT                      0x0
#define SRM_RX_ANLT_MSG_TX_MSG_DATA0__ICOUNT                        3
#define SRM_RX_ANLT_MSG_TX_MSG_DATA0__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_TX_MSG_DATA0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_TX_MSG_DATA0__ADDRESS)
#define SRM_RX_ANLT_MSG_TX_MSG_DATA0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_TX_MSG_DATA0__ADDRESS)
#define SRM_RX_ANLT_MSG_TX_MSG_DATA0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_TX_MSG_DATA0__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_TX_MSG_DATA0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_TX_MSG_DATA0__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA0__MSG0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA0__MSG0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA0__MSG0__READ(die, channel)         SRM_RX_ANLT_MSG_TX_MSG_DATA0__MSG0__GET(SRM_RX_ANLT_MSG_TX_MSG_DATA0__READ(die, channel))
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA0__MSG0__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_TX_MSG_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA0__MSG0__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_TX_MSG_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA0__MSG0__MASK                       0xffff
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA0__MSG0__OFFSET                     0

#define SRM_RX_ANLT_MSG_TX_MSG_DATA1__ADDRESS                      0x2b03
#define SRM_RX_ANLT_MSG_TX_MSG_DATA1__DEFAULT                      0x0
#define SRM_RX_ANLT_MSG_TX_MSG_DATA1__ICOUNT                        3
#define SRM_RX_ANLT_MSG_TX_MSG_DATA1__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_TX_MSG_DATA1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_TX_MSG_DATA1__ADDRESS)
#define SRM_RX_ANLT_MSG_TX_MSG_DATA1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_TX_MSG_DATA1__ADDRESS)
#define SRM_RX_ANLT_MSG_TX_MSG_DATA1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_TX_MSG_DATA1__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_TX_MSG_DATA1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_TX_MSG_DATA1__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA1__MSG1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA1__MSG1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA1__MSG1__READ(die, channel)         SRM_RX_ANLT_MSG_TX_MSG_DATA1__MSG1__GET(SRM_RX_ANLT_MSG_TX_MSG_DATA1__READ(die, channel))
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA1__MSG1__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_TX_MSG_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA1__MSG1__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_TX_MSG_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA1__MSG1__MASK                       0xffff
#  define SRM_RX_ANLT_MSG_TX_MSG_DATA1__MSG1__OFFSET                     0

#define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__ADDRESS                      0x2b04
#define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__DEFAULT                      0x2
#define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__ICOUNT                        3
#define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_TX_FIFO_STATUS__ADDRESS)
#define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_TX_FIFO_STATUS__ADDRESS)
#define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_TX_FIFO_STATUS__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_TX_FIFO_STATUS__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xffc0))
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3ff)
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__READ(die, channel)         SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__GET(SRM_RX_ANLT_MSG_TX_FIFO_STATUS__READ(die, channel))
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__MASK                       0x3ff
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__OFFSET                     6
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__SET(rdata, fdata)         (((rdata) & 0xffc3) | (((uint32_t)(fdata) << 2) & 0x3c))
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__GET(rdata)                (((rdata) >> 2) & 0xf)
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__READ(die, channel)         SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__GET(SRM_RX_ANLT_MSG_TX_FIFO_STATUS__READ(die, channel))
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<2, 0x3c)
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<2, 0x3c)
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__MASK                       0xf
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__OFFSET                     2
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__READ(die, channel)         SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__GET(SRM_RX_ANLT_MSG_TX_FIFO_STATUS__READ(die, channel))
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__MASK                       0x1
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__OFFSET                     1
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__READ(die, channel)         SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__GET(SRM_RX_ANLT_MSG_TX_FIFO_STATUS__READ(die, channel))
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__MASK                       0x1
#  define SRM_RX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__OFFSET                     0

#define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__ADDRESS                      0x2b05
#define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__DEFAULT                      0x2
#define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__ICOUNT                        3
#define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_RX_FIFO_STATUS__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_RX_FIFO_STATUS__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_RX_FIFO_STATUS__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_RX_FIFO_STATUS__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__READ(die, channel)         SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__GET(SRM_RX_ANLT_MSG_RX_FIFO_STATUS__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__MASK                       0x1ff
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__OFFSET                     7
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__SET(rdata, fdata)         (((rdata) & 0xff83) | (((uint32_t)(fdata) << 2) & 0x7c))
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__GET(rdata)                (((rdata) >> 2) & 0x1f)
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__READ(die, channel)         SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__GET(SRM_RX_ANLT_MSG_RX_FIFO_STATUS__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<2, 0x7c)
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<2, 0x7c)
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__MASK                       0x1f
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__OFFSET                     2
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__READ(die, channel)         SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__GET(SRM_RX_ANLT_MSG_RX_FIFO_STATUS__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__MASK                       0x1
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__OFFSET                     1
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__READ(die, channel)         SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__GET(SRM_RX_ANLT_MSG_RX_FIFO_STATUS__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__MASK                       0x1
#  define SRM_RX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__OFFSET                     0

#define SRM_RX_ANLT_MSG_RX_MSG_POP__ADDRESS                      0x2b06
#define SRM_RX_ANLT_MSG_RX_MSG_POP__DEFAULT                      0x0
#define SRM_RX_ANLT_MSG_RX_MSG_POP__ICOUNT                        3
#define SRM_RX_ANLT_MSG_RX_MSG_POP__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_RX_MSG_POP__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_RX_MSG_POP__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_MSG_POP__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_RX_MSG_POP__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_MSG_POP__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_RX_MSG_POP__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_RX_MSG_POP__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_RX_MSG_POP__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__RSRVD1__READ(die, channel)         SRM_RX_ANLT_MSG_RX_MSG_POP__RSRVD1__GET(SRM_RX_ANLT_MSG_RX_MSG_POP__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__RSRVD1__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_POP__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__RSRVD1__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_POP__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__RSRVD1__MASK                       0x7fff
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__RSRVD1__OFFSET                     1
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__POP__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__POP__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__POP__READ(die, channel)         SRM_RX_ANLT_MSG_RX_MSG_POP__POP__GET(SRM_RX_ANLT_MSG_RX_MSG_POP__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__POP__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_POP__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__POP__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_POP__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__POP__MASK                       0x1
#  define SRM_RX_ANLT_MSG_RX_MSG_POP__POP__OFFSET                     0

#define SRM_RX_ANLT_MSG_RX_MSG_STATUS__ADDRESS                      0x2b07
#define SRM_RX_ANLT_MSG_RX_MSG_STATUS__DEFAULT                      0x0
#define SRM_RX_ANLT_MSG_RX_MSG_STATUS__ICOUNT                        3
#define SRM_RX_ANLT_MSG_RX_MSG_STATUS__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_RX_MSG_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_RX_MSG_STATUS__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_MSG_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_RX_MSG_STATUS__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_MSG_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_RX_MSG_STATUS__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_RX_MSG_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_RX_MSG_STATUS__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__READ(die, channel)         SRM_RX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__GET(SRM_RX_ANLT_MSG_RX_MSG_STATUS__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__MASK                       0x3fff
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__OFFSET                     2
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__ERR__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__ERR__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__ERR__READ(die, channel)         SRM_RX_ANLT_MSG_RX_MSG_STATUS__ERR__GET(SRM_RX_ANLT_MSG_RX_MSG_STATUS__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__ERR__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__ERR__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__ERR__MASK                       0x1
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__ERR__OFFSET                     1
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__VALID__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__VALID__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__VALID__READ(die, channel)         SRM_RX_ANLT_MSG_RX_MSG_STATUS__VALID__GET(SRM_RX_ANLT_MSG_RX_MSG_STATUS__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__VALID__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__VALID__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__VALID__MASK                       0x1
#  define SRM_RX_ANLT_MSG_RX_MSG_STATUS__VALID__OFFSET                     0

#define SRM_RX_ANLT_MSG_RX_MSG_DATA0__ADDRESS                      0x2b08
#define SRM_RX_ANLT_MSG_RX_MSG_DATA0__DEFAULT                      0x0
#define SRM_RX_ANLT_MSG_RX_MSG_DATA0__ICOUNT                        3
#define SRM_RX_ANLT_MSG_RX_MSG_DATA0__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_RX_MSG_DATA0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_RX_MSG_DATA0__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_MSG_DATA0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_RX_MSG_DATA0__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_MSG_DATA0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_RX_MSG_DATA0__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_RX_MSG_DATA0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_RX_MSG_DATA0__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA0__MSG0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA0__MSG0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA0__MSG0__READ(die, channel)         SRM_RX_ANLT_MSG_RX_MSG_DATA0__MSG0__GET(SRM_RX_ANLT_MSG_RX_MSG_DATA0__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA0__MSG0__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA0__MSG0__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA0__MSG0__MASK                       0xffff
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA0__MSG0__OFFSET                     0

#define SRM_RX_ANLT_MSG_RX_MSG_DATA1__ADDRESS                      0x2b09
#define SRM_RX_ANLT_MSG_RX_MSG_DATA1__DEFAULT                      0x0
#define SRM_RX_ANLT_MSG_RX_MSG_DATA1__ICOUNT                        3
#define SRM_RX_ANLT_MSG_RX_MSG_DATA1__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_RX_MSG_DATA1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_RX_MSG_DATA1__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_MSG_DATA1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_RX_MSG_DATA1__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_MSG_DATA1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_RX_MSG_DATA1__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_RX_MSG_DATA1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_RX_MSG_DATA1__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA1__MSG1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA1__MSG1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA1__MSG1__READ(die, channel)         SRM_RX_ANLT_MSG_RX_MSG_DATA1__MSG1__GET(SRM_RX_ANLT_MSG_RX_MSG_DATA1__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA1__MSG1__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA1__MSG1__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA1__MSG1__MASK                       0xffff
#  define SRM_RX_ANLT_MSG_RX_MSG_DATA1__MSG1__OFFSET                     0

#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__ADDRESS                      0x2b0a
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__DEFAULT                      0x0
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__ICOUNT                        3
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__READ(die, channel)         SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__GET(SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__MASK                       0xffff
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__OFFSET                     0

#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__ADDRESS                      0x2b0b
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__DEFAULT                      0x0
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__ICOUNT                        3
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__READ(die, channel)         SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__GET(SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__MASK                       0xffff
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__OFFSET                     0

#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__ADDRESS                      0x2b0c
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__DEFAULT                      0x0
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__ICOUNT                        3
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__READ(die, channel)         SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__GET(SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__MASK                       0xffff
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__OFFSET                     0

#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__ADDRESS                      0x2b0d
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__DEFAULT                      0x0
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__ICOUNT                        3
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__READ(die, channel)         SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__GET(SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__MASK                       0xffff
#  define SRM_RX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__OFFSET                     0

#define SRM_RX_ANLT_MSG_RX_MSG_INT__ADDRESS                      0x2b0e
#define SRM_RX_ANLT_MSG_RX_MSG_INT__DEFAULT                      0x0
#define SRM_RX_ANLT_MSG_RX_MSG_INT__ICOUNT                        3
#define SRM_RX_ANLT_MSG_RX_MSG_INT__ISPAN                         0x800
#define SRM_RX_ANLT_MSG_RX_MSG_INT__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_ANLT_MSG_RX_MSG_INT__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_MSG_INT__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_ANLT_MSG_RX_MSG_INT__ADDRESS)
#define SRM_RX_ANLT_MSG_RX_MSG_INT__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_ANLT_MSG_RX_MSG_INT__ADDRESS, (data))
#define SRM_RX_ANLT_MSG_RX_MSG_INT__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_ANLT_MSG_RX_MSG_INT__ADDRESS, (data), (mask))
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RSRVD1__READ(die, channel)         SRM_RX_ANLT_MSG_RX_MSG_INT__RSRVD1__GET(SRM_RX_ANLT_MSG_RX_MSG_INT__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RSRVD1__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_INT__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RSRVD1__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_INT__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RSRVD1__MASK                       0x7fff
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RSRVD1__OFFSET                     1
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RX_VALID__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RX_VALID__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RX_VALID__READ(die, channel)         SRM_RX_ANLT_MSG_RX_MSG_INT__RX_VALID__GET(SRM_RX_ANLT_MSG_RX_MSG_INT__READ(die, channel))
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RX_VALID__WRITE(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RX_VALID__RMW(die, channel, fdata) SRM_RX_ANLT_MSG_RX_MSG_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RX_VALID__MASK                       0x1
#  define SRM_RX_ANLT_MSG_RX_MSG_INT__RX_VALID__OFFSET                     0

#define SRM_RX_RXA_AFE_CTL1_CFG__ADDRESS                      0x2c05
#define SRM_RX_RXA_AFE_CTL1_CFG__DEFAULT                      0x40
#define SRM_RX_RXA_AFE_CTL1_CFG__ICOUNT                        3
#define SRM_RX_RXA_AFE_CTL1_CFG__ISPAN                         0x800
#define SRM_RX_RXA_AFE_CTL1_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_RXA_AFE_CTL1_CFG__ADDRESS)
#define SRM_RX_RXA_AFE_CTL1_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_RXA_AFE_CTL1_CFG__ADDRESS)
#define SRM_RX_RXA_AFE_CTL1_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_RXA_AFE_CTL1_CFG__ADDRESS, (data))
#define SRM_RX_RXA_AFE_CTL1_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_RXA_AFE_CTL1_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED1__READ(die, channel)         SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED1__GET(SRM_RX_RXA_AFE_CTL1_CFG__READ(die, channel))
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED1__WRITE(die, channel, fdata) SRM_RX_RXA_AFE_CTL1_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED1__RMW(die, channel, fdata) SRM_RX_RXA_AFE_CTL1_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED1__MASK                       0x1
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED1__OFFSET                     7
#  define SRM_RX_RXA_AFE_CTL1_CFG__CTLE_TRIM__SET(rdata, fdata)         (((rdata) & 0x8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SRM_RX_RXA_AFE_CTL1_CFG__CTLE_TRIM__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SRM_RX_RXA_AFE_CTL1_CFG__CTLE_TRIM__READ(die, channel)         SRM_RX_RXA_AFE_CTL1_CFG__CTLE_TRIM__GET(SRM_RX_RXA_AFE_CTL1_CFG__READ(die, channel))
#  define SRM_RX_RXA_AFE_CTL1_CFG__CTLE_TRIM__WRITE(die, channel, fdata) SRM_RX_RXA_AFE_CTL1_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SRM_RX_RXA_AFE_CTL1_CFG__CTLE_TRIM__RMW(die, channel, fdata) SRM_RX_RXA_AFE_CTL1_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SRM_RX_RXA_AFE_CTL1_CFG__CTLE_TRIM__MASK                       0x7
#  define SRM_RX_RXA_AFE_CTL1_CFG__CTLE_TRIM__OFFSET                     4
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED0__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED0__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED0__READ(die, channel)         SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED0__GET(SRM_RX_RXA_AFE_CTL1_CFG__READ(die, channel))
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED0__WRITE(die, channel, fdata) SRM_RX_RXA_AFE_CTL1_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED0__RMW(die, channel, fdata) SRM_RX_RXA_AFE_CTL1_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED0__MASK                       0xf
#  define SRM_RX_RXA_AFE_CTL1_CFG__AFE_RESERVED0__OFFSET                     0

#define SRM_RX_RXA_AFE_CTL2_CFG__ADDRESS                      0x2c06
#define SRM_RX_RXA_AFE_CTL2_CFG__DEFAULT                      0x0
#define SRM_RX_RXA_AFE_CTL2_CFG__ICOUNT                        3
#define SRM_RX_RXA_AFE_CTL2_CFG__ISPAN                         0x800
#define SRM_RX_RXA_AFE_CTL2_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_RXA_AFE_CTL2_CFG__ADDRESS)
#define SRM_RX_RXA_AFE_CTL2_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_RXA_AFE_CTL2_CFG__ADDRESS)
#define SRM_RX_RXA_AFE_CTL2_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_RXA_AFE_CTL2_CFG__ADDRESS, (data))
#define SRM_RX_RXA_AFE_CTL2_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_RXA_AFE_CTL2_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_RXA_AFE_CTL2_CFG__AFE_RESERVED__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SRM_RX_RXA_AFE_CTL2_CFG__AFE_RESERVED__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SRM_RX_RXA_AFE_CTL2_CFG__AFE_RESERVED__READ(die, channel)         SRM_RX_RXA_AFE_CTL2_CFG__AFE_RESERVED__GET(SRM_RX_RXA_AFE_CTL2_CFG__READ(die, channel))
#  define SRM_RX_RXA_AFE_CTL2_CFG__AFE_RESERVED__WRITE(die, channel, fdata) SRM_RX_RXA_AFE_CTL2_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SRM_RX_RXA_AFE_CTL2_CFG__AFE_RESERVED__RMW(die, channel, fdata) SRM_RX_RXA_AFE_CTL2_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SRM_RX_RXA_AFE_CTL2_CFG__AFE_RESERVED__MASK                       0x3
#  define SRM_RX_RXA_AFE_CTL2_CFG__AFE_RESERVED__OFFSET                     6
#  define SRM_RX_RXA_AFE_CTL2_CFG__CTLE_PEAK__SET(rdata, fdata)         (((rdata) & 0xc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SRM_RX_RXA_AFE_CTL2_CFG__CTLE_PEAK__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SRM_RX_RXA_AFE_CTL2_CFG__CTLE_PEAK__READ(die, channel)         SRM_RX_RXA_AFE_CTL2_CFG__CTLE_PEAK__GET(SRM_RX_RXA_AFE_CTL2_CFG__READ(die, channel))
#  define SRM_RX_RXA_AFE_CTL2_CFG__CTLE_PEAK__WRITE(die, channel, fdata) SRM_RX_RXA_AFE_CTL2_CFG__RMW(die, (channel), (fdata)<<0, 0x3f)
#  define SRM_RX_RXA_AFE_CTL2_CFG__CTLE_PEAK__RMW(die, channel, fdata) SRM_RX_RXA_AFE_CTL2_CFG__RMW(die, (channel), (fdata)<<0, 0x3f)
#  define SRM_RX_RXA_AFE_CTL2_CFG__CTLE_PEAK__MASK                       0x3f
#  define SRM_RX_RXA_AFE_CTL2_CFG__CTLE_PEAK__OFFSET                     0

#define SRM_RX_RXA_MDIO_RES_CFG__ADDRESS                      0x2c16
#define SRM_RX_RXA_MDIO_RES_CFG__DEFAULT                      0x0
#define SRM_RX_RXA_MDIO_RES_CFG__ICOUNT                        3
#define SRM_RX_RXA_MDIO_RES_CFG__ISPAN                         0x800
#define SRM_RX_RXA_MDIO_RES_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_RXA_MDIO_RES_CFG__ADDRESS)
#define SRM_RX_RXA_MDIO_RES_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_RXA_MDIO_RES_CFG__ADDRESS)
#define SRM_RX_RXA_MDIO_RES_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_RXA_MDIO_RES_CFG__ADDRESS, (data))
#define SRM_RX_RXA_MDIO_RES_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_RXA_MDIO_RES_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_RXA_MDIO_RES_CFG__MDIO_RESERVE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_RX_RXA_MDIO_RES_CFG__MDIO_RESERVE__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_RX_RXA_MDIO_RES_CFG__MDIO_RESERVE__READ(die, channel)         SRM_RX_RXA_MDIO_RES_CFG__MDIO_RESERVE__GET(SRM_RX_RXA_MDIO_RES_CFG__READ(die, channel))
#  define SRM_RX_RXA_MDIO_RES_CFG__MDIO_RESERVE__WRITE(die, channel, fdata) SRM_RX_RXA_MDIO_RES_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_RX_RXA_MDIO_RES_CFG__MDIO_RESERVE__RMW(die, channel, fdata) SRM_RX_RXA_MDIO_RES_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_RX_RXA_MDIO_RES_CFG__MDIO_RESERVE__MASK                       0xff
#  define SRM_RX_RXA_MDIO_RES_CFG__MDIO_RESERVE__OFFSET                     0

#define SRM_RX_GC_CLKEN__ADDRESS                      0x2d00
#define SRM_RX_GC_CLKEN__DEFAULT                      0x0
#define SRM_RX_GC_CLKEN__ICOUNT                        3
#define SRM_RX_GC_CLKEN__ISPAN                         0x800
#define SRM_RX_GC_CLKEN__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CLKEN__ADDRESS)
#define SRM_RX_GC_CLKEN__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CLKEN__ADDRESS)
#define SRM_RX_GC_CLKEN__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CLKEN__ADDRESS, (data))
#define SRM_RX_GC_CLKEN__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CLKEN__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CLKEN__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_RX_GC_CLKEN__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_RX_GC_CLKEN__RSRVD1__READ(die, channel)         SRM_RX_GC_CLKEN__RSRVD1__GET(SRM_RX_GC_CLKEN__READ(die, channel))
#  define SRM_RX_GC_CLKEN__RSRVD1__WRITE(die, channel, fdata) SRM_RX_GC_CLKEN__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_RX_GC_CLKEN__RSRVD1__RMW(die, channel, fdata) SRM_RX_GC_CLKEN__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_RX_GC_CLKEN__RSRVD1__MASK                       0x3fff
#  define SRM_RX_GC_CLKEN__RSRVD1__OFFSET                     2
#  define SRM_RX_GC_CLKEN__CHK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_GC_CLKEN__CHK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_GC_CLKEN__CHK__READ(die, channel)         SRM_RX_GC_CLKEN__CHK__GET(SRM_RX_GC_CLKEN__READ(die, channel))
#  define SRM_RX_GC_CLKEN__CHK__WRITE(die, channel, fdata) SRM_RX_GC_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_CLKEN__CHK__RMW(die, channel, fdata) SRM_RX_GC_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_CLKEN__CHK__MASK                       0x1
#  define SRM_RX_GC_CLKEN__CHK__OFFSET                     1
#  define SRM_RX_GC_CLKEN__GEN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_GC_CLKEN__GEN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_GC_CLKEN__GEN__READ(die, channel)         SRM_RX_GC_CLKEN__GEN__GET(SRM_RX_GC_CLKEN__READ(die, channel))
#  define SRM_RX_GC_CLKEN__GEN__WRITE(die, channel, fdata) SRM_RX_GC_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_CLKEN__GEN__RMW(die, channel, fdata) SRM_RX_GC_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_CLKEN__GEN__MASK                       0x1
#  define SRM_RX_GC_CLKEN__GEN__OFFSET                     0

#define SRM_RX_GC_RESET__ADDRESS                      0x2d01
#define SRM_RX_GC_RESET__DEFAULT                      0x0
#define SRM_RX_GC_RESET__ICOUNT                        3
#define SRM_RX_GC_RESET__ISPAN                         0x800
#define SRM_RX_GC_RESET__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_RESET__ADDRESS)
#define SRM_RX_GC_RESET__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_RESET__ADDRESS)
#define SRM_RX_GC_RESET__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_RESET__ADDRESS, (data))
#define SRM_RX_GC_RESET__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_RESET__ADDRESS, (data), (mask))
#  define SRM_RX_GC_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_RX_GC_RESET__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_RX_GC_RESET__RSRVD1__READ(die, channel)         SRM_RX_GC_RESET__RSRVD1__GET(SRM_RX_GC_RESET__READ(die, channel))
#  define SRM_RX_GC_RESET__RSRVD1__WRITE(die, channel, fdata) SRM_RX_GC_RESET__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_RX_GC_RESET__RSRVD1__RMW(die, channel, fdata) SRM_RX_GC_RESET__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_RX_GC_RESET__RSRVD1__MASK                       0x3fff
#  define SRM_RX_GC_RESET__RSRVD1__OFFSET                     2
#  define SRM_RX_GC_RESET__CHK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_GC_RESET__CHK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_GC_RESET__CHK__READ(die, channel)         SRM_RX_GC_RESET__CHK__GET(SRM_RX_GC_RESET__READ(die, channel))
#  define SRM_RX_GC_RESET__CHK__WRITE(die, channel, fdata) SRM_RX_GC_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_RESET__CHK__RMW(die, channel, fdata) SRM_RX_GC_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_RESET__CHK__MASK                       0x1
#  define SRM_RX_GC_RESET__CHK__OFFSET                     1
#  define SRM_RX_GC_RESET__GEN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_GC_RESET__GEN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_GC_RESET__GEN__READ(die, channel)         SRM_RX_GC_RESET__GEN__GET(SRM_RX_GC_RESET__READ(die, channel))
#  define SRM_RX_GC_RESET__GEN__WRITE(die, channel, fdata) SRM_RX_GC_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_RESET__GEN__RMW(die, channel, fdata) SRM_RX_GC_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_RESET__GEN__MASK                       0x1
#  define SRM_RX_GC_RESET__GEN__OFFSET                     0

#define SRM_RX_GC_GEN_CFG__ADDRESS                      0x2d0b
#define SRM_RX_GC_GEN_CFG__DEFAULT                      0x0
#define SRM_RX_GC_GEN_CFG__ICOUNT                        3
#define SRM_RX_GC_GEN_CFG__ISPAN                         0x800
#define SRM_RX_GC_GEN_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_GEN_CFG__ADDRESS)
#define SRM_RX_GC_GEN_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_GEN_CFG__ADDRESS)
#define SRM_RX_GC_GEN_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_GEN_CFG__ADDRESS, (data))
#define SRM_RX_GC_GEN_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_GEN_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_GC_GEN_CFG__GEN_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_RX_GC_GEN_CFG__GEN_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_RX_GC_GEN_CFG__GEN_EN__READ(die, channel)         SRM_RX_GC_GEN_CFG__GEN_EN__GET(SRM_RX_GC_GEN_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_CFG__GEN_EN__WRITE(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_GC_GEN_CFG__GEN_EN__RMW(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_GC_GEN_CFG__GEN_EN__MASK                       0x1
#  define SRM_RX_GC_GEN_CFG__GEN_EN__OFFSET                     15
#  define SRM_RX_GC_GEN_CFG__GEN_EN_ODD__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_RX_GC_GEN_CFG__GEN_EN_ODD__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_RX_GC_GEN_CFG__GEN_EN_ODD__READ(die, channel)         SRM_RX_GC_GEN_CFG__GEN_EN_ODD__GET(SRM_RX_GC_GEN_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_CFG__GEN_EN_ODD__WRITE(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_GC_GEN_CFG__GEN_EN_ODD__RMW(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_GC_GEN_CFG__GEN_EN_ODD__MASK                       0x1
#  define SRM_RX_GC_GEN_CFG__GEN_EN_ODD__OFFSET                     14
#  define SRM_RX_GC_GEN_CFG__NRZ_FORMAT__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_RX_GC_GEN_CFG__NRZ_FORMAT__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_RX_GC_GEN_CFG__NRZ_FORMAT__READ(die, channel)         SRM_RX_GC_GEN_CFG__NRZ_FORMAT__GET(SRM_RX_GC_GEN_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_CFG__NRZ_FORMAT__WRITE(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_RX_GC_GEN_CFG__NRZ_FORMAT__RMW(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_RX_GC_GEN_CFG__NRZ_FORMAT__MASK                       0x1
#  define SRM_RX_GC_GEN_CFG__NRZ_FORMAT__OFFSET                     13
#  define SRM_RX_GC_GEN_CFG__NRZ_MODE__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_RX_GC_GEN_CFG__NRZ_MODE__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_RX_GC_GEN_CFG__NRZ_MODE__READ(die, channel)         SRM_RX_GC_GEN_CFG__NRZ_MODE__GET(SRM_RX_GC_GEN_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_CFG__NRZ_MODE__WRITE(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_GC_GEN_CFG__NRZ_MODE__RMW(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_GC_GEN_CFG__NRZ_MODE__MASK                       0x1
#  define SRM_RX_GC_GEN_CFG__NRZ_MODE__OFFSET                     12
#  define SRM_RX_GC_GEN_CFG__DUAL_PRBS__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_RX_GC_GEN_CFG__DUAL_PRBS__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_RX_GC_GEN_CFG__DUAL_PRBS__READ(die, channel)         SRM_RX_GC_GEN_CFG__DUAL_PRBS__GET(SRM_RX_GC_GEN_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_CFG__DUAL_PRBS__WRITE(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_GC_GEN_CFG__DUAL_PRBS__RMW(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_RX_GC_GEN_CFG__DUAL_PRBS__MASK                       0x1
#  define SRM_RX_GC_GEN_CFG__DUAL_PRBS__OFFSET                     11
#  define SRM_RX_GC_GEN_CFG__PATTERN_MODE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SRM_RX_GC_GEN_CFG__PATTERN_MODE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SRM_RX_GC_GEN_CFG__PATTERN_MODE__READ(die, channel)         SRM_RX_GC_GEN_CFG__PATTERN_MODE__GET(SRM_RX_GC_GEN_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_CFG__PATTERN_MODE__WRITE(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SRM_RX_GC_GEN_CFG__PATTERN_MODE__RMW(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SRM_RX_GC_GEN_CFG__PATTERN_MODE__MASK                       0x7
#  define SRM_RX_GC_GEN_CFG__PATTERN_MODE__OFFSET                     8
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE_ODD__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE_ODD__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE_ODD__READ(die, channel)         SRM_RX_GC_GEN_CFG__PRBS_MODE_ODD__GET(SRM_RX_GC_GEN_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE_ODD__WRITE(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE_ODD__RMW(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE_ODD__MASK                       0xf
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE_ODD__OFFSET                     4
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE__READ(die, channel)         SRM_RX_GC_GEN_CFG__PRBS_MODE__GET(SRM_RX_GC_GEN_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE__WRITE(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE__RMW(die, channel, fdata) SRM_RX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE__MASK                       0xf
#  define SRM_RX_GC_GEN_CFG__PRBS_MODE__OFFSET                     0

#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__ADDRESS                      0x2d0c
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__DEFAULT                      0x3333
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__ICOUNT                        3
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__ISPAN                         0x800
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__ADDRESS)
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__ADDRESS)
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__ADDRESS, (data))
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__ADDRESS, (data), (mask))
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__READ(die, channel)         SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__GET(SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__READ(die, channel))
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__RMW(die, channel, fdata) SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__MASK                       0xffff
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__OFFSET                     0

#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__ADDRESS                      0x2d0d
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__DEFAULT                      0x3333
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__ICOUNT                        3
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__ISPAN                         0x800
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__ADDRESS)
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__ADDRESS)
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__ADDRESS, (data))
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__ADDRESS, (data), (mask))
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__READ(die, channel)         SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__GET(SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__READ(die, channel))
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__RMW(die, channel, fdata) SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__MASK                       0xffff
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__OFFSET                     0

#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__ADDRESS                      0x2d0e
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__DEFAULT                      0x3333
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__ICOUNT                        3
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__ISPAN                         0x800
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__ADDRESS)
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__ADDRESS)
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__ADDRESS, (data))
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__ADDRESS, (data), (mask))
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__READ(die, channel)         SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__GET(SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__READ(die, channel))
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__RMW(die, channel, fdata) SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__MASK                       0xffff
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__OFFSET                     0

#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__ADDRESS                      0x2d0f
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__DEFAULT                      0x3333
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__ICOUNT                        3
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__ISPAN                         0x800
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__ADDRESS)
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__ADDRESS)
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__ADDRESS, (data))
#define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__ADDRESS, (data), (mask))
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__READ(die, channel)         SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__GET(SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__READ(die, channel))
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__RMW(die, channel, fdata) SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__MASK                       0xffff
#  define SRM_RX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__OFFSET                     0

#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__ADDRESS                      0x2d10
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__DEFAULT                      0x3333
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__ICOUNT                        3
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__ISPAN                         0x800
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__ADDRESS)
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__ADDRESS)
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__ADDRESS, (data))
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__ADDRESS, (data), (mask))
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__READ(die, channel)         SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__GET(SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__READ(die, channel))
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__RMW(die, channel, fdata) SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__MASK                       0xffff
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__OFFSET                     0

#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__ADDRESS                      0x2d11
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__DEFAULT                      0x3333
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__ICOUNT                        3
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__ISPAN                         0x800
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__ADDRESS)
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__ADDRESS)
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__ADDRESS, (data))
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__ADDRESS, (data), (mask))
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__READ(die, channel)         SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__GET(SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__READ(die, channel))
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__RMW(die, channel, fdata) SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__MASK                       0xffff
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__OFFSET                     0

#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__ADDRESS                      0x2d12
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__DEFAULT                      0x3333
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__ICOUNT                        3
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__ISPAN                         0x800
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__ADDRESS)
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__ADDRESS)
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__ADDRESS, (data))
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__ADDRESS, (data), (mask))
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__READ(die, channel)         SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__GET(SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__READ(die, channel))
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__RMW(die, channel, fdata) SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__MASK                       0xffff
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__OFFSET                     0

#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__ADDRESS                      0x2d13
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__DEFAULT                      0x3333
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__ICOUNT                        3
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__ISPAN                         0x800
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__ADDRESS)
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__ADDRESS)
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__ADDRESS, (data))
#define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__ADDRESS, (data), (mask))
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__READ(die, channel)         SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__GET(SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__READ(die, channel))
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__RMW(die, channel, fdata) SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__MASK                       0xffff
#  define SRM_RX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__OFFSET                     0

#define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__ADDRESS                      0x2d14
#define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__DEFAULT                      0x1
#define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__ICOUNT                        3
#define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__ISPAN                         0x800
#define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_GEN_FIXED_REPEAT_CFG__ADDRESS)
#define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_GEN_FIXED_REPEAT_CFG__ADDRESS)
#define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_GEN_FIXED_REPEAT_CFG__ADDRESS, (data))
#define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_GEN_FIXED_REPEAT_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__READ(die, channel)         SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__GET(SRM_RX_GC_GEN_FIXED_REPEAT_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__WRITE(die, channel, fdata) SRM_RX_GC_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__RMW(die, channel, fdata) SRM_RX_GC_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__MASK                       0xff
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__OFFSET                     8
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__READ(die, channel)         SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__GET(SRM_RX_GC_GEN_FIXED_REPEAT_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__WRITE(die, channel, fdata) SRM_RX_GC_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__RMW(die, channel, fdata) SRM_RX_GC_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__MASK                       0xff
#  define SRM_RX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__OFFSET                     0

#define SRM_RX_GC_GEN_PRBS_SEED_CFG__ADDRESS                      0x2d15
#define SRM_RX_GC_GEN_PRBS_SEED_CFG__DEFAULT                      0x3
#define SRM_RX_GC_GEN_PRBS_SEED_CFG__ICOUNT                        3
#define SRM_RX_GC_GEN_PRBS_SEED_CFG__ISPAN                         0x800
#define SRM_RX_GC_GEN_PRBS_SEED_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_GEN_PRBS_SEED_CFG__ADDRESS)
#define SRM_RX_GC_GEN_PRBS_SEED_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_GEN_PRBS_SEED_CFG__ADDRESS)
#define SRM_RX_GC_GEN_PRBS_SEED_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_GEN_PRBS_SEED_CFG__ADDRESS, (data))
#define SRM_RX_GC_GEN_PRBS_SEED_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_GEN_PRBS_SEED_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RSRVD1__READ(die, channel)         SRM_RX_GC_GEN_PRBS_SEED_CFG__RSRVD1__GET(SRM_RX_GC_GEN_PRBS_SEED_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RSRVD1__MASK                       0x1fff
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RSRVD1__OFFSET                     3
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED__READ(die, channel)         SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED__GET(SRM_RX_GC_GEN_PRBS_SEED_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED__WRITE(die, channel, fdata) SRM_RX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED__RMW(die, channel, fdata) SRM_RX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED__MASK                       0x1
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED__OFFSET                     2
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__READ(die, channel)         SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__GET(SRM_RX_GC_GEN_PRBS_SEED_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__WRITE(die, channel, fdata) SRM_RX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__RMW(die, channel, fdata) SRM_RX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__MASK                       0x1
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__OFFSET                     1
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__READ(die, channel)         SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__GET(SRM_RX_GC_GEN_PRBS_SEED_CFG__READ(die, channel))
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__WRITE(die, channel, fdata) SRM_RX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__RMW(die, channel, fdata) SRM_RX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__MASK                       0x1
#  define SRM_RX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__OFFSET                     0

#define SRM_RX_GC_CHK_CFG__ADDRESS                      0x2d16
#define SRM_RX_GC_CHK_CFG__DEFAULT                      0x0
#define SRM_RX_GC_CHK_CFG__ICOUNT                        3
#define SRM_RX_GC_CHK_CFG__ISPAN                         0x800
#define SRM_RX_GC_CHK_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_CFG__ADDRESS)
#define SRM_RX_GC_CHK_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_CFG__ADDRESS)
#define SRM_RX_GC_CHK_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_CFG__ADDRESS, (data))
#define SRM_RX_GC_CHK_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_CFG__SNAPSHOT_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_RX_GC_CHK_CFG__SNAPSHOT_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_RX_GC_CHK_CFG__SNAPSHOT_EN__READ(die, channel)         SRM_RX_GC_CHK_CFG__SNAPSHOT_EN__GET(SRM_RX_GC_CHK_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_CFG__SNAPSHOT_EN__WRITE(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_GC_CHK_CFG__SNAPSHOT_EN__RMW(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_GC_CHK_CFG__SNAPSHOT_EN__MASK                       0x1
#  define SRM_RX_GC_CHK_CFG__SNAPSHOT_EN__OFFSET                     15
#  define SRM_RX_GC_CHK_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x9fff) | (((uint32_t)(fdata) << 13) & 0x6000))
#  define SRM_RX_GC_CHK_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x3)
#  define SRM_RX_GC_CHK_CFG__RSRVD1__READ(die, channel)         SRM_RX_GC_CHK_CFG__RSRVD1__GET(SRM_RX_GC_CHK_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<13, 0x6000)
#  define SRM_RX_GC_CHK_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<13, 0x6000)
#  define SRM_RX_GC_CHK_CFG__RSRVD1__MASK                       0x3
#  define SRM_RX_GC_CHK_CFG__RSRVD1__OFFSET                     13
#  define SRM_RX_GC_CHK_CFG__OOS_THRESH__SET(rdata, fdata)         (((rdata) & 0xe0ff) | (((uint32_t)(fdata) << 8) & 0x1f00))
#  define SRM_RX_GC_CHK_CFG__OOS_THRESH__GET(rdata)                (((rdata) >> 8) & 0x1f)
#  define SRM_RX_GC_CHK_CFG__OOS_THRESH__READ(die, channel)         SRM_RX_GC_CHK_CFG__OOS_THRESH__GET(SRM_RX_GC_CHK_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_CFG__OOS_THRESH__WRITE(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<8, 0x1f00)
#  define SRM_RX_GC_CHK_CFG__OOS_THRESH__RMW(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<8, 0x1f00)
#  define SRM_RX_GC_CHK_CFG__OOS_THRESH__MASK                       0x1f
#  define SRM_RX_GC_CHK_CFG__OOS_THRESH__OFFSET                     8
#  define SRM_RX_GC_CHK_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_RX_GC_CHK_CFG__RSRVD2__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_RX_GC_CHK_CFG__RSRVD2__READ(die, channel)         SRM_RX_GC_CHK_CFG__RSRVD2__GET(SRM_RX_GC_CHK_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_CFG__RSRVD2__WRITE(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_GC_CHK_CFG__RSRVD2__RMW(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_GC_CHK_CFG__RSRVD2__MASK                       0xf
#  define SRM_RX_GC_CHK_CFG__RSRVD2__OFFSET                     4
#  define SRM_RX_GC_CHK_CFG__BITSWAP__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_GC_CHK_CFG__BITSWAP__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_GC_CHK_CFG__BITSWAP__READ(die, channel)         SRM_RX_GC_CHK_CFG__BITSWAP__GET(SRM_RX_GC_CHK_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_CFG__BITSWAP__WRITE(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_GC_CHK_CFG__BITSWAP__RMW(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_GC_CHK_CFG__BITSWAP__MASK                       0x1
#  define SRM_RX_GC_CHK_CFG__BITSWAP__OFFSET                     3
#  define SRM_RX_GC_CHK_CFG__NRZ_MODE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_GC_CHK_CFG__NRZ_MODE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_GC_CHK_CFG__NRZ_MODE__READ(die, channel)         SRM_RX_GC_CHK_CFG__NRZ_MODE__GET(SRM_RX_GC_CHK_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_CFG__NRZ_MODE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_GC_CHK_CFG__NRZ_MODE__RMW(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_GC_CHK_CFG__NRZ_MODE__MASK                       0x1
#  define SRM_RX_GC_CHK_CFG__NRZ_MODE__OFFSET                     2
#  define SRM_RX_GC_CHK_CFG__FIXED_PAT_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_GC_CHK_CFG__FIXED_PAT_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_GC_CHK_CFG__FIXED_PAT_EN__READ(die, channel)         SRM_RX_GC_CHK_CFG__FIXED_PAT_EN__GET(SRM_RX_GC_CHK_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_CFG__FIXED_PAT_EN__WRITE(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_CHK_CFG__FIXED_PAT_EN__RMW(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_CHK_CFG__FIXED_PAT_EN__MASK                       0x1
#  define SRM_RX_GC_CHK_CFG__FIXED_PAT_EN__OFFSET                     1
#  define SRM_RX_GC_CHK_CFG__PRBS_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_GC_CHK_CFG__PRBS_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_GC_CHK_CFG__PRBS_EN__READ(die, channel)         SRM_RX_GC_CHK_CFG__PRBS_EN__GET(SRM_RX_GC_CHK_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_CFG__PRBS_EN__WRITE(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_CHK_CFG__PRBS_EN__RMW(die, channel, fdata) SRM_RX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_CHK_CFG__PRBS_EN__MASK                       0x1
#  define SRM_RX_GC_CHK_CFG__PRBS_EN__OFFSET                     0

#define SRM_RX_GC_CHK_PRBS_CFG__ADDRESS                      0x2d17
#define SRM_RX_GC_CHK_PRBS_CFG__DEFAULT                      0x0
#define SRM_RX_GC_CHK_PRBS_CFG__ICOUNT                        3
#define SRM_RX_GC_CHK_PRBS_CFG__ISPAN                         0x800
#define SRM_RX_GC_CHK_PRBS_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_PRBS_CFG__ADDRESS)
#define SRM_RX_GC_CHK_PRBS_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_PRBS_CFG__ADDRESS)
#define SRM_RX_GC_CHK_PRBS_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_PRBS_CFG__ADDRESS, (data))
#define SRM_RX_GC_CHK_PRBS_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_PRBS_CFG__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_PRBS_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SRM_RX_GC_CHK_PRBS_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SRM_RX_GC_CHK_PRBS_CFG__RSRVD1__READ(die, channel)         SRM_RX_GC_CHK_PRBS_CFG__RSRVD1__GET(SRM_RX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_PRBS_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SRM_RX_GC_CHK_PRBS_CFG__RSRVD1__RMW(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SRM_RX_GC_CHK_PRBS_CFG__RSRVD1__MASK                       0x7
#  define SRM_RX_GC_CHK_PRBS_CFG__RSRVD1__OFFSET                     13
#  define SRM_RX_GC_CHK_PRBS_CFG__DUAL_PRBS__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_RX_GC_CHK_PRBS_CFG__DUAL_PRBS__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_RX_GC_CHK_PRBS_CFG__DUAL_PRBS__READ(die, channel)         SRM_RX_GC_CHK_PRBS_CFG__DUAL_PRBS__GET(SRM_RX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_PRBS_CFG__DUAL_PRBS__WRITE(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_GC_CHK_PRBS_CFG__DUAL_PRBS__RMW(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_GC_CHK_PRBS_CFG__DUAL_PRBS__MASK                       0x1
#  define SRM_RX_GC_CHK_PRBS_CFG__DUAL_PRBS__OFFSET                     12
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__READ(die, channel)         SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__GET(SRM_RX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__WRITE(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__RMW(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__MASK                       0x3
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__OFFSET                     10
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__READ(die, channel)         SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__GET(SRM_RX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__WRITE(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__RMW(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__MASK                       0x1
#  define SRM_RX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__OFFSET                     9
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_INV__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_INV__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_INV__READ(die, channel)         SRM_RX_GC_CHK_PRBS_CFG__PRBS_INV__GET(SRM_RX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_INV__WRITE(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_INV__RMW(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_INV__MASK                       0x1
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_INV__OFFSET                     8
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__READ(die, channel)         SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__GET(SRM_RX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__WRITE(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__RMW(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__MASK                       0xf
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__OFFSET                     4
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE__READ(die, channel)         SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE__GET(SRM_RX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE__RMW(die, channel, fdata) SRM_RX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE__MASK                       0xf
#  define SRM_RX_GC_CHK_PRBS_CFG__PRBS_MODE__OFFSET                     0

#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__ADDRESS                      0x2d18
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__DEFAULT                      0x3333
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__ICOUNT                        3
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__ISPAN                         0x800
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__ADDRESS)
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__ADDRESS)
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__ADDRESS, (data))
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__READ(die, channel)         SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__GET(SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__READ(die, channel))
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__RMW(die, channel, fdata) SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__MASK                       0xffff
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__OFFSET                     0

#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__ADDRESS                      0x2d19
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__DEFAULT                      0x3333
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__ICOUNT                        3
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__ISPAN                         0x800
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__ADDRESS)
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__ADDRESS)
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__ADDRESS, (data))
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__READ(die, channel)         SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__GET(SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__READ(die, channel))
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__RMW(die, channel, fdata) SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__MASK                       0xffff
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__OFFSET                     0

#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__ADDRESS                      0x2d1a
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__DEFAULT                      0x3333
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__ICOUNT                        3
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__ISPAN                         0x800
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__ADDRESS)
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__ADDRESS)
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__ADDRESS, (data))
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__READ(die, channel)         SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__GET(SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__READ(die, channel))
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__RMW(die, channel, fdata) SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__MASK                       0xffff
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__OFFSET                     0

#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__ADDRESS                      0x2d1b
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__DEFAULT                      0x3333
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__ICOUNT                        3
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__ISPAN                         0x800
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__ADDRESS)
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__ADDRESS)
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__ADDRESS, (data))
#define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__READ(die, channel)         SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__GET(SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__READ(die, channel))
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__RMW(die, channel, fdata) SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__MASK                       0xffff
#  define SRM_RX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__OFFSET                     0

#define SRM_RX_GC_CHK_WORD_CNT0__ADDRESS                      0x2d1c
#define SRM_RX_GC_CHK_WORD_CNT0__DEFAULT                      0x0
#define SRM_RX_GC_CHK_WORD_CNT0__ICOUNT                        3
#define SRM_RX_GC_CHK_WORD_CNT0__ISPAN                         0x800
#define SRM_RX_GC_CHK_WORD_CNT0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_WORD_CNT0__ADDRESS)
#define SRM_RX_GC_CHK_WORD_CNT0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_WORD_CNT0__ADDRESS)
#define SRM_RX_GC_CHK_WORD_CNT0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_WORD_CNT0__ADDRESS, (data))
#define SRM_RX_GC_CHK_WORD_CNT0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_WORD_CNT0__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_WORD_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_CHK_WORD_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_CHK_WORD_CNT0__VALUE__READ(die, channel)         SRM_RX_GC_CHK_WORD_CNT0__VALUE__GET(SRM_RX_GC_CHK_WORD_CNT0__READ(die, channel))
#  define SRM_RX_GC_CHK_WORD_CNT0__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_WORD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_WORD_CNT0__VALUE__RMW(die, channel, fdata) SRM_RX_GC_CHK_WORD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_WORD_CNT0__VALUE__MASK                       0xffff
#  define SRM_RX_GC_CHK_WORD_CNT0__VALUE__OFFSET                     0

#define SRM_RX_GC_CHK_WORD_CNT1__ADDRESS                      0x2d1d
#define SRM_RX_GC_CHK_WORD_CNT1__DEFAULT                      0x0
#define SRM_RX_GC_CHK_WORD_CNT1__ICOUNT                        3
#define SRM_RX_GC_CHK_WORD_CNT1__ISPAN                         0x800
#define SRM_RX_GC_CHK_WORD_CNT1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_WORD_CNT1__ADDRESS)
#define SRM_RX_GC_CHK_WORD_CNT1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_WORD_CNT1__ADDRESS)
#define SRM_RX_GC_CHK_WORD_CNT1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_WORD_CNT1__ADDRESS, (data))
#define SRM_RX_GC_CHK_WORD_CNT1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_WORD_CNT1__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_WORD_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_CHK_WORD_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_CHK_WORD_CNT1__VALUE__READ(die, channel)         SRM_RX_GC_CHK_WORD_CNT1__VALUE__GET(SRM_RX_GC_CHK_WORD_CNT1__READ(die, channel))
#  define SRM_RX_GC_CHK_WORD_CNT1__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_WORD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_WORD_CNT1__VALUE__RMW(die, channel, fdata) SRM_RX_GC_CHK_WORD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_WORD_CNT1__VALUE__MASK                       0xffff
#  define SRM_RX_GC_CHK_WORD_CNT1__VALUE__OFFSET                     0

#define SRM_RX_GC_CHK_WORD_CNT2__ADDRESS                      0x2d1e
#define SRM_RX_GC_CHK_WORD_CNT2__DEFAULT                      0x0
#define SRM_RX_GC_CHK_WORD_CNT2__ICOUNT                        3
#define SRM_RX_GC_CHK_WORD_CNT2__ISPAN                         0x800
#define SRM_RX_GC_CHK_WORD_CNT2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_WORD_CNT2__ADDRESS)
#define SRM_RX_GC_CHK_WORD_CNT2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_WORD_CNT2__ADDRESS)
#define SRM_RX_GC_CHK_WORD_CNT2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_WORD_CNT2__ADDRESS, (data))
#define SRM_RX_GC_CHK_WORD_CNT2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_WORD_CNT2__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_WORD_CNT2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_CHK_WORD_CNT2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_CHK_WORD_CNT2__VALUE__READ(die, channel)         SRM_RX_GC_CHK_WORD_CNT2__VALUE__GET(SRM_RX_GC_CHK_WORD_CNT2__READ(die, channel))
#  define SRM_RX_GC_CHK_WORD_CNT2__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_WORD_CNT2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_WORD_CNT2__VALUE__RMW(die, channel, fdata) SRM_RX_GC_CHK_WORD_CNT2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_WORD_CNT2__VALUE__MASK                       0xffff
#  define SRM_RX_GC_CHK_WORD_CNT2__VALUE__OFFSET                     0

#define SRM_RX_GC_CHK_BIT_ERROR_CNT0__ADDRESS                      0x2d1f
#define SRM_RX_GC_CHK_BIT_ERROR_CNT0__DEFAULT                      0x0
#define SRM_RX_GC_CHK_BIT_ERROR_CNT0__ICOUNT                        3
#define SRM_RX_GC_CHK_BIT_ERROR_CNT0__ISPAN                         0x800
#define SRM_RX_GC_CHK_BIT_ERROR_CNT0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_BIT_ERROR_CNT0__ADDRESS)
#define SRM_RX_GC_CHK_BIT_ERROR_CNT0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_BIT_ERROR_CNT0__ADDRESS)
#define SRM_RX_GC_CHK_BIT_ERROR_CNT0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_BIT_ERROR_CNT0__ADDRESS, (data))
#define SRM_RX_GC_CHK_BIT_ERROR_CNT0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_BIT_ERROR_CNT0__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT0__VALUE__READ(die, channel)         SRM_RX_GC_CHK_BIT_ERROR_CNT0__VALUE__GET(SRM_RX_GC_CHK_BIT_ERROR_CNT0__READ(die, channel))
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT0__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_BIT_ERROR_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT0__VALUE__RMW(die, channel, fdata) SRM_RX_GC_CHK_BIT_ERROR_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT0__VALUE__MASK                       0xffff
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT0__VALUE__OFFSET                     0

#define SRM_RX_GC_CHK_BIT_ERROR_CNT1__ADDRESS                      0x2d20
#define SRM_RX_GC_CHK_BIT_ERROR_CNT1__DEFAULT                      0x0
#define SRM_RX_GC_CHK_BIT_ERROR_CNT1__ICOUNT                        3
#define SRM_RX_GC_CHK_BIT_ERROR_CNT1__ISPAN                         0x800
#define SRM_RX_GC_CHK_BIT_ERROR_CNT1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_BIT_ERROR_CNT1__ADDRESS)
#define SRM_RX_GC_CHK_BIT_ERROR_CNT1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_BIT_ERROR_CNT1__ADDRESS)
#define SRM_RX_GC_CHK_BIT_ERROR_CNT1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_BIT_ERROR_CNT1__ADDRESS, (data))
#define SRM_RX_GC_CHK_BIT_ERROR_CNT1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_BIT_ERROR_CNT1__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT1__VALUE__READ(die, channel)         SRM_RX_GC_CHK_BIT_ERROR_CNT1__VALUE__GET(SRM_RX_GC_CHK_BIT_ERROR_CNT1__READ(die, channel))
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT1__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_BIT_ERROR_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT1__VALUE__RMW(die, channel, fdata) SRM_RX_GC_CHK_BIT_ERROR_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT1__VALUE__MASK                       0xffff
#  define SRM_RX_GC_CHK_BIT_ERROR_CNT1__VALUE__OFFSET                     0

#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__ADDRESS                      0x2d21
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__DEFAULT                      0x0
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__ICOUNT                        3
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__ISPAN                         0x800
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__ADDRESS)
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__ADDRESS)
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__ADDRESS, (data))
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__READ(die, channel)         SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__GET(SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__READ(die, channel))
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__RMW(die, channel, fdata) SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__MASK                       0xffff
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__OFFSET                     0

#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__ADDRESS                      0x2d22
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__DEFAULT                      0x0
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__ICOUNT                        3
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__ISPAN                         0x800
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__ADDRESS)
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__ADDRESS)
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__ADDRESS, (data))
#define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__ADDRESS, (data), (mask))
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__READ(die, channel)         SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__GET(SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__READ(die, channel))
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__WRITE(die, channel, fdata) SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__RMW(die, channel, fdata) SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__MASK                       0xffff
#  define SRM_RX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__OFFSET                     0

#define SRM_RX_GC_INT__ADDRESS                      0x2d23
#define SRM_RX_GC_INT__DEFAULT                      0x0
#define SRM_RX_GC_INT__ICOUNT                        3
#define SRM_RX_GC_INT__ISPAN                         0x800
#define SRM_RX_GC_INT__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_INT__ADDRESS)
#define SRM_RX_GC_INT__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_INT__ADDRESS)
#define SRM_RX_GC_INT__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_INT__ADDRESS, (data))
#define SRM_RX_GC_INT__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_INT__ADDRESS, (data), (mask))
#  define SRM_RX_GC_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_RX_GC_INT__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_RX_GC_INT__RSRVD1__READ(die, channel)         SRM_RX_GC_INT__RSRVD1__GET(SRM_RX_GC_INT__READ(die, channel))
#  define SRM_RX_GC_INT__RSRVD1__WRITE(die, channel, fdata) SRM_RX_GC_INT__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_RX_GC_INT__RSRVD1__RMW(die, channel, fdata) SRM_RX_GC_INT__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_RX_GC_INT__RSRVD1__MASK                       0x7ff
#  define SRM_RX_GC_INT__RSRVD1__OFFSET                     5
#  define SRM_RX_GC_INT__CHK_FIXED_PAT_SYNC__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_GC_INT__CHK_FIXED_PAT_SYNC__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_GC_INT__CHK_FIXED_PAT_SYNC__READ(die, channel)         SRM_RX_GC_INT__CHK_FIXED_PAT_SYNC__GET(SRM_RX_GC_INT__READ(die, channel))
#  define SRM_RX_GC_INT__CHK_FIXED_PAT_SYNC__WRITE(die, channel, fdata) SRM_RX_GC_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_GC_INT__CHK_FIXED_PAT_SYNC__RMW(die, channel, fdata) SRM_RX_GC_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_GC_INT__CHK_FIXED_PAT_SYNC__MASK                       0x1
#  define SRM_RX_GC_INT__CHK_FIXED_PAT_SYNC__OFFSET                     4
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__READ(die, channel)         SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__GET(SRM_RX_GC_INT__READ(die, channel))
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__WRITE(die, channel, fdata) SRM_RX_GC_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__RMW(die, channel, fdata) SRM_RX_GC_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__MASK                       0x1
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__OFFSET                     3
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC_ODD__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC_ODD__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC_ODD__READ(die, channel)         SRM_RX_GC_INT__CHK_PRBS_SYNC_ODD__GET(SRM_RX_GC_INT__READ(die, channel))
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC_ODD__WRITE(die, channel, fdata) SRM_RX_GC_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC_ODD__RMW(die, channel, fdata) SRM_RX_GC_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC_ODD__MASK                       0x1
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC_ODD__OFFSET                     2
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV__READ(die, channel)         SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV__GET(SRM_RX_GC_INT__READ(die, channel))
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV__WRITE(die, channel, fdata) SRM_RX_GC_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV__RMW(die, channel, fdata) SRM_RX_GC_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV__MASK                       0x1
#  define SRM_RX_GC_INT__CHK_PRBS_POLARITY_INV__OFFSET                     1
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC__READ(die, channel)         SRM_RX_GC_INT__CHK_PRBS_SYNC__GET(SRM_RX_GC_INT__READ(die, channel))
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC__WRITE(die, channel, fdata) SRM_RX_GC_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC__RMW(die, channel, fdata) SRM_RX_GC_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC__MASK                       0x1
#  define SRM_RX_GC_INT__CHK_PRBS_SYNC__OFFSET                     0

#define SRM_RX_GC_INTE__ADDRESS                      0x2d24
#define SRM_RX_GC_INTE__DEFAULT                      0x0
#define SRM_RX_GC_INTE__ICOUNT                        3
#define SRM_RX_GC_INTE__ISPAN                         0x800
#define SRM_RX_GC_INTE__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_INTE__ADDRESS)
#define SRM_RX_GC_INTE__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_INTE__ADDRESS)
#define SRM_RX_GC_INTE__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_INTE__ADDRESS, (data))
#define SRM_RX_GC_INTE__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_INTE__ADDRESS, (data), (mask))
#  define SRM_RX_GC_INTE__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_RX_GC_INTE__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_RX_GC_INTE__RSRVD1__READ(die, channel)         SRM_RX_GC_INTE__RSRVD1__GET(SRM_RX_GC_INTE__READ(die, channel))
#  define SRM_RX_GC_INTE__RSRVD1__WRITE(die, channel, fdata) SRM_RX_GC_INTE__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_RX_GC_INTE__RSRVD1__RMW(die, channel, fdata) SRM_RX_GC_INTE__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_RX_GC_INTE__RSRVD1__MASK                       0x7ff
#  define SRM_RX_GC_INTE__RSRVD1__OFFSET                     5
#  define SRM_RX_GC_INTE__CHK_FIXED_PAT_SYNCE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_GC_INTE__CHK_FIXED_PAT_SYNCE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_GC_INTE__CHK_FIXED_PAT_SYNCE__READ(die, channel)         SRM_RX_GC_INTE__CHK_FIXED_PAT_SYNCE__GET(SRM_RX_GC_INTE__READ(die, channel))
#  define SRM_RX_GC_INTE__CHK_FIXED_PAT_SYNCE__WRITE(die, channel, fdata) SRM_RX_GC_INTE__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_GC_INTE__CHK_FIXED_PAT_SYNCE__RMW(die, channel, fdata) SRM_RX_GC_INTE__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_GC_INTE__CHK_FIXED_PAT_SYNCE__MASK                       0x1
#  define SRM_RX_GC_INTE__CHK_FIXED_PAT_SYNCE__OFFSET                     4
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__READ(die, channel)         SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__GET(SRM_RX_GC_INTE__READ(die, channel))
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__WRITE(die, channel, fdata) SRM_RX_GC_INTE__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__RMW(die, channel, fdata) SRM_RX_GC_INTE__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__MASK                       0x1
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__OFFSET                     3
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNC_ODDE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNC_ODDE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNC_ODDE__READ(die, channel)         SRM_RX_GC_INTE__CHK_PRBS_SYNC_ODDE__GET(SRM_RX_GC_INTE__READ(die, channel))
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNC_ODDE__WRITE(die, channel, fdata) SRM_RX_GC_INTE__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNC_ODDE__RMW(die, channel, fdata) SRM_RX_GC_INTE__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNC_ODDE__MASK                       0x1
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNC_ODDE__OFFSET                     2
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INVE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INVE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INVE__READ(die, channel)         SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INVE__GET(SRM_RX_GC_INTE__READ(die, channel))
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INVE__WRITE(die, channel, fdata) SRM_RX_GC_INTE__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INVE__RMW(die, channel, fdata) SRM_RX_GC_INTE__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INVE__MASK                       0x1
#  define SRM_RX_GC_INTE__CHK_PRBS_POLARITY_INVE__OFFSET                     1
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNCE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNCE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNCE__READ(die, channel)         SRM_RX_GC_INTE__CHK_PRBS_SYNCE__GET(SRM_RX_GC_INTE__READ(die, channel))
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNCE__WRITE(die, channel, fdata) SRM_RX_GC_INTE__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNCE__RMW(die, channel, fdata) SRM_RX_GC_INTE__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNCE__MASK                       0x1
#  define SRM_RX_GC_INTE__CHK_PRBS_SYNCE__OFFSET                     0

#define SRM_RX_GC_INTS__ADDRESS                      0x2d25
#define SRM_RX_GC_INTS__DEFAULT                      0x0
#define SRM_RX_GC_INTS__ICOUNT                        3
#define SRM_RX_GC_INTS__ISPAN                         0x800
#define SRM_RX_GC_INTS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_INTS__ADDRESS)
#define SRM_RX_GC_INTS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_INTS__ADDRESS)
#define SRM_RX_GC_INTS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_INTS__ADDRESS, (data))
#define SRM_RX_GC_INTS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_INTS__ADDRESS, (data), (mask))
#  define SRM_RX_GC_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_RX_GC_INTS__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_RX_GC_INTS__RSRVD1__READ(die, channel)         SRM_RX_GC_INTS__RSRVD1__GET(SRM_RX_GC_INTS__READ(die, channel))
#  define SRM_RX_GC_INTS__RSRVD1__WRITE(die, channel, fdata) SRM_RX_GC_INTS__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_RX_GC_INTS__RSRVD1__RMW(die, channel, fdata) SRM_RX_GC_INTS__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_RX_GC_INTS__RSRVD1__MASK                       0x7ff
#  define SRM_RX_GC_INTS__RSRVD1__OFFSET                     5
#  define SRM_RX_GC_INTS__CHK_FIXED_PAT_SYNCS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_GC_INTS__CHK_FIXED_PAT_SYNCS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_GC_INTS__CHK_FIXED_PAT_SYNCS__READ(die, channel)         SRM_RX_GC_INTS__CHK_FIXED_PAT_SYNCS__GET(SRM_RX_GC_INTS__READ(die, channel))
#  define SRM_RX_GC_INTS__CHK_FIXED_PAT_SYNCS__WRITE(die, channel, fdata) SRM_RX_GC_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_GC_INTS__CHK_FIXED_PAT_SYNCS__RMW(die, channel, fdata) SRM_RX_GC_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_GC_INTS__CHK_FIXED_PAT_SYNCS__MASK                       0x1
#  define SRM_RX_GC_INTS__CHK_FIXED_PAT_SYNCS__OFFSET                     4
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__READ(die, channel)         SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__GET(SRM_RX_GC_INTS__READ(die, channel))
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__WRITE(die, channel, fdata) SRM_RX_GC_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__RMW(die, channel, fdata) SRM_RX_GC_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__MASK                       0x1
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__OFFSET                     3
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNC_ODDS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNC_ODDS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNC_ODDS__READ(die, channel)         SRM_RX_GC_INTS__CHK_PRBS_SYNC_ODDS__GET(SRM_RX_GC_INTS__READ(die, channel))
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNC_ODDS__WRITE(die, channel, fdata) SRM_RX_GC_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNC_ODDS__RMW(die, channel, fdata) SRM_RX_GC_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNC_ODDS__MASK                       0x1
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNC_ODDS__OFFSET                     2
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INVS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INVS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INVS__READ(die, channel)         SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INVS__GET(SRM_RX_GC_INTS__READ(die, channel))
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INVS__WRITE(die, channel, fdata) SRM_RX_GC_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INVS__RMW(die, channel, fdata) SRM_RX_GC_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INVS__MASK                       0x1
#  define SRM_RX_GC_INTS__CHK_PRBS_POLARITY_INVS__OFFSET                     1
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNCS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNCS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNCS__READ(die, channel)         SRM_RX_GC_INTS__CHK_PRBS_SYNCS__GET(SRM_RX_GC_INTS__READ(die, channel))
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNCS__WRITE(die, channel, fdata) SRM_RX_GC_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNCS__RMW(die, channel, fdata) SRM_RX_GC_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNCS__MASK                       0x1
#  define SRM_RX_GC_INTS__CHK_PRBS_SYNCS__OFFSET                     0

#define SRM_RX_GC_INTZ__ADDRESS                      0x2d26
#define SRM_RX_GC_INTZ__DEFAULT                      0x0
#define SRM_RX_GC_INTZ__ICOUNT                        3
#define SRM_RX_GC_INTZ__ISPAN                         0x800
#define SRM_RX_GC_INTZ__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_GC_INTZ__ADDRESS)
#define SRM_RX_GC_INTZ__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_GC_INTZ__ADDRESS)
#define SRM_RX_GC_INTZ__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_GC_INTZ__ADDRESS, (data))
#define SRM_RX_GC_INTZ__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_GC_INTZ__ADDRESS, (data), (mask))
#  define SRM_RX_GC_INTZ__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_RX_GC_INTZ__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_RX_GC_INTZ__RSRVD1__READ(die, channel)         SRM_RX_GC_INTZ__RSRVD1__GET(SRM_RX_GC_INTZ__READ(die, channel))
#  define SRM_RX_GC_INTZ__RSRVD1__WRITE(die, channel, fdata) SRM_RX_GC_INTZ__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_RX_GC_INTZ__RSRVD1__RMW(die, channel, fdata) SRM_RX_GC_INTZ__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_RX_GC_INTZ__RSRVD1__MASK                       0x7ff
#  define SRM_RX_GC_INTZ__RSRVD1__OFFSET                     5
#  define SRM_RX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__READ(die, channel)         SRM_RX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__GET(SRM_RX_GC_INTZ__READ(die, channel))
#  define SRM_RX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__WRITE(die, channel, fdata) SRM_RX_GC_INTZ__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__RMW(die, channel, fdata) SRM_RX_GC_INTZ__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__MASK                       0x1
#  define SRM_RX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__OFFSET                     4
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__READ(die, channel)         SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__GET(SRM_RX_GC_INTZ__READ(die, channel))
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__WRITE(die, channel, fdata) SRM_RX_GC_INTZ__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__RMW(die, channel, fdata) SRM_RX_GC_INTZ__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__MASK                       0x1
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__OFFSET                     3
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__READ(die, channel)         SRM_RX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__GET(SRM_RX_GC_INTZ__READ(die, channel))
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__WRITE(die, channel, fdata) SRM_RX_GC_INTZ__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__RMW(die, channel, fdata) SRM_RX_GC_INTZ__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__MASK                       0x1
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__OFFSET                     2
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__READ(die, channel)         SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__GET(SRM_RX_GC_INTZ__READ(die, channel))
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__WRITE(die, channel, fdata) SRM_RX_GC_INTZ__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__RMW(die, channel, fdata) SRM_RX_GC_INTZ__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__MASK                       0x1
#  define SRM_RX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__OFFSET                     1
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNCZ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNCZ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNCZ__READ(die, channel)         SRM_RX_GC_INTZ__CHK_PRBS_SYNCZ__GET(SRM_RX_GC_INTZ__READ(die, channel))
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNCZ__WRITE(die, channel, fdata) SRM_RX_GC_INTZ__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNCZ__RMW(die, channel, fdata) SRM_RX_GC_INTZ__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNCZ__MASK                       0x1
#  define SRM_RX_GC_INTZ__CHK_PRBS_SYNCZ__OFFSET                     0

#define SRM_TX_TOP_RESET__ADDRESS                      0x4000
#define SRM_TX_TOP_RESET__DEFAULT                      0x0
#define SRM_TX_TOP_RESET__READ(die)                  srm_reg_read(die, SRM_TX_TOP_RESET__ADDRESS)
#define SRM_TX_TOP_RESET__WRITE(die, data)             srm_reg_write(die, SRM_TX_TOP_RESET__ADDRESS, (data))
#define SRM_TX_TOP_RESET__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TX_TOP_RESET__ADDRESS, (data), (mask))
#  define SRM_TX_TOP_RESET__ALL_RESET__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_TOP_RESET__ALL_RESET__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_TOP_RESET__ALL_RESET__READ(die)                SRM_TX_TOP_RESET__ALL_RESET__GET(SRM_TX_TOP_RESET__READ(die))
#  define SRM_TX_TOP_RESET__ALL_RESET__WRITE(die, fdata)           SRM_TX_TOP_RESET__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_TX_TOP_RESET__ALL_RESET__RMW(die, fdata)           SRM_TX_TOP_RESET__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_TX_TOP_RESET__ALL_RESET__MASK                       0x1
#  define SRM_TX_TOP_RESET__ALL_RESET__OFFSET                     15
#  define SRM_TX_TOP_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_TX_TOP_RESET__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_TX_TOP_RESET__RSRVD1__READ(die)                SRM_TX_TOP_RESET__RSRVD1__GET(SRM_TX_TOP_RESET__READ(die))
#  define SRM_TX_TOP_RESET__RSRVD1__WRITE(die, fdata)           SRM_TX_TOP_RESET__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_TX_TOP_RESET__RSRVD1__RMW(die, fdata)           SRM_TX_TOP_RESET__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_TX_TOP_RESET__RSRVD1__MASK                       0x1f
#  define SRM_TX_TOP_RESET__RSRVD1__OFFSET                     10
#  define SRM_TX_TOP_RESET__TXA__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_TX_TOP_RESET__TXA__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_TX_TOP_RESET__TXA__READ(die)                SRM_TX_TOP_RESET__TXA__GET(SRM_TX_TOP_RESET__READ(die))
#  define SRM_TX_TOP_RESET__TXA__WRITE(die, fdata)           SRM_TX_TOP_RESET__RMW(die, (fdata)<<8, 0x300)
#  define SRM_TX_TOP_RESET__TXA__RMW(die, fdata)           SRM_TX_TOP_RESET__RMW(die, (fdata)<<8, 0x300)
#  define SRM_TX_TOP_RESET__TXA__MASK                       0x3
#  define SRM_TX_TOP_RESET__TXA__OFFSET                     8
#  define SRM_TX_TOP_RESET__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff01) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SRM_TX_TOP_RESET__RSRVD2__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SRM_TX_TOP_RESET__RSRVD2__READ(die)                SRM_TX_TOP_RESET__RSRVD2__GET(SRM_TX_TOP_RESET__READ(die))
#  define SRM_TX_TOP_RESET__RSRVD2__WRITE(die, fdata)           SRM_TX_TOP_RESET__RMW(die, (fdata)<<1, 0xfe)
#  define SRM_TX_TOP_RESET__RSRVD2__RMW(die, fdata)           SRM_TX_TOP_RESET__RMW(die, (fdata)<<1, 0xfe)
#  define SRM_TX_TOP_RESET__RSRVD2__MASK                       0x7f
#  define SRM_TX_TOP_RESET__RSRVD2__OFFSET                     1
#  define SRM_TX_TOP_RESET__FLL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_TOP_RESET__FLL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_TOP_RESET__FLL__READ(die)                SRM_TX_TOP_RESET__FLL__GET(SRM_TX_TOP_RESET__READ(die))
#  define SRM_TX_TOP_RESET__FLL__WRITE(die, fdata)           SRM_TX_TOP_RESET__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TX_TOP_RESET__FLL__RMW(die, fdata)           SRM_TX_TOP_RESET__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TX_TOP_RESET__FLL__MASK                       0x1
#  define SRM_TX_TOP_RESET__FLL__OFFSET                     0

#define SRM_TX_TOP_GEN_CFG__ADDRESS                      0x4003
#define SRM_TX_TOP_GEN_CFG__DEFAULT                      0x0
#define SRM_TX_TOP_GEN_CFG__READ(die)                  srm_reg_read(die, SRM_TX_TOP_GEN_CFG__ADDRESS)
#define SRM_TX_TOP_GEN_CFG__WRITE(die, data)             srm_reg_write(die, SRM_TX_TOP_GEN_CFG__ADDRESS, (data))
#define SRM_TX_TOP_GEN_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TX_TOP_GEN_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_TOP_GEN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_TOP_GEN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_TOP_GEN_CFG__RSRVD1__READ(die)                SRM_TX_TOP_GEN_CFG__RSRVD1__GET(SRM_TX_TOP_GEN_CFG__READ(die))
#  define SRM_TX_TOP_GEN_CFG__RSRVD1__WRITE(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_TX_TOP_GEN_CFG__RSRVD1__RMW(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_TX_TOP_GEN_CFG__RSRVD1__MASK                       0x1
#  define SRM_TX_TOP_GEN_CFG__RSRVD1__OFFSET                     15
#  define SRM_TX_TOP_GEN_CFG__FLL_TX_CLK__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_TX_TOP_GEN_CFG__FLL_TX_CLK__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_TX_TOP_GEN_CFG__FLL_TX_CLK__READ(die)                SRM_TX_TOP_GEN_CFG__FLL_TX_CLK__GET(SRM_TX_TOP_GEN_CFG__READ(die))
#  define SRM_TX_TOP_GEN_CFG__FLL_TX_CLK__WRITE(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_TX_TOP_GEN_CFG__FLL_TX_CLK__RMW(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_TX_TOP_GEN_CFG__FLL_TX_CLK__MASK                       0x1
#  define SRM_TX_TOP_GEN_CFG__FLL_TX_CLK__OFFSET                     14
#  define SRM_TX_TOP_GEN_CFG__FLL_RX_CLK__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SRM_TX_TOP_GEN_CFG__FLL_RX_CLK__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SRM_TX_TOP_GEN_CFG__FLL_RX_CLK__READ(die)                SRM_TX_TOP_GEN_CFG__FLL_RX_CLK__GET(SRM_TX_TOP_GEN_CFG__READ(die))
#  define SRM_TX_TOP_GEN_CFG__FLL_RX_CLK__WRITE(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<12, 0x3000)
#  define SRM_TX_TOP_GEN_CFG__FLL_RX_CLK__RMW(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<12, 0x3000)
#  define SRM_TX_TOP_GEN_CFG__FLL_RX_CLK__MASK                       0x3
#  define SRM_TX_TOP_GEN_CFG__FLL_RX_CLK__OFFSET                     12
#  define SRM_TX_TOP_GEN_CFG__TX1_SRC__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SRM_TX_TOP_GEN_CFG__TX1_SRC__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SRM_TX_TOP_GEN_CFG__TX1_SRC__READ(die)                SRM_TX_TOP_GEN_CFG__TX1_SRC__GET(SRM_TX_TOP_GEN_CFG__READ(die))
#  define SRM_TX_TOP_GEN_CFG__TX1_SRC__WRITE(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<10, 0xc00)
#  define SRM_TX_TOP_GEN_CFG__TX1_SRC__RMW(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<10, 0xc00)
#  define SRM_TX_TOP_GEN_CFG__TX1_SRC__MASK                       0x3
#  define SRM_TX_TOP_GEN_CFG__TX1_SRC__OFFSET                     10
#  define SRM_TX_TOP_GEN_CFG__TX0_SRC__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_TX_TOP_GEN_CFG__TX0_SRC__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_TX_TOP_GEN_CFG__TX0_SRC__READ(die)                SRM_TX_TOP_GEN_CFG__TX0_SRC__GET(SRM_TX_TOP_GEN_CFG__READ(die))
#  define SRM_TX_TOP_GEN_CFG__TX0_SRC__WRITE(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<8, 0x300)
#  define SRM_TX_TOP_GEN_CFG__TX0_SRC__RMW(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<8, 0x300)
#  define SRM_TX_TOP_GEN_CFG__TX0_SRC__MASK                       0x3
#  define SRM_TX_TOP_GEN_CFG__TX0_SRC__OFFSET                     8
#  define SRM_TX_TOP_GEN_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_TX_TOP_GEN_CFG__RSRVD2__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_TX_TOP_GEN_CFG__RSRVD2__READ(die)                SRM_TX_TOP_GEN_CFG__RSRVD2__GET(SRM_TX_TOP_GEN_CFG__READ(die))
#  define SRM_TX_TOP_GEN_CFG__RSRVD2__WRITE(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_TX_TOP_GEN_CFG__RSRVD2__RMW(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_TX_TOP_GEN_CFG__RSRVD2__MASK                       0xf
#  define SRM_TX_TOP_GEN_CFG__RSRVD2__OFFSET                     4
#  define SRM_TX_TOP_GEN_CFG__CLKMON_SEL__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SRM_TX_TOP_GEN_CFG__CLKMON_SEL__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SRM_TX_TOP_GEN_CFG__CLKMON_SEL__READ(die)                SRM_TX_TOP_GEN_CFG__CLKMON_SEL__GET(SRM_TX_TOP_GEN_CFG__READ(die))
#  define SRM_TX_TOP_GEN_CFG__CLKMON_SEL__WRITE(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<1, 0xe)
#  define SRM_TX_TOP_GEN_CFG__CLKMON_SEL__RMW(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<1, 0xe)
#  define SRM_TX_TOP_GEN_CFG__CLKMON_SEL__MASK                       0x7
#  define SRM_TX_TOP_GEN_CFG__CLKMON_SEL__OFFSET                     1
#  define SRM_TX_TOP_GEN_CFG__TX_SEL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_TOP_GEN_CFG__TX_SEL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_TOP_GEN_CFG__TX_SEL__READ(die)                SRM_TX_TOP_GEN_CFG__TX_SEL__GET(SRM_TX_TOP_GEN_CFG__READ(die))
#  define SRM_TX_TOP_GEN_CFG__TX_SEL__WRITE(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TX_TOP_GEN_CFG__TX_SEL__RMW(die, fdata)           SRM_TX_TOP_GEN_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TX_TOP_GEN_CFG__TX_SEL__MASK                       0x1
#  define SRM_TX_TOP_GEN_CFG__TX_SEL__OFFSET                     0

#define SRM_TX_TOP_SCRATCH0__ADDRESS                      0x4005
#define SRM_TX_TOP_SCRATCH0__DEFAULT                      0x0
#define SRM_TX_TOP_SCRATCH0__READ(die)                  srm_reg_read(die, SRM_TX_TOP_SCRATCH0__ADDRESS)
#define SRM_TX_TOP_SCRATCH0__WRITE(die, data)             srm_reg_write(die, SRM_TX_TOP_SCRATCH0__ADDRESS, (data))
#define SRM_TX_TOP_SCRATCH0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TX_TOP_SCRATCH0__ADDRESS, (data), (mask))
#  define SRM_TX_TOP_SCRATCH0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TOP_SCRATCH0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TOP_SCRATCH0__VALUE__READ(die)                SRM_TX_TOP_SCRATCH0__VALUE__GET(SRM_TX_TOP_SCRATCH0__READ(die))
#  define SRM_TX_TOP_SCRATCH0__VALUE__WRITE(die, fdata)           SRM_TX_TOP_SCRATCH0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH0__VALUE__RMW(die, fdata)           SRM_TX_TOP_SCRATCH0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH0__VALUE__MASK                       0xffff
#  define SRM_TX_TOP_SCRATCH0__VALUE__OFFSET                     0

#define SRM_TX_TOP_SCRATCH1__ADDRESS                      0x4006
#define SRM_TX_TOP_SCRATCH1__DEFAULT                      0x0
#define SRM_TX_TOP_SCRATCH1__READ(die)                  srm_reg_read(die, SRM_TX_TOP_SCRATCH1__ADDRESS)
#define SRM_TX_TOP_SCRATCH1__WRITE(die, data)             srm_reg_write(die, SRM_TX_TOP_SCRATCH1__ADDRESS, (data))
#define SRM_TX_TOP_SCRATCH1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TX_TOP_SCRATCH1__ADDRESS, (data), (mask))
#  define SRM_TX_TOP_SCRATCH1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TOP_SCRATCH1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TOP_SCRATCH1__VALUE__READ(die)                SRM_TX_TOP_SCRATCH1__VALUE__GET(SRM_TX_TOP_SCRATCH1__READ(die))
#  define SRM_TX_TOP_SCRATCH1__VALUE__WRITE(die, fdata)           SRM_TX_TOP_SCRATCH1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH1__VALUE__RMW(die, fdata)           SRM_TX_TOP_SCRATCH1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH1__VALUE__MASK                       0xffff
#  define SRM_TX_TOP_SCRATCH1__VALUE__OFFSET                     0

#define SRM_TX_TOP_SCRATCH2__ADDRESS                      0x4007
#define SRM_TX_TOP_SCRATCH2__DEFAULT                      0x0
#define SRM_TX_TOP_SCRATCH2__READ(die)                  srm_reg_read(die, SRM_TX_TOP_SCRATCH2__ADDRESS)
#define SRM_TX_TOP_SCRATCH2__WRITE(die, data)             srm_reg_write(die, SRM_TX_TOP_SCRATCH2__ADDRESS, (data))
#define SRM_TX_TOP_SCRATCH2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TX_TOP_SCRATCH2__ADDRESS, (data), (mask))
#  define SRM_TX_TOP_SCRATCH2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TOP_SCRATCH2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TOP_SCRATCH2__VALUE__READ(die)                SRM_TX_TOP_SCRATCH2__VALUE__GET(SRM_TX_TOP_SCRATCH2__READ(die))
#  define SRM_TX_TOP_SCRATCH2__VALUE__WRITE(die, fdata)           SRM_TX_TOP_SCRATCH2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH2__VALUE__RMW(die, fdata)           SRM_TX_TOP_SCRATCH2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH2__VALUE__MASK                       0xffff
#  define SRM_TX_TOP_SCRATCH2__VALUE__OFFSET                     0

#define SRM_TX_TOP_SCRATCH3__ADDRESS                      0x4008
#define SRM_TX_TOP_SCRATCH3__DEFAULT                      0x0
#define SRM_TX_TOP_SCRATCH3__READ(die)                  srm_reg_read(die, SRM_TX_TOP_SCRATCH3__ADDRESS)
#define SRM_TX_TOP_SCRATCH3__WRITE(die, data)             srm_reg_write(die, SRM_TX_TOP_SCRATCH3__ADDRESS, (data))
#define SRM_TX_TOP_SCRATCH3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TX_TOP_SCRATCH3__ADDRESS, (data), (mask))
#  define SRM_TX_TOP_SCRATCH3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TOP_SCRATCH3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TOP_SCRATCH3__VALUE__READ(die)                SRM_TX_TOP_SCRATCH3__VALUE__GET(SRM_TX_TOP_SCRATCH3__READ(die))
#  define SRM_TX_TOP_SCRATCH3__VALUE__WRITE(die, fdata)           SRM_TX_TOP_SCRATCH3__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH3__VALUE__RMW(die, fdata)           SRM_TX_TOP_SCRATCH3__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH3__VALUE__MASK                       0xffff
#  define SRM_TX_TOP_SCRATCH3__VALUE__OFFSET                     0

#define SRM_TX_TOP_SCRATCH4__ADDRESS                      0x4009
#define SRM_TX_TOP_SCRATCH4__DEFAULT                      0x0
#define SRM_TX_TOP_SCRATCH4__READ(die)                  srm_reg_read(die, SRM_TX_TOP_SCRATCH4__ADDRESS)
#define SRM_TX_TOP_SCRATCH4__WRITE(die, data)             srm_reg_write(die, SRM_TX_TOP_SCRATCH4__ADDRESS, (data))
#define SRM_TX_TOP_SCRATCH4__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TX_TOP_SCRATCH4__ADDRESS, (data), (mask))
#  define SRM_TX_TOP_SCRATCH4__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TOP_SCRATCH4__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TOP_SCRATCH4__VALUE__READ(die)                SRM_TX_TOP_SCRATCH4__VALUE__GET(SRM_TX_TOP_SCRATCH4__READ(die))
#  define SRM_TX_TOP_SCRATCH4__VALUE__WRITE(die, fdata)           SRM_TX_TOP_SCRATCH4__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH4__VALUE__RMW(die, fdata)           SRM_TX_TOP_SCRATCH4__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH4__VALUE__MASK                       0xffff
#  define SRM_TX_TOP_SCRATCH4__VALUE__OFFSET                     0

#define SRM_TX_TOP_SCRATCH5__ADDRESS                      0x400a
#define SRM_TX_TOP_SCRATCH5__DEFAULT                      0x0
#define SRM_TX_TOP_SCRATCH5__READ(die)                  srm_reg_read(die, SRM_TX_TOP_SCRATCH5__ADDRESS)
#define SRM_TX_TOP_SCRATCH5__WRITE(die, data)             srm_reg_write(die, SRM_TX_TOP_SCRATCH5__ADDRESS, (data))
#define SRM_TX_TOP_SCRATCH5__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TX_TOP_SCRATCH5__ADDRESS, (data), (mask))
#  define SRM_TX_TOP_SCRATCH5__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TOP_SCRATCH5__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TOP_SCRATCH5__VALUE__READ(die)                SRM_TX_TOP_SCRATCH5__VALUE__GET(SRM_TX_TOP_SCRATCH5__READ(die))
#  define SRM_TX_TOP_SCRATCH5__VALUE__WRITE(die, fdata)           SRM_TX_TOP_SCRATCH5__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH5__VALUE__RMW(die, fdata)           SRM_TX_TOP_SCRATCH5__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH5__VALUE__MASK                       0xffff
#  define SRM_TX_TOP_SCRATCH5__VALUE__OFFSET                     0

#define SRM_TX_TOP_SCRATCH6__ADDRESS                      0x400b
#define SRM_TX_TOP_SCRATCH6__DEFAULT                      0x0
#define SRM_TX_TOP_SCRATCH6__READ(die)                  srm_reg_read(die, SRM_TX_TOP_SCRATCH6__ADDRESS)
#define SRM_TX_TOP_SCRATCH6__WRITE(die, data)             srm_reg_write(die, SRM_TX_TOP_SCRATCH6__ADDRESS, (data))
#define SRM_TX_TOP_SCRATCH6__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TX_TOP_SCRATCH6__ADDRESS, (data), (mask))
#  define SRM_TX_TOP_SCRATCH6__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TOP_SCRATCH6__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TOP_SCRATCH6__VALUE__READ(die)                SRM_TX_TOP_SCRATCH6__VALUE__GET(SRM_TX_TOP_SCRATCH6__READ(die))
#  define SRM_TX_TOP_SCRATCH6__VALUE__WRITE(die, fdata)           SRM_TX_TOP_SCRATCH6__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH6__VALUE__RMW(die, fdata)           SRM_TX_TOP_SCRATCH6__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH6__VALUE__MASK                       0xffff
#  define SRM_TX_TOP_SCRATCH6__VALUE__OFFSET                     0

#define SRM_TX_TOP_SCRATCH7__ADDRESS                      0x400c
#define SRM_TX_TOP_SCRATCH7__DEFAULT                      0x0
#define SRM_TX_TOP_SCRATCH7__READ(die)                  srm_reg_read(die, SRM_TX_TOP_SCRATCH7__ADDRESS)
#define SRM_TX_TOP_SCRATCH7__WRITE(die, data)             srm_reg_write(die, SRM_TX_TOP_SCRATCH7__ADDRESS, (data))
#define SRM_TX_TOP_SCRATCH7__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TX_TOP_SCRATCH7__ADDRESS, (data), (mask))
#  define SRM_TX_TOP_SCRATCH7__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TOP_SCRATCH7__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TOP_SCRATCH7__VALUE__READ(die)                SRM_TX_TOP_SCRATCH7__VALUE__GET(SRM_TX_TOP_SCRATCH7__READ(die))
#  define SRM_TX_TOP_SCRATCH7__VALUE__WRITE(die, fdata)           SRM_TX_TOP_SCRATCH7__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH7__VALUE__RMW(die, fdata)           SRM_TX_TOP_SCRATCH7__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TX_TOP_SCRATCH7__VALUE__MASK                       0xffff
#  define SRM_TX_TOP_SCRATCH7__VALUE__OFFSET                     0

#define SRM_TX_TOP_INTH__ADDRESS                      0x400d
#define SRM_TX_TOP_INTH__DEFAULT                      0x0
#define SRM_TX_TOP_INTH__READ(die)                  srm_reg_read(die, SRM_TX_TOP_INTH__ADDRESS)
#define SRM_TX_TOP_INTH__WRITE(die, data)             srm_reg_write(die, SRM_TX_TOP_INTH__ADDRESS, (data))
#define SRM_TX_TOP_INTH__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TX_TOP_INTH__ADDRESS, (data), (mask))
#  define SRM_TX_TOP_INTH__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_TX_TOP_INTH__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_TX_TOP_INTH__RSRVD1__READ(die)                SRM_TX_TOP_INTH__RSRVD1__GET(SRM_TX_TOP_INTH__READ(die))
#  define SRM_TX_TOP_INTH__RSRVD1__WRITE(die, fdata)           SRM_TX_TOP_INTH__RMW(die, (fdata)<<5, 0xffe0)
#  define SRM_TX_TOP_INTH__RSRVD1__RMW(die, fdata)           SRM_TX_TOP_INTH__RMW(die, (fdata)<<5, 0xffe0)
#  define SRM_TX_TOP_INTH__RSRVD1__MASK                       0x7ff
#  define SRM_TX_TOP_INTH__RSRVD1__OFFSET                     5
#  define SRM_TX_TOP_INTH__FLL__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_TX_TOP_INTH__FLL__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_TX_TOP_INTH__FLL__READ(die)                SRM_TX_TOP_INTH__FLL__GET(SRM_TX_TOP_INTH__READ(die))
#  define SRM_TX_TOP_INTH__FLL__WRITE(die, fdata)           SRM_TX_TOP_INTH__RMW(die, (fdata)<<4, 0x10)
#  define SRM_TX_TOP_INTH__FLL__RMW(die, fdata)           SRM_TX_TOP_INTH__RMW(die, (fdata)<<4, 0x10)
#  define SRM_TX_TOP_INTH__FLL__MASK                       0x1
#  define SRM_TX_TOP_INTH__FLL__OFFSET                     4
#  define SRM_TX_TOP_INTH__GEN_CHK1__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_TOP_INTH__GEN_CHK1__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_TOP_INTH__GEN_CHK1__READ(die)                SRM_TX_TOP_INTH__GEN_CHK1__GET(SRM_TX_TOP_INTH__READ(die))
#  define SRM_TX_TOP_INTH__GEN_CHK1__WRITE(die, fdata)           SRM_TX_TOP_INTH__RMW(die, (fdata)<<3, 0x8)
#  define SRM_TX_TOP_INTH__GEN_CHK1__RMW(die, fdata)           SRM_TX_TOP_INTH__RMW(die, (fdata)<<3, 0x8)
#  define SRM_TX_TOP_INTH__GEN_CHK1__MASK                       0x1
#  define SRM_TX_TOP_INTH__GEN_CHK1__OFFSET                     3
#  define SRM_TX_TOP_INTH__GEN_CHK0__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_TOP_INTH__GEN_CHK0__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_TOP_INTH__GEN_CHK0__READ(die)                SRM_TX_TOP_INTH__GEN_CHK0__GET(SRM_TX_TOP_INTH__READ(die))
#  define SRM_TX_TOP_INTH__GEN_CHK0__WRITE(die, fdata)           SRM_TX_TOP_INTH__RMW(die, (fdata)<<2, 0x4)
#  define SRM_TX_TOP_INTH__GEN_CHK0__RMW(die, fdata)           SRM_TX_TOP_INTH__RMW(die, (fdata)<<2, 0x4)
#  define SRM_TX_TOP_INTH__GEN_CHK0__MASK                       0x1
#  define SRM_TX_TOP_INTH__GEN_CHK0__OFFSET                     2
#  define SRM_TX_TOP_INTH__TXD1__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_TOP_INTH__TXD1__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_TOP_INTH__TXD1__READ(die)                SRM_TX_TOP_INTH__TXD1__GET(SRM_TX_TOP_INTH__READ(die))
#  define SRM_TX_TOP_INTH__TXD1__WRITE(die, fdata)           SRM_TX_TOP_INTH__RMW(die, (fdata)<<1, 0x2)
#  define SRM_TX_TOP_INTH__TXD1__RMW(die, fdata)           SRM_TX_TOP_INTH__RMW(die, (fdata)<<1, 0x2)
#  define SRM_TX_TOP_INTH__TXD1__MASK                       0x1
#  define SRM_TX_TOP_INTH__TXD1__OFFSET                     1
#  define SRM_TX_TOP_INTH__TXD0__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_TOP_INTH__TXD0__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_TOP_INTH__TXD0__READ(die)                SRM_TX_TOP_INTH__TXD0__GET(SRM_TX_TOP_INTH__READ(die))
#  define SRM_TX_TOP_INTH__TXD0__WRITE(die, fdata)           SRM_TX_TOP_INTH__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TX_TOP_INTH__TXD0__RMW(die, fdata)           SRM_TX_TOP_INTH__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TX_TOP_INTH__TXD0__MASK                       0x1
#  define SRM_TX_TOP_INTH__TXD0__OFFSET                     0

#define SRM_TX_TOP_INTHE__ADDRESS                      0x400e
#define SRM_TX_TOP_INTHE__DEFAULT                      0x0
#define SRM_TX_TOP_INTHE__READ(die)                  srm_reg_read(die, SRM_TX_TOP_INTHE__ADDRESS)
#define SRM_TX_TOP_INTHE__WRITE(die, data)             srm_reg_write(die, SRM_TX_TOP_INTHE__ADDRESS, (data))
#define SRM_TX_TOP_INTHE__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TX_TOP_INTHE__ADDRESS, (data), (mask))
#  define SRM_TX_TOP_INTHE__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_TX_TOP_INTHE__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_TX_TOP_INTHE__RSRVD1__READ(die)                SRM_TX_TOP_INTHE__RSRVD1__GET(SRM_TX_TOP_INTHE__READ(die))
#  define SRM_TX_TOP_INTHE__RSRVD1__WRITE(die, fdata)           SRM_TX_TOP_INTHE__RMW(die, (fdata)<<5, 0xffe0)
#  define SRM_TX_TOP_INTHE__RSRVD1__RMW(die, fdata)           SRM_TX_TOP_INTHE__RMW(die, (fdata)<<5, 0xffe0)
#  define SRM_TX_TOP_INTHE__RSRVD1__MASK                       0x7ff
#  define SRM_TX_TOP_INTHE__RSRVD1__OFFSET                     5
#  define SRM_TX_TOP_INTHE__FLLE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_TX_TOP_INTHE__FLLE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_TX_TOP_INTHE__FLLE__READ(die)                SRM_TX_TOP_INTHE__FLLE__GET(SRM_TX_TOP_INTHE__READ(die))
#  define SRM_TX_TOP_INTHE__FLLE__WRITE(die, fdata)           SRM_TX_TOP_INTHE__RMW(die, (fdata)<<4, 0x10)
#  define SRM_TX_TOP_INTHE__FLLE__RMW(die, fdata)           SRM_TX_TOP_INTHE__RMW(die, (fdata)<<4, 0x10)
#  define SRM_TX_TOP_INTHE__FLLE__MASK                       0x1
#  define SRM_TX_TOP_INTHE__FLLE__OFFSET                     4
#  define SRM_TX_TOP_INTHE__GEN_CHK1E__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_TOP_INTHE__GEN_CHK1E__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_TOP_INTHE__GEN_CHK1E__READ(die)                SRM_TX_TOP_INTHE__GEN_CHK1E__GET(SRM_TX_TOP_INTHE__READ(die))
#  define SRM_TX_TOP_INTHE__GEN_CHK1E__WRITE(die, fdata)           SRM_TX_TOP_INTHE__RMW(die, (fdata)<<3, 0x8)
#  define SRM_TX_TOP_INTHE__GEN_CHK1E__RMW(die, fdata)           SRM_TX_TOP_INTHE__RMW(die, (fdata)<<3, 0x8)
#  define SRM_TX_TOP_INTHE__GEN_CHK1E__MASK                       0x1
#  define SRM_TX_TOP_INTHE__GEN_CHK1E__OFFSET                     3
#  define SRM_TX_TOP_INTHE__GEN_CHK0E__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_TOP_INTHE__GEN_CHK0E__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_TOP_INTHE__GEN_CHK0E__READ(die)                SRM_TX_TOP_INTHE__GEN_CHK0E__GET(SRM_TX_TOP_INTHE__READ(die))
#  define SRM_TX_TOP_INTHE__GEN_CHK0E__WRITE(die, fdata)           SRM_TX_TOP_INTHE__RMW(die, (fdata)<<2, 0x4)
#  define SRM_TX_TOP_INTHE__GEN_CHK0E__RMW(die, fdata)           SRM_TX_TOP_INTHE__RMW(die, (fdata)<<2, 0x4)
#  define SRM_TX_TOP_INTHE__GEN_CHK0E__MASK                       0x1
#  define SRM_TX_TOP_INTHE__GEN_CHK0E__OFFSET                     2
#  define SRM_TX_TOP_INTHE__TXD1E__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_TOP_INTHE__TXD1E__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_TOP_INTHE__TXD1E__READ(die)                SRM_TX_TOP_INTHE__TXD1E__GET(SRM_TX_TOP_INTHE__READ(die))
#  define SRM_TX_TOP_INTHE__TXD1E__WRITE(die, fdata)           SRM_TX_TOP_INTHE__RMW(die, (fdata)<<1, 0x2)
#  define SRM_TX_TOP_INTHE__TXD1E__RMW(die, fdata)           SRM_TX_TOP_INTHE__RMW(die, (fdata)<<1, 0x2)
#  define SRM_TX_TOP_INTHE__TXD1E__MASK                       0x1
#  define SRM_TX_TOP_INTHE__TXD1E__OFFSET                     1
#  define SRM_TX_TOP_INTHE__TXD0E__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_TOP_INTHE__TXD0E__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_TOP_INTHE__TXD0E__READ(die)                SRM_TX_TOP_INTHE__TXD0E__GET(SRM_TX_TOP_INTHE__READ(die))
#  define SRM_TX_TOP_INTHE__TXD0E__WRITE(die, fdata)           SRM_TX_TOP_INTHE__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TX_TOP_INTHE__TXD0E__RMW(die, fdata)           SRM_TX_TOP_INTHE__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TX_TOP_INTHE__TXD0E__MASK                       0x1
#  define SRM_TX_TOP_INTHE__TXD0E__OFFSET                     0

#define SRM_TX_TXD_CLKEN__ADDRESS                      0x4800
#define SRM_TX_TXD_CLKEN__DEFAULT                      0x0
#define SRM_TX_TXD_CLKEN__ICOUNT                        3
#define SRM_TX_TXD_CLKEN__ISPAN                         0x800
#define SRM_TX_TXD_CLKEN__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_CLKEN__ADDRESS)
#define SRM_TX_TXD_CLKEN__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_CLKEN__ADDRESS)
#define SRM_TX_TXD_CLKEN__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_CLKEN__ADDRESS, (data))
#define SRM_TX_TXD_CLKEN__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_CLKEN__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_CLKEN__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_TXD_CLKEN__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_TXD_CLKEN__RSRVD1__READ(die, channel)         SRM_TX_TXD_CLKEN__RSRVD1__GET(SRM_TX_TXD_CLKEN__READ(die, channel))
#  define SRM_TX_TXD_CLKEN__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_CLKEN__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_CLKEN__RSRVD1__MASK                       0x1
#  define SRM_TX_TXD_CLKEN__RSRVD1__OFFSET                     15
#  define SRM_TX_TXD_CLKEN__TX_CORE__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_TX_TXD_CLKEN__TX_CORE__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_TX_TXD_CLKEN__TX_CORE__READ(die, channel)         SRM_TX_TXD_CLKEN__TX_CORE__GET(SRM_TX_TXD_CLKEN__READ(die, channel))
#  define SRM_TX_TXD_CLKEN__TX_CORE__WRITE(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_TX_TXD_CLKEN__TX_CORE__RMW(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_TX_TXD_CLKEN__TX_CORE__MASK                       0x1
#  define SRM_TX_TXD_CLKEN__TX_CORE__OFFSET                     14
#  define SRM_TX_TXD_CLKEN__TX_REF__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_TX_TXD_CLKEN__TX_REF__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_TX_TXD_CLKEN__TX_REF__READ(die, channel)         SRM_TX_TXD_CLKEN__TX_REF__GET(SRM_TX_TXD_CLKEN__READ(die, channel))
#  define SRM_TX_TXD_CLKEN__TX_REF__WRITE(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_TX_TXD_CLKEN__TX_REF__RMW(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_TX_TXD_CLKEN__TX_REF__MASK                       0x1
#  define SRM_TX_TXD_CLKEN__TX_REF__OFFSET                     13
#  define SRM_TX_TXD_CLKEN__PRECODER__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_TX_TXD_CLKEN__PRECODER__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_TX_TXD_CLKEN__PRECODER__READ(die, channel)         SRM_TX_TXD_CLKEN__PRECODER__GET(SRM_TX_TXD_CLKEN__READ(die, channel))
#  define SRM_TX_TXD_CLKEN__PRECODER__WRITE(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_TX_TXD_CLKEN__PRECODER__RMW(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_TX_TXD_CLKEN__PRECODER__MASK                       0x1
#  define SRM_TX_TXD_CLKEN__PRECODER__OFFSET                     12
#  define SRM_TX_TXD_CLKEN__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SRM_TX_TXD_CLKEN__RSRVD2__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SRM_TX_TXD_CLKEN__RSRVD2__READ(die, channel)         SRM_TX_TXD_CLKEN__RSRVD2__GET(SRM_TX_TXD_CLKEN__READ(die, channel))
#  define SRM_TX_TXD_CLKEN__RSRVD2__WRITE(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SRM_TX_TXD_CLKEN__RSRVD2__RMW(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SRM_TX_TXD_CLKEN__RSRVD2__MASK                       0xf
#  define SRM_TX_TXD_CLKEN__RSRVD2__OFFSET                     8
#  define SRM_TX_TXD_CLKEN__DSP__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_TX_TXD_CLKEN__DSP__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_TX_TXD_CLKEN__DSP__READ(die, channel)         SRM_TX_TXD_CLKEN__DSP__GET(SRM_TX_TXD_CLKEN__READ(die, channel))
#  define SRM_TX_TXD_CLKEN__DSP__WRITE(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_TX_TXD_CLKEN__DSP__RMW(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_TX_TXD_CLKEN__DSP__MASK                       0x1
#  define SRM_TX_TXD_CLKEN__DSP__OFFSET                     7
#  define SRM_TX_TXD_CLKEN__INJ__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_TX_TXD_CLKEN__INJ__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_TX_TXD_CLKEN__INJ__READ(die, channel)         SRM_TX_TXD_CLKEN__INJ__GET(SRM_TX_TXD_CLKEN__READ(die, channel))
#  define SRM_TX_TXD_CLKEN__INJ__WRITE(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_TX_TXD_CLKEN__INJ__RMW(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_TX_TXD_CLKEN__INJ__MASK                       0x1
#  define SRM_TX_TXD_CLKEN__INJ__OFFSET                     6
#  define SRM_TX_TXD_CLKEN__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SRM_TX_TXD_CLKEN__RSRVD3__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SRM_TX_TXD_CLKEN__RSRVD3__READ(die, channel)         SRM_TX_TXD_CLKEN__RSRVD3__GET(SRM_TX_TXD_CLKEN__READ(die, channel))
#  define SRM_TX_TXD_CLKEN__RSRVD3__WRITE(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SRM_TX_TXD_CLKEN__RSRVD3__RMW(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SRM_TX_TXD_CLKEN__RSRVD3__MASK                       0x3
#  define SRM_TX_TXD_CLKEN__RSRVD3__OFFSET                     4
#  define SRM_TX_TXD_CLKEN__GEN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_TXD_CLKEN__GEN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_TXD_CLKEN__GEN__READ(die, channel)         SRM_TX_TXD_CLKEN__GEN__GET(SRM_TX_TXD_CLKEN__READ(die, channel))
#  define SRM_TX_TXD_CLKEN__GEN__WRITE(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_TXD_CLKEN__GEN__RMW(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_TXD_CLKEN__GEN__MASK                       0x1
#  define SRM_TX_TXD_CLKEN__GEN__OFFSET                     3
#  define SRM_TX_TXD_CLKEN__CID__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_TXD_CLKEN__CID__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_TXD_CLKEN__CID__READ(die, channel)         SRM_TX_TXD_CLKEN__CID__GET(SRM_TX_TXD_CLKEN__READ(die, channel))
#  define SRM_TX_TXD_CLKEN__CID__WRITE(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_TXD_CLKEN__CID__RMW(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_TXD_CLKEN__CID__MASK                       0x1
#  define SRM_TX_TXD_CLKEN__CID__OFFSET                     2
#  define SRM_TX_TXD_CLKEN__FIFOB__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_TXD_CLKEN__FIFOB__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_TXD_CLKEN__FIFOB__READ(die, channel)         SRM_TX_TXD_CLKEN__FIFOB__GET(SRM_TX_TXD_CLKEN__READ(die, channel))
#  define SRM_TX_TXD_CLKEN__FIFOB__WRITE(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXD_CLKEN__FIFOB__RMW(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXD_CLKEN__FIFOB__MASK                       0x1
#  define SRM_TX_TXD_CLKEN__FIFOB__OFFSET                     1
#  define SRM_TX_TXD_CLKEN__FIFOA__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_TXD_CLKEN__FIFOA__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_TXD_CLKEN__FIFOA__READ(die, channel)         SRM_TX_TXD_CLKEN__FIFOA__GET(SRM_TX_TXD_CLKEN__READ(die, channel))
#  define SRM_TX_TXD_CLKEN__FIFOA__WRITE(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_CLKEN__FIFOA__RMW(die, channel, fdata) SRM_TX_TXD_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_CLKEN__FIFOA__MASK                       0x1
#  define SRM_TX_TXD_CLKEN__FIFOA__OFFSET                     0

#define SRM_TX_TXD_RESET__ADDRESS                      0x4801
#define SRM_TX_TXD_RESET__DEFAULT                      0x0
#define SRM_TX_TXD_RESET__ICOUNT                        3
#define SRM_TX_TXD_RESET__ISPAN                         0x800
#define SRM_TX_TXD_RESET__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_RESET__ADDRESS)
#define SRM_TX_TXD_RESET__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_RESET__ADDRESS)
#define SRM_TX_TXD_RESET__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_RESET__ADDRESS, (data))
#define SRM_TX_TXD_RESET__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_RESET__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_RESET__SOFT_RESET__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_TXD_RESET__SOFT_RESET__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_TXD_RESET__SOFT_RESET__READ(die, channel)         SRM_TX_TXD_RESET__SOFT_RESET__GET(SRM_TX_TXD_RESET__READ(die, channel))
#  define SRM_TX_TXD_RESET__SOFT_RESET__WRITE(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_RESET__SOFT_RESET__RMW(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_RESET__SOFT_RESET__MASK                       0x1
#  define SRM_TX_TXD_RESET__SOFT_RESET__OFFSET                     15
#  define SRM_TX_TXD_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_TX_TXD_RESET__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_TX_TXD_RESET__RSRVD1__READ(die, channel)         SRM_TX_TXD_RESET__RSRVD1__GET(SRM_TX_TXD_RESET__READ(die, channel))
#  define SRM_TX_TXD_RESET__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SRM_TX_TXD_RESET__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SRM_TX_TXD_RESET__RSRVD1__MASK                       0x1f
#  define SRM_TX_TXD_RESET__RSRVD1__OFFSET                     10
#  define SRM_TX_TXD_RESET__RATE__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_TX_TXD_RESET__RATE__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_TX_TXD_RESET__RATE__READ(die, channel)         SRM_TX_TXD_RESET__RATE__GET(SRM_TX_TXD_RESET__READ(die, channel))
#  define SRM_TX_TXD_RESET__RATE__WRITE(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_TX_TXD_RESET__RATE__RMW(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_TX_TXD_RESET__RATE__MASK                       0x1
#  define SRM_TX_TXD_RESET__RATE__OFFSET                     9
#  define SRM_TX_TXD_RESET__PRECODER__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_TX_TXD_RESET__PRECODER__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_TX_TXD_RESET__PRECODER__READ(die, channel)         SRM_TX_TXD_RESET__PRECODER__GET(SRM_TX_TXD_RESET__READ(die, channel))
#  define SRM_TX_TXD_RESET__PRECODER__WRITE(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_TXD_RESET__PRECODER__RMW(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_TXD_RESET__PRECODER__MASK                       0x1
#  define SRM_TX_TXD_RESET__PRECODER__OFFSET                     8
#  define SRM_TX_TXD_RESET__DSP__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_TX_TXD_RESET__DSP__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_TX_TXD_RESET__DSP__READ(die, channel)         SRM_TX_TXD_RESET__DSP__GET(SRM_TX_TXD_RESET__READ(die, channel))
#  define SRM_TX_TXD_RESET__DSP__WRITE(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_TX_TXD_RESET__DSP__RMW(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_TX_TXD_RESET__DSP__MASK                       0x1
#  define SRM_TX_TXD_RESET__DSP__OFFSET                     7
#  define SRM_TX_TXD_RESET__INJ__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_TX_TXD_RESET__INJ__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_TX_TXD_RESET__INJ__READ(die, channel)         SRM_TX_TXD_RESET__INJ__GET(SRM_TX_TXD_RESET__READ(die, channel))
#  define SRM_TX_TXD_RESET__INJ__WRITE(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_TX_TXD_RESET__INJ__RMW(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_TX_TXD_RESET__INJ__MASK                       0x1
#  define SRM_TX_TXD_RESET__INJ__OFFSET                     6
#  define SRM_TX_TXD_RESET__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SRM_TX_TXD_RESET__RSRVD2__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SRM_TX_TXD_RESET__RSRVD2__READ(die, channel)         SRM_TX_TXD_RESET__RSRVD2__GET(SRM_TX_TXD_RESET__READ(die, channel))
#  define SRM_TX_TXD_RESET__RSRVD2__WRITE(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SRM_TX_TXD_RESET__RSRVD2__RMW(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SRM_TX_TXD_RESET__RSRVD2__MASK                       0x3
#  define SRM_TX_TXD_RESET__RSRVD2__OFFSET                     4
#  define SRM_TX_TXD_RESET__GEN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_TXD_RESET__GEN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_TXD_RESET__GEN__READ(die, channel)         SRM_TX_TXD_RESET__GEN__GET(SRM_TX_TXD_RESET__READ(die, channel))
#  define SRM_TX_TXD_RESET__GEN__WRITE(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_TXD_RESET__GEN__RMW(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_TXD_RESET__GEN__MASK                       0x1
#  define SRM_TX_TXD_RESET__GEN__OFFSET                     3
#  define SRM_TX_TXD_RESET__CID__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_TXD_RESET__CID__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_TXD_RESET__CID__READ(die, channel)         SRM_TX_TXD_RESET__CID__GET(SRM_TX_TXD_RESET__READ(die, channel))
#  define SRM_TX_TXD_RESET__CID__WRITE(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_TXD_RESET__CID__RMW(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_TXD_RESET__CID__MASK                       0x1
#  define SRM_TX_TXD_RESET__CID__OFFSET                     2
#  define SRM_TX_TXD_RESET__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_TXD_RESET__RSRVD3__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_TXD_RESET__RSRVD3__READ(die, channel)         SRM_TX_TXD_RESET__RSRVD3__GET(SRM_TX_TXD_RESET__READ(die, channel))
#  define SRM_TX_TXD_RESET__RSRVD3__WRITE(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXD_RESET__RSRVD3__RMW(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXD_RESET__RSRVD3__MASK                       0x1
#  define SRM_TX_TXD_RESET__RSRVD3__OFFSET                     1
#  define SRM_TX_TXD_RESET__FIFO__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_TXD_RESET__FIFO__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_TXD_RESET__FIFO__READ(die, channel)         SRM_TX_TXD_RESET__FIFO__GET(SRM_TX_TXD_RESET__READ(die, channel))
#  define SRM_TX_TXD_RESET__FIFO__WRITE(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_RESET__FIFO__RMW(die, channel, fdata) SRM_TX_TXD_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_RESET__FIFO__MASK                       0x1
#  define SRM_TX_TXD_RESET__FIFO__OFFSET                     0

#define SRM_TX_TXD_MISC_CFG__ADDRESS                      0x4802
#define SRM_TX_TXD_MISC_CFG__DEFAULT                      0xb400
#define SRM_TX_TXD_MISC_CFG__ICOUNT                        3
#define SRM_TX_TXD_MISC_CFG__ISPAN                         0x800
#define SRM_TX_TXD_MISC_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_MISC_CFG__ADDRESS)
#define SRM_TX_TXD_MISC_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_MISC_CFG__ADDRESS)
#define SRM_TX_TXD_MISC_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_MISC_CFG__ADDRESS, (data))
#define SRM_TX_TXD_MISC_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_MISC_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B11__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B11__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B11__READ(die, channel)         SRM_TX_TXD_MISC_CFG__GRAY_MAP_B11__GET(SRM_TX_TXD_MISC_CFG__READ(die, channel))
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B11__WRITE(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B11__RMW(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B11__MASK                       0x3
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B11__OFFSET                     14
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B10__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B10__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B10__READ(die, channel)         SRM_TX_TXD_MISC_CFG__GRAY_MAP_B10__GET(SRM_TX_TXD_MISC_CFG__READ(die, channel))
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B10__WRITE(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B10__RMW(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B10__MASK                       0x3
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B10__OFFSET                     12
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B01__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B01__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B01__READ(die, channel)         SRM_TX_TXD_MISC_CFG__GRAY_MAP_B01__GET(SRM_TX_TXD_MISC_CFG__READ(die, channel))
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B01__WRITE(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B01__RMW(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B01__MASK                       0x3
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B01__OFFSET                     10
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B00__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B00__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B00__READ(die, channel)         SRM_TX_TXD_MISC_CFG__GRAY_MAP_B00__GET(SRM_TX_TXD_MISC_CFG__READ(die, channel))
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B00__WRITE(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B00__RMW(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B00__MASK                       0x3
#  define SRM_TX_TXD_MISC_CFG__GRAY_MAP_B00__OFFSET                     8
#  define SRM_TX_TXD_MISC_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_TX_TXD_MISC_CFG__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_TX_TXD_MISC_CFG__RSRVD1__READ(die, channel)         SRM_TX_TXD_MISC_CFG__RSRVD1__GET(SRM_TX_TXD_MISC_CFG__READ(die, channel))
#  define SRM_TX_TXD_MISC_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SRM_TX_TXD_MISC_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SRM_TX_TXD_MISC_CFG__RSRVD1__MASK                       0x7
#  define SRM_TX_TXD_MISC_CFG__RSRVD1__OFFSET                     5
#  define SRM_TX_TXD_MISC_CFG__LT_MSG_CTL__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_TX_TXD_MISC_CFG__LT_MSG_CTL__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_TX_TXD_MISC_CFG__LT_MSG_CTL__READ(die, channel)         SRM_TX_TXD_MISC_CFG__LT_MSG_CTL__GET(SRM_TX_TXD_MISC_CFG__READ(die, channel))
#  define SRM_TX_TXD_MISC_CFG__LT_MSG_CTL__WRITE(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_TXD_MISC_CFG__LT_MSG_CTL__RMW(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_TXD_MISC_CFG__LT_MSG_CTL__MASK                       0x1
#  define SRM_TX_TXD_MISC_CFG__LT_MSG_CTL__OFFSET                     4
#  define SRM_TX_TXD_MISC_CFG__PRECODE_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_TXD_MISC_CFG__PRECODE_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_TXD_MISC_CFG__PRECODE_EN__READ(die, channel)         SRM_TX_TXD_MISC_CFG__PRECODE_EN__GET(SRM_TX_TXD_MISC_CFG__READ(die, channel))
#  define SRM_TX_TXD_MISC_CFG__PRECODE_EN__WRITE(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_TXD_MISC_CFG__PRECODE_EN__RMW(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_TXD_MISC_CFG__PRECODE_EN__MASK                       0x1
#  define SRM_TX_TXD_MISC_CFG__PRECODE_EN__OFFSET                     3
#  define SRM_TX_TXD_MISC_CFG__LT_TAP_CTRL_EN__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_TXD_MISC_CFG__LT_TAP_CTRL_EN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_TXD_MISC_CFG__LT_TAP_CTRL_EN__READ(die, channel)         SRM_TX_TXD_MISC_CFG__LT_TAP_CTRL_EN__GET(SRM_TX_TXD_MISC_CFG__READ(die, channel))
#  define SRM_TX_TXD_MISC_CFG__LT_TAP_CTRL_EN__WRITE(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_TXD_MISC_CFG__LT_TAP_CTRL_EN__RMW(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_TXD_MISC_CFG__LT_TAP_CTRL_EN__MASK                       0x1
#  define SRM_TX_TXD_MISC_CFG__LT_TAP_CTRL_EN__OFFSET                     2
#  define SRM_TX_TXD_MISC_CFG__AN_LT_DATA_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_TXD_MISC_CFG__AN_LT_DATA_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_TXD_MISC_CFG__AN_LT_DATA_EN__READ(die, channel)         SRM_TX_TXD_MISC_CFG__AN_LT_DATA_EN__GET(SRM_TX_TXD_MISC_CFG__READ(die, channel))
#  define SRM_TX_TXD_MISC_CFG__AN_LT_DATA_EN__WRITE(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXD_MISC_CFG__AN_LT_DATA_EN__RMW(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXD_MISC_CFG__AN_LT_DATA_EN__MASK                       0x1
#  define SRM_TX_TXD_MISC_CFG__AN_LT_DATA_EN__OFFSET                     1
#  define SRM_TX_TXD_MISC_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_TXD_MISC_CFG__RSRVD2__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_TXD_MISC_CFG__RSRVD2__READ(die, channel)         SRM_TX_TXD_MISC_CFG__RSRVD2__GET(SRM_TX_TXD_MISC_CFG__READ(die, channel))
#  define SRM_TX_TXD_MISC_CFG__RSRVD2__WRITE(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_MISC_CFG__RSRVD2__RMW(die, channel, fdata) SRM_TX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_MISC_CFG__RSRVD2__MASK                       0x1
#  define SRM_TX_TXD_MISC_CFG__RSRVD2__OFFSET                     0

#define SRM_TX_TXD_GEN_CFG__ADDRESS                      0x4807
#define SRM_TX_TXD_GEN_CFG__DEFAULT                      0x0
#define SRM_TX_TXD_GEN_CFG__ICOUNT                        3
#define SRM_TX_TXD_GEN_CFG__ISPAN                         0x800
#define SRM_TX_TXD_GEN_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_GEN_CFG__ADDRESS)
#define SRM_TX_TXD_GEN_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_GEN_CFG__ADDRESS)
#define SRM_TX_TXD_GEN_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_GEN_CFG__ADDRESS, (data))
#define SRM_TX_TXD_GEN_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_GEN_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_GEN_CFG__GEN_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_TXD_GEN_CFG__GEN_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_TXD_GEN_CFG__GEN_EN__READ(die, channel)         SRM_TX_TXD_GEN_CFG__GEN_EN__GET(SRM_TX_TXD_GEN_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_CFG__GEN_EN__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_GEN_CFG__GEN_EN__RMW(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_GEN_CFG__GEN_EN__MASK                       0x1
#  define SRM_TX_TXD_GEN_CFG__GEN_EN__OFFSET                     15
#  define SRM_TX_TXD_GEN_CFG__GEN_EN_ODD__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_TX_TXD_GEN_CFG__GEN_EN_ODD__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_TX_TXD_GEN_CFG__GEN_EN_ODD__READ(die, channel)         SRM_TX_TXD_GEN_CFG__GEN_EN_ODD__GET(SRM_TX_TXD_GEN_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_CFG__GEN_EN_ODD__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_TX_TXD_GEN_CFG__GEN_EN_ODD__RMW(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_TX_TXD_GEN_CFG__GEN_EN_ODD__MASK                       0x1
#  define SRM_TX_TXD_GEN_CFG__GEN_EN_ODD__OFFSET                     14
#  define SRM_TX_TXD_GEN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SRM_TX_TXD_GEN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SRM_TX_TXD_GEN_CFG__RSRVD1__READ(die, channel)         SRM_TX_TXD_GEN_CFG__RSRVD1__GET(SRM_TX_TXD_GEN_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SRM_TX_TXD_GEN_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SRM_TX_TXD_GEN_CFG__RSRVD1__MASK                       0x3
#  define SRM_TX_TXD_GEN_CFG__RSRVD1__OFFSET                     12
#  define SRM_TX_TXD_GEN_CFG__DUAL_PRBS__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_TX_TXD_GEN_CFG__DUAL_PRBS__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_TX_TXD_GEN_CFG__DUAL_PRBS__READ(die, channel)         SRM_TX_TXD_GEN_CFG__DUAL_PRBS__GET(SRM_TX_TXD_GEN_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_CFG__DUAL_PRBS__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_TX_TXD_GEN_CFG__DUAL_PRBS__RMW(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_TX_TXD_GEN_CFG__DUAL_PRBS__MASK                       0x1
#  define SRM_TX_TXD_GEN_CFG__DUAL_PRBS__OFFSET                     11
#  define SRM_TX_TXD_GEN_CFG__PATTERN_MODE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SRM_TX_TXD_GEN_CFG__PATTERN_MODE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SRM_TX_TXD_GEN_CFG__PATTERN_MODE__READ(die, channel)         SRM_TX_TXD_GEN_CFG__PATTERN_MODE__GET(SRM_TX_TXD_GEN_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_CFG__PATTERN_MODE__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SRM_TX_TXD_GEN_CFG__PATTERN_MODE__RMW(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SRM_TX_TXD_GEN_CFG__PATTERN_MODE__MASK                       0x7
#  define SRM_TX_TXD_GEN_CFG__PATTERN_MODE__OFFSET                     8
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE_ODD__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE_ODD__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE_ODD__READ(die, channel)         SRM_TX_TXD_GEN_CFG__PRBS_MODE_ODD__GET(SRM_TX_TXD_GEN_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE_ODD__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE_ODD__RMW(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE_ODD__MASK                       0xf
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE_ODD__OFFSET                     4
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE__READ(die, channel)         SRM_TX_TXD_GEN_CFG__PRBS_MODE__GET(SRM_TX_TXD_GEN_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE__RMW(die, channel, fdata) SRM_TX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE__MASK                       0xf
#  define SRM_TX_TXD_GEN_CFG__PRBS_MODE__OFFSET                     0

#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS                      0x4808
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__DEFAULT                      0x3333
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__ICOUNT                        3
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__ISPAN                         0x800
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS, (data))
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__READ(die, channel)         SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__GET(SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__READ(die, channel))
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__OFFSET                     0

#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS                      0x4809
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__DEFAULT                      0x3333
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__ICOUNT                        3
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__ISPAN                         0x800
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS, (data))
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__READ(die, channel)         SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__GET(SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__READ(die, channel))
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__OFFSET                     0

#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS                      0x480a
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__DEFAULT                      0x3333
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__ICOUNT                        3
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__ISPAN                         0x800
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS, (data))
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__READ(die, channel)         SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__GET(SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__READ(die, channel))
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__OFFSET                     0

#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS                      0x480b
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__DEFAULT                      0x3333
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__ICOUNT                        3
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__ISPAN                         0x800
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS, (data))
#define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__READ(die, channel)         SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__GET(SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__READ(die, channel))
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__OFFSET                     0

#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS                      0x480c
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__DEFAULT                      0x3333
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__ICOUNT                        3
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__ISPAN                         0x800
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS, (data))
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__READ(die, channel)         SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__GET(SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__READ(die, channel))
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__OFFSET                     0

#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS                      0x480d
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__DEFAULT                      0x3333
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__ICOUNT                        3
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__ISPAN                         0x800
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS, (data))
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__READ(die, channel)         SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__GET(SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__READ(die, channel))
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__OFFSET                     0

#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS                      0x480e
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__DEFAULT                      0x3333
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__ICOUNT                        3
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__ISPAN                         0x800
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS, (data))
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__READ(die, channel)         SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__GET(SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__READ(die, channel))
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__OFFSET                     0

#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS                      0x480f
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__DEFAULT                      0x3333
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__ICOUNT                        3
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__ISPAN                         0x800
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS)
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS, (data))
#define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__READ(die, channel)         SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__GET(SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__READ(die, channel))
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__OFFSET                     0

#define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS                      0x4810
#define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__DEFAULT                      0x1
#define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__ICOUNT                        3
#define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__ISPAN                         0x800
#define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS)
#define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS)
#define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS, (data))
#define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__READ(die, channel)         SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__GET(SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__RMW(die, channel, fdata) SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__MASK                       0xff
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__OFFSET                     8
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__READ(die, channel)         SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__GET(SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__RMW(die, channel, fdata) SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__MASK                       0xff
#  define SRM_TX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__OFFSET                     0

#define SRM_TX_TXD_GEN_PRBS_SEED_CFG__ADDRESS                      0x4811
#define SRM_TX_TXD_GEN_PRBS_SEED_CFG__DEFAULT                      0x3
#define SRM_TX_TXD_GEN_PRBS_SEED_CFG__ICOUNT                        3
#define SRM_TX_TXD_GEN_PRBS_SEED_CFG__ISPAN                         0x800
#define SRM_TX_TXD_GEN_PRBS_SEED_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_GEN_PRBS_SEED_CFG__ADDRESS)
#define SRM_TX_TXD_GEN_PRBS_SEED_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_GEN_PRBS_SEED_CFG__ADDRESS)
#define SRM_TX_TXD_GEN_PRBS_SEED_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_GEN_PRBS_SEED_CFG__ADDRESS, (data))
#define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_GEN_PRBS_SEED_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RSRVD1__READ(die, channel)         SRM_TX_TXD_GEN_PRBS_SEED_CFG__RSRVD1__GET(SRM_TX_TXD_GEN_PRBS_SEED_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RSRVD1__MASK                       0x1fff
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RSRVD1__OFFSET                     3
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED__READ(die, channel)         SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED__GET(SRM_TX_TXD_GEN_PRBS_SEED_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED__RMW(die, channel, fdata) SRM_TX_TXD_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED__MASK                       0x1
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED__OFFSET                     2
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_ODD__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_ODD__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_ODD__READ(die, channel)         SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_ODD__GET(SRM_TX_TXD_GEN_PRBS_SEED_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_ODD__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_ODD__RMW(die, channel, fdata) SRM_TX_TXD_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_ODD__MASK                       0x1
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_ODD__OFFSET                     1
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_EVN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_EVN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_EVN__READ(die, channel)         SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_EVN__GET(SRM_TX_TXD_GEN_PRBS_SEED_CFG__READ(die, channel))
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_EVN__WRITE(die, channel, fdata) SRM_TX_TXD_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_EVN__RMW(die, channel, fdata) SRM_TX_TXD_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_EVN__MASK                       0x1
#  define SRM_TX_TXD_GEN_PRBS_SEED_CFG__RESEED_EVN__OFFSET                     0

#define SRM_TX_TXD_ERRINJ_CFG0__ADDRESS                      0x4812
#define SRM_TX_TXD_ERRINJ_CFG0__DEFAULT                      0x0
#define SRM_TX_TXD_ERRINJ_CFG0__ICOUNT                        3
#define SRM_TX_TXD_ERRINJ_CFG0__ISPAN                         0x800
#define SRM_TX_TXD_ERRINJ_CFG0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_ERRINJ_CFG0__ADDRESS)
#define SRM_TX_TXD_ERRINJ_CFG0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_ERRINJ_CFG0__ADDRESS)
#define SRM_TX_TXD_ERRINJ_CFG0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_ERRINJ_CFG0__ADDRESS, (data))
#define SRM_TX_TXD_ERRINJ_CFG0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_ERRINJ_CFG0__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_ERRINJ_CFG0__ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_TXD_ERRINJ_CFG0__ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_TXD_ERRINJ_CFG0__ENABLE__READ(die, channel)         SRM_TX_TXD_ERRINJ_CFG0__ENABLE__GET(SRM_TX_TXD_ERRINJ_CFG0__READ(die, channel))
#  define SRM_TX_TXD_ERRINJ_CFG0__ENABLE__WRITE(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_ERRINJ_CFG0__ENABLE__RMW(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_ERRINJ_CFG0__ENABLE__MASK                       0x1
#  define SRM_TX_TXD_ERRINJ_CFG0__ENABLE__OFFSET                     15
#  define SRM_TX_TXD_ERRINJ_CFG0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x8007) | (((uint32_t)(fdata) << 3) & 0x7ff8))
#  define SRM_TX_TXD_ERRINJ_CFG0__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0xfff)
#  define SRM_TX_TXD_ERRINJ_CFG0__RSRVD1__READ(die, channel)         SRM_TX_TXD_ERRINJ_CFG0__RSRVD1__GET(SRM_TX_TXD_ERRINJ_CFG0__READ(die, channel))
#  define SRM_TX_TXD_ERRINJ_CFG0__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<3, 0x7ff8)
#  define SRM_TX_TXD_ERRINJ_CFG0__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<3, 0x7ff8)
#  define SRM_TX_TXD_ERRINJ_CFG0__RSRVD1__MASK                       0xfff
#  define SRM_TX_TXD_ERRINJ_CFG0__RSRVD1__OFFSET                     3
#  define SRM_TX_TXD_ERRINJ_CFG0__PATTERN__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SRM_TX_TXD_ERRINJ_CFG0__PATTERN__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SRM_TX_TXD_ERRINJ_CFG0__PATTERN__READ(die, channel)         SRM_TX_TXD_ERRINJ_CFG0__PATTERN__GET(SRM_TX_TXD_ERRINJ_CFG0__READ(die, channel))
#  define SRM_TX_TXD_ERRINJ_CFG0__PATTERN__WRITE(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_TX_TXD_ERRINJ_CFG0__PATTERN__RMW(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_TX_TXD_ERRINJ_CFG0__PATTERN__MASK                       0x7
#  define SRM_TX_TXD_ERRINJ_CFG0__PATTERN__OFFSET                     0

#define SRM_TX_TXD_ERRINJ_CFG1__ADDRESS                      0x4813
#define SRM_TX_TXD_ERRINJ_CFG1__DEFAULT                      0x1
#define SRM_TX_TXD_ERRINJ_CFG1__ICOUNT                        3
#define SRM_TX_TXD_ERRINJ_CFG1__ISPAN                         0x800
#define SRM_TX_TXD_ERRINJ_CFG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_ERRINJ_CFG1__ADDRESS)
#define SRM_TX_TXD_ERRINJ_CFG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_ERRINJ_CFG1__ADDRESS)
#define SRM_TX_TXD_ERRINJ_CFG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_ERRINJ_CFG1__ADDRESS, (data))
#define SRM_TX_TXD_ERRINJ_CFG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_ERRINJ_CFG1__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD1__READ(die, channel)         SRM_TX_TXD_ERRINJ_CFG1__RSRVD1__GET(SRM_TX_TXD_ERRINJ_CFG1__READ(die, channel))
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD1__MASK                       0x1
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD1__OFFSET                     15
#  define SRM_TX_TXD_ERRINJ_CFG1__GAP__SET(rdata, fdata)         (((rdata) & 0x80ff) | (((uint32_t)(fdata) << 8) & 0x7f00))
#  define SRM_TX_TXD_ERRINJ_CFG1__GAP__GET(rdata)                (((rdata) >> 8) & 0x7f)
#  define SRM_TX_TXD_ERRINJ_CFG1__GAP__READ(die, channel)         SRM_TX_TXD_ERRINJ_CFG1__GAP__GET(SRM_TX_TXD_ERRINJ_CFG1__READ(die, channel))
#  define SRM_TX_TXD_ERRINJ_CFG1__GAP__WRITE(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SRM_TX_TXD_ERRINJ_CFG1__GAP__RMW(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SRM_TX_TXD_ERRINJ_CFG1__GAP__MASK                       0x7f
#  define SRM_TX_TXD_ERRINJ_CFG1__GAP__OFFSET                     8
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD2__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD2__READ(die, channel)         SRM_TX_TXD_ERRINJ_CFG1__RSRVD2__GET(SRM_TX_TXD_ERRINJ_CFG1__READ(die, channel))
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD2__WRITE(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD2__RMW(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD2__MASK                       0x1
#  define SRM_TX_TXD_ERRINJ_CFG1__RSRVD2__OFFSET                     7
#  define SRM_TX_TXD_ERRINJ_CFG1__DURATION__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_TX_TXD_ERRINJ_CFG1__DURATION__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_TX_TXD_ERRINJ_CFG1__DURATION__READ(die, channel)         SRM_TX_TXD_ERRINJ_CFG1__DURATION__GET(SRM_TX_TXD_ERRINJ_CFG1__READ(die, channel))
#  define SRM_TX_TXD_ERRINJ_CFG1__DURATION__WRITE(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_TX_TXD_ERRINJ_CFG1__DURATION__RMW(die, channel, fdata) SRM_TX_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_TX_TXD_ERRINJ_CFG1__DURATION__MASK                       0x7f
#  define SRM_TX_TXD_ERRINJ_CFG1__DURATION__OFFSET                     0

#define SRM_TX_TXD_SQUELCH_EN_CFG__ADDRESS                      0x4814
#define SRM_TX_TXD_SQUELCH_EN_CFG__DEFAULT                      0x1
#define SRM_TX_TXD_SQUELCH_EN_CFG__ICOUNT                        3
#define SRM_TX_TXD_SQUELCH_EN_CFG__ISPAN                         0x800
#define SRM_TX_TXD_SQUELCH_EN_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SQUELCH_EN_CFG__ADDRESS)
#define SRM_TX_TXD_SQUELCH_EN_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SQUELCH_EN_CFG__ADDRESS)
#define SRM_TX_TXD_SQUELCH_EN_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SQUELCH_EN_CFG__ADDRESS, (data))
#define SRM_TX_TXD_SQUELCH_EN_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SQUELCH_EN_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SQUELCH_EN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_TX_TXD_SQUELCH_EN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_TX_TXD_SQUELCH_EN_CFG__RSRVD1__READ(die, channel)         SRM_TX_TXD_SQUELCH_EN_CFG__RSRVD1__GET(SRM_TX_TXD_SQUELCH_EN_CFG__READ(die, channel))
#  define SRM_TX_TXD_SQUELCH_EN_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_TX_TXD_SQUELCH_EN_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_TX_TXD_SQUELCH_EN_CFG__RSRVD1__MASK                       0x7fff
#  define SRM_TX_TXD_SQUELCH_EN_CFG__RSRVD1__OFFSET                     1
#  define SRM_TX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__READ(die, channel)         SRM_TX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__GET(SRM_TX_TXD_SQUELCH_EN_CFG__READ(die, channel))
#  define SRM_TX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__WRITE(die, channel, fdata) SRM_TX_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__RMW(die, channel, fdata) SRM_TX_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__MASK                       0x1
#  define SRM_TX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__OFFSET                     0

#define SRM_TX_TXD_SQUELCH_CFG__ADDRESS                      0x4815
#define SRM_TX_TXD_SQUELCH_CFG__DEFAULT                      0x40
#define SRM_TX_TXD_SQUELCH_CFG__ICOUNT                        3
#define SRM_TX_TXD_SQUELCH_CFG__ISPAN                         0x800
#define SRM_TX_TXD_SQUELCH_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SQUELCH_CFG__ADDRESS)
#define SRM_TX_TXD_SQUELCH_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SQUELCH_CFG__ADDRESS)
#define SRM_TX_TXD_SQUELCH_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SQUELCH_CFG__ADDRESS, (data))
#define SRM_TX_TXD_SQUELCH_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SQUELCH_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD1__READ(die, channel)         SRM_TX_TXD_SQUELCH_CFG__RSRVD1__GET(SRM_TX_TXD_SQUELCH_CFG__READ(die, channel))
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_SQUELCH_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_SQUELCH_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD1__MASK                       0x7f
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD1__OFFSET                     9
#  define SRM_TX_TXD_SQUELCH_CFG__DISABLE_PCONTROL__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_TX_TXD_SQUELCH_CFG__DISABLE_PCONTROL__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_TX_TXD_SQUELCH_CFG__DISABLE_PCONTROL__READ(die, channel)         SRM_TX_TXD_SQUELCH_CFG__DISABLE_PCONTROL__GET(SRM_TX_TXD_SQUELCH_CFG__READ(die, channel))
#  define SRM_TX_TXD_SQUELCH_CFG__DISABLE_PCONTROL__WRITE(die, channel, fdata) SRM_TX_TXD_SQUELCH_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_TXD_SQUELCH_CFG__DISABLE_PCONTROL__RMW(die, channel, fdata) SRM_TX_TXD_SQUELCH_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_TXD_SQUELCH_CFG__DISABLE_PCONTROL__MASK                       0x1
#  define SRM_TX_TXD_SQUELCH_CFG__DISABLE_PCONTROL__OFFSET                     8
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD2__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD2__READ(die, channel)         SRM_TX_TXD_SQUELCH_CFG__RSRVD2__GET(SRM_TX_TXD_SQUELCH_CFG__READ(die, channel))
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD2__WRITE(die, channel, fdata) SRM_TX_TXD_SQUELCH_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD2__RMW(die, channel, fdata) SRM_TX_TXD_SQUELCH_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD2__MASK                       0x1
#  define SRM_TX_TXD_SQUELCH_CFG__RSRVD2__OFFSET                     7
#  define SRM_TX_TXD_SQUELCH_CFG__VALUE__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_TX_TXD_SQUELCH_CFG__VALUE__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_TX_TXD_SQUELCH_CFG__VALUE__READ(die, channel)         SRM_TX_TXD_SQUELCH_CFG__VALUE__GET(SRM_TX_TXD_SQUELCH_CFG__READ(die, channel))
#  define SRM_TX_TXD_SQUELCH_CFG__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SQUELCH_CFG__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_TX_TXD_SQUELCH_CFG__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SQUELCH_CFG__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_TX_TXD_SQUELCH_CFG__VALUE__MASK                       0x7f
#  define SRM_TX_TXD_SQUELCH_CFG__VALUE__OFFSET                     0

#define SRM_TX_TXD_DSP_CFG__ADDRESS                      0x4816
#define SRM_TX_TXD_DSP_CFG__DEFAULT                      0x0
#define SRM_TX_TXD_DSP_CFG__ICOUNT                        3
#define SRM_TX_TXD_DSP_CFG__ISPAN                         0x800
#define SRM_TX_TXD_DSP_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_DSP_CFG__ADDRESS)
#define SRM_TX_TXD_DSP_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_DSP_CFG__ADDRESS)
#define SRM_TX_TXD_DSP_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_DSP_CFG__ADDRESS, (data))
#define SRM_TX_TXD_DSP_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_DSP_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_DSP_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SRM_TX_TXD_DSP_CFG__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SRM_TX_TXD_DSP_CFG__RSRVD1__READ(die, channel)         SRM_TX_TXD_DSP_CFG__RSRVD1__GET(SRM_TX_TXD_DSP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SRM_TX_TXD_DSP_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SRM_TX_TXD_DSP_CFG__RSRVD1__MASK                       0x7f
#  define SRM_TX_TXD_DSP_CFG__RSRVD1__OFFSET                     9
#  define SRM_TX_TXD_DSP_CFG__TEST_EN__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_TX_TXD_DSP_CFG__TEST_EN__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_TX_TXD_DSP_CFG__TEST_EN__READ(die, channel)         SRM_TX_TXD_DSP_CFG__TEST_EN__GET(SRM_TX_TXD_DSP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_CFG__TEST_EN__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_TXD_DSP_CFG__TEST_EN__RMW(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_TXD_DSP_CFG__TEST_EN__MASK                       0x1
#  define SRM_TX_TXD_DSP_CFG__TEST_EN__OFFSET                     8
#  define SRM_TX_TXD_DSP_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_TX_TXD_DSP_CFG__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_TX_TXD_DSP_CFG__RSRVD2__READ(die, channel)         SRM_TX_TXD_DSP_CFG__RSRVD2__GET(SRM_TX_TXD_DSP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_CFG__RSRVD2__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SRM_TX_TXD_DSP_CFG__RSRVD2__RMW(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SRM_TX_TXD_DSP_CFG__RSRVD2__MASK                       0x7
#  define SRM_TX_TXD_DSP_CFG__RSRVD2__OFFSET                     5
#  define SRM_TX_TXD_DSP_CFG__IS_LUT_UNSIGNED__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_TX_TXD_DSP_CFG__IS_LUT_UNSIGNED__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_TX_TXD_DSP_CFG__IS_LUT_UNSIGNED__READ(die, channel)         SRM_TX_TXD_DSP_CFG__IS_LUT_UNSIGNED__GET(SRM_TX_TXD_DSP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_CFG__IS_LUT_UNSIGNED__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_TXD_DSP_CFG__IS_LUT_UNSIGNED__RMW(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_TXD_DSP_CFG__IS_LUT_UNSIGNED__MASK                       0x1
#  define SRM_TX_TXD_DSP_CFG__IS_LUT_UNSIGNED__OFFSET                     4
#  define SRM_TX_TXD_DSP_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_TXD_DSP_CFG__RSRVD3__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_TXD_DSP_CFG__RSRVD3__READ(die, channel)         SRM_TX_TXD_DSP_CFG__RSRVD3__GET(SRM_TX_TXD_DSP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_CFG__RSRVD3__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_TXD_DSP_CFG__RSRVD3__RMW(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_TXD_DSP_CFG__RSRVD3__MASK                       0x1
#  define SRM_TX_TXD_DSP_CFG__RSRVD3__OFFSET                     3
#  define SRM_TX_TXD_DSP_CFG__LUT_SEL_3TAP__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_TXD_DSP_CFG__LUT_SEL_3TAP__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_TXD_DSP_CFG__LUT_SEL_3TAP__READ(die, channel)         SRM_TX_TXD_DSP_CFG__LUT_SEL_3TAP__GET(SRM_TX_TXD_DSP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_CFG__LUT_SEL_3TAP__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_TXD_DSP_CFG__LUT_SEL_3TAP__RMW(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_TXD_DSP_CFG__LUT_SEL_3TAP__MASK                       0x1
#  define SRM_TX_TXD_DSP_CFG__LUT_SEL_3TAP__OFFSET                     2
#  define SRM_TX_TXD_DSP_CFG__MODE__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_TX_TXD_DSP_CFG__MODE__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_TX_TXD_DSP_CFG__MODE__READ(die, channel)         SRM_TX_TXD_DSP_CFG__MODE__GET(SRM_TX_TXD_DSP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_CFG__MODE__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SRM_TX_TXD_DSP_CFG__MODE__RMW(die, channel, fdata) SRM_TX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SRM_TX_TXD_DSP_CFG__MODE__MASK                       0x3
#  define SRM_TX_TXD_DSP_CFG__MODE__OFFSET                     0

#define SRM_TX_TXD_DSP_MAP_CFG__ADDRESS                      0x4817
#define SRM_TX_TXD_DSP_MAP_CFG__DEFAULT                      0x3210
#define SRM_TX_TXD_DSP_MAP_CFG__ICOUNT                        3
#define SRM_TX_TXD_DSP_MAP_CFG__ISPAN                         0x800
#define SRM_TX_TXD_DSP_MAP_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_DSP_MAP_CFG__ADDRESS)
#define SRM_TX_TXD_DSP_MAP_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_DSP_MAP_CFG__ADDRESS)
#define SRM_TX_TXD_DSP_MAP_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_DSP_MAP_CFG__ADDRESS, (data))
#define SRM_TX_TXD_DSP_MAP_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_DSP_MAP_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD1__READ(die, channel)         SRM_TX_TXD_DSP_MAP_CFG__RSRVD1__GET(SRM_TX_TXD_DSP_MAP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD1__MASK                       0x3
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD1__OFFSET                     14
#  define SRM_TX_TXD_DSP_MAP_CFG__B11__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SRM_TX_TXD_DSP_MAP_CFG__B11__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SRM_TX_TXD_DSP_MAP_CFG__B11__READ(die, channel)         SRM_TX_TXD_DSP_MAP_CFG__B11__GET(SRM_TX_TXD_DSP_MAP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_MAP_CFG__B11__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SRM_TX_TXD_DSP_MAP_CFG__B11__RMW(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SRM_TX_TXD_DSP_MAP_CFG__B11__MASK                       0x3
#  define SRM_TX_TXD_DSP_MAP_CFG__B11__OFFSET                     12
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD2__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD2__READ(die, channel)         SRM_TX_TXD_DSP_MAP_CFG__RSRVD2__GET(SRM_TX_TXD_DSP_MAP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD2__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD2__RMW(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD2__MASK                       0x3
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD2__OFFSET                     10
#  define SRM_TX_TXD_DSP_MAP_CFG__B10__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_TX_TXD_DSP_MAP_CFG__B10__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_TX_TXD_DSP_MAP_CFG__B10__READ(die, channel)         SRM_TX_TXD_DSP_MAP_CFG__B10__GET(SRM_TX_TXD_DSP_MAP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_MAP_CFG__B10__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SRM_TX_TXD_DSP_MAP_CFG__B10__RMW(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SRM_TX_TXD_DSP_MAP_CFG__B10__MASK                       0x3
#  define SRM_TX_TXD_DSP_MAP_CFG__B10__OFFSET                     8
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD3__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD3__READ(die, channel)         SRM_TX_TXD_DSP_MAP_CFG__RSRVD3__GET(SRM_TX_TXD_DSP_MAP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD3__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD3__RMW(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD3__MASK                       0x3
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD3__OFFSET                     6
#  define SRM_TX_TXD_DSP_MAP_CFG__B01__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SRM_TX_TXD_DSP_MAP_CFG__B01__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SRM_TX_TXD_DSP_MAP_CFG__B01__READ(die, channel)         SRM_TX_TXD_DSP_MAP_CFG__B01__GET(SRM_TX_TXD_DSP_MAP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_MAP_CFG__B01__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SRM_TX_TXD_DSP_MAP_CFG__B01__RMW(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SRM_TX_TXD_DSP_MAP_CFG__B01__MASK                       0x3
#  define SRM_TX_TXD_DSP_MAP_CFG__B01__OFFSET                     4
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD4__SET(rdata, fdata)         (((rdata) & 0xfff3) | (((uint32_t)(fdata) << 2) & 0xc))
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD4__GET(rdata)                (((rdata) >> 2) & 0x3)
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD4__READ(die, channel)         SRM_TX_TXD_DSP_MAP_CFG__RSRVD4__GET(SRM_TX_TXD_DSP_MAP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD4__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<2, 0xc)
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD4__RMW(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<2, 0xc)
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD4__MASK                       0x3
#  define SRM_TX_TXD_DSP_MAP_CFG__RSRVD4__OFFSET                     2
#  define SRM_TX_TXD_DSP_MAP_CFG__B00__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_TX_TXD_DSP_MAP_CFG__B00__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_TX_TXD_DSP_MAP_CFG__B00__READ(die, channel)         SRM_TX_TXD_DSP_MAP_CFG__B00__GET(SRM_TX_TXD_DSP_MAP_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_MAP_CFG__B00__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SRM_TX_TXD_DSP_MAP_CFG__B00__RMW(die, channel, fdata) SRM_TX_TXD_DSP_MAP_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SRM_TX_TXD_DSP_MAP_CFG__B00__MASK                       0x3
#  define SRM_TX_TXD_DSP_MAP_CFG__B00__OFFSET                     0

#define SRM_TX_TXD_DSP_COEFF_ACCESS__ADDRESS                      0x4818
#define SRM_TX_TXD_DSP_COEFF_ACCESS__DEFAULT                      0x0
#define SRM_TX_TXD_DSP_COEFF_ACCESS__ICOUNT                        3
#define SRM_TX_TXD_DSP_COEFF_ACCESS__ISPAN                         0x800
#define SRM_TX_TXD_DSP_COEFF_ACCESS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_DSP_COEFF_ACCESS__ADDRESS)
#define SRM_TX_TXD_DSP_COEFF_ACCESS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_DSP_COEFF_ACCESS__ADDRESS)
#define SRM_TX_TXD_DSP_COEFF_ACCESS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_DSP_COEFF_ACCESS__ADDRESS, (data))
#define SRM_TX_TXD_DSP_COEFF_ACCESS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_DSP_COEFF_ACCESS__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RBW__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RBW__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RBW__READ(die, channel)         SRM_TX_TXD_DSP_COEFF_ACCESS__RBW__GET(SRM_TX_TXD_DSP_COEFF_ACCESS__READ(die, channel))
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RBW__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RBW__RMW(die, channel, fdata) SRM_TX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RBW__MASK                       0x1
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RBW__OFFSET                     15
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__ADDR__SET(rdata, fdata)         (((rdata) & 0x8fff) | (((uint32_t)(fdata) << 12) & 0x7000))
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__ADDR__GET(rdata)                (((rdata) >> 12) & 0x7)
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__ADDR__READ(die, channel)         SRM_TX_TXD_DSP_COEFF_ACCESS__ADDR__GET(SRM_TX_TXD_DSP_COEFF_ACCESS__READ(die, channel))
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__ADDR__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<12, 0x7000)
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__ADDR__RMW(die, channel, fdata) SRM_TX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<12, 0x7000)
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__ADDR__MASK                       0x7
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__ADDR__OFFSET                     12
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf1ff) | (((uint32_t)(fdata) << 9) & 0xe00))
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7)
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RSRVD1__READ(die, channel)         SRM_TX_TXD_DSP_COEFF_ACCESS__RSRVD1__GET(SRM_TX_TXD_DSP_COEFF_ACCESS__READ(die, channel))
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RSRVD1__MASK                       0x7
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__RSRVD1__OFFSET                     9
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__READ(die, channel)         SRM_TX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__GET(SRM_TX_TXD_DSP_COEFF_ACCESS__READ(die, channel))
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__RMW(die, channel, fdata) SRM_TX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__MASK                       0x1ff
#  define SRM_TX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__OFFSET                     0

#define SRM_TX_TXD_DSP_COEFF_DATA__ADDRESS                      0x4819
#define SRM_TX_TXD_DSP_COEFF_DATA__DEFAULT                      0x0
#define SRM_TX_TXD_DSP_COEFF_DATA__ICOUNT                        3
#define SRM_TX_TXD_DSP_COEFF_DATA__ISPAN                         0x800
#define SRM_TX_TXD_DSP_COEFF_DATA__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_DSP_COEFF_DATA__ADDRESS)
#define SRM_TX_TXD_DSP_COEFF_DATA__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_DSP_COEFF_DATA__ADDRESS)
#define SRM_TX_TXD_DSP_COEFF_DATA__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_DSP_COEFF_DATA__ADDRESS, (data))
#define SRM_TX_TXD_DSP_COEFF_DATA__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_DSP_COEFF_DATA__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_DSP_COEFF_DATA__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SRM_TX_TXD_DSP_COEFF_DATA__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SRM_TX_TXD_DSP_COEFF_DATA__RSRVD1__READ(die, channel)         SRM_TX_TXD_DSP_COEFF_DATA__RSRVD1__GET(SRM_TX_TXD_DSP_COEFF_DATA__READ(die, channel))
#  define SRM_TX_TXD_DSP_COEFF_DATA__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_COEFF_DATA__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SRM_TX_TXD_DSP_COEFF_DATA__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_DSP_COEFF_DATA__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SRM_TX_TXD_DSP_COEFF_DATA__RSRVD1__MASK                       0x7f
#  define SRM_TX_TXD_DSP_COEFF_DATA__RSRVD1__OFFSET                     9
#  define SRM_TX_TXD_DSP_COEFF_DATA__READ_DATA__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SRM_TX_TXD_DSP_COEFF_DATA__READ_DATA__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SRM_TX_TXD_DSP_COEFF_DATA__READ_DATA__READ(die, channel)         SRM_TX_TXD_DSP_COEFF_DATA__READ_DATA__GET(SRM_TX_TXD_DSP_COEFF_DATA__READ(die, channel))
#  define SRM_TX_TXD_DSP_COEFF_DATA__READ_DATA__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_COEFF_DATA__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SRM_TX_TXD_DSP_COEFF_DATA__READ_DATA__RMW(die, channel, fdata) SRM_TX_TXD_DSP_COEFF_DATA__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SRM_TX_TXD_DSP_COEFF_DATA__READ_DATA__MASK                       0x1ff
#  define SRM_TX_TXD_DSP_COEFF_DATA__READ_DATA__OFFSET                     0

#define SRM_TX_TXD_DSP_LUT_ACCESS__ADDRESS                      0x481a
#define SRM_TX_TXD_DSP_LUT_ACCESS__DEFAULT                      0x0
#define SRM_TX_TXD_DSP_LUT_ACCESS__ICOUNT                        3
#define SRM_TX_TXD_DSP_LUT_ACCESS__ISPAN                         0x800
#define SRM_TX_TXD_DSP_LUT_ACCESS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_DSP_LUT_ACCESS__ADDRESS)
#define SRM_TX_TXD_DSP_LUT_ACCESS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_DSP_LUT_ACCESS__ADDRESS)
#define SRM_TX_TXD_DSP_LUT_ACCESS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_DSP_LUT_ACCESS__ADDRESS, (data))
#define SRM_TX_TXD_DSP_LUT_ACCESS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_DSP_LUT_ACCESS__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RBW__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RBW__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RBW__READ(die, channel)         SRM_TX_TXD_DSP_LUT_ACCESS__RBW__GET(SRM_TX_TXD_DSP_LUT_ACCESS__READ(die, channel))
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RBW__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RBW__RMW(die, channel, fdata) SRM_TX_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RBW__MASK                       0x1
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RBW__OFFSET                     15
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x807f) | (((uint32_t)(fdata) << 7) & 0x7f80))
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0xff)
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RSRVD1__READ(die, channel)         SRM_TX_TXD_DSP_LUT_ACCESS__RSRVD1__GET(SRM_TX_TXD_DSP_LUT_ACCESS__READ(die, channel))
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<7, 0x7f80)
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<7, 0x7f80)
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RSRVD1__MASK                       0xff
#  define SRM_TX_TXD_DSP_LUT_ACCESS__RSRVD1__OFFSET                     7
#  define SRM_TX_TXD_DSP_LUT_ACCESS__ADDR__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_TX_TXD_DSP_LUT_ACCESS__ADDR__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_TX_TXD_DSP_LUT_ACCESS__ADDR__READ(die, channel)         SRM_TX_TXD_DSP_LUT_ACCESS__ADDR__GET(SRM_TX_TXD_DSP_LUT_ACCESS__READ(die, channel))
#  define SRM_TX_TXD_DSP_LUT_ACCESS__ADDR__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_TX_TXD_DSP_LUT_ACCESS__ADDR__RMW(die, channel, fdata) SRM_TX_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_TX_TXD_DSP_LUT_ACCESS__ADDR__MASK                       0x7f
#  define SRM_TX_TXD_DSP_LUT_ACCESS__ADDR__OFFSET                     0

#define SRM_TX_TXD_DSP_LUT_WRITE__ADDRESS                      0x481b
#define SRM_TX_TXD_DSP_LUT_WRITE__DEFAULT                      0x0
#define SRM_TX_TXD_DSP_LUT_WRITE__ICOUNT                        3
#define SRM_TX_TXD_DSP_LUT_WRITE__ISPAN                         0x800
#define SRM_TX_TXD_DSP_LUT_WRITE__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_DSP_LUT_WRITE__ADDRESS)
#define SRM_TX_TXD_DSP_LUT_WRITE__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_DSP_LUT_WRITE__ADDRESS)
#define SRM_TX_TXD_DSP_LUT_WRITE__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_DSP_LUT_WRITE__ADDRESS, (data))
#define SRM_TX_TXD_DSP_LUT_WRITE__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_DSP_LUT_WRITE__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_DSP_LUT_WRITE__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SRM_TX_TXD_DSP_LUT_WRITE__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SRM_TX_TXD_DSP_LUT_WRITE__RSRVD1__READ(die, channel)         SRM_TX_TXD_DSP_LUT_WRITE__RSRVD1__GET(SRM_TX_TXD_DSP_LUT_WRITE__READ(die, channel))
#  define SRM_TX_TXD_DSP_LUT_WRITE__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_TX_TXD_DSP_LUT_WRITE__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_TX_TXD_DSP_LUT_WRITE__RSRVD1__MASK                       0x1ff
#  define SRM_TX_TXD_DSP_LUT_WRITE__RSRVD1__OFFSET                     7
#  define SRM_TX_TXD_DSP_LUT_WRITE__DATA__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_TX_TXD_DSP_LUT_WRITE__DATA__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_TX_TXD_DSP_LUT_WRITE__DATA__READ(die, channel)         SRM_TX_TXD_DSP_LUT_WRITE__DATA__GET(SRM_TX_TXD_DSP_LUT_WRITE__READ(die, channel))
#  define SRM_TX_TXD_DSP_LUT_WRITE__DATA__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_TX_TXD_DSP_LUT_WRITE__DATA__RMW(die, channel, fdata) SRM_TX_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_TX_TXD_DSP_LUT_WRITE__DATA__MASK                       0x7f
#  define SRM_TX_TXD_DSP_LUT_WRITE__DATA__OFFSET                     0

#define SRM_TX_TXD_DSP_LUT_READ__ADDRESS                      0x481c
#define SRM_TX_TXD_DSP_LUT_READ__DEFAULT                      0x0
#define SRM_TX_TXD_DSP_LUT_READ__ICOUNT                        3
#define SRM_TX_TXD_DSP_LUT_READ__ISPAN                         0x800
#define SRM_TX_TXD_DSP_LUT_READ__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_DSP_LUT_READ__ADDRESS)
#define SRM_TX_TXD_DSP_LUT_READ__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_DSP_LUT_READ__ADDRESS)
#define SRM_TX_TXD_DSP_LUT_READ__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_DSP_LUT_READ__ADDRESS, (data))
#define SRM_TX_TXD_DSP_LUT_READ__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_DSP_LUT_READ__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_DSP_LUT_READ__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SRM_TX_TXD_DSP_LUT_READ__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SRM_TX_TXD_DSP_LUT_READ__RSRVD1__READ(die, channel)         SRM_TX_TXD_DSP_LUT_READ__RSRVD1__GET(SRM_TX_TXD_DSP_LUT_READ__READ(die, channel))
#  define SRM_TX_TXD_DSP_LUT_READ__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_LUT_READ__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_TX_TXD_DSP_LUT_READ__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_DSP_LUT_READ__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_TX_TXD_DSP_LUT_READ__RSRVD1__MASK                       0x1ff
#  define SRM_TX_TXD_DSP_LUT_READ__RSRVD1__OFFSET                     7
#  define SRM_TX_TXD_DSP_LUT_READ__DATA__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_TX_TXD_DSP_LUT_READ__DATA__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_TX_TXD_DSP_LUT_READ__DATA__READ(die, channel)         SRM_TX_TXD_DSP_LUT_READ__DATA__GET(SRM_TX_TXD_DSP_LUT_READ__READ(die, channel))
#  define SRM_TX_TXD_DSP_LUT_READ__DATA__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_LUT_READ__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_TX_TXD_DSP_LUT_READ__DATA__RMW(die, channel, fdata) SRM_TX_TXD_DSP_LUT_READ__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SRM_TX_TXD_DSP_LUT_READ__DATA__MASK                       0x7f
#  define SRM_TX_TXD_DSP_LUT_READ__DATA__OFFSET                     0

#define SRM_TX_TXD_DSP_UPS_CFG__ADDRESS                      0x481d
#define SRM_TX_TXD_DSP_UPS_CFG__DEFAULT                      0x0
#define SRM_TX_TXD_DSP_UPS_CFG__ICOUNT                        3
#define SRM_TX_TXD_DSP_UPS_CFG__ISPAN                         0x800
#define SRM_TX_TXD_DSP_UPS_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_DSP_UPS_CFG__ADDRESS)
#define SRM_TX_TXD_DSP_UPS_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_DSP_UPS_CFG__ADDRESS)
#define SRM_TX_TXD_DSP_UPS_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_DSP_UPS_CFG__ADDRESS, (data))
#define SRM_TX_TXD_DSP_UPS_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_DSP_UPS_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_DSP_UPS_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SRM_TX_TXD_DSP_UPS_CFG__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SRM_TX_TXD_DSP_UPS_CFG__RSRVD1__READ(die, channel)         SRM_TX_TXD_DSP_UPS_CFG__RSRVD1__GET(SRM_TX_TXD_DSP_UPS_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_UPS_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_UPS_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_TX_TXD_DSP_UPS_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_DSP_UPS_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_TX_TXD_DSP_UPS_CFG__RSRVD1__MASK                       0x1fff
#  define SRM_TX_TXD_DSP_UPS_CFG__RSRVD1__OFFSET                     3
#  define SRM_TX_TXD_DSP_UPS_CFG__MODE__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SRM_TX_TXD_DSP_UPS_CFG__MODE__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SRM_TX_TXD_DSP_UPS_CFG__MODE__READ(die, channel)         SRM_TX_TXD_DSP_UPS_CFG__MODE__GET(SRM_TX_TXD_DSP_UPS_CFG__READ(die, channel))
#  define SRM_TX_TXD_DSP_UPS_CFG__MODE__WRITE(die, channel, fdata) SRM_TX_TXD_DSP_UPS_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_TX_TXD_DSP_UPS_CFG__MODE__RMW(die, channel, fdata) SRM_TX_TXD_DSP_UPS_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SRM_TX_TXD_DSP_UPS_CFG__MODE__MASK                       0x7
#  define SRM_TX_TXD_DSP_UPS_CFG__MODE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH0__ADDRESS                      0x4822
#define SRM_TX_TXD_SCRATCH0__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH0__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH0__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH0__ADDRESS)
#define SRM_TX_TXD_SCRATCH0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH0__ADDRESS)
#define SRM_TX_TXD_SCRATCH0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH0__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH0__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH0__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH0__VALUE__GET(SRM_TX_TXD_SCRATCH0__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH0__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH0__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH0__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH0__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH1__ADDRESS                      0x4823
#define SRM_TX_TXD_SCRATCH1__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH1__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH1__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH1__ADDRESS)
#define SRM_TX_TXD_SCRATCH1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH1__ADDRESS)
#define SRM_TX_TXD_SCRATCH1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH1__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH1__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH1__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH1__VALUE__GET(SRM_TX_TXD_SCRATCH1__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH1__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH1__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH1__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH1__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH2__ADDRESS                      0x4824
#define SRM_TX_TXD_SCRATCH2__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH2__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH2__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH2__ADDRESS)
#define SRM_TX_TXD_SCRATCH2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH2__ADDRESS)
#define SRM_TX_TXD_SCRATCH2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH2__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH2__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH2__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH2__VALUE__GET(SRM_TX_TXD_SCRATCH2__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH2__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH2__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH2__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH2__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH3__ADDRESS                      0x4825
#define SRM_TX_TXD_SCRATCH3__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH3__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH3__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH3__ADDRESS)
#define SRM_TX_TXD_SCRATCH3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH3__ADDRESS)
#define SRM_TX_TXD_SCRATCH3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH3__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH3__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH3__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH3__VALUE__GET(SRM_TX_TXD_SCRATCH3__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH3__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH3__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH3__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH3__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH4__ADDRESS                      0x4826
#define SRM_TX_TXD_SCRATCH4__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH4__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH4__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH4__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH4__ADDRESS)
#define SRM_TX_TXD_SCRATCH4__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH4__ADDRESS)
#define SRM_TX_TXD_SCRATCH4__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH4__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH4__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH4__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH4__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH4__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH4__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH4__VALUE__GET(SRM_TX_TXD_SCRATCH4__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH4__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH4__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH4__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH4__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH5__ADDRESS                      0x4827
#define SRM_TX_TXD_SCRATCH5__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH5__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH5__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH5__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH5__ADDRESS)
#define SRM_TX_TXD_SCRATCH5__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH5__ADDRESS)
#define SRM_TX_TXD_SCRATCH5__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH5__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH5__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH5__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH5__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH5__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH5__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH5__VALUE__GET(SRM_TX_TXD_SCRATCH5__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH5__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH5__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH5__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH5__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH6__ADDRESS                      0x4828
#define SRM_TX_TXD_SCRATCH6__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH6__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH6__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH6__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH6__ADDRESS)
#define SRM_TX_TXD_SCRATCH6__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH6__ADDRESS)
#define SRM_TX_TXD_SCRATCH6__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH6__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH6__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH6__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH6__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH6__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH6__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH6__VALUE__GET(SRM_TX_TXD_SCRATCH6__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH6__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH6__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH6__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH6__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH7__ADDRESS                      0x4829
#define SRM_TX_TXD_SCRATCH7__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH7__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH7__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH7__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH7__ADDRESS)
#define SRM_TX_TXD_SCRATCH7__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH7__ADDRESS)
#define SRM_TX_TXD_SCRATCH7__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH7__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH7__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH7__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH7__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH7__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH7__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH7__VALUE__GET(SRM_TX_TXD_SCRATCH7__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH7__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH7__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH7__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH7__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH8__ADDRESS                      0x482a
#define SRM_TX_TXD_SCRATCH8__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH8__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH8__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH8__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH8__ADDRESS)
#define SRM_TX_TXD_SCRATCH8__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH8__ADDRESS)
#define SRM_TX_TXD_SCRATCH8__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH8__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH8__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH8__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH8__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH8__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH8__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH8__VALUE__GET(SRM_TX_TXD_SCRATCH8__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH8__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH8__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH8__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH8__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH9__ADDRESS                      0x482b
#define SRM_TX_TXD_SCRATCH9__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH9__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH9__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH9__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH9__ADDRESS)
#define SRM_TX_TXD_SCRATCH9__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH9__ADDRESS)
#define SRM_TX_TXD_SCRATCH9__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH9__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH9__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH9__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH9__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH9__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH9__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH9__VALUE__GET(SRM_TX_TXD_SCRATCH9__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH9__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH9__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH9__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH9__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH10__ADDRESS                      0x482c
#define SRM_TX_TXD_SCRATCH10__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH10__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH10__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH10__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH10__ADDRESS)
#define SRM_TX_TXD_SCRATCH10__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH10__ADDRESS)
#define SRM_TX_TXD_SCRATCH10__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH10__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH10__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH10__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH10__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH10__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH10__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH10__VALUE__GET(SRM_TX_TXD_SCRATCH10__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH10__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH10__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH10__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH10__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH10__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH10__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH11__ADDRESS                      0x482d
#define SRM_TX_TXD_SCRATCH11__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH11__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH11__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH11__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH11__ADDRESS)
#define SRM_TX_TXD_SCRATCH11__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH11__ADDRESS)
#define SRM_TX_TXD_SCRATCH11__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH11__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH11__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH11__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH11__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH11__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH11__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH11__VALUE__GET(SRM_TX_TXD_SCRATCH11__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH11__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH11__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH11__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH11__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH11__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH11__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH12__ADDRESS                      0x482e
#define SRM_TX_TXD_SCRATCH12__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH12__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH12__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH12__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH12__ADDRESS)
#define SRM_TX_TXD_SCRATCH12__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH12__ADDRESS)
#define SRM_TX_TXD_SCRATCH12__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH12__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH12__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH12__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH12__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH12__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH12__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH12__VALUE__GET(SRM_TX_TXD_SCRATCH12__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH12__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH12__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH12__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH12__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH12__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH12__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH13__ADDRESS                      0x482f
#define SRM_TX_TXD_SCRATCH13__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH13__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH13__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH13__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH13__ADDRESS)
#define SRM_TX_TXD_SCRATCH13__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH13__ADDRESS)
#define SRM_TX_TXD_SCRATCH13__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH13__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH13__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH13__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH13__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH13__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH13__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH13__VALUE__GET(SRM_TX_TXD_SCRATCH13__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH13__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH13__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH13__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH13__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH13__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH13__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH14__ADDRESS                      0x4830
#define SRM_TX_TXD_SCRATCH14__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH14__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH14__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH14__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH14__ADDRESS)
#define SRM_TX_TXD_SCRATCH14__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH14__ADDRESS)
#define SRM_TX_TXD_SCRATCH14__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH14__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH14__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH14__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH14__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH14__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH14__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH14__VALUE__GET(SRM_TX_TXD_SCRATCH14__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH14__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH14__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH14__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH14__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH14__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH14__VALUE__OFFSET                     0

#define SRM_TX_TXD_SCRATCH15__ADDRESS                      0x4831
#define SRM_TX_TXD_SCRATCH15__DEFAULT                      0x0
#define SRM_TX_TXD_SCRATCH15__ICOUNT                        3
#define SRM_TX_TXD_SCRATCH15__ISPAN                         0x800
#define SRM_TX_TXD_SCRATCH15__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_SCRATCH15__ADDRESS)
#define SRM_TX_TXD_SCRATCH15__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_SCRATCH15__ADDRESS)
#define SRM_TX_TXD_SCRATCH15__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_SCRATCH15__ADDRESS, (data))
#define SRM_TX_TXD_SCRATCH15__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_SCRATCH15__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_SCRATCH15__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_TXD_SCRATCH15__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_TXD_SCRATCH15__VALUE__READ(die, channel)         SRM_TX_TXD_SCRATCH15__VALUE__GET(SRM_TX_TXD_SCRATCH15__READ(die, channel))
#  define SRM_TX_TXD_SCRATCH15__VALUE__WRITE(die, channel, fdata) SRM_TX_TXD_SCRATCH15__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH15__VALUE__RMW(die, channel, fdata) SRM_TX_TXD_SCRATCH15__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_TXD_SCRATCH15__VALUE__MASK                       0xffff
#  define SRM_TX_TXD_SCRATCH15__VALUE__OFFSET                     0

#define SRM_TX_TXD_INT__ADDRESS                      0x4832
#define SRM_TX_TXD_INT__DEFAULT                      0x0
#define SRM_TX_TXD_INT__ICOUNT                        3
#define SRM_TX_TXD_INT__ISPAN                         0x800
#define SRM_TX_TXD_INT__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_INT__ADDRESS)
#define SRM_TX_TXD_INT__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_INT__ADDRESS)
#define SRM_TX_TXD_INT__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_INT__ADDRESS, (data))
#define SRM_TX_TXD_INT__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_INT__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3ff) | (((uint32_t)(fdata) << 10) & 0xfc00))
#  define SRM_TX_TXD_INT__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x3f)
#  define SRM_TX_TXD_INT__RSRVD1__READ(die, channel)         SRM_TX_TXD_INT__RSRVD1__GET(SRM_TX_TXD_INT__READ(die, channel))
#  define SRM_TX_TXD_INT__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_INT__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SRM_TX_TXD_INT__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_INT__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SRM_TX_TXD_INT__RSRVD1__MASK                       0x3f
#  define SRM_TX_TXD_INT__RSRVD1__OFFSET                     10
#  define SRM_TX_TXD_INT__FIFOB_CLID__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_TX_TXD_INT__FIFOB_CLID__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_TX_TXD_INT__FIFOB_CLID__READ(die, channel)         SRM_TX_TXD_INT__FIFOB_CLID__GET(SRM_TX_TXD_INT__READ(die, channel))
#  define SRM_TX_TXD_INT__FIFOB_CLID__WRITE(die, channel, fdata) SRM_TX_TXD_INT__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_TX_TXD_INT__FIFOB_CLID__RMW(die, channel, fdata) SRM_TX_TXD_INT__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_TX_TXD_INT__FIFOB_CLID__MASK                       0x1
#  define SRM_TX_TXD_INT__FIFOB_CLID__OFFSET                     9
#  define SRM_TX_TXD_INT__FIFOA_CLID__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_TX_TXD_INT__FIFOA_CLID__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_TX_TXD_INT__FIFOA_CLID__READ(die, channel)         SRM_TX_TXD_INT__FIFOA_CLID__GET(SRM_TX_TXD_INT__READ(die, channel))
#  define SRM_TX_TXD_INT__FIFOA_CLID__WRITE(die, channel, fdata) SRM_TX_TXD_INT__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_TXD_INT__FIFOA_CLID__RMW(die, channel, fdata) SRM_TX_TXD_INT__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_TXD_INT__FIFOA_CLID__MASK                       0x1
#  define SRM_TX_TXD_INT__FIFOA_CLID__OFFSET                     8
#  define SRM_TX_TXD_INT__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff03) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SRM_TX_TXD_INT__RSRVD2__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SRM_TX_TXD_INT__RSRVD2__READ(die, channel)         SRM_TX_TXD_INT__RSRVD2__GET(SRM_TX_TXD_INT__READ(die, channel))
#  define SRM_TX_TXD_INT__RSRVD2__WRITE(die, channel, fdata) SRM_TX_TXD_INT__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SRM_TX_TXD_INT__RSRVD2__RMW(die, channel, fdata) SRM_TX_TXD_INT__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SRM_TX_TXD_INT__RSRVD2__MASK                       0x3f
#  define SRM_TX_TXD_INT__RSRVD2__OFFSET                     2
#  define SRM_TX_TXD_INT__ERRINJ__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_TXD_INT__ERRINJ__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_TXD_INT__ERRINJ__READ(die, channel)         SRM_TX_TXD_INT__ERRINJ__GET(SRM_TX_TXD_INT__READ(die, channel))
#  define SRM_TX_TXD_INT__ERRINJ__WRITE(die, channel, fdata) SRM_TX_TXD_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXD_INT__ERRINJ__RMW(die, channel, fdata) SRM_TX_TXD_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXD_INT__ERRINJ__MASK                       0x1
#  define SRM_TX_TXD_INT__ERRINJ__OFFSET                     1
#  define SRM_TX_TXD_INT__CID__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_TXD_INT__CID__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_TXD_INT__CID__READ(die, channel)         SRM_TX_TXD_INT__CID__GET(SRM_TX_TXD_INT__READ(die, channel))
#  define SRM_TX_TXD_INT__CID__WRITE(die, channel, fdata) SRM_TX_TXD_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_INT__CID__RMW(die, channel, fdata) SRM_TX_TXD_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_INT__CID__MASK                       0x1
#  define SRM_TX_TXD_INT__CID__OFFSET                     0

#define SRM_TX_TXD_INTS__ADDRESS                      0x4834
#define SRM_TX_TXD_INTS__DEFAULT                      0x0
#define SRM_TX_TXD_INTS__ICOUNT                        3
#define SRM_TX_TXD_INTS__ISPAN                         0x800
#define SRM_TX_TXD_INTS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXD_INTS__ADDRESS)
#define SRM_TX_TXD_INTS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXD_INTS__ADDRESS)
#define SRM_TX_TXD_INTS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXD_INTS__ADDRESS, (data))
#define SRM_TX_TXD_INTS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXD_INTS__ADDRESS, (data), (mask))
#  define SRM_TX_TXD_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3ff) | (((uint32_t)(fdata) << 10) & 0xfc00))
#  define SRM_TX_TXD_INTS__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x3f)
#  define SRM_TX_TXD_INTS__RSRVD1__READ(die, channel)         SRM_TX_TXD_INTS__RSRVD1__GET(SRM_TX_TXD_INTS__READ(die, channel))
#  define SRM_TX_TXD_INTS__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXD_INTS__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SRM_TX_TXD_INTS__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXD_INTS__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SRM_TX_TXD_INTS__RSRVD1__MASK                       0x3f
#  define SRM_TX_TXD_INTS__RSRVD1__OFFSET                     10
#  define SRM_TX_TXD_INTS__FIFOB_CLIDS__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_TX_TXD_INTS__FIFOB_CLIDS__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_TX_TXD_INTS__FIFOB_CLIDS__READ(die, channel)         SRM_TX_TXD_INTS__FIFOB_CLIDS__GET(SRM_TX_TXD_INTS__READ(die, channel))
#  define SRM_TX_TXD_INTS__FIFOB_CLIDS__WRITE(die, channel, fdata) SRM_TX_TXD_INTS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_TX_TXD_INTS__FIFOB_CLIDS__RMW(die, channel, fdata) SRM_TX_TXD_INTS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_TX_TXD_INTS__FIFOB_CLIDS__MASK                       0x1
#  define SRM_TX_TXD_INTS__FIFOB_CLIDS__OFFSET                     9
#  define SRM_TX_TXD_INTS__FIFOA_CLIDS__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_TX_TXD_INTS__FIFOA_CLIDS__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_TX_TXD_INTS__FIFOA_CLIDS__READ(die, channel)         SRM_TX_TXD_INTS__FIFOA_CLIDS__GET(SRM_TX_TXD_INTS__READ(die, channel))
#  define SRM_TX_TXD_INTS__FIFOA_CLIDS__WRITE(die, channel, fdata) SRM_TX_TXD_INTS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_TXD_INTS__FIFOA_CLIDS__RMW(die, channel, fdata) SRM_TX_TXD_INTS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_TXD_INTS__FIFOA_CLIDS__MASK                       0x1
#  define SRM_TX_TXD_INTS__FIFOA_CLIDS__OFFSET                     8
#  define SRM_TX_TXD_INTS__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff03) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SRM_TX_TXD_INTS__RSRVD2__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SRM_TX_TXD_INTS__RSRVD2__READ(die, channel)         SRM_TX_TXD_INTS__RSRVD2__GET(SRM_TX_TXD_INTS__READ(die, channel))
#  define SRM_TX_TXD_INTS__RSRVD2__WRITE(die, channel, fdata) SRM_TX_TXD_INTS__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SRM_TX_TXD_INTS__RSRVD2__RMW(die, channel, fdata) SRM_TX_TXD_INTS__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SRM_TX_TXD_INTS__RSRVD2__MASK                       0x3f
#  define SRM_TX_TXD_INTS__RSRVD2__OFFSET                     2
#  define SRM_TX_TXD_INTS__ERRINJS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_TXD_INTS__ERRINJS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_TXD_INTS__ERRINJS__READ(die, channel)         SRM_TX_TXD_INTS__ERRINJS__GET(SRM_TX_TXD_INTS__READ(die, channel))
#  define SRM_TX_TXD_INTS__ERRINJS__WRITE(die, channel, fdata) SRM_TX_TXD_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXD_INTS__ERRINJS__RMW(die, channel, fdata) SRM_TX_TXD_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXD_INTS__ERRINJS__MASK                       0x1
#  define SRM_TX_TXD_INTS__ERRINJS__OFFSET                     1
#  define SRM_TX_TXD_INTS__CIDS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_TXD_INTS__CIDS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_TXD_INTS__CIDS__READ(die, channel)         SRM_TX_TXD_INTS__CIDS__GET(SRM_TX_TXD_INTS__READ(die, channel))
#  define SRM_TX_TXD_INTS__CIDS__WRITE(die, channel, fdata) SRM_TX_TXD_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_INTS__CIDS__RMW(die, channel, fdata) SRM_TX_TXD_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXD_INTS__CIDS__MASK                       0x1
#  define SRM_TX_TXD_INTS__CIDS__OFFSET                     0

#define SRM_TX_LP_SPARE0__ADDRESS                      0x492b
#define SRM_TX_LP_SPARE0__DEFAULT                      0x0
#define SRM_TX_LP_SPARE0__ICOUNT                        3
#define SRM_TX_LP_SPARE0__ISPAN                         0x800
#define SRM_TX_LP_SPARE0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_LP_SPARE0__ADDRESS)
#define SRM_TX_LP_SPARE0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_LP_SPARE0__ADDRESS)
#define SRM_TX_LP_SPARE0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_LP_SPARE0__ADDRESS, (data))
#define SRM_TX_LP_SPARE0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_LP_SPARE0__ADDRESS, (data), (mask))
#  define SRM_TX_LP_SPARE0__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_LP_SPARE0__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_LP_SPARE0__SPARE__READ(die, channel)         SRM_TX_LP_SPARE0__SPARE__GET(SRM_TX_LP_SPARE0__READ(die, channel))
#  define SRM_TX_LP_SPARE0__SPARE__WRITE(die, channel, fdata) SRM_TX_LP_SPARE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LP_SPARE0__SPARE__RMW(die, channel, fdata) SRM_TX_LP_SPARE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LP_SPARE0__SPARE__MASK                       0xffff
#  define SRM_TX_LP_SPARE0__SPARE__OFFSET                     0

#define SRM_TX_LP_SPARE1__ADDRESS                      0x492c
#define SRM_TX_LP_SPARE1__DEFAULT                      0x0
#define SRM_TX_LP_SPARE1__ICOUNT                        3
#define SRM_TX_LP_SPARE1__ISPAN                         0x800
#define SRM_TX_LP_SPARE1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_LP_SPARE1__ADDRESS)
#define SRM_TX_LP_SPARE1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_LP_SPARE1__ADDRESS)
#define SRM_TX_LP_SPARE1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_LP_SPARE1__ADDRESS, (data))
#define SRM_TX_LP_SPARE1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_LP_SPARE1__ADDRESS, (data), (mask))
#  define SRM_TX_LP_SPARE1__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_LP_SPARE1__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_LP_SPARE1__SPARE__READ(die, channel)         SRM_TX_LP_SPARE1__SPARE__GET(SRM_TX_LP_SPARE1__READ(die, channel))
#  define SRM_TX_LP_SPARE1__SPARE__WRITE(die, channel, fdata) SRM_TX_LP_SPARE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LP_SPARE1__SPARE__RMW(die, channel, fdata) SRM_TX_LP_SPARE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LP_SPARE1__SPARE__MASK                       0xffff
#  define SRM_TX_LP_SPARE1__SPARE__OFFSET                     0

#define SRM_TX_LP_SPARE2__ADDRESS                      0x492d
#define SRM_TX_LP_SPARE2__DEFAULT                      0x0
#define SRM_TX_LP_SPARE2__ICOUNT                        3
#define SRM_TX_LP_SPARE2__ISPAN                         0x800
#define SRM_TX_LP_SPARE2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_LP_SPARE2__ADDRESS)
#define SRM_TX_LP_SPARE2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_LP_SPARE2__ADDRESS)
#define SRM_TX_LP_SPARE2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_LP_SPARE2__ADDRESS, (data))
#define SRM_TX_LP_SPARE2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_LP_SPARE2__ADDRESS, (data), (mask))
#  define SRM_TX_LP_SPARE2__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_LP_SPARE2__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_LP_SPARE2__SPARE__READ(die, channel)         SRM_TX_LP_SPARE2__SPARE__GET(SRM_TX_LP_SPARE2__READ(die, channel))
#  define SRM_TX_LP_SPARE2__SPARE__WRITE(die, channel, fdata) SRM_TX_LP_SPARE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LP_SPARE2__SPARE__RMW(die, channel, fdata) SRM_TX_LP_SPARE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LP_SPARE2__SPARE__MASK                       0xffff
#  define SRM_TX_LP_SPARE2__SPARE__OFFSET                     0

#define SRM_TX_LP_SPARE3__ADDRESS                      0x492e
#define SRM_TX_LP_SPARE3__DEFAULT                      0x0
#define SRM_TX_LP_SPARE3__ICOUNT                        3
#define SRM_TX_LP_SPARE3__ISPAN                         0x800
#define SRM_TX_LP_SPARE3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_LP_SPARE3__ADDRESS)
#define SRM_TX_LP_SPARE3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_LP_SPARE3__ADDRESS)
#define SRM_TX_LP_SPARE3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_LP_SPARE3__ADDRESS, (data))
#define SRM_TX_LP_SPARE3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_LP_SPARE3__ADDRESS, (data), (mask))
#  define SRM_TX_LP_SPARE3__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_LP_SPARE3__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_LP_SPARE3__SPARE__READ(die, channel)         SRM_TX_LP_SPARE3__SPARE__GET(SRM_TX_LP_SPARE3__READ(die, channel))
#  define SRM_TX_LP_SPARE3__SPARE__WRITE(die, channel, fdata) SRM_TX_LP_SPARE3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LP_SPARE3__SPARE__RMW(die, channel, fdata) SRM_TX_LP_SPARE3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LP_SPARE3__SPARE__MASK                       0xffff
#  define SRM_TX_LP_SPARE3__SPARE__OFFSET                     0

#define SRM_TX_AN_MSG0__ADDRESS                      0x4941
#define SRM_TX_AN_MSG0__DEFAULT                      0x0
#define SRM_TX_AN_MSG0__ICOUNT                        3
#define SRM_TX_AN_MSG0__ISPAN                         0x800
#define SRM_TX_AN_MSG0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_MSG0__ADDRESS)
#define SRM_TX_AN_MSG0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_MSG0__ADDRESS)
#define SRM_TX_AN_MSG0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_MSG0__ADDRESS, (data))
#define SRM_TX_AN_MSG0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_MSG0__ADDRESS, (data), (mask))
#  define SRM_TX_AN_MSG0__MSG__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_MSG0__MSG__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_MSG0__MSG__READ(die, channel)         SRM_TX_AN_MSG0__MSG__GET(SRM_TX_AN_MSG0__READ(die, channel))
#  define SRM_TX_AN_MSG0__MSG__WRITE(die, channel, fdata) SRM_TX_AN_MSG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_MSG0__MSG__RMW(die, channel, fdata) SRM_TX_AN_MSG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_MSG0__MSG__MASK                       0xffff
#  define SRM_TX_AN_MSG0__MSG__OFFSET                     0

#define SRM_TX_AN_MSG1__ADDRESS                      0x4942
#define SRM_TX_AN_MSG1__DEFAULT                      0x0
#define SRM_TX_AN_MSG1__ICOUNT                        3
#define SRM_TX_AN_MSG1__ISPAN                         0x800
#define SRM_TX_AN_MSG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_MSG1__ADDRESS)
#define SRM_TX_AN_MSG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_MSG1__ADDRESS)
#define SRM_TX_AN_MSG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_MSG1__ADDRESS, (data))
#define SRM_TX_AN_MSG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_MSG1__ADDRESS, (data), (mask))
#  define SRM_TX_AN_MSG1__MSG__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_MSG1__MSG__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_MSG1__MSG__READ(die, channel)         SRM_TX_AN_MSG1__MSG__GET(SRM_TX_AN_MSG1__READ(die, channel))
#  define SRM_TX_AN_MSG1__MSG__WRITE(die, channel, fdata) SRM_TX_AN_MSG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_MSG1__MSG__RMW(die, channel, fdata) SRM_TX_AN_MSG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_MSG1__MSG__MASK                       0xffff
#  define SRM_TX_AN_MSG1__MSG__OFFSET                     0

#define SRM_TX_AN_MSG2__ADDRESS                      0x4943
#define SRM_TX_AN_MSG2__DEFAULT                      0x0
#define SRM_TX_AN_MSG2__ICOUNT                        3
#define SRM_TX_AN_MSG2__ISPAN                         0x800
#define SRM_TX_AN_MSG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_MSG2__ADDRESS)
#define SRM_TX_AN_MSG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_MSG2__ADDRESS)
#define SRM_TX_AN_MSG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_MSG2__ADDRESS, (data))
#define SRM_TX_AN_MSG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_MSG2__ADDRESS, (data), (mask))
#  define SRM_TX_AN_MSG2__MSG__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_MSG2__MSG__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_MSG2__MSG__READ(die, channel)         SRM_TX_AN_MSG2__MSG__GET(SRM_TX_AN_MSG2__READ(die, channel))
#  define SRM_TX_AN_MSG2__MSG__WRITE(die, channel, fdata) SRM_TX_AN_MSG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_MSG2__MSG__RMW(die, channel, fdata) SRM_TX_AN_MSG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_MSG2__MSG__MASK                       0xffff
#  define SRM_TX_AN_MSG2__MSG__OFFSET                     0

#define SRM_TX_AN_SPARE0__ADDRESS                      0x494a
#define SRM_TX_AN_SPARE0__DEFAULT                      0x0
#define SRM_TX_AN_SPARE0__ICOUNT                        3
#define SRM_TX_AN_SPARE0__ISPAN                         0x800
#define SRM_TX_AN_SPARE0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_SPARE0__ADDRESS)
#define SRM_TX_AN_SPARE0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_SPARE0__ADDRESS)
#define SRM_TX_AN_SPARE0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_SPARE0__ADDRESS, (data))
#define SRM_TX_AN_SPARE0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_SPARE0__ADDRESS, (data), (mask))
#  define SRM_TX_AN_SPARE0__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_SPARE0__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_SPARE0__SPARE__READ(die, channel)         SRM_TX_AN_SPARE0__SPARE__GET(SRM_TX_AN_SPARE0__READ(die, channel))
#  define SRM_TX_AN_SPARE0__SPARE__WRITE(die, channel, fdata) SRM_TX_AN_SPARE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE0__SPARE__RMW(die, channel, fdata) SRM_TX_AN_SPARE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE0__SPARE__MASK                       0xffff
#  define SRM_TX_AN_SPARE0__SPARE__OFFSET                     0

#define SRM_TX_AN_SPARE1__ADDRESS                      0x494b
#define SRM_TX_AN_SPARE1__DEFAULT                      0x0
#define SRM_TX_AN_SPARE1__ICOUNT                        3
#define SRM_TX_AN_SPARE1__ISPAN                         0x800
#define SRM_TX_AN_SPARE1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_SPARE1__ADDRESS)
#define SRM_TX_AN_SPARE1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_SPARE1__ADDRESS)
#define SRM_TX_AN_SPARE1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_SPARE1__ADDRESS, (data))
#define SRM_TX_AN_SPARE1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_SPARE1__ADDRESS, (data), (mask))
#  define SRM_TX_AN_SPARE1__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_SPARE1__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_SPARE1__SPARE__READ(die, channel)         SRM_TX_AN_SPARE1__SPARE__GET(SRM_TX_AN_SPARE1__READ(die, channel))
#  define SRM_TX_AN_SPARE1__SPARE__WRITE(die, channel, fdata) SRM_TX_AN_SPARE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE1__SPARE__RMW(die, channel, fdata) SRM_TX_AN_SPARE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE1__SPARE__MASK                       0xffff
#  define SRM_TX_AN_SPARE1__SPARE__OFFSET                     0

#define SRM_TX_AN_SPARE2__ADDRESS                      0x494c
#define SRM_TX_AN_SPARE2__DEFAULT                      0x0
#define SRM_TX_AN_SPARE2__ICOUNT                        3
#define SRM_TX_AN_SPARE2__ISPAN                         0x800
#define SRM_TX_AN_SPARE2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_SPARE2__ADDRESS)
#define SRM_TX_AN_SPARE2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_SPARE2__ADDRESS)
#define SRM_TX_AN_SPARE2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_SPARE2__ADDRESS, (data))
#define SRM_TX_AN_SPARE2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_SPARE2__ADDRESS, (data), (mask))
#  define SRM_TX_AN_SPARE2__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_SPARE2__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_SPARE2__SPARE__READ(die, channel)         SRM_TX_AN_SPARE2__SPARE__GET(SRM_TX_AN_SPARE2__READ(die, channel))
#  define SRM_TX_AN_SPARE2__SPARE__WRITE(die, channel, fdata) SRM_TX_AN_SPARE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE2__SPARE__RMW(die, channel, fdata) SRM_TX_AN_SPARE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE2__SPARE__MASK                       0xffff
#  define SRM_TX_AN_SPARE2__SPARE__OFFSET                     0

#define SRM_TX_AN_SPARE3__ADDRESS                      0x494d
#define SRM_TX_AN_SPARE3__DEFAULT                      0x0
#define SRM_TX_AN_SPARE3__ICOUNT                        3
#define SRM_TX_AN_SPARE3__ISPAN                         0x800
#define SRM_TX_AN_SPARE3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_SPARE3__ADDRESS)
#define SRM_TX_AN_SPARE3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_SPARE3__ADDRESS)
#define SRM_TX_AN_SPARE3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_SPARE3__ADDRESS, (data))
#define SRM_TX_AN_SPARE3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_SPARE3__ADDRESS, (data), (mask))
#  define SRM_TX_AN_SPARE3__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_SPARE3__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_SPARE3__SPARE__READ(die, channel)         SRM_TX_AN_SPARE3__SPARE__GET(SRM_TX_AN_SPARE3__READ(die, channel))
#  define SRM_TX_AN_SPARE3__SPARE__WRITE(die, channel, fdata) SRM_TX_AN_SPARE3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE3__SPARE__RMW(die, channel, fdata) SRM_TX_AN_SPARE3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE3__SPARE__MASK                       0xffff
#  define SRM_TX_AN_SPARE3__SPARE__OFFSET                     0

#define SRM_TX_AN_SPARE4__ADDRESS                      0x494e
#define SRM_TX_AN_SPARE4__DEFAULT                      0x0
#define SRM_TX_AN_SPARE4__ICOUNT                        3
#define SRM_TX_AN_SPARE4__ISPAN                         0x800
#define SRM_TX_AN_SPARE4__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_SPARE4__ADDRESS)
#define SRM_TX_AN_SPARE4__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_SPARE4__ADDRESS)
#define SRM_TX_AN_SPARE4__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_SPARE4__ADDRESS, (data))
#define SRM_TX_AN_SPARE4__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_SPARE4__ADDRESS, (data), (mask))
#  define SRM_TX_AN_SPARE4__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_SPARE4__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_SPARE4__SPARE__READ(die, channel)         SRM_TX_AN_SPARE4__SPARE__GET(SRM_TX_AN_SPARE4__READ(die, channel))
#  define SRM_TX_AN_SPARE4__SPARE__WRITE(die, channel, fdata) SRM_TX_AN_SPARE4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE4__SPARE__RMW(die, channel, fdata) SRM_TX_AN_SPARE4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE4__SPARE__MASK                       0xffff
#  define SRM_TX_AN_SPARE4__SPARE__OFFSET                     0

#define SRM_TX_AN_SPARE5__ADDRESS                      0x494f
#define SRM_TX_AN_SPARE5__DEFAULT                      0x0
#define SRM_TX_AN_SPARE5__ICOUNT                        3
#define SRM_TX_AN_SPARE5__ISPAN                         0x800
#define SRM_TX_AN_SPARE5__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_SPARE5__ADDRESS)
#define SRM_TX_AN_SPARE5__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_SPARE5__ADDRESS)
#define SRM_TX_AN_SPARE5__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_SPARE5__ADDRESS, (data))
#define SRM_TX_AN_SPARE5__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_SPARE5__ADDRESS, (data), (mask))
#  define SRM_TX_AN_SPARE5__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_SPARE5__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_SPARE5__SPARE__READ(die, channel)         SRM_TX_AN_SPARE5__SPARE__GET(SRM_TX_AN_SPARE5__READ(die, channel))
#  define SRM_TX_AN_SPARE5__SPARE__WRITE(die, channel, fdata) SRM_TX_AN_SPARE5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE5__SPARE__RMW(die, channel, fdata) SRM_TX_AN_SPARE5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE5__SPARE__MASK                       0xffff
#  define SRM_TX_AN_SPARE5__SPARE__OFFSET                     0

#define SRM_TX_AN_SPARE6__ADDRESS                      0x4950
#define SRM_TX_AN_SPARE6__DEFAULT                      0x0
#define SRM_TX_AN_SPARE6__ICOUNT                        3
#define SRM_TX_AN_SPARE6__ISPAN                         0x800
#define SRM_TX_AN_SPARE6__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_SPARE6__ADDRESS)
#define SRM_TX_AN_SPARE6__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_SPARE6__ADDRESS)
#define SRM_TX_AN_SPARE6__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_SPARE6__ADDRESS, (data))
#define SRM_TX_AN_SPARE6__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_SPARE6__ADDRESS, (data), (mask))
#  define SRM_TX_AN_SPARE6__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_SPARE6__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_SPARE6__SPARE__READ(die, channel)         SRM_TX_AN_SPARE6__SPARE__GET(SRM_TX_AN_SPARE6__READ(die, channel))
#  define SRM_TX_AN_SPARE6__SPARE__WRITE(die, channel, fdata) SRM_TX_AN_SPARE6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE6__SPARE__RMW(die, channel, fdata) SRM_TX_AN_SPARE6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE6__SPARE__MASK                       0xffff
#  define SRM_TX_AN_SPARE6__SPARE__OFFSET                     0

#define SRM_TX_AN_SPARE7__ADDRESS                      0x4951
#define SRM_TX_AN_SPARE7__DEFAULT                      0x0
#define SRM_TX_AN_SPARE7__ICOUNT                        3
#define SRM_TX_AN_SPARE7__ISPAN                         0x800
#define SRM_TX_AN_SPARE7__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_SPARE7__ADDRESS)
#define SRM_TX_AN_SPARE7__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_SPARE7__ADDRESS)
#define SRM_TX_AN_SPARE7__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_SPARE7__ADDRESS, (data))
#define SRM_TX_AN_SPARE7__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_SPARE7__ADDRESS, (data), (mask))
#  define SRM_TX_AN_SPARE7__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_SPARE7__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_SPARE7__SPARE__READ(die, channel)         SRM_TX_AN_SPARE7__SPARE__GET(SRM_TX_AN_SPARE7__READ(die, channel))
#  define SRM_TX_AN_SPARE7__SPARE__WRITE(die, channel, fdata) SRM_TX_AN_SPARE7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE7__SPARE__RMW(die, channel, fdata) SRM_TX_AN_SPARE7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE7__SPARE__MASK                       0xffff
#  define SRM_TX_AN_SPARE7__SPARE__OFFSET                     0

#define SRM_TX_AN_SPARE8__ADDRESS                      0x4952
#define SRM_TX_AN_SPARE8__DEFAULT                      0x0
#define SRM_TX_AN_SPARE8__ICOUNT                        3
#define SRM_TX_AN_SPARE8__ISPAN                         0x800
#define SRM_TX_AN_SPARE8__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_SPARE8__ADDRESS)
#define SRM_TX_AN_SPARE8__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_SPARE8__ADDRESS)
#define SRM_TX_AN_SPARE8__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_SPARE8__ADDRESS, (data))
#define SRM_TX_AN_SPARE8__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_SPARE8__ADDRESS, (data), (mask))
#  define SRM_TX_AN_SPARE8__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_SPARE8__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_SPARE8__SPARE__READ(die, channel)         SRM_TX_AN_SPARE8__SPARE__GET(SRM_TX_AN_SPARE8__READ(die, channel))
#  define SRM_TX_AN_SPARE8__SPARE__WRITE(die, channel, fdata) SRM_TX_AN_SPARE8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE8__SPARE__RMW(die, channel, fdata) SRM_TX_AN_SPARE8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE8__SPARE__MASK                       0xffff
#  define SRM_TX_AN_SPARE8__SPARE__OFFSET                     0

#define SRM_TX_AN_SPARE9__ADDRESS                      0x4953
#define SRM_TX_AN_SPARE9__DEFAULT                      0x0
#define SRM_TX_AN_SPARE9__ICOUNT                        3
#define SRM_TX_AN_SPARE9__ISPAN                         0x800
#define SRM_TX_AN_SPARE9__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_AN_SPARE9__ADDRESS)
#define SRM_TX_AN_SPARE9__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_AN_SPARE9__ADDRESS)
#define SRM_TX_AN_SPARE9__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_AN_SPARE9__ADDRESS, (data))
#define SRM_TX_AN_SPARE9__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_AN_SPARE9__ADDRESS, (data), (mask))
#  define SRM_TX_AN_SPARE9__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_AN_SPARE9__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_AN_SPARE9__SPARE__READ(die, channel)         SRM_TX_AN_SPARE9__SPARE__GET(SRM_TX_AN_SPARE9__READ(die, channel))
#  define SRM_TX_AN_SPARE9__SPARE__WRITE(die, channel, fdata) SRM_TX_AN_SPARE9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE9__SPARE__RMW(die, channel, fdata) SRM_TX_AN_SPARE9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_AN_SPARE9__SPARE__MASK                       0xffff
#  define SRM_TX_AN_SPARE9__SPARE__OFFSET                     0

#define SRM_TX_LOC_SPARE0__ADDRESS                      0x498c
#define SRM_TX_LOC_SPARE0__DEFAULT                      0x0
#define SRM_TX_LOC_SPARE0__ICOUNT                        3
#define SRM_TX_LOC_SPARE0__ISPAN                         0x800
#define SRM_TX_LOC_SPARE0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_LOC_SPARE0__ADDRESS)
#define SRM_TX_LOC_SPARE0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_LOC_SPARE0__ADDRESS)
#define SRM_TX_LOC_SPARE0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_LOC_SPARE0__ADDRESS, (data))
#define SRM_TX_LOC_SPARE0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_LOC_SPARE0__ADDRESS, (data), (mask))
#  define SRM_TX_LOC_SPARE0__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_LOC_SPARE0__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_LOC_SPARE0__SPARE__READ(die, channel)         SRM_TX_LOC_SPARE0__SPARE__GET(SRM_TX_LOC_SPARE0__READ(die, channel))
#  define SRM_TX_LOC_SPARE0__SPARE__WRITE(die, channel, fdata) SRM_TX_LOC_SPARE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LOC_SPARE0__SPARE__RMW(die, channel, fdata) SRM_TX_LOC_SPARE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LOC_SPARE0__SPARE__MASK                       0xffff
#  define SRM_TX_LOC_SPARE0__SPARE__OFFSET                     0

#define SRM_TX_LOC_SPARE1__ADDRESS                      0x498d
#define SRM_TX_LOC_SPARE1__DEFAULT                      0x0
#define SRM_TX_LOC_SPARE1__ICOUNT                        3
#define SRM_TX_LOC_SPARE1__ISPAN                         0x800
#define SRM_TX_LOC_SPARE1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_LOC_SPARE1__ADDRESS)
#define SRM_TX_LOC_SPARE1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_LOC_SPARE1__ADDRESS)
#define SRM_TX_LOC_SPARE1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_LOC_SPARE1__ADDRESS, (data))
#define SRM_TX_LOC_SPARE1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_LOC_SPARE1__ADDRESS, (data), (mask))
#  define SRM_TX_LOC_SPARE1__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_LOC_SPARE1__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_LOC_SPARE1__SPARE__READ(die, channel)         SRM_TX_LOC_SPARE1__SPARE__GET(SRM_TX_LOC_SPARE1__READ(die, channel))
#  define SRM_TX_LOC_SPARE1__SPARE__WRITE(die, channel, fdata) SRM_TX_LOC_SPARE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LOC_SPARE1__SPARE__RMW(die, channel, fdata) SRM_TX_LOC_SPARE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LOC_SPARE1__SPARE__MASK                       0xffff
#  define SRM_TX_LOC_SPARE1__SPARE__OFFSET                     0

#define SRM_TX_LOC_SPARE2__ADDRESS                      0x498e
#define SRM_TX_LOC_SPARE2__DEFAULT                      0x0
#define SRM_TX_LOC_SPARE2__ICOUNT                        3
#define SRM_TX_LOC_SPARE2__ISPAN                         0x800
#define SRM_TX_LOC_SPARE2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_LOC_SPARE2__ADDRESS)
#define SRM_TX_LOC_SPARE2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_LOC_SPARE2__ADDRESS)
#define SRM_TX_LOC_SPARE2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_LOC_SPARE2__ADDRESS, (data))
#define SRM_TX_LOC_SPARE2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_LOC_SPARE2__ADDRESS, (data), (mask))
#  define SRM_TX_LOC_SPARE2__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_LOC_SPARE2__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_LOC_SPARE2__SPARE__READ(die, channel)         SRM_TX_LOC_SPARE2__SPARE__GET(SRM_TX_LOC_SPARE2__READ(die, channel))
#  define SRM_TX_LOC_SPARE2__SPARE__WRITE(die, channel, fdata) SRM_TX_LOC_SPARE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LOC_SPARE2__SPARE__RMW(die, channel, fdata) SRM_TX_LOC_SPARE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LOC_SPARE2__SPARE__MASK                       0xffff
#  define SRM_TX_LOC_SPARE2__SPARE__OFFSET                     0

#define SRM_TX_LOC_SPARE3__ADDRESS                      0x498f
#define SRM_TX_LOC_SPARE3__DEFAULT                      0x0
#define SRM_TX_LOC_SPARE3__ICOUNT                        3
#define SRM_TX_LOC_SPARE3__ISPAN                         0x800
#define SRM_TX_LOC_SPARE3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_LOC_SPARE3__ADDRESS)
#define SRM_TX_LOC_SPARE3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_LOC_SPARE3__ADDRESS)
#define SRM_TX_LOC_SPARE3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_LOC_SPARE3__ADDRESS, (data))
#define SRM_TX_LOC_SPARE3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_LOC_SPARE3__ADDRESS, (data), (mask))
#  define SRM_TX_LOC_SPARE3__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_LOC_SPARE3__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_LOC_SPARE3__SPARE__READ(die, channel)         SRM_TX_LOC_SPARE3__SPARE__GET(SRM_TX_LOC_SPARE3__READ(die, channel))
#  define SRM_TX_LOC_SPARE3__SPARE__WRITE(die, channel, fdata) SRM_TX_LOC_SPARE3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LOC_SPARE3__SPARE__RMW(die, channel, fdata) SRM_TX_LOC_SPARE3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LOC_SPARE3__SPARE__MASK                       0xffff
#  define SRM_TX_LOC_SPARE3__SPARE__OFFSET                     0

#define SRM_TX_LT_SPARE0__ADDRESS                      0x49c3
#define SRM_TX_LT_SPARE0__DEFAULT                      0x0
#define SRM_TX_LT_SPARE0__ICOUNT                        3
#define SRM_TX_LT_SPARE0__ISPAN                         0x800
#define SRM_TX_LT_SPARE0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_LT_SPARE0__ADDRESS)
#define SRM_TX_LT_SPARE0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_LT_SPARE0__ADDRESS)
#define SRM_TX_LT_SPARE0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_LT_SPARE0__ADDRESS, (data))
#define SRM_TX_LT_SPARE0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_LT_SPARE0__ADDRESS, (data), (mask))
#  define SRM_TX_LT_SPARE0__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_LT_SPARE0__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_LT_SPARE0__SPARE__READ(die, channel)         SRM_TX_LT_SPARE0__SPARE__GET(SRM_TX_LT_SPARE0__READ(die, channel))
#  define SRM_TX_LT_SPARE0__SPARE__WRITE(die, channel, fdata) SRM_TX_LT_SPARE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LT_SPARE0__SPARE__RMW(die, channel, fdata) SRM_TX_LT_SPARE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LT_SPARE0__SPARE__MASK                       0xffff
#  define SRM_TX_LT_SPARE0__SPARE__OFFSET                     0

#define SRM_TX_LT_SPARE1__ADDRESS                      0x49c4
#define SRM_TX_LT_SPARE1__DEFAULT                      0x0
#define SRM_TX_LT_SPARE1__ICOUNT                        3
#define SRM_TX_LT_SPARE1__ISPAN                         0x800
#define SRM_TX_LT_SPARE1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_LT_SPARE1__ADDRESS)
#define SRM_TX_LT_SPARE1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_LT_SPARE1__ADDRESS)
#define SRM_TX_LT_SPARE1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_LT_SPARE1__ADDRESS, (data))
#define SRM_TX_LT_SPARE1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_LT_SPARE1__ADDRESS, (data), (mask))
#  define SRM_TX_LT_SPARE1__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_LT_SPARE1__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_LT_SPARE1__SPARE__READ(die, channel)         SRM_TX_LT_SPARE1__SPARE__GET(SRM_TX_LT_SPARE1__READ(die, channel))
#  define SRM_TX_LT_SPARE1__SPARE__WRITE(die, channel, fdata) SRM_TX_LT_SPARE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LT_SPARE1__SPARE__RMW(die, channel, fdata) SRM_TX_LT_SPARE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LT_SPARE1__SPARE__MASK                       0xffff
#  define SRM_TX_LT_SPARE1__SPARE__OFFSET                     0

#define SRM_TX_LT_SPARE2__ADDRESS                      0x49c5
#define SRM_TX_LT_SPARE2__DEFAULT                      0x0
#define SRM_TX_LT_SPARE2__ICOUNT                        3
#define SRM_TX_LT_SPARE2__ISPAN                         0x800
#define SRM_TX_LT_SPARE2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_LT_SPARE2__ADDRESS)
#define SRM_TX_LT_SPARE2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_LT_SPARE2__ADDRESS)
#define SRM_TX_LT_SPARE2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_LT_SPARE2__ADDRESS, (data))
#define SRM_TX_LT_SPARE2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_LT_SPARE2__ADDRESS, (data), (mask))
#  define SRM_TX_LT_SPARE2__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_LT_SPARE2__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_LT_SPARE2__SPARE__READ(die, channel)         SRM_TX_LT_SPARE2__SPARE__GET(SRM_TX_LT_SPARE2__READ(die, channel))
#  define SRM_TX_LT_SPARE2__SPARE__WRITE(die, channel, fdata) SRM_TX_LT_SPARE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LT_SPARE2__SPARE__RMW(die, channel, fdata) SRM_TX_LT_SPARE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LT_SPARE2__SPARE__MASK                       0xffff
#  define SRM_TX_LT_SPARE2__SPARE__OFFSET                     0

#define SRM_TX_LT_SPARE3__ADDRESS                      0x49c6
#define SRM_TX_LT_SPARE3__DEFAULT                      0x0
#define SRM_TX_LT_SPARE3__ICOUNT                        3
#define SRM_TX_LT_SPARE3__ISPAN                         0x800
#define SRM_TX_LT_SPARE3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_LT_SPARE3__ADDRESS)
#define SRM_TX_LT_SPARE3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_LT_SPARE3__ADDRESS)
#define SRM_TX_LT_SPARE3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_LT_SPARE3__ADDRESS, (data))
#define SRM_TX_LT_SPARE3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_LT_SPARE3__ADDRESS, (data), (mask))
#  define SRM_TX_LT_SPARE3__SPARE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_LT_SPARE3__SPARE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_LT_SPARE3__SPARE__READ(die, channel)         SRM_TX_LT_SPARE3__SPARE__GET(SRM_TX_LT_SPARE3__READ(die, channel))
#  define SRM_TX_LT_SPARE3__SPARE__WRITE(die, channel, fdata) SRM_TX_LT_SPARE3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LT_SPARE3__SPARE__RMW(die, channel, fdata) SRM_TX_LT_SPARE3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_LT_SPARE3__SPARE__MASK                       0xffff
#  define SRM_TX_LT_SPARE3__SPARE__OFFSET                     0

#define SRM_TX_ANLT_MSG_RESET__ADDRESS                      0x4a00
#define SRM_TX_ANLT_MSG_RESET__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_RESET__ICOUNT                        3
#define SRM_TX_ANLT_MSG_RESET__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_RESET__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_RESET__ADDRESS)
#define SRM_TX_ANLT_MSG_RESET__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_RESET__ADDRESS)
#define SRM_TX_ANLT_MSG_RESET__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_RESET__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_RESET__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_RESET__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7ff) | (((uint32_t)(fdata) << 11) & 0xf800))
#  define SRM_TX_ANLT_MSG_RESET__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1f)
#  define SRM_TX_ANLT_MSG_RESET__RSRVD1__READ(die, channel)         SRM_TX_ANLT_MSG_RESET__RSRVD1__GET(SRM_TX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RESET__RSRVD1__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SRM_TX_ANLT_MSG_RESET__RSRVD1__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SRM_TX_ANLT_MSG_RESET__RSRVD1__MASK                       0x1f
#  define SRM_TX_ANLT_MSG_RESET__RSRVD1__OFFSET                     11
#  define SRM_TX_ANLT_MSG_RESET__TX_MSG_FIFO__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_TX_ANLT_MSG_RESET__TX_MSG_FIFO__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_TX_ANLT_MSG_RESET__TX_MSG_FIFO__READ(die, channel)         SRM_TX_ANLT_MSG_RESET__TX_MSG_FIFO__GET(SRM_TX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RESET__TX_MSG_FIFO__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_TX_ANLT_MSG_RESET__TX_MSG_FIFO__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_TX_ANLT_MSG_RESET__TX_MSG_FIFO__MASK                       0x1
#  define SRM_TX_ANLT_MSG_RESET__TX_MSG_FIFO__OFFSET                     10
#  define SRM_TX_ANLT_MSG_RESET__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_TX_ANLT_MSG_RESET__RSRVD2__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_TX_ANLT_MSG_RESET__RSRVD2__READ(die, channel)         SRM_TX_ANLT_MSG_RESET__RSRVD2__GET(SRM_TX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RESET__RSRVD2__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_TX_ANLT_MSG_RESET__RSRVD2__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_TX_ANLT_MSG_RESET__RSRVD2__MASK                       0x1
#  define SRM_TX_ANLT_MSG_RESET__RSRVD2__OFFSET                     9
#  define SRM_TX_ANLT_MSG_RESET__RX_MSG_FIFO__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_TX_ANLT_MSG_RESET__RX_MSG_FIFO__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_TX_ANLT_MSG_RESET__RX_MSG_FIFO__READ(die, channel)         SRM_TX_ANLT_MSG_RESET__RX_MSG_FIFO__GET(SRM_TX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RESET__RX_MSG_FIFO__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_ANLT_MSG_RESET__RX_MSG_FIFO__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_ANLT_MSG_RESET__RX_MSG_FIFO__MASK                       0x1
#  define SRM_TX_ANLT_MSG_RESET__RX_MSG_FIFO__OFFSET                     8
#  define SRM_TX_ANLT_MSG_RESET__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xff03) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SRM_TX_ANLT_MSG_RESET__RSRVD3__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SRM_TX_ANLT_MSG_RESET__RSRVD3__READ(die, channel)         SRM_TX_ANLT_MSG_RESET__RSRVD3__GET(SRM_TX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RESET__RSRVD3__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SRM_TX_ANLT_MSG_RESET__RSRVD3__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SRM_TX_ANLT_MSG_RESET__RSRVD3__MASK                       0x3f
#  define SRM_TX_ANLT_MSG_RESET__RSRVD3__OFFSET                     2
#  define SRM_TX_ANLT_MSG_RESET__TX__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_ANLT_MSG_RESET__TX__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_ANLT_MSG_RESET__TX__READ(die, channel)         SRM_TX_ANLT_MSG_RESET__TX__GET(SRM_TX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RESET__TX__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_ANLT_MSG_RESET__TX__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_ANLT_MSG_RESET__TX__MASK                       0x1
#  define SRM_TX_ANLT_MSG_RESET__TX__OFFSET                     1
#  define SRM_TX_ANLT_MSG_RESET__RX__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_ANLT_MSG_RESET__RX__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_ANLT_MSG_RESET__RX__READ(die, channel)         SRM_TX_ANLT_MSG_RESET__RX__GET(SRM_TX_ANLT_MSG_RESET__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RESET__RX__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_RESET__RX__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_RESET__RX__MASK                       0x1
#  define SRM_TX_ANLT_MSG_RESET__RX__OFFSET                     0

#define SRM_TX_ANLT_MSG_GEN_CFG__ADDRESS                      0x4a01
#define SRM_TX_ANLT_MSG_GEN_CFG__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_GEN_CFG__ICOUNT                        3
#define SRM_TX_ANLT_MSG_GEN_CFG__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_GEN_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_GEN_CFG__ADDRESS)
#define SRM_TX_ANLT_MSG_GEN_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_GEN_CFG__ADDRESS)
#define SRM_TX_ANLT_MSG_GEN_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_GEN_CFG__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_GEN_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_GEN_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_GEN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_TX_ANLT_MSG_GEN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_TX_ANLT_MSG_GEN_CFG__RSRVD1__READ(die, channel)         SRM_TX_ANLT_MSG_GEN_CFG__RSRVD1__GET(SRM_TX_ANLT_MSG_GEN_CFG__READ(die, channel))
#  define SRM_TX_ANLT_MSG_GEN_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_TX_ANLT_MSG_GEN_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_TX_ANLT_MSG_GEN_CFG__RSRVD1__MASK                       0x3fff
#  define SRM_TX_ANLT_MSG_GEN_CFG__RSRVD1__OFFSET                     2
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_RX_DESER__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_RX_DESER__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_RX_DESER__READ(die, channel)         SRM_TX_ANLT_MSG_GEN_CFG__EN_RX_DESER__GET(SRM_TX_ANLT_MSG_GEN_CFG__READ(die, channel))
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_RX_DESER__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_RX_DESER__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_RX_DESER__MASK                       0x1
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_RX_DESER__OFFSET                     1
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_TX_SER__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_TX_SER__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_TX_SER__READ(die, channel)         SRM_TX_ANLT_MSG_GEN_CFG__EN_TX_SER__GET(SRM_TX_ANLT_MSG_GEN_CFG__READ(die, channel))
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_TX_SER__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_TX_SER__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_TX_SER__MASK                       0x1
#  define SRM_TX_ANLT_MSG_GEN_CFG__EN_TX_SER__OFFSET                     0

#define SRM_TX_ANLT_MSG_TX_MSG_DATA0__ADDRESS                      0x4a02
#define SRM_TX_ANLT_MSG_TX_MSG_DATA0__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_TX_MSG_DATA0__ICOUNT                        3
#define SRM_TX_ANLT_MSG_TX_MSG_DATA0__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_TX_MSG_DATA0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_TX_MSG_DATA0__ADDRESS)
#define SRM_TX_ANLT_MSG_TX_MSG_DATA0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_TX_MSG_DATA0__ADDRESS)
#define SRM_TX_ANLT_MSG_TX_MSG_DATA0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_TX_MSG_DATA0__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_TX_MSG_DATA0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_TX_MSG_DATA0__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA0__MSG0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA0__MSG0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA0__MSG0__READ(die, channel)         SRM_TX_ANLT_MSG_TX_MSG_DATA0__MSG0__GET(SRM_TX_ANLT_MSG_TX_MSG_DATA0__READ(die, channel))
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA0__MSG0__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_TX_MSG_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA0__MSG0__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_TX_MSG_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA0__MSG0__MASK                       0xffff
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA0__MSG0__OFFSET                     0

#define SRM_TX_ANLT_MSG_TX_MSG_DATA1__ADDRESS                      0x4a03
#define SRM_TX_ANLT_MSG_TX_MSG_DATA1__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_TX_MSG_DATA1__ICOUNT                        3
#define SRM_TX_ANLT_MSG_TX_MSG_DATA1__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_TX_MSG_DATA1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_TX_MSG_DATA1__ADDRESS)
#define SRM_TX_ANLT_MSG_TX_MSG_DATA1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_TX_MSG_DATA1__ADDRESS)
#define SRM_TX_ANLT_MSG_TX_MSG_DATA1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_TX_MSG_DATA1__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_TX_MSG_DATA1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_TX_MSG_DATA1__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA1__MSG1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA1__MSG1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA1__MSG1__READ(die, channel)         SRM_TX_ANLT_MSG_TX_MSG_DATA1__MSG1__GET(SRM_TX_ANLT_MSG_TX_MSG_DATA1__READ(die, channel))
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA1__MSG1__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_TX_MSG_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA1__MSG1__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_TX_MSG_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA1__MSG1__MASK                       0xffff
#  define SRM_TX_ANLT_MSG_TX_MSG_DATA1__MSG1__OFFSET                     0

#define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__ADDRESS                      0x4a04
#define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__DEFAULT                      0x2
#define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__ICOUNT                        3
#define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_TX_FIFO_STATUS__ADDRESS)
#define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_TX_FIFO_STATUS__ADDRESS)
#define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_TX_FIFO_STATUS__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_TX_FIFO_STATUS__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xffc0))
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3ff)
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__READ(die, channel)         SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__GET(SRM_TX_ANLT_MSG_TX_FIFO_STATUS__READ(die, channel))
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__MASK                       0x3ff
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RSRVD1__OFFSET                     6
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__SET(rdata, fdata)         (((rdata) & 0xffc3) | (((uint32_t)(fdata) << 2) & 0x3c))
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__GET(rdata)                (((rdata) >> 2) & 0xf)
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__READ(die, channel)         SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__GET(SRM_TX_ANLT_MSG_TX_FIFO_STATUS__READ(die, channel))
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<2, 0x3c)
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<2, 0x3c)
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__MASK                       0xf
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_DEPTH__OFFSET                     2
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__READ(die, channel)         SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__GET(SRM_TX_ANLT_MSG_TX_FIFO_STATUS__READ(die, channel))
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__MASK                       0x1
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_EMPTY__OFFSET                     1
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__READ(die, channel)         SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__GET(SRM_TX_ANLT_MSG_TX_FIFO_STATUS__READ(die, channel))
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_TX_FIFO_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__MASK                       0x1
#  define SRM_TX_ANLT_MSG_TX_FIFO_STATUS__MSG_FIFO_FULL__OFFSET                     0

#define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__ADDRESS                      0x4a05
#define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__DEFAULT                      0x2
#define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__ICOUNT                        3
#define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_RX_FIFO_STATUS__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_RX_FIFO_STATUS__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_RX_FIFO_STATUS__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_RX_FIFO_STATUS__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__READ(die, channel)         SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__GET(SRM_TX_ANLT_MSG_RX_FIFO_STATUS__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__MASK                       0x1ff
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RSRVD1__OFFSET                     7
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__SET(rdata, fdata)         (((rdata) & 0xff83) | (((uint32_t)(fdata) << 2) & 0x7c))
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__GET(rdata)                (((rdata) >> 2) & 0x1f)
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__READ(die, channel)         SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__GET(SRM_TX_ANLT_MSG_RX_FIFO_STATUS__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<2, 0x7c)
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<2, 0x7c)
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__MASK                       0x1f
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_DEPTH__OFFSET                     2
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__READ(die, channel)         SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__GET(SRM_TX_ANLT_MSG_RX_FIFO_STATUS__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__MASK                       0x1
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_EMPTY__OFFSET                     1
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__READ(die, channel)         SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__GET(SRM_TX_ANLT_MSG_RX_FIFO_STATUS__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_FIFO_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__MASK                       0x1
#  define SRM_TX_ANLT_MSG_RX_FIFO_STATUS__MSG_FIFO_FULL__OFFSET                     0

#define SRM_TX_ANLT_MSG_RX_MSG_POP__ADDRESS                      0x4a06
#define SRM_TX_ANLT_MSG_RX_MSG_POP__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_RX_MSG_POP__ICOUNT                        3
#define SRM_TX_ANLT_MSG_RX_MSG_POP__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_RX_MSG_POP__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_RX_MSG_POP__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_MSG_POP__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_RX_MSG_POP__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_MSG_POP__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_RX_MSG_POP__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_RX_MSG_POP__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_RX_MSG_POP__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__RSRVD1__READ(die, channel)         SRM_TX_ANLT_MSG_RX_MSG_POP__RSRVD1__GET(SRM_TX_ANLT_MSG_RX_MSG_POP__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__RSRVD1__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_POP__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__RSRVD1__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_POP__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__RSRVD1__MASK                       0x7fff
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__RSRVD1__OFFSET                     1
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__POP__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__POP__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__POP__READ(die, channel)         SRM_TX_ANLT_MSG_RX_MSG_POP__POP__GET(SRM_TX_ANLT_MSG_RX_MSG_POP__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__POP__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_POP__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__POP__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_POP__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__POP__MASK                       0x1
#  define SRM_TX_ANLT_MSG_RX_MSG_POP__POP__OFFSET                     0

#define SRM_TX_ANLT_MSG_RX_MSG_STATUS__ADDRESS                      0x4a07
#define SRM_TX_ANLT_MSG_RX_MSG_STATUS__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_RX_MSG_STATUS__ICOUNT                        3
#define SRM_TX_ANLT_MSG_RX_MSG_STATUS__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_RX_MSG_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_RX_MSG_STATUS__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_MSG_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_RX_MSG_STATUS__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_MSG_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_RX_MSG_STATUS__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_RX_MSG_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_RX_MSG_STATUS__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__READ(die, channel)         SRM_TX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__GET(SRM_TX_ANLT_MSG_RX_MSG_STATUS__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__MASK                       0x3fff
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__RSRVD1__OFFSET                     2
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__ERR__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__ERR__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__ERR__READ(die, channel)         SRM_TX_ANLT_MSG_RX_MSG_STATUS__ERR__GET(SRM_TX_ANLT_MSG_RX_MSG_STATUS__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__ERR__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__ERR__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__ERR__MASK                       0x1
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__ERR__OFFSET                     1
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__VALID__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__VALID__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__VALID__READ(die, channel)         SRM_TX_ANLT_MSG_RX_MSG_STATUS__VALID__GET(SRM_TX_ANLT_MSG_RX_MSG_STATUS__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__VALID__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__VALID__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__VALID__MASK                       0x1
#  define SRM_TX_ANLT_MSG_RX_MSG_STATUS__VALID__OFFSET                     0

#define SRM_TX_ANLT_MSG_RX_MSG_DATA0__ADDRESS                      0x4a08
#define SRM_TX_ANLT_MSG_RX_MSG_DATA0__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_RX_MSG_DATA0__ICOUNT                        3
#define SRM_TX_ANLT_MSG_RX_MSG_DATA0__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_RX_MSG_DATA0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_RX_MSG_DATA0__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_MSG_DATA0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_RX_MSG_DATA0__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_MSG_DATA0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_RX_MSG_DATA0__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_RX_MSG_DATA0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_RX_MSG_DATA0__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA0__MSG0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA0__MSG0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA0__MSG0__READ(die, channel)         SRM_TX_ANLT_MSG_RX_MSG_DATA0__MSG0__GET(SRM_TX_ANLT_MSG_RX_MSG_DATA0__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA0__MSG0__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA0__MSG0__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA0__MSG0__MASK                       0xffff
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA0__MSG0__OFFSET                     0

#define SRM_TX_ANLT_MSG_RX_MSG_DATA1__ADDRESS                      0x4a09
#define SRM_TX_ANLT_MSG_RX_MSG_DATA1__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_RX_MSG_DATA1__ICOUNT                        3
#define SRM_TX_ANLT_MSG_RX_MSG_DATA1__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_RX_MSG_DATA1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_RX_MSG_DATA1__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_MSG_DATA1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_RX_MSG_DATA1__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_MSG_DATA1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_RX_MSG_DATA1__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_RX_MSG_DATA1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_RX_MSG_DATA1__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA1__MSG1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA1__MSG1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA1__MSG1__READ(die, channel)         SRM_TX_ANLT_MSG_RX_MSG_DATA1__MSG1__GET(SRM_TX_ANLT_MSG_RX_MSG_DATA1__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA1__MSG1__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA1__MSG1__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA1__MSG1__MASK                       0xffff
#  define SRM_TX_ANLT_MSG_RX_MSG_DATA1__MSG1__OFFSET                     0

#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__ADDRESS                      0x4a0a
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__ICOUNT                        3
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__READ(die, channel)         SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__GET(SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__MASK                       0xffff
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS0__STATE0__OFFSET                     0

#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__ADDRESS                      0x4a0b
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__ICOUNT                        3
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__READ(die, channel)         SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__GET(SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__MASK                       0xffff
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS1__STATE1__OFFSET                     0

#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__ADDRESS                      0x4a0c
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__ICOUNT                        3
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__READ(die, channel)         SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__GET(SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__MASK                       0xffff
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS2__STATE2__OFFSET                     0

#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__ADDRESS                      0x4a0d
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__ICOUNT                        3
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__READ(die, channel)         SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__GET(SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__MASK                       0xffff
#  define SRM_TX_ANLT_MSG_RX_DEBUG_STATUS3__STATE3__OFFSET                     0

#define SRM_TX_ANLT_MSG_RX_MSG_INT__ADDRESS                      0x4a0e
#define SRM_TX_ANLT_MSG_RX_MSG_INT__DEFAULT                      0x0
#define SRM_TX_ANLT_MSG_RX_MSG_INT__ICOUNT                        3
#define SRM_TX_ANLT_MSG_RX_MSG_INT__ISPAN                         0x800
#define SRM_TX_ANLT_MSG_RX_MSG_INT__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_ANLT_MSG_RX_MSG_INT__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_MSG_INT__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_ANLT_MSG_RX_MSG_INT__ADDRESS)
#define SRM_TX_ANLT_MSG_RX_MSG_INT__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_ANLT_MSG_RX_MSG_INT__ADDRESS, (data))
#define SRM_TX_ANLT_MSG_RX_MSG_INT__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_ANLT_MSG_RX_MSG_INT__ADDRESS, (data), (mask))
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RSRVD1__READ(die, channel)         SRM_TX_ANLT_MSG_RX_MSG_INT__RSRVD1__GET(SRM_TX_ANLT_MSG_RX_MSG_INT__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RSRVD1__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_INT__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RSRVD1__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_INT__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RSRVD1__MASK                       0x7fff
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RSRVD1__OFFSET                     1
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RX_VALID__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RX_VALID__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RX_VALID__READ(die, channel)         SRM_TX_ANLT_MSG_RX_MSG_INT__RX_VALID__GET(SRM_TX_ANLT_MSG_RX_MSG_INT__READ(die, channel))
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RX_VALID__WRITE(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RX_VALID__RMW(die, channel, fdata) SRM_TX_ANLT_MSG_RX_MSG_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RX_VALID__MASK                       0x1
#  define SRM_TX_ANLT_MSG_RX_MSG_INT__RX_VALID__OFFSET                     0

#define SRM_TX_TXA_GEN_CFG__ADDRESS                      0x4b07
#define SRM_TX_TXA_GEN_CFG__DEFAULT                      0x0
#define SRM_TX_TXA_GEN_CFG__ICOUNT                        3
#define SRM_TX_TXA_GEN_CFG__ISPAN                         0x800
#define SRM_TX_TXA_GEN_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_TXA_GEN_CFG__ADDRESS)
#define SRM_TX_TXA_GEN_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_TXA_GEN_CFG__ADDRESS)
#define SRM_TX_TXA_GEN_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_TXA_GEN_CFG__ADDRESS, (data))
#define SRM_TX_TXA_GEN_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_TXA_GEN_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_TXA_GEN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_TX_TXA_GEN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_TX_TXA_GEN_CFG__RSRVD1__READ(die, channel)         SRM_TX_TXA_GEN_CFG__RSRVD1__GET(SRM_TX_TXA_GEN_CFG__READ(die, channel))
#  define SRM_TX_TXA_GEN_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_TXA_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_TX_TXA_GEN_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_TXA_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_TX_TXA_GEN_CFG__RSRVD1__MASK                       0xf
#  define SRM_TX_TXA_GEN_CFG__RSRVD1__OFFSET                     4
#  define SRM_TX_TXA_GEN_CFG__DIG_RSTB__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_TXA_GEN_CFG__DIG_RSTB__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_TXA_GEN_CFG__DIG_RSTB__READ(die, channel)         SRM_TX_TXA_GEN_CFG__DIG_RSTB__GET(SRM_TX_TXA_GEN_CFG__READ(die, channel))
#  define SRM_TX_TXA_GEN_CFG__DIG_RSTB__WRITE(die, channel, fdata) SRM_TX_TXA_GEN_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_TXA_GEN_CFG__DIG_RSTB__RMW(die, channel, fdata) SRM_TX_TXA_GEN_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_TXA_GEN_CFG__DIG_RSTB__MASK                       0x1
#  define SRM_TX_TXA_GEN_CFG__DIG_RSTB__OFFSET                     3
#  define SRM_TX_TXA_GEN_CFG__LPBCKEN__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_TXA_GEN_CFG__LPBCKEN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_TXA_GEN_CFG__LPBCKEN__READ(die, channel)         SRM_TX_TXA_GEN_CFG__LPBCKEN__GET(SRM_TX_TXA_GEN_CFG__READ(die, channel))
#  define SRM_TX_TXA_GEN_CFG__LPBCKEN__WRITE(die, channel, fdata) SRM_TX_TXA_GEN_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_TXA_GEN_CFG__LPBCKEN__RMW(die, channel, fdata) SRM_TX_TXA_GEN_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_TXA_GEN_CFG__LPBCKEN__MASK                       0x1
#  define SRM_TX_TXA_GEN_CFG__LPBCKEN__OFFSET                     2
#  define SRM_TX_TXA_GEN_CFG__CLKSEL__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_TXA_GEN_CFG__CLKSEL__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_TXA_GEN_CFG__CLKSEL__READ(die, channel)         SRM_TX_TXA_GEN_CFG__CLKSEL__GET(SRM_TX_TXA_GEN_CFG__READ(die, channel))
#  define SRM_TX_TXA_GEN_CFG__CLKSEL__WRITE(die, channel, fdata) SRM_TX_TXA_GEN_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXA_GEN_CFG__CLKSEL__RMW(die, channel, fdata) SRM_TX_TXA_GEN_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_TXA_GEN_CFG__CLKSEL__MASK                       0x1
#  define SRM_TX_TXA_GEN_CFG__CLKSEL__OFFSET                     1
#  define SRM_TX_TXA_GEN_CFG__PDB__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_TXA_GEN_CFG__PDB__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_TXA_GEN_CFG__PDB__READ(die, channel)         SRM_TX_TXA_GEN_CFG__PDB__GET(SRM_TX_TXA_GEN_CFG__READ(die, channel))
#  define SRM_TX_TXA_GEN_CFG__PDB__WRITE(die, channel, fdata) SRM_TX_TXA_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXA_GEN_CFG__PDB__RMW(die, channel, fdata) SRM_TX_TXA_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_TXA_GEN_CFG__PDB__MASK                       0x1
#  define SRM_TX_TXA_GEN_CFG__PDB__OFFSET                     0

#define SRM_TX_GC_CLKEN__ADDRESS                      0x4c00
#define SRM_TX_GC_CLKEN__DEFAULT                      0x0
#define SRM_TX_GC_CLKEN__ICOUNT                        3
#define SRM_TX_GC_CLKEN__ISPAN                         0x800
#define SRM_TX_GC_CLKEN__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CLKEN__ADDRESS)
#define SRM_TX_GC_CLKEN__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CLKEN__ADDRESS)
#define SRM_TX_GC_CLKEN__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CLKEN__ADDRESS, (data))
#define SRM_TX_GC_CLKEN__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CLKEN__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CLKEN__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_TX_GC_CLKEN__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_TX_GC_CLKEN__RSRVD1__READ(die, channel)         SRM_TX_GC_CLKEN__RSRVD1__GET(SRM_TX_GC_CLKEN__READ(die, channel))
#  define SRM_TX_GC_CLKEN__RSRVD1__WRITE(die, channel, fdata) SRM_TX_GC_CLKEN__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_TX_GC_CLKEN__RSRVD1__RMW(die, channel, fdata) SRM_TX_GC_CLKEN__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_TX_GC_CLKEN__RSRVD1__MASK                       0x3fff
#  define SRM_TX_GC_CLKEN__RSRVD1__OFFSET                     2
#  define SRM_TX_GC_CLKEN__CHK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_GC_CLKEN__CHK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_GC_CLKEN__CHK__READ(die, channel)         SRM_TX_GC_CLKEN__CHK__GET(SRM_TX_GC_CLKEN__READ(die, channel))
#  define SRM_TX_GC_CLKEN__CHK__WRITE(die, channel, fdata) SRM_TX_GC_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_CLKEN__CHK__RMW(die, channel, fdata) SRM_TX_GC_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_CLKEN__CHK__MASK                       0x1
#  define SRM_TX_GC_CLKEN__CHK__OFFSET                     1
#  define SRM_TX_GC_CLKEN__GEN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_GC_CLKEN__GEN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_GC_CLKEN__GEN__READ(die, channel)         SRM_TX_GC_CLKEN__GEN__GET(SRM_TX_GC_CLKEN__READ(die, channel))
#  define SRM_TX_GC_CLKEN__GEN__WRITE(die, channel, fdata) SRM_TX_GC_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_CLKEN__GEN__RMW(die, channel, fdata) SRM_TX_GC_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_CLKEN__GEN__MASK                       0x1
#  define SRM_TX_GC_CLKEN__GEN__OFFSET                     0

#define SRM_TX_GC_RESET__ADDRESS                      0x4c01
#define SRM_TX_GC_RESET__DEFAULT                      0x0
#define SRM_TX_GC_RESET__ICOUNT                        3
#define SRM_TX_GC_RESET__ISPAN                         0x800
#define SRM_TX_GC_RESET__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_RESET__ADDRESS)
#define SRM_TX_GC_RESET__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_RESET__ADDRESS)
#define SRM_TX_GC_RESET__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_RESET__ADDRESS, (data))
#define SRM_TX_GC_RESET__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_RESET__ADDRESS, (data), (mask))
#  define SRM_TX_GC_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_TX_GC_RESET__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_TX_GC_RESET__RSRVD1__READ(die, channel)         SRM_TX_GC_RESET__RSRVD1__GET(SRM_TX_GC_RESET__READ(die, channel))
#  define SRM_TX_GC_RESET__RSRVD1__WRITE(die, channel, fdata) SRM_TX_GC_RESET__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_TX_GC_RESET__RSRVD1__RMW(die, channel, fdata) SRM_TX_GC_RESET__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SRM_TX_GC_RESET__RSRVD1__MASK                       0x3fff
#  define SRM_TX_GC_RESET__RSRVD1__OFFSET                     2
#  define SRM_TX_GC_RESET__CHK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_GC_RESET__CHK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_GC_RESET__CHK__READ(die, channel)         SRM_TX_GC_RESET__CHK__GET(SRM_TX_GC_RESET__READ(die, channel))
#  define SRM_TX_GC_RESET__CHK__WRITE(die, channel, fdata) SRM_TX_GC_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_RESET__CHK__RMW(die, channel, fdata) SRM_TX_GC_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_RESET__CHK__MASK                       0x1
#  define SRM_TX_GC_RESET__CHK__OFFSET                     1
#  define SRM_TX_GC_RESET__GEN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_GC_RESET__GEN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_GC_RESET__GEN__READ(die, channel)         SRM_TX_GC_RESET__GEN__GET(SRM_TX_GC_RESET__READ(die, channel))
#  define SRM_TX_GC_RESET__GEN__WRITE(die, channel, fdata) SRM_TX_GC_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_RESET__GEN__RMW(die, channel, fdata) SRM_TX_GC_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_RESET__GEN__MASK                       0x1
#  define SRM_TX_GC_RESET__GEN__OFFSET                     0

#define SRM_TX_GC_GEN_CFG__ADDRESS                      0x4c0b
#define SRM_TX_GC_GEN_CFG__DEFAULT                      0x0
#define SRM_TX_GC_GEN_CFG__ICOUNT                        3
#define SRM_TX_GC_GEN_CFG__ISPAN                         0x800
#define SRM_TX_GC_GEN_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_GEN_CFG__ADDRESS)
#define SRM_TX_GC_GEN_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_GEN_CFG__ADDRESS)
#define SRM_TX_GC_GEN_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_GEN_CFG__ADDRESS, (data))
#define SRM_TX_GC_GEN_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_GEN_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_GC_GEN_CFG__GEN_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_GC_GEN_CFG__GEN_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_GC_GEN_CFG__GEN_EN__READ(die, channel)         SRM_TX_GC_GEN_CFG__GEN_EN__GET(SRM_TX_GC_GEN_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_CFG__GEN_EN__WRITE(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_GC_GEN_CFG__GEN_EN__RMW(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_GC_GEN_CFG__GEN_EN__MASK                       0x1
#  define SRM_TX_GC_GEN_CFG__GEN_EN__OFFSET                     15
#  define SRM_TX_GC_GEN_CFG__GEN_EN_ODD__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_TX_GC_GEN_CFG__GEN_EN_ODD__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_TX_GC_GEN_CFG__GEN_EN_ODD__READ(die, channel)         SRM_TX_GC_GEN_CFG__GEN_EN_ODD__GET(SRM_TX_GC_GEN_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_CFG__GEN_EN_ODD__WRITE(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_TX_GC_GEN_CFG__GEN_EN_ODD__RMW(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_TX_GC_GEN_CFG__GEN_EN_ODD__MASK                       0x1
#  define SRM_TX_GC_GEN_CFG__GEN_EN_ODD__OFFSET                     14
#  define SRM_TX_GC_GEN_CFG__NRZ_FORMAT__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_TX_GC_GEN_CFG__NRZ_FORMAT__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_TX_GC_GEN_CFG__NRZ_FORMAT__READ(die, channel)         SRM_TX_GC_GEN_CFG__NRZ_FORMAT__GET(SRM_TX_GC_GEN_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_CFG__NRZ_FORMAT__WRITE(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_TX_GC_GEN_CFG__NRZ_FORMAT__RMW(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_TX_GC_GEN_CFG__NRZ_FORMAT__MASK                       0x1
#  define SRM_TX_GC_GEN_CFG__NRZ_FORMAT__OFFSET                     13
#  define SRM_TX_GC_GEN_CFG__NRZ_MODE__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_TX_GC_GEN_CFG__NRZ_MODE__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_TX_GC_GEN_CFG__NRZ_MODE__READ(die, channel)         SRM_TX_GC_GEN_CFG__NRZ_MODE__GET(SRM_TX_GC_GEN_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_CFG__NRZ_MODE__WRITE(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_TX_GC_GEN_CFG__NRZ_MODE__RMW(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_TX_GC_GEN_CFG__NRZ_MODE__MASK                       0x1
#  define SRM_TX_GC_GEN_CFG__NRZ_MODE__OFFSET                     12
#  define SRM_TX_GC_GEN_CFG__DUAL_PRBS__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_TX_GC_GEN_CFG__DUAL_PRBS__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_TX_GC_GEN_CFG__DUAL_PRBS__READ(die, channel)         SRM_TX_GC_GEN_CFG__DUAL_PRBS__GET(SRM_TX_GC_GEN_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_CFG__DUAL_PRBS__WRITE(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_TX_GC_GEN_CFG__DUAL_PRBS__RMW(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_TX_GC_GEN_CFG__DUAL_PRBS__MASK                       0x1
#  define SRM_TX_GC_GEN_CFG__DUAL_PRBS__OFFSET                     11
#  define SRM_TX_GC_GEN_CFG__PATTERN_MODE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SRM_TX_GC_GEN_CFG__PATTERN_MODE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SRM_TX_GC_GEN_CFG__PATTERN_MODE__READ(die, channel)         SRM_TX_GC_GEN_CFG__PATTERN_MODE__GET(SRM_TX_GC_GEN_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_CFG__PATTERN_MODE__WRITE(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SRM_TX_GC_GEN_CFG__PATTERN_MODE__RMW(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SRM_TX_GC_GEN_CFG__PATTERN_MODE__MASK                       0x7
#  define SRM_TX_GC_GEN_CFG__PATTERN_MODE__OFFSET                     8
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE_ODD__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE_ODD__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE_ODD__READ(die, channel)         SRM_TX_GC_GEN_CFG__PRBS_MODE_ODD__GET(SRM_TX_GC_GEN_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE_ODD__WRITE(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE_ODD__RMW(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE_ODD__MASK                       0xf
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE_ODD__OFFSET                     4
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE__READ(die, channel)         SRM_TX_GC_GEN_CFG__PRBS_MODE__GET(SRM_TX_GC_GEN_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE__WRITE(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE__RMW(die, channel, fdata) SRM_TX_GC_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE__MASK                       0xf
#  define SRM_TX_GC_GEN_CFG__PRBS_MODE__OFFSET                     0

#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__ADDRESS                      0x4c0c
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__DEFAULT                      0x3333
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__ICOUNT                        3
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__ISPAN                         0x800
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__ADDRESS)
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__ADDRESS)
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__ADDRESS, (data))
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__ADDRESS, (data), (mask))
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__READ(die, channel)         SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__GET(SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__READ(die, channel))
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__RMW(die, channel, fdata) SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__MASK                       0xffff
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG0__VALUE__OFFSET                     0

#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__ADDRESS                      0x4c0d
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__DEFAULT                      0x3333
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__ICOUNT                        3
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__ISPAN                         0x800
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__ADDRESS)
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__ADDRESS)
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__ADDRESS, (data))
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__ADDRESS, (data), (mask))
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__READ(die, channel)         SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__GET(SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__READ(die, channel))
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__RMW(die, channel, fdata) SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__MASK                       0xffff
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG1__VALUE__OFFSET                     0

#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__ADDRESS                      0x4c0e
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__DEFAULT                      0x3333
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__ICOUNT                        3
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__ISPAN                         0x800
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__ADDRESS)
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__ADDRESS)
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__ADDRESS, (data))
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__ADDRESS, (data), (mask))
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__READ(die, channel)         SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__GET(SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__READ(die, channel))
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__RMW(die, channel, fdata) SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__MASK                       0xffff
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG2__VALUE__OFFSET                     0

#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__ADDRESS                      0x4c0f
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__DEFAULT                      0x3333
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__ICOUNT                        3
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__ISPAN                         0x800
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__ADDRESS)
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__ADDRESS)
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__ADDRESS, (data))
#define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__ADDRESS, (data), (mask))
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__READ(die, channel)         SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__GET(SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__READ(die, channel))
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__RMW(die, channel, fdata) SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__MASK                       0xffff
#  define SRM_TX_GC_GEN_SEEDE_FIX0_CFG3__VALUE__OFFSET                     0

#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__ADDRESS                      0x4c10
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__DEFAULT                      0x3333
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__ICOUNT                        3
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__ISPAN                         0x800
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__ADDRESS)
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__ADDRESS)
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__ADDRESS, (data))
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__ADDRESS, (data), (mask))
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__READ(die, channel)         SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__GET(SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__READ(die, channel))
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__RMW(die, channel, fdata) SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__MASK                       0xffff
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG0__VALUE__OFFSET                     0

#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__ADDRESS                      0x4c11
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__DEFAULT                      0x3333
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__ICOUNT                        3
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__ISPAN                         0x800
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__ADDRESS)
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__ADDRESS)
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__ADDRESS, (data))
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__ADDRESS, (data), (mask))
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__READ(die, channel)         SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__GET(SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__READ(die, channel))
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__RMW(die, channel, fdata) SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__MASK                       0xffff
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG1__VALUE__OFFSET                     0

#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__ADDRESS                      0x4c12
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__DEFAULT                      0x3333
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__ICOUNT                        3
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__ISPAN                         0x800
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__ADDRESS)
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__ADDRESS)
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__ADDRESS, (data))
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__ADDRESS, (data), (mask))
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__READ(die, channel)         SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__GET(SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__READ(die, channel))
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__RMW(die, channel, fdata) SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__MASK                       0xffff
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG2__VALUE__OFFSET                     0

#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__ADDRESS                      0x4c13
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__DEFAULT                      0x3333
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__ICOUNT                        3
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__ISPAN                         0x800
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__ADDRESS)
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__ADDRESS)
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__ADDRESS, (data))
#define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__ADDRESS, (data), (mask))
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__READ(die, channel)         SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__GET(SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__READ(die, channel))
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__RMW(die, channel, fdata) SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__MASK                       0xffff
#  define SRM_TX_GC_GEN_SEEDO_FIX1_CFG3__VALUE__OFFSET                     0

#define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__ADDRESS                      0x4c14
#define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__DEFAULT                      0x1
#define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__ICOUNT                        3
#define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__ISPAN                         0x800
#define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_GEN_FIXED_REPEAT_CFG__ADDRESS)
#define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_GEN_FIXED_REPEAT_CFG__ADDRESS)
#define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_GEN_FIXED_REPEAT_CFG__ADDRESS, (data))
#define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_GEN_FIXED_REPEAT_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__READ(die, channel)         SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__GET(SRM_TX_GC_GEN_FIXED_REPEAT_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__WRITE(die, channel, fdata) SRM_TX_GC_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__RMW(die, channel, fdata) SRM_TX_GC_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__MASK                       0xff
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT1__OFFSET                     8
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__READ(die, channel)         SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__GET(SRM_TX_GC_GEN_FIXED_REPEAT_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__WRITE(die, channel, fdata) SRM_TX_GC_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__RMW(die, channel, fdata) SRM_TX_GC_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__MASK                       0xff
#  define SRM_TX_GC_GEN_FIXED_REPEAT_CFG__REPEAT0__OFFSET                     0

#define SRM_TX_GC_GEN_PRBS_SEED_CFG__ADDRESS                      0x4c15
#define SRM_TX_GC_GEN_PRBS_SEED_CFG__DEFAULT                      0x3
#define SRM_TX_GC_GEN_PRBS_SEED_CFG__ICOUNT                        3
#define SRM_TX_GC_GEN_PRBS_SEED_CFG__ISPAN                         0x800
#define SRM_TX_GC_GEN_PRBS_SEED_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_GEN_PRBS_SEED_CFG__ADDRESS)
#define SRM_TX_GC_GEN_PRBS_SEED_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_GEN_PRBS_SEED_CFG__ADDRESS)
#define SRM_TX_GC_GEN_PRBS_SEED_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_GEN_PRBS_SEED_CFG__ADDRESS, (data))
#define SRM_TX_GC_GEN_PRBS_SEED_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_GEN_PRBS_SEED_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RSRVD1__READ(die, channel)         SRM_TX_GC_GEN_PRBS_SEED_CFG__RSRVD1__GET(SRM_TX_GC_GEN_PRBS_SEED_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RSRVD1__MASK                       0x1fff
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RSRVD1__OFFSET                     3
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED__READ(die, channel)         SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED__GET(SRM_TX_GC_GEN_PRBS_SEED_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED__WRITE(die, channel, fdata) SRM_TX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED__RMW(die, channel, fdata) SRM_TX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED__MASK                       0x1
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED__OFFSET                     2
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__READ(die, channel)         SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__GET(SRM_TX_GC_GEN_PRBS_SEED_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__WRITE(die, channel, fdata) SRM_TX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__RMW(die, channel, fdata) SRM_TX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__MASK                       0x1
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_ODD__OFFSET                     1
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__READ(die, channel)         SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__GET(SRM_TX_GC_GEN_PRBS_SEED_CFG__READ(die, channel))
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__WRITE(die, channel, fdata) SRM_TX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__RMW(die, channel, fdata) SRM_TX_GC_GEN_PRBS_SEED_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__MASK                       0x1
#  define SRM_TX_GC_GEN_PRBS_SEED_CFG__RESEED_EVN__OFFSET                     0

#define SRM_TX_GC_CHK_CFG__ADDRESS                      0x4c16
#define SRM_TX_GC_CHK_CFG__DEFAULT                      0x0
#define SRM_TX_GC_CHK_CFG__ICOUNT                        3
#define SRM_TX_GC_CHK_CFG__ISPAN                         0x800
#define SRM_TX_GC_CHK_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_CFG__ADDRESS)
#define SRM_TX_GC_CHK_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_CFG__ADDRESS)
#define SRM_TX_GC_CHK_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_CFG__ADDRESS, (data))
#define SRM_TX_GC_CHK_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_CFG__SNAPSHOT_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_GC_CHK_CFG__SNAPSHOT_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_GC_CHK_CFG__SNAPSHOT_EN__READ(die, channel)         SRM_TX_GC_CHK_CFG__SNAPSHOT_EN__GET(SRM_TX_GC_CHK_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_CFG__SNAPSHOT_EN__WRITE(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_GC_CHK_CFG__SNAPSHOT_EN__RMW(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_GC_CHK_CFG__SNAPSHOT_EN__MASK                       0x1
#  define SRM_TX_GC_CHK_CFG__SNAPSHOT_EN__OFFSET                     15
#  define SRM_TX_GC_CHK_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x9fff) | (((uint32_t)(fdata) << 13) & 0x6000))
#  define SRM_TX_GC_CHK_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x3)
#  define SRM_TX_GC_CHK_CFG__RSRVD1__READ(die, channel)         SRM_TX_GC_CHK_CFG__RSRVD1__GET(SRM_TX_GC_CHK_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<13, 0x6000)
#  define SRM_TX_GC_CHK_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<13, 0x6000)
#  define SRM_TX_GC_CHK_CFG__RSRVD1__MASK                       0x3
#  define SRM_TX_GC_CHK_CFG__RSRVD1__OFFSET                     13
#  define SRM_TX_GC_CHK_CFG__OOS_THRESH__SET(rdata, fdata)         (((rdata) & 0xe0ff) | (((uint32_t)(fdata) << 8) & 0x1f00))
#  define SRM_TX_GC_CHK_CFG__OOS_THRESH__GET(rdata)                (((rdata) >> 8) & 0x1f)
#  define SRM_TX_GC_CHK_CFG__OOS_THRESH__READ(die, channel)         SRM_TX_GC_CHK_CFG__OOS_THRESH__GET(SRM_TX_GC_CHK_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_CFG__OOS_THRESH__WRITE(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<8, 0x1f00)
#  define SRM_TX_GC_CHK_CFG__OOS_THRESH__RMW(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<8, 0x1f00)
#  define SRM_TX_GC_CHK_CFG__OOS_THRESH__MASK                       0x1f
#  define SRM_TX_GC_CHK_CFG__OOS_THRESH__OFFSET                     8
#  define SRM_TX_GC_CHK_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_TX_GC_CHK_CFG__RSRVD2__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_TX_GC_CHK_CFG__RSRVD2__READ(die, channel)         SRM_TX_GC_CHK_CFG__RSRVD2__GET(SRM_TX_GC_CHK_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_CFG__RSRVD2__WRITE(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_TX_GC_CHK_CFG__RSRVD2__RMW(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_TX_GC_CHK_CFG__RSRVD2__MASK                       0xf
#  define SRM_TX_GC_CHK_CFG__RSRVD2__OFFSET                     4
#  define SRM_TX_GC_CHK_CFG__BITSWAP__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_GC_CHK_CFG__BITSWAP__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_GC_CHK_CFG__BITSWAP__READ(die, channel)         SRM_TX_GC_CHK_CFG__BITSWAP__GET(SRM_TX_GC_CHK_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_CFG__BITSWAP__WRITE(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_GC_CHK_CFG__BITSWAP__RMW(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_GC_CHK_CFG__BITSWAP__MASK                       0x1
#  define SRM_TX_GC_CHK_CFG__BITSWAP__OFFSET                     3
#  define SRM_TX_GC_CHK_CFG__NRZ_MODE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_GC_CHK_CFG__NRZ_MODE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_GC_CHK_CFG__NRZ_MODE__READ(die, channel)         SRM_TX_GC_CHK_CFG__NRZ_MODE__GET(SRM_TX_GC_CHK_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_CFG__NRZ_MODE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_GC_CHK_CFG__NRZ_MODE__RMW(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_GC_CHK_CFG__NRZ_MODE__MASK                       0x1
#  define SRM_TX_GC_CHK_CFG__NRZ_MODE__OFFSET                     2
#  define SRM_TX_GC_CHK_CFG__FIXED_PAT_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_GC_CHK_CFG__FIXED_PAT_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_GC_CHK_CFG__FIXED_PAT_EN__READ(die, channel)         SRM_TX_GC_CHK_CFG__FIXED_PAT_EN__GET(SRM_TX_GC_CHK_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_CFG__FIXED_PAT_EN__WRITE(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_CHK_CFG__FIXED_PAT_EN__RMW(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_CHK_CFG__FIXED_PAT_EN__MASK                       0x1
#  define SRM_TX_GC_CHK_CFG__FIXED_PAT_EN__OFFSET                     1
#  define SRM_TX_GC_CHK_CFG__PRBS_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_GC_CHK_CFG__PRBS_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_GC_CHK_CFG__PRBS_EN__READ(die, channel)         SRM_TX_GC_CHK_CFG__PRBS_EN__GET(SRM_TX_GC_CHK_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_CFG__PRBS_EN__WRITE(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_CHK_CFG__PRBS_EN__RMW(die, channel, fdata) SRM_TX_GC_CHK_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_CHK_CFG__PRBS_EN__MASK                       0x1
#  define SRM_TX_GC_CHK_CFG__PRBS_EN__OFFSET                     0

#define SRM_TX_GC_CHK_PRBS_CFG__ADDRESS                      0x4c17
#define SRM_TX_GC_CHK_PRBS_CFG__DEFAULT                      0x0
#define SRM_TX_GC_CHK_PRBS_CFG__ICOUNT                        3
#define SRM_TX_GC_CHK_PRBS_CFG__ISPAN                         0x800
#define SRM_TX_GC_CHK_PRBS_CFG__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_PRBS_CFG__ADDRESS)
#define SRM_TX_GC_CHK_PRBS_CFG__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_PRBS_CFG__ADDRESS)
#define SRM_TX_GC_CHK_PRBS_CFG__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_PRBS_CFG__ADDRESS, (data))
#define SRM_TX_GC_CHK_PRBS_CFG__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_PRBS_CFG__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_PRBS_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SRM_TX_GC_CHK_PRBS_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SRM_TX_GC_CHK_PRBS_CFG__RSRVD1__READ(die, channel)         SRM_TX_GC_CHK_PRBS_CFG__RSRVD1__GET(SRM_TX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_PRBS_CFG__RSRVD1__WRITE(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SRM_TX_GC_CHK_PRBS_CFG__RSRVD1__RMW(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SRM_TX_GC_CHK_PRBS_CFG__RSRVD1__MASK                       0x7
#  define SRM_TX_GC_CHK_PRBS_CFG__RSRVD1__OFFSET                     13
#  define SRM_TX_GC_CHK_PRBS_CFG__DUAL_PRBS__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_TX_GC_CHK_PRBS_CFG__DUAL_PRBS__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_TX_GC_CHK_PRBS_CFG__DUAL_PRBS__READ(die, channel)         SRM_TX_GC_CHK_PRBS_CFG__DUAL_PRBS__GET(SRM_TX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_PRBS_CFG__DUAL_PRBS__WRITE(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_TX_GC_CHK_PRBS_CFG__DUAL_PRBS__RMW(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_TX_GC_CHK_PRBS_CFG__DUAL_PRBS__MASK                       0x1
#  define SRM_TX_GC_CHK_PRBS_CFG__DUAL_PRBS__OFFSET                     12
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__READ(die, channel)         SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__GET(SRM_TX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__WRITE(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__RMW(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__MASK                       0x3
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__OFFSET                     10
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__READ(die, channel)         SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__GET(SRM_TX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__WRITE(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__RMW(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__MASK                       0x1
#  define SRM_TX_GC_CHK_PRBS_CFG__AUTO_POLARITY_EN__OFFSET                     9
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_INV__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_INV__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_INV__READ(die, channel)         SRM_TX_GC_CHK_PRBS_CFG__PRBS_INV__GET(SRM_TX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_INV__WRITE(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_INV__RMW(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_INV__MASK                       0x1
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_INV__OFFSET                     8
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__READ(die, channel)         SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__GET(SRM_TX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__WRITE(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__RMW(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__MASK                       0xf
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE_ODD__OFFSET                     4
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE__READ(die, channel)         SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE__GET(SRM_TX_GC_CHK_PRBS_CFG__READ(die, channel))
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE__RMW(die, channel, fdata) SRM_TX_GC_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE__MASK                       0xf
#  define SRM_TX_GC_CHK_PRBS_CFG__PRBS_MODE__OFFSET                     0

#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__ADDRESS                      0x4c18
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__DEFAULT                      0x3333
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__ICOUNT                        3
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__ISPAN                         0x800
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__ADDRESS)
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__ADDRESS)
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__ADDRESS, (data))
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__READ(die, channel)         SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__GET(SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__READ(die, channel))
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__RMW(die, channel, fdata) SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__MASK                       0xffff
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG0__VALUE__OFFSET                     0

#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__ADDRESS                      0x4c19
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__DEFAULT                      0x3333
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__ICOUNT                        3
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__ISPAN                         0x800
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__ADDRESS)
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__ADDRESS)
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__ADDRESS, (data))
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__READ(die, channel)         SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__GET(SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__READ(die, channel))
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__RMW(die, channel, fdata) SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__MASK                       0xffff
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG1__VALUE__OFFSET                     0

#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__ADDRESS                      0x4c1a
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__DEFAULT                      0x3333
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__ICOUNT                        3
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__ISPAN                         0x800
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__ADDRESS)
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__ADDRESS)
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__ADDRESS, (data))
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__READ(die, channel)         SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__GET(SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__READ(die, channel))
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__RMW(die, channel, fdata) SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__MASK                       0xffff
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG2__VALUE__OFFSET                     0

#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__ADDRESS                      0x4c1b
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__DEFAULT                      0x3333
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__ICOUNT                        3
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__ISPAN                         0x800
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__ADDRESS)
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__ADDRESS)
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__ADDRESS, (data))
#define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__READ(die, channel)         SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__GET(SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__READ(die, channel))
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__RMW(die, channel, fdata) SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__MASK                       0xffff
#  define SRM_TX_GC_CHK_FIXED_PAT_VALUE_CFG3__VALUE__OFFSET                     0

#define SRM_TX_GC_CHK_WORD_CNT0__ADDRESS                      0x4c1c
#define SRM_TX_GC_CHK_WORD_CNT0__DEFAULT                      0x0
#define SRM_TX_GC_CHK_WORD_CNT0__ICOUNT                        3
#define SRM_TX_GC_CHK_WORD_CNT0__ISPAN                         0x800
#define SRM_TX_GC_CHK_WORD_CNT0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_WORD_CNT0__ADDRESS)
#define SRM_TX_GC_CHK_WORD_CNT0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_WORD_CNT0__ADDRESS)
#define SRM_TX_GC_CHK_WORD_CNT0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_WORD_CNT0__ADDRESS, (data))
#define SRM_TX_GC_CHK_WORD_CNT0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_WORD_CNT0__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_WORD_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_CHK_WORD_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_CHK_WORD_CNT0__VALUE__READ(die, channel)         SRM_TX_GC_CHK_WORD_CNT0__VALUE__GET(SRM_TX_GC_CHK_WORD_CNT0__READ(die, channel))
#  define SRM_TX_GC_CHK_WORD_CNT0__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_WORD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_WORD_CNT0__VALUE__RMW(die, channel, fdata) SRM_TX_GC_CHK_WORD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_WORD_CNT0__VALUE__MASK                       0xffff
#  define SRM_TX_GC_CHK_WORD_CNT0__VALUE__OFFSET                     0

#define SRM_TX_GC_CHK_WORD_CNT1__ADDRESS                      0x4c1d
#define SRM_TX_GC_CHK_WORD_CNT1__DEFAULT                      0x0
#define SRM_TX_GC_CHK_WORD_CNT1__ICOUNT                        3
#define SRM_TX_GC_CHK_WORD_CNT1__ISPAN                         0x800
#define SRM_TX_GC_CHK_WORD_CNT1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_WORD_CNT1__ADDRESS)
#define SRM_TX_GC_CHK_WORD_CNT1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_WORD_CNT1__ADDRESS)
#define SRM_TX_GC_CHK_WORD_CNT1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_WORD_CNT1__ADDRESS, (data))
#define SRM_TX_GC_CHK_WORD_CNT1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_WORD_CNT1__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_WORD_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_CHK_WORD_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_CHK_WORD_CNT1__VALUE__READ(die, channel)         SRM_TX_GC_CHK_WORD_CNT1__VALUE__GET(SRM_TX_GC_CHK_WORD_CNT1__READ(die, channel))
#  define SRM_TX_GC_CHK_WORD_CNT1__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_WORD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_WORD_CNT1__VALUE__RMW(die, channel, fdata) SRM_TX_GC_CHK_WORD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_WORD_CNT1__VALUE__MASK                       0xffff
#  define SRM_TX_GC_CHK_WORD_CNT1__VALUE__OFFSET                     0

#define SRM_TX_GC_CHK_WORD_CNT2__ADDRESS                      0x4c1e
#define SRM_TX_GC_CHK_WORD_CNT2__DEFAULT                      0x0
#define SRM_TX_GC_CHK_WORD_CNT2__ICOUNT                        3
#define SRM_TX_GC_CHK_WORD_CNT2__ISPAN                         0x800
#define SRM_TX_GC_CHK_WORD_CNT2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_WORD_CNT2__ADDRESS)
#define SRM_TX_GC_CHK_WORD_CNT2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_WORD_CNT2__ADDRESS)
#define SRM_TX_GC_CHK_WORD_CNT2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_WORD_CNT2__ADDRESS, (data))
#define SRM_TX_GC_CHK_WORD_CNT2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_WORD_CNT2__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_WORD_CNT2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_CHK_WORD_CNT2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_CHK_WORD_CNT2__VALUE__READ(die, channel)         SRM_TX_GC_CHK_WORD_CNT2__VALUE__GET(SRM_TX_GC_CHK_WORD_CNT2__READ(die, channel))
#  define SRM_TX_GC_CHK_WORD_CNT2__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_WORD_CNT2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_WORD_CNT2__VALUE__RMW(die, channel, fdata) SRM_TX_GC_CHK_WORD_CNT2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_WORD_CNT2__VALUE__MASK                       0xffff
#  define SRM_TX_GC_CHK_WORD_CNT2__VALUE__OFFSET                     0

#define SRM_TX_GC_CHK_BIT_ERROR_CNT0__ADDRESS                      0x4c1f
#define SRM_TX_GC_CHK_BIT_ERROR_CNT0__DEFAULT                      0x0
#define SRM_TX_GC_CHK_BIT_ERROR_CNT0__ICOUNT                        3
#define SRM_TX_GC_CHK_BIT_ERROR_CNT0__ISPAN                         0x800
#define SRM_TX_GC_CHK_BIT_ERROR_CNT0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_BIT_ERROR_CNT0__ADDRESS)
#define SRM_TX_GC_CHK_BIT_ERROR_CNT0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_BIT_ERROR_CNT0__ADDRESS)
#define SRM_TX_GC_CHK_BIT_ERROR_CNT0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_BIT_ERROR_CNT0__ADDRESS, (data))
#define SRM_TX_GC_CHK_BIT_ERROR_CNT0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_BIT_ERROR_CNT0__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT0__VALUE__READ(die, channel)         SRM_TX_GC_CHK_BIT_ERROR_CNT0__VALUE__GET(SRM_TX_GC_CHK_BIT_ERROR_CNT0__READ(die, channel))
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT0__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_BIT_ERROR_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT0__VALUE__RMW(die, channel, fdata) SRM_TX_GC_CHK_BIT_ERROR_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT0__VALUE__MASK                       0xffff
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT0__VALUE__OFFSET                     0

#define SRM_TX_GC_CHK_BIT_ERROR_CNT1__ADDRESS                      0x4c20
#define SRM_TX_GC_CHK_BIT_ERROR_CNT1__DEFAULT                      0x0
#define SRM_TX_GC_CHK_BIT_ERROR_CNT1__ICOUNT                        3
#define SRM_TX_GC_CHK_BIT_ERROR_CNT1__ISPAN                         0x800
#define SRM_TX_GC_CHK_BIT_ERROR_CNT1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_BIT_ERROR_CNT1__ADDRESS)
#define SRM_TX_GC_CHK_BIT_ERROR_CNT1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_BIT_ERROR_CNT1__ADDRESS)
#define SRM_TX_GC_CHK_BIT_ERROR_CNT1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_BIT_ERROR_CNT1__ADDRESS, (data))
#define SRM_TX_GC_CHK_BIT_ERROR_CNT1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_BIT_ERROR_CNT1__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT1__VALUE__READ(die, channel)         SRM_TX_GC_CHK_BIT_ERROR_CNT1__VALUE__GET(SRM_TX_GC_CHK_BIT_ERROR_CNT1__READ(die, channel))
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT1__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_BIT_ERROR_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT1__VALUE__RMW(die, channel, fdata) SRM_TX_GC_CHK_BIT_ERROR_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT1__VALUE__MASK                       0xffff
#  define SRM_TX_GC_CHK_BIT_ERROR_CNT1__VALUE__OFFSET                     0

#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__ADDRESS                      0x4c21
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__DEFAULT                      0x0
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__ICOUNT                        3
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__ISPAN                         0x800
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__ADDRESS)
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__ADDRESS)
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__ADDRESS, (data))
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__READ(die, channel)         SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__GET(SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__READ(die, channel))
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__RMW(die, channel, fdata) SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__MASK                       0xffff
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT0__VALUE__OFFSET                     0

#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__ADDRESS                      0x4c22
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__DEFAULT                      0x0
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__ICOUNT                        3
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__ISPAN                         0x800
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__ADDRESS)
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__ADDRESS)
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__ADDRESS, (data))
#define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__ADDRESS, (data), (mask))
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__READ(die, channel)         SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__GET(SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__READ(die, channel))
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__WRITE(die, channel, fdata) SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__RMW(die, channel, fdata) SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__MASK                       0xffff
#  define SRM_TX_GC_CHK_BIT_ERROR_ODD_CNT1__VALUE__OFFSET                     0

#define SRM_TX_GC_INT__ADDRESS                      0x4c23
#define SRM_TX_GC_INT__DEFAULT                      0x0
#define SRM_TX_GC_INT__ICOUNT                        3
#define SRM_TX_GC_INT__ISPAN                         0x800
#define SRM_TX_GC_INT__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_INT__ADDRESS)
#define SRM_TX_GC_INT__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_INT__ADDRESS)
#define SRM_TX_GC_INT__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_INT__ADDRESS, (data))
#define SRM_TX_GC_INT__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_INT__ADDRESS, (data), (mask))
#  define SRM_TX_GC_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_TX_GC_INT__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_TX_GC_INT__RSRVD1__READ(die, channel)         SRM_TX_GC_INT__RSRVD1__GET(SRM_TX_GC_INT__READ(die, channel))
#  define SRM_TX_GC_INT__RSRVD1__WRITE(die, channel, fdata) SRM_TX_GC_INT__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_TX_GC_INT__RSRVD1__RMW(die, channel, fdata) SRM_TX_GC_INT__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_TX_GC_INT__RSRVD1__MASK                       0x7ff
#  define SRM_TX_GC_INT__RSRVD1__OFFSET                     5
#  define SRM_TX_GC_INT__CHK_FIXED_PAT_SYNC__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_TX_GC_INT__CHK_FIXED_PAT_SYNC__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_TX_GC_INT__CHK_FIXED_PAT_SYNC__READ(die, channel)         SRM_TX_GC_INT__CHK_FIXED_PAT_SYNC__GET(SRM_TX_GC_INT__READ(die, channel))
#  define SRM_TX_GC_INT__CHK_FIXED_PAT_SYNC__WRITE(die, channel, fdata) SRM_TX_GC_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_GC_INT__CHK_FIXED_PAT_SYNC__RMW(die, channel, fdata) SRM_TX_GC_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_GC_INT__CHK_FIXED_PAT_SYNC__MASK                       0x1
#  define SRM_TX_GC_INT__CHK_FIXED_PAT_SYNC__OFFSET                     4
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__READ(die, channel)         SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__GET(SRM_TX_GC_INT__READ(die, channel))
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__WRITE(die, channel, fdata) SRM_TX_GC_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__RMW(die, channel, fdata) SRM_TX_GC_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__MASK                       0x1
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV_ODD__OFFSET                     3
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC_ODD__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC_ODD__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC_ODD__READ(die, channel)         SRM_TX_GC_INT__CHK_PRBS_SYNC_ODD__GET(SRM_TX_GC_INT__READ(die, channel))
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC_ODD__WRITE(die, channel, fdata) SRM_TX_GC_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC_ODD__RMW(die, channel, fdata) SRM_TX_GC_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC_ODD__MASK                       0x1
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC_ODD__OFFSET                     2
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV__READ(die, channel)         SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV__GET(SRM_TX_GC_INT__READ(die, channel))
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV__WRITE(die, channel, fdata) SRM_TX_GC_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV__RMW(die, channel, fdata) SRM_TX_GC_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV__MASK                       0x1
#  define SRM_TX_GC_INT__CHK_PRBS_POLARITY_INV__OFFSET                     1
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC__READ(die, channel)         SRM_TX_GC_INT__CHK_PRBS_SYNC__GET(SRM_TX_GC_INT__READ(die, channel))
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC__WRITE(die, channel, fdata) SRM_TX_GC_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC__RMW(die, channel, fdata) SRM_TX_GC_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC__MASK                       0x1
#  define SRM_TX_GC_INT__CHK_PRBS_SYNC__OFFSET                     0

#define SRM_TX_GC_INTE__ADDRESS                      0x4c24
#define SRM_TX_GC_INTE__DEFAULT                      0x0
#define SRM_TX_GC_INTE__ICOUNT                        3
#define SRM_TX_GC_INTE__ISPAN                         0x800
#define SRM_TX_GC_INTE__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_INTE__ADDRESS)
#define SRM_TX_GC_INTE__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_INTE__ADDRESS)
#define SRM_TX_GC_INTE__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_INTE__ADDRESS, (data))
#define SRM_TX_GC_INTE__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_INTE__ADDRESS, (data), (mask))
#  define SRM_TX_GC_INTE__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_TX_GC_INTE__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_TX_GC_INTE__RSRVD1__READ(die, channel)         SRM_TX_GC_INTE__RSRVD1__GET(SRM_TX_GC_INTE__READ(die, channel))
#  define SRM_TX_GC_INTE__RSRVD1__WRITE(die, channel, fdata) SRM_TX_GC_INTE__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_TX_GC_INTE__RSRVD1__RMW(die, channel, fdata) SRM_TX_GC_INTE__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_TX_GC_INTE__RSRVD1__MASK                       0x7ff
#  define SRM_TX_GC_INTE__RSRVD1__OFFSET                     5
#  define SRM_TX_GC_INTE__CHK_FIXED_PAT_SYNCE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_TX_GC_INTE__CHK_FIXED_PAT_SYNCE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_TX_GC_INTE__CHK_FIXED_PAT_SYNCE__READ(die, channel)         SRM_TX_GC_INTE__CHK_FIXED_PAT_SYNCE__GET(SRM_TX_GC_INTE__READ(die, channel))
#  define SRM_TX_GC_INTE__CHK_FIXED_PAT_SYNCE__WRITE(die, channel, fdata) SRM_TX_GC_INTE__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_GC_INTE__CHK_FIXED_PAT_SYNCE__RMW(die, channel, fdata) SRM_TX_GC_INTE__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_GC_INTE__CHK_FIXED_PAT_SYNCE__MASK                       0x1
#  define SRM_TX_GC_INTE__CHK_FIXED_PAT_SYNCE__OFFSET                     4
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__READ(die, channel)         SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__GET(SRM_TX_GC_INTE__READ(die, channel))
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__WRITE(die, channel, fdata) SRM_TX_GC_INTE__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__RMW(die, channel, fdata) SRM_TX_GC_INTE__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__MASK                       0x1
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INV_ODDE__OFFSET                     3
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNC_ODDE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNC_ODDE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNC_ODDE__READ(die, channel)         SRM_TX_GC_INTE__CHK_PRBS_SYNC_ODDE__GET(SRM_TX_GC_INTE__READ(die, channel))
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNC_ODDE__WRITE(die, channel, fdata) SRM_TX_GC_INTE__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNC_ODDE__RMW(die, channel, fdata) SRM_TX_GC_INTE__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNC_ODDE__MASK                       0x1
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNC_ODDE__OFFSET                     2
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INVE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INVE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INVE__READ(die, channel)         SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INVE__GET(SRM_TX_GC_INTE__READ(die, channel))
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INVE__WRITE(die, channel, fdata) SRM_TX_GC_INTE__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INVE__RMW(die, channel, fdata) SRM_TX_GC_INTE__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INVE__MASK                       0x1
#  define SRM_TX_GC_INTE__CHK_PRBS_POLARITY_INVE__OFFSET                     1
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNCE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNCE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNCE__READ(die, channel)         SRM_TX_GC_INTE__CHK_PRBS_SYNCE__GET(SRM_TX_GC_INTE__READ(die, channel))
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNCE__WRITE(die, channel, fdata) SRM_TX_GC_INTE__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNCE__RMW(die, channel, fdata) SRM_TX_GC_INTE__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNCE__MASK                       0x1
#  define SRM_TX_GC_INTE__CHK_PRBS_SYNCE__OFFSET                     0

#define SRM_TX_GC_INTS__ADDRESS                      0x4c25
#define SRM_TX_GC_INTS__DEFAULT                      0x0
#define SRM_TX_GC_INTS__ICOUNT                        3
#define SRM_TX_GC_INTS__ISPAN                         0x800
#define SRM_TX_GC_INTS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_INTS__ADDRESS)
#define SRM_TX_GC_INTS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_INTS__ADDRESS)
#define SRM_TX_GC_INTS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_INTS__ADDRESS, (data))
#define SRM_TX_GC_INTS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_INTS__ADDRESS, (data), (mask))
#  define SRM_TX_GC_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_TX_GC_INTS__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_TX_GC_INTS__RSRVD1__READ(die, channel)         SRM_TX_GC_INTS__RSRVD1__GET(SRM_TX_GC_INTS__READ(die, channel))
#  define SRM_TX_GC_INTS__RSRVD1__WRITE(die, channel, fdata) SRM_TX_GC_INTS__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_TX_GC_INTS__RSRVD1__RMW(die, channel, fdata) SRM_TX_GC_INTS__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_TX_GC_INTS__RSRVD1__MASK                       0x7ff
#  define SRM_TX_GC_INTS__RSRVD1__OFFSET                     5
#  define SRM_TX_GC_INTS__CHK_FIXED_PAT_SYNCS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_TX_GC_INTS__CHK_FIXED_PAT_SYNCS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_TX_GC_INTS__CHK_FIXED_PAT_SYNCS__READ(die, channel)         SRM_TX_GC_INTS__CHK_FIXED_PAT_SYNCS__GET(SRM_TX_GC_INTS__READ(die, channel))
#  define SRM_TX_GC_INTS__CHK_FIXED_PAT_SYNCS__WRITE(die, channel, fdata) SRM_TX_GC_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_GC_INTS__CHK_FIXED_PAT_SYNCS__RMW(die, channel, fdata) SRM_TX_GC_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_GC_INTS__CHK_FIXED_PAT_SYNCS__MASK                       0x1
#  define SRM_TX_GC_INTS__CHK_FIXED_PAT_SYNCS__OFFSET                     4
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__READ(die, channel)         SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__GET(SRM_TX_GC_INTS__READ(die, channel))
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__WRITE(die, channel, fdata) SRM_TX_GC_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__RMW(die, channel, fdata) SRM_TX_GC_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__MASK                       0x1
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INV_ODDS__OFFSET                     3
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNC_ODDS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNC_ODDS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNC_ODDS__READ(die, channel)         SRM_TX_GC_INTS__CHK_PRBS_SYNC_ODDS__GET(SRM_TX_GC_INTS__READ(die, channel))
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNC_ODDS__WRITE(die, channel, fdata) SRM_TX_GC_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNC_ODDS__RMW(die, channel, fdata) SRM_TX_GC_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNC_ODDS__MASK                       0x1
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNC_ODDS__OFFSET                     2
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INVS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INVS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INVS__READ(die, channel)         SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INVS__GET(SRM_TX_GC_INTS__READ(die, channel))
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INVS__WRITE(die, channel, fdata) SRM_TX_GC_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INVS__RMW(die, channel, fdata) SRM_TX_GC_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INVS__MASK                       0x1
#  define SRM_TX_GC_INTS__CHK_PRBS_POLARITY_INVS__OFFSET                     1
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNCS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNCS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNCS__READ(die, channel)         SRM_TX_GC_INTS__CHK_PRBS_SYNCS__GET(SRM_TX_GC_INTS__READ(die, channel))
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNCS__WRITE(die, channel, fdata) SRM_TX_GC_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNCS__RMW(die, channel, fdata) SRM_TX_GC_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNCS__MASK                       0x1
#  define SRM_TX_GC_INTS__CHK_PRBS_SYNCS__OFFSET                     0

#define SRM_TX_GC_INTZ__ADDRESS                      0x4c26
#define SRM_TX_GC_INTZ__DEFAULT                      0x0
#define SRM_TX_GC_INTZ__ICOUNT                        3
#define SRM_TX_GC_INTZ__ISPAN                         0x800
#define SRM_TX_GC_INTZ__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_GC_INTZ__ADDRESS)
#define SRM_TX_GC_INTZ__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_GC_INTZ__ADDRESS)
#define SRM_TX_GC_INTZ__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_GC_INTZ__ADDRESS, (data))
#define SRM_TX_GC_INTZ__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_GC_INTZ__ADDRESS, (data), (mask))
#  define SRM_TX_GC_INTZ__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SRM_TX_GC_INTZ__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SRM_TX_GC_INTZ__RSRVD1__READ(die, channel)         SRM_TX_GC_INTZ__RSRVD1__GET(SRM_TX_GC_INTZ__READ(die, channel))
#  define SRM_TX_GC_INTZ__RSRVD1__WRITE(die, channel, fdata) SRM_TX_GC_INTZ__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_TX_GC_INTZ__RSRVD1__RMW(die, channel, fdata) SRM_TX_GC_INTZ__RMW(die, (channel), (fdata)<<5, 0xffe0)
#  define SRM_TX_GC_INTZ__RSRVD1__MASK                       0x7ff
#  define SRM_TX_GC_INTZ__RSRVD1__OFFSET                     5
#  define SRM_TX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_TX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_TX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__READ(die, channel)         SRM_TX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__GET(SRM_TX_GC_INTZ__READ(die, channel))
#  define SRM_TX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__WRITE(die, channel, fdata) SRM_TX_GC_INTZ__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__RMW(die, channel, fdata) SRM_TX_GC_INTZ__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__MASK                       0x1
#  define SRM_TX_GC_INTZ__CHK_FIXED_PAT_SYNCZ__OFFSET                     4
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__READ(die, channel)         SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__GET(SRM_TX_GC_INTZ__READ(die, channel))
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__WRITE(die, channel, fdata) SRM_TX_GC_INTZ__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__RMW(die, channel, fdata) SRM_TX_GC_INTZ__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__MASK                       0x1
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INV_ODDZ__OFFSET                     3
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__READ(die, channel)         SRM_TX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__GET(SRM_TX_GC_INTZ__READ(die, channel))
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__WRITE(die, channel, fdata) SRM_TX_GC_INTZ__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__RMW(die, channel, fdata) SRM_TX_GC_INTZ__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__MASK                       0x1
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNC_ODDZ__OFFSET                     2
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__READ(die, channel)         SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__GET(SRM_TX_GC_INTZ__READ(die, channel))
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__WRITE(die, channel, fdata) SRM_TX_GC_INTZ__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__RMW(die, channel, fdata) SRM_TX_GC_INTZ__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__MASK                       0x1
#  define SRM_TX_GC_INTZ__CHK_PRBS_POLARITY_INVZ__OFFSET                     1
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNCZ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNCZ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNCZ__READ(die, channel)         SRM_TX_GC_INTZ__CHK_PRBS_SYNCZ__GET(SRM_TX_GC_INTZ__READ(die, channel))
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNCZ__WRITE(die, channel, fdata) SRM_TX_GC_INTZ__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNCZ__RMW(die, channel, fdata) SRM_TX_GC_INTZ__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNCZ__MASK                       0x1
#  define SRM_TX_GC_INTZ__CHK_PRBS_SYNCZ__OFFSET                     0

#define SRM_PLL_PLLD_FSM_CMD_CFG0__ADDRESS                      0x6052
#define SRM_PLL_PLLD_FSM_CMD_CFG0__DEFAULT                      0x0
#define SRM_PLL_PLLD_FSM_CMD_CFG0__READ(die)                  srm_reg_read(die, SRM_PLL_PLLD_FSM_CMD_CFG0__ADDRESS)
#define SRM_PLL_PLLD_FSM_CMD_CFG0__WRITE(die, data)             srm_reg_write(die, SRM_PLL_PLLD_FSM_CMD_CFG0__ADDRESS, (data))
#define SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_PLL_PLLD_FSM_CMD_CFG0__ADDRESS, (data), (mask))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__READ(die)                SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__GET(SRM_PLL_PLLD_FSM_CMD_CFG0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__OFFSET                     7
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__READ(die)                SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__GET(SRM_PLL_PLLD_FSM_CMD_CFG0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<6, 0x40)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<6, 0x40)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__OFFSET                     6
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__READ(die)                SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__GET(SRM_PLL_PLLD_FSM_CMD_CFG0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<5, 0x20)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<5, 0x20)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__OFFSET                     5
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__READ(die)                SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__GET(SRM_PLL_PLLD_FSM_CMD_CFG0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<4, 0x10)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<4, 0x10)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__OFFSET                     4
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__READ(die)                SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__GET(SRM_PLL_PLLD_FSM_CMD_CFG0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<3, 0x8)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<3, 0x8)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__OFFSET                     3
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__READ(die)                SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__GET(SRM_PLL_PLLD_FSM_CMD_CFG0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<2, 0x4)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<2, 0x4)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__OFFSET                     2
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__READ(die)                SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__GET(SRM_PLL_PLLD_FSM_CMD_CFG0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<1, 0x2)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<1, 0x2)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__OFFSET                     1
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__READ(die)                SRM_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__GET(SRM_PLL_PLLD_FSM_CMD_CFG0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__OFFSET                     0

#define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__ADDRESS                      0x6054
#define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__DEFAULT                      0x0
#define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__READ(die)                  srm_reg_read(die, SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__ADDRESS)
#define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__WRITE(die, data)             srm_reg_write(die, SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__ADDRESS, (data))
#define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__ADDRESS, (data), (mask))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT_DIV__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT_DIV__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT_DIV__READ(die)                SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT_DIV__GET(SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT_DIV__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT_DIV__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT_DIV__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT_DIV__OFFSET                     7
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT__READ(die)                SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT__GET(SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<6, 0x40)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<6, 0x40)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCNT__OFFSET                     6
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCAL__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCAL__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCAL__READ(die)                SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCAL__GET(SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCAL__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<5, 0x20)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCAL__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<5, 0x20)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCAL__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCAL__OFFSET                     5
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCX__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCX__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCX__READ(die)                SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCX__GET(SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCX__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<4, 0x10)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCX__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<4, 0x10)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCX__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCX__OFFSET                     4
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCC__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCC__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCC__READ(die)                SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCC__GET(SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCC__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<3, 0x8)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCC__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<3, 0x8)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCC__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCC__OFFSET                     3
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCF__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCF__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCF__READ(die)                SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCF__GET(SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCF__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<2, 0x4)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCF__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<2, 0x4)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCF__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCF__OFFSET                     2
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCH__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCH__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCH__READ(die)                SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCH__GET(SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCH__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<1, 0x2)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCH__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<1, 0x2)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCH__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__FCH__OFFSET                     1
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__PLL_LOCK__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__PLL_LOCK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__PLL_LOCK__READ(die)                SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__PLL_LOCK__GET(SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__READ(die))
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__PLL_LOCK__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__PLL_LOCK__RMW(die, fdata)           SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__PLL_LOCK__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_CMD_FSM_DONE_STATUS0__PLL_LOCK__OFFSET                     0

#define SRM_PLL_PLLD_FSM_INTS__ADDRESS                      0x607b
#define SRM_PLL_PLLD_FSM_INTS__DEFAULT                      0x0
#define SRM_PLL_PLLD_FSM_INTS__READ(die)                  srm_reg_read(die, SRM_PLL_PLLD_FSM_INTS__ADDRESS)
#define SRM_PLL_PLLD_FSM_INTS__WRITE(die, data)             srm_reg_write(die, SRM_PLL_PLLD_FSM_INTS__ADDRESS, (data))
#define SRM_PLL_PLLD_FSM_INTS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_PLL_PLLD_FSM_INTS__ADDRESS, (data), (mask))
#  define SRM_PLL_PLLD_FSM_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SRM_PLL_PLLD_FSM_INTS__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SRM_PLL_PLLD_FSM_INTS__RSRVD1__READ(die)                SRM_PLL_PLLD_FSM_INTS__RSRVD1__GET(SRM_PLL_PLLD_FSM_INTS__READ(die))
#  define SRM_PLL_PLLD_FSM_INTS__RSRVD1__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_INTS__RMW(die, (fdata)<<2, 0xfc)
#  define SRM_PLL_PLLD_FSM_INTS__RSRVD1__RMW(die, fdata)           SRM_PLL_PLLD_FSM_INTS__RMW(die, (fdata)<<2, 0xfc)
#  define SRM_PLL_PLLD_FSM_INTS__RSRVD1__MASK                       0x3f
#  define SRM_PLL_PLLD_FSM_INTS__RSRVD1__OFFSET                     2
#  define SRM_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__READ(die)                SRM_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__GET(SRM_PLL_PLLD_FSM_INTS__READ(die))
#  define SRM_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_INTS__RMW(die, (fdata)<<1, 0x2)
#  define SRM_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__RMW(die, fdata)           SRM_PLL_PLLD_FSM_INTS__RMW(die, (fdata)<<1, 0x2)
#  define SRM_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__OFFSET                     1
#  define SRM_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__READ(die)                SRM_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__GET(SRM_PLL_PLLD_FSM_INTS__READ(die))
#  define SRM_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__WRITE(die, fdata)           SRM_PLL_PLLD_FSM_INTS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__RMW(die, fdata)           SRM_PLL_PLLD_FSM_INTS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__MASK                       0x1
#  define SRM_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__OFFSET                     0

#define SRM_PLL_PLLD_FBDSM_CFG0__ADDRESS                      0x6098
#define SRM_PLL_PLLD_FBDSM_CFG0__DEFAULT                      0x0
#define SRM_PLL_PLLD_FBDSM_CFG0__READ(die)                  srm_reg_read(die, SRM_PLL_PLLD_FBDSM_CFG0__ADDRESS)
#define SRM_PLL_PLLD_FBDSM_CFG0__WRITE(die, data)             srm_reg_write(die, SRM_PLL_PLLD_FBDSM_CFG0__ADDRESS, (data))
#define SRM_PLL_PLLD_FBDSM_CFG0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_PLL_PLLD_FBDSM_CFG0__ADDRESS, (data), (mask))
#  define SRM_PLL_PLLD_FBDSM_CFG0__NN_B7_0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_PLL_PLLD_FBDSM_CFG0__NN_B7_0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_PLL_PLLD_FBDSM_CFG0__NN_B7_0__READ(die)                SRM_PLL_PLLD_FBDSM_CFG0__NN_B7_0__GET(SRM_PLL_PLLD_FBDSM_CFG0__READ(die))
#  define SRM_PLL_PLLD_FBDSM_CFG0__NN_B7_0__WRITE(die, fdata)           SRM_PLL_PLLD_FBDSM_CFG0__RMW(die, (fdata)<<0, 0xff)
#  define SRM_PLL_PLLD_FBDSM_CFG0__NN_B7_0__RMW(die, fdata)           SRM_PLL_PLLD_FBDSM_CFG0__RMW(die, (fdata)<<0, 0xff)
#  define SRM_PLL_PLLD_FBDSM_CFG0__NN_B7_0__MASK                       0xff
#  define SRM_PLL_PLLD_FBDSM_CFG0__NN_B7_0__OFFSET                     0

#define SRM_PLL_PLLD_FBDSM_CFG1__ADDRESS                      0x6099
#define SRM_PLL_PLLD_FBDSM_CFG1__DEFAULT                      0x0
#define SRM_PLL_PLLD_FBDSM_CFG1__READ(die)                  srm_reg_read(die, SRM_PLL_PLLD_FBDSM_CFG1__ADDRESS)
#define SRM_PLL_PLLD_FBDSM_CFG1__WRITE(die, data)             srm_reg_write(die, SRM_PLL_PLLD_FBDSM_CFG1__ADDRESS, (data))
#define SRM_PLL_PLLD_FBDSM_CFG1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_PLL_PLLD_FBDSM_CFG1__ADDRESS, (data), (mask))
#  define SRM_PLL_PLLD_FBDSM_CFG1__NN_B15_8__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_PLL_PLLD_FBDSM_CFG1__NN_B15_8__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_PLL_PLLD_FBDSM_CFG1__NN_B15_8__READ(die)                SRM_PLL_PLLD_FBDSM_CFG1__NN_B15_8__GET(SRM_PLL_PLLD_FBDSM_CFG1__READ(die))
#  define SRM_PLL_PLLD_FBDSM_CFG1__NN_B15_8__WRITE(die, fdata)           SRM_PLL_PLLD_FBDSM_CFG1__RMW(die, (fdata)<<0, 0xff)
#  define SRM_PLL_PLLD_FBDSM_CFG1__NN_B15_8__RMW(die, fdata)           SRM_PLL_PLLD_FBDSM_CFG1__RMW(die, (fdata)<<0, 0xff)
#  define SRM_PLL_PLLD_FBDSM_CFG1__NN_B15_8__MASK                       0xff
#  define SRM_PLL_PLLD_FBDSM_CFG1__NN_B15_8__OFFSET                     0

#define SRM_PLL_PLLD_FBDSM_CFG2__ADDRESS                      0x609a
#define SRM_PLL_PLLD_FBDSM_CFG2__DEFAULT                      0x0
#define SRM_PLL_PLLD_FBDSM_CFG2__READ(die)                  srm_reg_read(die, SRM_PLL_PLLD_FBDSM_CFG2__ADDRESS)
#define SRM_PLL_PLLD_FBDSM_CFG2__WRITE(die, data)             srm_reg_write(die, SRM_PLL_PLLD_FBDSM_CFG2__ADDRESS, (data))
#define SRM_PLL_PLLD_FBDSM_CFG2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_PLL_PLLD_FBDSM_CFG2__ADDRESS, (data), (mask))
#  define SRM_PLL_PLLD_FBDSM_CFG2__NN_B23_16__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_PLL_PLLD_FBDSM_CFG2__NN_B23_16__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_PLL_PLLD_FBDSM_CFG2__NN_B23_16__READ(die)                SRM_PLL_PLLD_FBDSM_CFG2__NN_B23_16__GET(SRM_PLL_PLLD_FBDSM_CFG2__READ(die))
#  define SRM_PLL_PLLD_FBDSM_CFG2__NN_B23_16__WRITE(die, fdata)           SRM_PLL_PLLD_FBDSM_CFG2__RMW(die, (fdata)<<0, 0xff)
#  define SRM_PLL_PLLD_FBDSM_CFG2__NN_B23_16__RMW(die, fdata)           SRM_PLL_PLLD_FBDSM_CFG2__RMW(die, (fdata)<<0, 0xff)
#  define SRM_PLL_PLLD_FBDSM_CFG2__NN_B23_16__MASK                       0xff
#  define SRM_PLL_PLLD_FBDSM_CFG2__NN_B23_16__OFFSET                     0

#define SRM_PLL_PLLD_FBDSM_CFG3__ADDRESS                      0x609b
#define SRM_PLL_PLLD_FBDSM_CFG3__DEFAULT                      0x0
#define SRM_PLL_PLLD_FBDSM_CFG3__READ(die)                  srm_reg_read(die, SRM_PLL_PLLD_FBDSM_CFG3__ADDRESS)
#define SRM_PLL_PLLD_FBDSM_CFG3__WRITE(die, data)             srm_reg_write(die, SRM_PLL_PLLD_FBDSM_CFG3__ADDRESS, (data))
#define SRM_PLL_PLLD_FBDSM_CFG3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_PLL_PLLD_FBDSM_CFG3__ADDRESS, (data), (mask))
#  define SRM_PLL_PLLD_FBDSM_CFG3__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SRM_PLL_PLLD_FBDSM_CFG3__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SRM_PLL_PLLD_FBDSM_CFG3__RSRVD1__READ(die)                SRM_PLL_PLLD_FBDSM_CFG3__RSRVD1__GET(SRM_PLL_PLLD_FBDSM_CFG3__READ(die))
#  define SRM_PLL_PLLD_FBDSM_CFG3__RSRVD1__WRITE(die, fdata)           SRM_PLL_PLLD_FBDSM_CFG3__RMW(die, (fdata)<<1, 0xfe)
#  define SRM_PLL_PLLD_FBDSM_CFG3__RSRVD1__RMW(die, fdata)           SRM_PLL_PLLD_FBDSM_CFG3__RMW(die, (fdata)<<1, 0xfe)
#  define SRM_PLL_PLLD_FBDSM_CFG3__RSRVD1__MASK                       0x7f
#  define SRM_PLL_PLLD_FBDSM_CFG3__RSRVD1__OFFSET                     1
#  define SRM_PLL_PLLD_FBDSM_CFG3__NN_B24__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_PLL_PLLD_FBDSM_CFG3__NN_B24__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_PLL_PLLD_FBDSM_CFG3__NN_B24__READ(die)                SRM_PLL_PLLD_FBDSM_CFG3__NN_B24__GET(SRM_PLL_PLLD_FBDSM_CFG3__READ(die))
#  define SRM_PLL_PLLD_FBDSM_CFG3__NN_B24__WRITE(die, fdata)           SRM_PLL_PLLD_FBDSM_CFG3__RMW(die, (fdata)<<0, 0x1)
#  define SRM_PLL_PLLD_FBDSM_CFG3__NN_B24__RMW(die, fdata)           SRM_PLL_PLLD_FBDSM_CFG3__RMW(die, (fdata)<<0, 0x1)
#  define SRM_PLL_PLLD_FBDSM_CFG3__NN_B24__MASK                       0x1
#  define SRM_PLL_PLLD_FBDSM_CFG3__NN_B24__OFFSET                     0

#define SRM_PLL_PLLD_FBDSM_CFG8__ADDRESS                      0x60a0
#define SRM_PLL_PLLD_FBDSM_CFG8__DEFAULT                      0x0
#define SRM_PLL_PLLD_FBDSM_CFG8__READ(die)                  srm_reg_read(die, SRM_PLL_PLLD_FBDSM_CFG8__ADDRESS)
#define SRM_PLL_PLLD_FBDSM_CFG8__WRITE(die, data)             srm_reg_write(die, SRM_PLL_PLLD_FBDSM_CFG8__ADDRESS, (data))
#define SRM_PLL_PLLD_FBDSM_CFG8__RMW(die, data, mask)         srm_reg_rmw(die, SRM_PLL_PLLD_FBDSM_CFG8__ADDRESS, (data), (mask))
#  define SRM_PLL_PLLD_FBDSM_CFG8__MM__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_PLL_PLLD_FBDSM_CFG8__MM__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_PLL_PLLD_FBDSM_CFG8__MM__READ(die)                SRM_PLL_PLLD_FBDSM_CFG8__MM__GET(SRM_PLL_PLLD_FBDSM_CFG8__READ(die))
#  define SRM_PLL_PLLD_FBDSM_CFG8__MM__WRITE(die, fdata)           SRM_PLL_PLLD_FBDSM_CFG8__RMW(die, (fdata)<<0, 0xff)
#  define SRM_PLL_PLLD_FBDSM_CFG8__MM__RMW(die, fdata)           SRM_PLL_PLLD_FBDSM_CFG8__RMW(die, (fdata)<<0, 0xff)
#  define SRM_PLL_PLLD_FBDSM_CFG8__MM__MASK                       0xff
#  define SRM_PLL_PLLD_FBDSM_CFG8__MM__OFFSET                     0

#define SRM_BIAS_ENB_ICAL__ADDRESS                      0x6125
#define SRM_BIAS_ENB_ICAL__DEFAULT                      0x5
#define SRM_BIAS_ENB_ICAL__READ(die)                  srm_reg_read(die, SRM_BIAS_ENB_ICAL__ADDRESS)
#define SRM_BIAS_ENB_ICAL__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_ENB_ICAL__ADDRESS, (data))
#define SRM_BIAS_ENB_ICAL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_ENB_ICAL__ADDRESS, (data), (mask))
#  define SRM_BIAS_ENB_ICAL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xf8))
#  define SRM_BIAS_ENB_ICAL__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1f)
#  define SRM_BIAS_ENB_ICAL__RSRVD1__READ(die)                SRM_BIAS_ENB_ICAL__RSRVD1__GET(SRM_BIAS_ENB_ICAL__READ(die))
#  define SRM_BIAS_ENB_ICAL__RSRVD1__WRITE(die, fdata)           SRM_BIAS_ENB_ICAL__RMW(die, (fdata)<<3, 0xf8)
#  define SRM_BIAS_ENB_ICAL__RSRVD1__RMW(die, fdata)           SRM_BIAS_ENB_ICAL__RMW(die, (fdata)<<3, 0xf8)
#  define SRM_BIAS_ENB_ICAL__RSRVD1__MASK                       0x1f
#  define SRM_BIAS_ENB_ICAL__RSRVD1__OFFSET                     3
#  define SRM_BIAS_ENB_ICAL__ENB_ICAL__SET(rdata, fdata)         (((rdata) & 0xf8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SRM_BIAS_ENB_ICAL__ENB_ICAL__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SRM_BIAS_ENB_ICAL__ENB_ICAL__READ(die)                SRM_BIAS_ENB_ICAL__ENB_ICAL__GET(SRM_BIAS_ENB_ICAL__READ(die))
#  define SRM_BIAS_ENB_ICAL__ENB_ICAL__WRITE(die, fdata)           SRM_BIAS_ENB_ICAL__RMW(die, (fdata)<<0, 0x7)
#  define SRM_BIAS_ENB_ICAL__ENB_ICAL__RMW(die, fdata)           SRM_BIAS_ENB_ICAL__RMW(die, (fdata)<<0, 0x7)
#  define SRM_BIAS_ENB_ICAL__ENB_ICAL__MASK                       0x7
#  define SRM_BIAS_ENB_ICAL__ENB_ICAL__OFFSET                     0

#define SRM_BIAS_SET_LDO0__ADDRESS                      0x6126
#define SRM_BIAS_SET_LDO0__DEFAULT                      0xdc
#define SRM_BIAS_SET_LDO0__READ(die)                  srm_reg_read(die, SRM_BIAS_SET_LDO0__ADDRESS)
#define SRM_BIAS_SET_LDO0__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_SET_LDO0__ADDRESS, (data))
#define SRM_BIAS_SET_LDO0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_SET_LDO0__ADDRESS, (data), (mask))
#  define SRM_BIAS_SET_LDO0__OVWR_LDO0__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_SET_LDO0__OVWR_LDO0__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_SET_LDO0__OVWR_LDO0__READ(die)                SRM_BIAS_SET_LDO0__OVWR_LDO0__GET(SRM_BIAS_SET_LDO0__READ(die))
#  define SRM_BIAS_SET_LDO0__OVWR_LDO0__WRITE(die, fdata)           SRM_BIAS_SET_LDO0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_LDO0__OVWR_LDO0__RMW(die, fdata)           SRM_BIAS_SET_LDO0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_LDO0__OVWR_LDO0__MASK                       0x1
#  define SRM_BIAS_SET_LDO0__OVWR_LDO0__OFFSET                     7
#  define SRM_BIAS_SET_LDO0__SET_LDO0__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_BIAS_SET_LDO0__SET_LDO0__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_BIAS_SET_LDO0__SET_LDO0__READ(die)                SRM_BIAS_SET_LDO0__SET_LDO0__GET(SRM_BIAS_SET_LDO0__READ(die))
#  define SRM_BIAS_SET_LDO0__SET_LDO0__WRITE(die, fdata)           SRM_BIAS_SET_LDO0__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_SET_LDO0__SET_LDO0__RMW(die, fdata)           SRM_BIAS_SET_LDO0__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_SET_LDO0__SET_LDO0__MASK                       0x7f
#  define SRM_BIAS_SET_LDO0__SET_LDO0__OFFSET                     0

#define SRM_BIAS_STATUS_LDO0__ADDRESS                      0x6127
#define SRM_BIAS_STATUS_LDO0__DEFAULT                      0x0
#define SRM_BIAS_STATUS_LDO0__READ(die)                  srm_reg_read(die, SRM_BIAS_STATUS_LDO0__ADDRESS)
#define SRM_BIAS_STATUS_LDO0__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_STATUS_LDO0__ADDRESS, (data))
#define SRM_BIAS_STATUS_LDO0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_STATUS_LDO0__ADDRESS, (data), (mask))
#  define SRM_BIAS_STATUS_LDO0__CAL_LDO0_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_STATUS_LDO0__CAL_LDO0_SUCCESSFUL__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_STATUS_LDO0__CAL_LDO0_SUCCESSFUL__READ(die)                SRM_BIAS_STATUS_LDO0__CAL_LDO0_SUCCESSFUL__GET(SRM_BIAS_STATUS_LDO0__READ(die))
#  define SRM_BIAS_STATUS_LDO0__CAL_LDO0_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_STATUS_LDO0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_LDO0__CAL_LDO0_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_STATUS_LDO0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_LDO0__CAL_LDO0_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_STATUS_LDO0__CAL_LDO0_SUCCESSFUL__OFFSET                     7
#  define SRM_BIAS_STATUS_LDO0__STATUS_LDO0__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_BIAS_STATUS_LDO0__STATUS_LDO0__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_BIAS_STATUS_LDO0__STATUS_LDO0__READ(die)                SRM_BIAS_STATUS_LDO0__STATUS_LDO0__GET(SRM_BIAS_STATUS_LDO0__READ(die))
#  define SRM_BIAS_STATUS_LDO0__STATUS_LDO0__WRITE(die, fdata)           SRM_BIAS_STATUS_LDO0__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_STATUS_LDO0__STATUS_LDO0__RMW(die, fdata)           SRM_BIAS_STATUS_LDO0__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_STATUS_LDO0__STATUS_LDO0__MASK                       0x7f
#  define SRM_BIAS_STATUS_LDO0__STATUS_LDO0__OFFSET                     0

#define SRM_BIAS_SET_LDO10__ADDRESS                      0x613a
#define SRM_BIAS_SET_LDO10__DEFAULT                      0xdc
#define SRM_BIAS_SET_LDO10__READ(die)                  srm_reg_read(die, SRM_BIAS_SET_LDO10__ADDRESS)
#define SRM_BIAS_SET_LDO10__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_SET_LDO10__ADDRESS, (data))
#define SRM_BIAS_SET_LDO10__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_SET_LDO10__ADDRESS, (data), (mask))
#  define SRM_BIAS_SET_LDO10__OVWR_LDO10__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_SET_LDO10__OVWR_LDO10__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_SET_LDO10__OVWR_LDO10__READ(die)                SRM_BIAS_SET_LDO10__OVWR_LDO10__GET(SRM_BIAS_SET_LDO10__READ(die))
#  define SRM_BIAS_SET_LDO10__OVWR_LDO10__WRITE(die, fdata)           SRM_BIAS_SET_LDO10__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_LDO10__OVWR_LDO10__RMW(die, fdata)           SRM_BIAS_SET_LDO10__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_LDO10__OVWR_LDO10__MASK                       0x1
#  define SRM_BIAS_SET_LDO10__OVWR_LDO10__OFFSET                     7
#  define SRM_BIAS_SET_LDO10__SET_LDO10__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_BIAS_SET_LDO10__SET_LDO10__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_BIAS_SET_LDO10__SET_LDO10__READ(die)                SRM_BIAS_SET_LDO10__SET_LDO10__GET(SRM_BIAS_SET_LDO10__READ(die))
#  define SRM_BIAS_SET_LDO10__SET_LDO10__WRITE(die, fdata)           SRM_BIAS_SET_LDO10__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_SET_LDO10__SET_LDO10__RMW(die, fdata)           SRM_BIAS_SET_LDO10__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_SET_LDO10__SET_LDO10__MASK                       0x7f
#  define SRM_BIAS_SET_LDO10__SET_LDO10__OFFSET                     0

#define SRM_BIAS_STATUS_LDO10__ADDRESS                      0x613b
#define SRM_BIAS_STATUS_LDO10__DEFAULT                      0x0
#define SRM_BIAS_STATUS_LDO10__READ(die)                  srm_reg_read(die, SRM_BIAS_STATUS_LDO10__ADDRESS)
#define SRM_BIAS_STATUS_LDO10__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_STATUS_LDO10__ADDRESS, (data))
#define SRM_BIAS_STATUS_LDO10__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_STATUS_LDO10__ADDRESS, (data), (mask))
#  define SRM_BIAS_STATUS_LDO10__CAL_LDO10_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_STATUS_LDO10__CAL_LDO10_SUCCESSFUL__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_STATUS_LDO10__CAL_LDO10_SUCCESSFUL__READ(die)                SRM_BIAS_STATUS_LDO10__CAL_LDO10_SUCCESSFUL__GET(SRM_BIAS_STATUS_LDO10__READ(die))
#  define SRM_BIAS_STATUS_LDO10__CAL_LDO10_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_STATUS_LDO10__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_LDO10__CAL_LDO10_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_STATUS_LDO10__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_LDO10__CAL_LDO10_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_STATUS_LDO10__CAL_LDO10_SUCCESSFUL__OFFSET                     7
#  define SRM_BIAS_STATUS_LDO10__STATUS_LDO10__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_BIAS_STATUS_LDO10__STATUS_LDO10__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_BIAS_STATUS_LDO10__STATUS_LDO10__READ(die)                SRM_BIAS_STATUS_LDO10__STATUS_LDO10__GET(SRM_BIAS_STATUS_LDO10__READ(die))
#  define SRM_BIAS_STATUS_LDO10__STATUS_LDO10__WRITE(die, fdata)           SRM_BIAS_STATUS_LDO10__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_STATUS_LDO10__STATUS_LDO10__RMW(die, fdata)           SRM_BIAS_STATUS_LDO10__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_STATUS_LDO10__STATUS_LDO10__MASK                       0x7f
#  define SRM_BIAS_STATUS_LDO10__STATUS_LDO10__OFFSET                     0

#define SRM_BIAS_SET_LDO_REF_INP__ADDRESS                      0x613c
#define SRM_BIAS_SET_LDO_REF_INP__DEFAULT                      0xdc
#define SRM_BIAS_SET_LDO_REF_INP__READ(die)                  srm_reg_read(die, SRM_BIAS_SET_LDO_REF_INP__ADDRESS)
#define SRM_BIAS_SET_LDO_REF_INP__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_SET_LDO_REF_INP__ADDRESS, (data))
#define SRM_BIAS_SET_LDO_REF_INP__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_SET_LDO_REF_INP__ADDRESS, (data), (mask))
#  define SRM_BIAS_SET_LDO_REF_INP__OVWR_SET_LDO__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_SET_LDO_REF_INP__OVWR_SET_LDO__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_SET_LDO_REF_INP__OVWR_SET_LDO__READ(die)                SRM_BIAS_SET_LDO_REF_INP__OVWR_SET_LDO__GET(SRM_BIAS_SET_LDO_REF_INP__READ(die))
#  define SRM_BIAS_SET_LDO_REF_INP__OVWR_SET_LDO__WRITE(die, fdata)           SRM_BIAS_SET_LDO_REF_INP__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_LDO_REF_INP__OVWR_SET_LDO__RMW(die, fdata)           SRM_BIAS_SET_LDO_REF_INP__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_LDO_REF_INP__OVWR_SET_LDO__MASK                       0x1
#  define SRM_BIAS_SET_LDO_REF_INP__OVWR_SET_LDO__OFFSET                     7
#  define SRM_BIAS_SET_LDO_REF_INP__SET_LDO_REF_INP__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_BIAS_SET_LDO_REF_INP__SET_LDO_REF_INP__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_BIAS_SET_LDO_REF_INP__SET_LDO_REF_INP__READ(die)                SRM_BIAS_SET_LDO_REF_INP__SET_LDO_REF_INP__GET(SRM_BIAS_SET_LDO_REF_INP__READ(die))
#  define SRM_BIAS_SET_LDO_REF_INP__SET_LDO_REF_INP__WRITE(die, fdata)           SRM_BIAS_SET_LDO_REF_INP__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_SET_LDO_REF_INP__SET_LDO_REF_INP__RMW(die, fdata)           SRM_BIAS_SET_LDO_REF_INP__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_SET_LDO_REF_INP__SET_LDO_REF_INP__MASK                       0x7f
#  define SRM_BIAS_SET_LDO_REF_INP__SET_LDO_REF_INP__OFFSET                     0

#define SRM_BIAS_LDO_CNTL0_LOW__ADDRESS                      0x6142
#define SRM_BIAS_LDO_CNTL0_LOW__DEFAULT                      0x0
#define SRM_BIAS_LDO_CNTL0_LOW__READ(die)                  srm_reg_read(die, SRM_BIAS_LDO_CNTL0_LOW__ADDRESS)
#define SRM_BIAS_LDO_CNTL0_LOW__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_LDO_CNTL0_LOW__ADDRESS, (data))
#define SRM_BIAS_LDO_CNTL0_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_LDO_CNTL0_LOW__ADDRESS, (data), (mask))
#  define SRM_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__READ(die)                SRM_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__GET(SRM_BIAS_LDO_CNTL0_LOW__READ(die))
#  define SRM_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__WRITE(die, fdata)           SRM_BIAS_LDO_CNTL0_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__RMW(die, fdata)           SRM_BIAS_LDO_CNTL0_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__MASK                       0xff
#  define SRM_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__OFFSET                     0

#define SRM_BIAS_LDO_CNTL10_LOW__ADDRESS                      0x6156
#define SRM_BIAS_LDO_CNTL10_LOW__DEFAULT                      0x0
#define SRM_BIAS_LDO_CNTL10_LOW__READ(die)                  srm_reg_read(die, SRM_BIAS_LDO_CNTL10_LOW__ADDRESS)
#define SRM_BIAS_LDO_CNTL10_LOW__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_LDO_CNTL10_LOW__ADDRESS, (data))
#define SRM_BIAS_LDO_CNTL10_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_LDO_CNTL10_LOW__ADDRESS, (data), (mask))
#  define SRM_BIAS_LDO_CNTL10_LOW__LDO_CNTL10__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_LDO_CNTL10_LOW__LDO_CNTL10__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_LDO_CNTL10_LOW__LDO_CNTL10__READ(die)                SRM_BIAS_LDO_CNTL10_LOW__LDO_CNTL10__GET(SRM_BIAS_LDO_CNTL10_LOW__READ(die))
#  define SRM_BIAS_LDO_CNTL10_LOW__LDO_CNTL10__WRITE(die, fdata)           SRM_BIAS_LDO_CNTL10_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_LDO_CNTL10_LOW__LDO_CNTL10__RMW(die, fdata)           SRM_BIAS_LDO_CNTL10_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_LDO_CNTL10_LOW__LDO_CNTL10__MASK                       0xff
#  define SRM_BIAS_LDO_CNTL10_LOW__LDO_CNTL10__OFFSET                     0

#define SRM_BIAS_LDO_CNTL11_LOW__ADDRESS                      0x6158
#define SRM_BIAS_LDO_CNTL11_LOW__DEFAULT                      0x40
#define SRM_BIAS_LDO_CNTL11_LOW__READ(die)                  srm_reg_read(die, SRM_BIAS_LDO_CNTL11_LOW__ADDRESS)
#define SRM_BIAS_LDO_CNTL11_LOW__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_LDO_CNTL11_LOW__ADDRESS, (data))
#define SRM_BIAS_LDO_CNTL11_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_LDO_CNTL11_LOW__ADDRESS, (data), (mask))
#  define SRM_BIAS_LDO_CNTL11_LOW__LDO_CNTL11__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_LDO_CNTL11_LOW__LDO_CNTL11__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_LDO_CNTL11_LOW__LDO_CNTL11__READ(die)                SRM_BIAS_LDO_CNTL11_LOW__LDO_CNTL11__GET(SRM_BIAS_LDO_CNTL11_LOW__READ(die))
#  define SRM_BIAS_LDO_CNTL11_LOW__LDO_CNTL11__WRITE(die, fdata)           SRM_BIAS_LDO_CNTL11_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_LDO_CNTL11_LOW__LDO_CNTL11__RMW(die, fdata)           SRM_BIAS_LDO_CNTL11_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_LDO_CNTL11_LOW__LDO_CNTL11__MASK                       0xff
#  define SRM_BIAS_LDO_CNTL11_LOW__LDO_CNTL11__OFFSET                     0

#define SRM_BIAS_LDO_LTCH_EN_LOW__ADDRESS                      0x615a
#define SRM_BIAS_LDO_LTCH_EN_LOW__DEFAULT                      0x0
#define SRM_BIAS_LDO_LTCH_EN_LOW__READ(die)                  srm_reg_read(die, SRM_BIAS_LDO_LTCH_EN_LOW__ADDRESS)
#define SRM_BIAS_LDO_LTCH_EN_LOW__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_LDO_LTCH_EN_LOW__ADDRESS, (data))
#define SRM_BIAS_LDO_LTCH_EN_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_LDO_LTCH_EN_LOW__ADDRESS, (data), (mask))
#  define SRM_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__READ(die)                SRM_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__GET(SRM_BIAS_LDO_LTCH_EN_LOW__READ(die))
#  define SRM_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__WRITE(die, fdata)           SRM_BIAS_LDO_LTCH_EN_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__RMW(die, fdata)           SRM_BIAS_LDO_LTCH_EN_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__MASK                       0xff
#  define SRM_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__OFFSET                     0

#define SRM_BIAS_LDO_LTCH_EN_HIGH__ADDRESS                      0x615b
#define SRM_BIAS_LDO_LTCH_EN_HIGH__DEFAULT                      0x0
#define SRM_BIAS_LDO_LTCH_EN_HIGH__READ(die)                  srm_reg_read(die, SRM_BIAS_LDO_LTCH_EN_HIGH__ADDRESS)
#define SRM_BIAS_LDO_LTCH_EN_HIGH__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_LDO_LTCH_EN_HIGH__ADDRESS, (data))
#define SRM_BIAS_LDO_LTCH_EN_HIGH__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_LDO_LTCH_EN_HIGH__ADDRESS, (data), (mask))
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__RSRVD1__READ(die)                SRM_BIAS_LDO_LTCH_EN_HIGH__RSRVD1__GET(SRM_BIAS_LDO_LTCH_EN_HIGH__READ(die))
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__RSRVD1__WRITE(die, fdata)           SRM_BIAS_LDO_LTCH_EN_HIGH__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__RSRVD1__RMW(die, fdata)           SRM_BIAS_LDO_LTCH_EN_HIGH__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__RSRVD1__MASK                       0xf
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__RSRVD1__OFFSET                     4
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__READ(die)                SRM_BIAS_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__GET(SRM_BIAS_LDO_LTCH_EN_HIGH__READ(die))
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__WRITE(die, fdata)           SRM_BIAS_LDO_LTCH_EN_HIGH__RMW(die, (fdata)<<0, 0xf)
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__RMW(die, fdata)           SRM_BIAS_LDO_LTCH_EN_HIGH__RMW(die, (fdata)<<0, 0xf)
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__MASK                       0xf
#  define SRM_BIAS_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__OFFSET                     0

#define SRM_BIAS_REFEGEN_CNTL1__ADDRESS                      0x615c
#define SRM_BIAS_REFEGEN_CNTL1__DEFAULT                      0x0
#define SRM_BIAS_REFEGEN_CNTL1__READ(die)                  srm_reg_read(die, SRM_BIAS_REFEGEN_CNTL1__ADDRESS)
#define SRM_BIAS_REFEGEN_CNTL1__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_REFEGEN_CNTL1__ADDRESS, (data))
#define SRM_BIAS_REFEGEN_CNTL1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_REFEGEN_CNTL1__ADDRESS, (data), (mask))
#  define SRM_BIAS_REFEGEN_CNTL1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_REFEGEN_CNTL1__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL1__RSRVD1__READ(die)                SRM_BIAS_REFEGEN_CNTL1__RSRVD1__GET(SRM_BIAS_REFEGEN_CNTL1__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL1__RSRVD1__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_REFEGEN_CNTL1__RSRVD1__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_REFEGEN_CNTL1__RSRVD1__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL1__RSRVD1__OFFSET                     7
#  define SRM_BIAS_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__READ(die)                SRM_BIAS_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__GET(SRM_BIAS_REFEGEN_CNTL1__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__OFFSET                     6
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IADC__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IADC__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IADC__READ(die)                SRM_BIAS_REFEGEN_CNTL1__PU_IADC__GET(SRM_BIAS_REFEGEN_CNTL1__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IADC__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<5, 0x20)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IADC__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<5, 0x20)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IADC__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IADC__OFFSET                     5
#  define SRM_BIAS_REFEGEN_CNTL1__PU_LDO_CAL__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_BIAS_REFEGEN_CNTL1__PU_LDO_CAL__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_LDO_CAL__READ(die)                SRM_BIAS_REFEGEN_CNTL1__PU_LDO_CAL__GET(SRM_BIAS_REFEGEN_CNTL1__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL1__PU_LDO_CAL__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_LDO_CAL__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_LDO_CAL__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL1__PU_LDO_CAL__OFFSET                     4
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPTAT__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPTAT__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPTAT__READ(die)                SRM_BIAS_REFEGEN_CNTL1__PU_IPTAT__GET(SRM_BIAS_REFEGEN_CNTL1__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPTAT__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPTAT__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPTAT__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPTAT__OFFSET                     3
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPOLY__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPOLY__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPOLY__READ(die)                SRM_BIAS_REFEGEN_CNTL1__PU_IPOLY__GET(SRM_BIAS_REFEGEN_CNTL1__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPOLY__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPOLY__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPOLY__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL1__PU_IPOLY__OFFSET                     2
#  define SRM_BIAS_REFEGEN_CNTL1__PU_ICONST__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_BIAS_REFEGEN_CNTL1__PU_ICONST__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_ICONST__READ(die)                SRM_BIAS_REFEGEN_CNTL1__PU_ICONST__GET(SRM_BIAS_REFEGEN_CNTL1__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL1__PU_ICONST__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_ICONST__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_ICONST__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL1__PU_ICONST__OFFSET                     1
#  define SRM_BIAS_REFEGEN_CNTL1__PU_REFGEN_LDO__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_BIAS_REFEGEN_CNTL1__PU_REFGEN_LDO__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_REFGEN_LDO__READ(die)                SRM_BIAS_REFEGEN_CNTL1__PU_REFGEN_LDO__GET(SRM_BIAS_REFEGEN_CNTL1__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL1__PU_REFGEN_LDO__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_REFGEN_LDO__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFEGEN_CNTL1__PU_REFGEN_LDO__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL1__PU_REFGEN_LDO__OFFSET                     0

#define SRM_BIAS_REFEGEN_CNTL3__ADDRESS                      0x615e
#define SRM_BIAS_REFEGEN_CNTL3__DEFAULT                      0x1e
#define SRM_BIAS_REFEGEN_CNTL3__READ(die)                  srm_reg_read(die, SRM_BIAS_REFEGEN_CNTL3__ADDRESS)
#define SRM_BIAS_REFEGEN_CNTL3__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_REFEGEN_CNTL3__ADDRESS, (data))
#define SRM_BIAS_REFEGEN_CNTL3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_REFEGEN_CNTL3__ADDRESS, (data), (mask))
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_RCAL__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_RCAL__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_RCAL__READ(die)                SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_RCAL__GET(SRM_BIAS_REFEGEN_CNTL3__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_RCAL__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_RCAL__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_RCAL__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_RCAL__OFFSET                     7
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_IADC__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_IADC__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_IADC__READ(die)                SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_IADC__GET(SRM_BIAS_REFEGEN_CNTL3__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_IADC__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_IADC__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_IADC__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL3__OVRD_FSM_IADC__OFFSET                     6
#  define SRM_BIAS_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_BIAS_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__READ(die)                SRM_BIAS_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__GET(SRM_BIAS_REFEGEN_CNTL3__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<5, 0x20)
#  define SRM_BIAS_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<5, 0x20)
#  define SRM_BIAS_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__OFFSET                     5
#  define SRM_BIAS_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_BIAS_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__READ(die)                SRM_BIAS_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__GET(SRM_BIAS_REFEGEN_CNTL3__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__OFFSET                     4
#  define SRM_BIAS_REFEGEN_CNTL3__EN_IPTAT_CHOP__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_BIAS_REFEGEN_CNTL3__EN_IPTAT_CHOP__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL3__EN_IPTAT_CHOP__READ(die)                SRM_BIAS_REFEGEN_CNTL3__EN_IPTAT_CHOP__GET(SRM_BIAS_REFEGEN_CNTL3__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL3__EN_IPTAT_CHOP__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFEGEN_CNTL3__EN_IPTAT_CHOP__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFEGEN_CNTL3__EN_IPTAT_CHOP__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL3__EN_IPTAT_CHOP__OFFSET                     3
#  define SRM_BIAS_REFEGEN_CNTL3__EN_ICTAT_CHOP__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_BIAS_REFEGEN_CNTL3__EN_ICTAT_CHOP__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL3__EN_ICTAT_CHOP__READ(die)                SRM_BIAS_REFEGEN_CNTL3__EN_ICTAT_CHOP__GET(SRM_BIAS_REFEGEN_CNTL3__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL3__EN_ICTAT_CHOP__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFEGEN_CNTL3__EN_ICTAT_CHOP__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFEGEN_CNTL3__EN_ICTAT_CHOP__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL3__EN_ICTAT_CHOP__OFFSET                     2
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__READ(die)                SRM_BIAS_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__GET(SRM_BIAS_REFEGEN_CNTL3__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__OFFSET                     1
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_FORCE_STRT__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_FORCE_STRT__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_FORCE_STRT__READ(die)                SRM_BIAS_REFEGEN_CNTL3__IPTAT_FORCE_STRT__GET(SRM_BIAS_REFEGEN_CNTL3__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_FORCE_STRT__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_FORCE_STRT__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL3__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_FORCE_STRT__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL3__IPTAT_FORCE_STRT__OFFSET                     0

#define SRM_BIAS_REFEGEN_CNTL4__ADDRESS                      0x615f
#define SRM_BIAS_REFEGEN_CNTL4__DEFAULT                      0x8
#define SRM_BIAS_REFEGEN_CNTL4__READ(die)                  srm_reg_read(die, SRM_BIAS_REFEGEN_CNTL4__ADDRESS)
#define SRM_BIAS_REFEGEN_CNTL4__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_REFEGEN_CNTL4__ADDRESS, (data))
#define SRM_BIAS_REFEGEN_CNTL4__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_REFEGEN_CNTL4__ADDRESS, (data), (mask))
#  define SRM_BIAS_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__READ(die)                SRM_BIAS_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__GET(SRM_BIAS_REFEGEN_CNTL4__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__OFFSET                     7
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_REXT__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_REXT__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_REXT__READ(die)                SRM_BIAS_REFEGEN_CNTL4__PROVIDE_REXT__GET(SRM_BIAS_REFEGEN_CNTL4__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_REXT__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_REXT__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_REXT__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_REXT__OFFSET                     6
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_VREF__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_VREF__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_VREF__READ(die)                SRM_BIAS_REFEGEN_CNTL4__PROVIDE_VREF__GET(SRM_BIAS_REFEGEN_CNTL4__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_VREF__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<5, 0x20)
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_VREF__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<5, 0x20)
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_VREF__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL4__PROVIDE_VREF__OFFSET                     5
#  define SRM_BIAS_REFEGEN_CNTL4__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_BIAS_REFEGEN_CNTL4__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL4__RSRVD1__READ(die)                SRM_BIAS_REFEGEN_CNTL4__RSRVD1__GET(SRM_BIAS_REFEGEN_CNTL4__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL4__RSRVD1__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_REFEGEN_CNTL4__RSRVD1__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_REFEGEN_CNTL4__RSRVD1__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL4__RSRVD1__OFFSET                     4
#  define SRM_BIAS_REFEGEN_CNTL4__USE_REXT__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_BIAS_REFEGEN_CNTL4__USE_REXT__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL4__USE_REXT__READ(die)                SRM_BIAS_REFEGEN_CNTL4__USE_REXT__GET(SRM_BIAS_REFEGEN_CNTL4__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL4__USE_REXT__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFEGEN_CNTL4__USE_REXT__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFEGEN_CNTL4__USE_REXT__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL4__USE_REXT__OFFSET                     3
#  define SRM_BIAS_REFEGEN_CNTL4__OVRD_FSM_PU__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_BIAS_REFEGEN_CNTL4__OVRD_FSM_PU__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL4__OVRD_FSM_PU__READ(die)                SRM_BIAS_REFEGEN_CNTL4__OVRD_FSM_PU__GET(SRM_BIAS_REFEGEN_CNTL4__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL4__OVRD_FSM_PU__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFEGEN_CNTL4__OVRD_FSM_PU__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFEGEN_CNTL4__OVRD_FSM_PU__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL4__OVRD_FSM_PU__OFFSET                     2
#  define SRM_BIAS_REFEGEN_CNTL4__USE_EXTERNAL_VREF__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_BIAS_REFEGEN_CNTL4__USE_EXTERNAL_VREF__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL4__USE_EXTERNAL_VREF__READ(die)                SRM_BIAS_REFEGEN_CNTL4__USE_EXTERNAL_VREF__GET(SRM_BIAS_REFEGEN_CNTL4__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL4__USE_EXTERNAL_VREF__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFEGEN_CNTL4__USE_EXTERNAL_VREF__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFEGEN_CNTL4__USE_EXTERNAL_VREF__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL4__USE_EXTERNAL_VREF__OFFSET                     1
#  define SRM_BIAS_REFEGEN_CNTL4__STRT_PU__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_BIAS_REFEGEN_CNTL4__STRT_PU__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL4__STRT_PU__READ(die)                SRM_BIAS_REFEGEN_CNTL4__STRT_PU__GET(SRM_BIAS_REFEGEN_CNTL4__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL4__STRT_PU__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFEGEN_CNTL4__STRT_PU__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL4__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFEGEN_CNTL4__STRT_PU__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL4__STRT_PU__OFFSET                     0

#define SRM_BIAS_REFEGEN_CNTL5__ADDRESS                      0x6160
#define SRM_BIAS_REFEGEN_CNTL5__DEFAULT                      0x90
#define SRM_BIAS_REFEGEN_CNTL5__READ(die)                  srm_reg_read(die, SRM_BIAS_REFEGEN_CNTL5__ADDRESS)
#define SRM_BIAS_REFEGEN_CNTL5__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_REFEGEN_CNTL5__ADDRESS, (data))
#define SRM_BIAS_REFEGEN_CNTL5__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_REFEGEN_CNTL5__ADDRESS, (data), (mask))
#  define SRM_BIAS_REFEGEN_CNTL5__MAX_LDO_CNT__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_BIAS_REFEGEN_CNTL5__MAX_LDO_CNT__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_BIAS_REFEGEN_CNTL5__MAX_LDO_CNT__READ(die)                SRM_BIAS_REFEGEN_CNTL5__MAX_LDO_CNT__GET(SRM_BIAS_REFEGEN_CNTL5__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL5__MAX_LDO_CNT__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL5__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_BIAS_REFEGEN_CNTL5__MAX_LDO_CNT__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL5__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_BIAS_REFEGEN_CNTL5__MAX_LDO_CNT__MASK                       0xf
#  define SRM_BIAS_REFEGEN_CNTL5__MAX_LDO_CNT__OFFSET                     4
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__READ(die)                SRM_BIAS_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__GET(SRM_BIAS_REFEGEN_CNTL5__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL5__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL5__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__OFFSET                     3
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VLDO_CAL__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VLDO_CAL__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VLDO_CAL__READ(die)                SRM_BIAS_REFEGEN_CNTL5__STRT_VLDO_CAL__GET(SRM_BIAS_REFEGEN_CNTL5__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VLDO_CAL__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL5__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VLDO_CAL__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL5__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VLDO_CAL__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VLDO_CAL__OFFSET                     2
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_RCAL__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_RCAL__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_RCAL__READ(die)                SRM_BIAS_REFEGEN_CNTL5__STRT_RCAL__GET(SRM_BIAS_REFEGEN_CNTL5__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_RCAL__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL5__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_RCAL__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL5__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_RCAL__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_RCAL__OFFSET                     1
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VTOP_CAL__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VTOP_CAL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VTOP_CAL__READ(die)                SRM_BIAS_REFEGEN_CNTL5__STRT_VTOP_CAL__GET(SRM_BIAS_REFEGEN_CNTL5__READ(die))
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VTOP_CAL__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CNTL5__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VTOP_CAL__RMW(die, fdata)           SRM_BIAS_REFEGEN_CNTL5__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VTOP_CAL__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CNTL5__STRT_VTOP_CAL__OFFSET                     0

#define SRM_BIAS_REFGEN_STATUS2__ADDRESS                      0x6162
#define SRM_BIAS_REFGEN_STATUS2__DEFAULT                      0x0
#define SRM_BIAS_REFGEN_STATUS2__READ(die)                  srm_reg_read(die, SRM_BIAS_REFGEN_STATUS2__ADDRESS)
#define SRM_BIAS_REFGEN_STATUS2__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_REFGEN_STATUS2__ADDRESS, (data))
#define SRM_BIAS_REFGEN_STATUS2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_REFGEN_STATUS2__ADDRESS, (data), (mask))
#  define SRM_BIAS_REFGEN_STATUS2__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_REFGEN_STATUS2__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS2__RSRVD1__READ(die)                SRM_BIAS_REFGEN_STATUS2__RSRVD1__GET(SRM_BIAS_REFGEN_STATUS2__READ(die))
#  define SRM_BIAS_REFGEN_STATUS2__RSRVD1__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_REFGEN_STATUS2__RSRVD1__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_REFGEN_STATUS2__RSRVD1__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS2__RSRVD1__OFFSET                     7
#  define SRM_BIAS_REFGEN_STATUS2__IADC_CONV_DONE__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_REFGEN_STATUS2__IADC_CONV_DONE__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS2__IADC_CONV_DONE__READ(die)                SRM_BIAS_REFGEN_STATUS2__IADC_CONV_DONE__GET(SRM_BIAS_REFGEN_STATUS2__READ(die))
#  define SRM_BIAS_REFGEN_STATUS2__IADC_CONV_DONE__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_REFGEN_STATUS2__IADC_CONV_DONE__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_REFGEN_STATUS2__IADC_CONV_DONE__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS2__IADC_CONV_DONE__OFFSET                     6
#  define SRM_BIAS_REFGEN_STATUS2__IADC_INPUT_CAL_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_BIAS_REFGEN_STATUS2__IADC_INPUT_CAL_SUCCESSFUL__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS2__IADC_INPUT_CAL_SUCCESSFUL__READ(die)                SRM_BIAS_REFGEN_STATUS2__IADC_INPUT_CAL_SUCCESSFUL__GET(SRM_BIAS_REFGEN_STATUS2__READ(die))
#  define SRM_BIAS_REFGEN_STATUS2__IADC_INPUT_CAL_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<5, 0x20)
#  define SRM_BIAS_REFGEN_STATUS2__IADC_INPUT_CAL_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<5, 0x20)
#  define SRM_BIAS_REFGEN_STATUS2__IADC_INPUT_CAL_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS2__IADC_INPUT_CAL_SUCCESSFUL__OFFSET                     5
#  define SRM_BIAS_REFGEN_STATUS2__RCAL_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_BIAS_REFGEN_STATUS2__RCAL_SUCCESSFUL__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS2__RCAL_SUCCESSFUL__READ(die)                SRM_BIAS_REFGEN_STATUS2__RCAL_SUCCESSFUL__GET(SRM_BIAS_REFGEN_STATUS2__READ(die))
#  define SRM_BIAS_REFGEN_STATUS2__RCAL_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_REFGEN_STATUS2__RCAL_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_REFGEN_STATUS2__RCAL_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS2__RCAL_SUCCESSFUL__OFFSET                     4
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ADCBUF_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ADCBUF_SUCCESSFUL__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ADCBUF_SUCCESSFUL__READ(die)                SRM_BIAS_REFGEN_STATUS2__VTOP_ADCBUF_SUCCESSFUL__GET(SRM_BIAS_REFGEN_STATUS2__READ(die))
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ADCBUF_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ADCBUF_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ADCBUF_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ADCBUF_SUCCESSFUL__OFFSET                     3
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_IPOLY_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_IPOLY_SUCCESSFUL__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_IPOLY_SUCCESSFUL__READ(die)                SRM_BIAS_REFGEN_STATUS2__VTOP_IPOLY_SUCCESSFUL__GET(SRM_BIAS_REFGEN_STATUS2__READ(die))
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_IPOLY_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_IPOLY_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_IPOLY_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_IPOLY_SUCCESSFUL__OFFSET                     2
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ICONST_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ICONST_SUCCESSFUL__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ICONST_SUCCESSFUL__READ(die)                SRM_BIAS_REFGEN_STATUS2__VTOP_ICONST_SUCCESSFUL__GET(SRM_BIAS_REFGEN_STATUS2__READ(die))
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ICONST_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ICONST_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ICONST_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_ICONST_SUCCESSFUL__OFFSET                     1
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_LDO_CAL_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_LDO_CAL_SUCCESSFUL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_LDO_CAL_SUCCESSFUL__READ(die)                SRM_BIAS_REFGEN_STATUS2__VTOP_LDO_CAL_SUCCESSFUL__GET(SRM_BIAS_REFGEN_STATUS2__READ(die))
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_LDO_CAL_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_LDO_CAL_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS2__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_LDO_CAL_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS2__VTOP_LDO_CAL_SUCCESSFUL__OFFSET                     0

#define SRM_BIAS_REFGEN_STATUS3__ADDRESS                      0x6163
#define SRM_BIAS_REFGEN_STATUS3__DEFAULT                      0x0
#define SRM_BIAS_REFGEN_STATUS3__READ(die)                  srm_reg_read(die, SRM_BIAS_REFGEN_STATUS3__ADDRESS)
#define SRM_BIAS_REFGEN_STATUS3__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_REFGEN_STATUS3__ADDRESS, (data))
#define SRM_BIAS_REFGEN_STATUS3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_REFGEN_STATUS3__ADDRESS, (data), (mask))
#  define SRM_BIAS_REFGEN_STATUS3__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_BIAS_REFGEN_STATUS3__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_BIAS_REFGEN_STATUS3__RSRVD1__READ(die)                SRM_BIAS_REFGEN_STATUS3__RSRVD1__GET(SRM_BIAS_REFGEN_STATUS3__READ(die))
#  define SRM_BIAS_REFGEN_STATUS3__RSRVD1__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS3__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_BIAS_REFGEN_STATUS3__RSRVD1__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS3__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_BIAS_REFGEN_STATUS3__RSRVD1__MASK                       0x7
#  define SRM_BIAS_REFGEN_STATUS3__RSRVD1__OFFSET                     5
#  define SRM_BIAS_REFGEN_STATUS3__STRT_PU_DONE__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_BIAS_REFGEN_STATUS3__STRT_PU_DONE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS3__STRT_PU_DONE__READ(die)                SRM_BIAS_REFGEN_STATUS3__STRT_PU_DONE__GET(SRM_BIAS_REFGEN_STATUS3__READ(die))
#  define SRM_BIAS_REFGEN_STATUS3__STRT_PU_DONE__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS3__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_REFGEN_STATUS3__STRT_PU_DONE__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS3__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_REFGEN_STATUS3__STRT_PU_DONE__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS3__STRT_PU_DONE__OFFSET                     4
#  define SRM_BIAS_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_BIAS_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__READ(die)                SRM_BIAS_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__GET(SRM_BIAS_REFGEN_STATUS3__READ(die))
#  define SRM_BIAS_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS3__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS3__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__OFFSET                     3
#  define SRM_BIAS_REFGEN_STATUS3__VLDO_CAL_DONE__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_BIAS_REFGEN_STATUS3__VLDO_CAL_DONE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS3__VLDO_CAL_DONE__READ(die)                SRM_BIAS_REFGEN_STATUS3__VLDO_CAL_DONE__GET(SRM_BIAS_REFGEN_STATUS3__READ(die))
#  define SRM_BIAS_REFGEN_STATUS3__VLDO_CAL_DONE__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS3__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFGEN_STATUS3__VLDO_CAL_DONE__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS3__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFGEN_STATUS3__VLDO_CAL_DONE__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS3__VLDO_CAL_DONE__OFFSET                     2
#  define SRM_BIAS_REFGEN_STATUS3__RCAL_DONE__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_BIAS_REFGEN_STATUS3__RCAL_DONE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS3__RCAL_DONE__READ(die)                SRM_BIAS_REFGEN_STATUS3__RCAL_DONE__GET(SRM_BIAS_REFGEN_STATUS3__READ(die))
#  define SRM_BIAS_REFGEN_STATUS3__RCAL_DONE__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS3__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFGEN_STATUS3__RCAL_DONE__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS3__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFGEN_STATUS3__RCAL_DONE__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS3__RCAL_DONE__OFFSET                     1
#  define SRM_BIAS_REFGEN_STATUS3__VTOP_CAL_DONE__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_BIAS_REFGEN_STATUS3__VTOP_CAL_DONE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_BIAS_REFGEN_STATUS3__VTOP_CAL_DONE__READ(die)                SRM_BIAS_REFGEN_STATUS3__VTOP_CAL_DONE__GET(SRM_BIAS_REFGEN_STATUS3__READ(die))
#  define SRM_BIAS_REFGEN_STATUS3__VTOP_CAL_DONE__WRITE(die, fdata)           SRM_BIAS_REFGEN_STATUS3__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFGEN_STATUS3__VTOP_CAL_DONE__RMW(die, fdata)           SRM_BIAS_REFGEN_STATUS3__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFGEN_STATUS3__VTOP_CAL_DONE__MASK                       0x1
#  define SRM_BIAS_REFGEN_STATUS3__VTOP_CAL_DONE__OFFSET                     0

#define SRM_BIAS_REFEGEN_CAL1__ADDRESS                      0x6164
#define SRM_BIAS_REFEGEN_CAL1__DEFAULT                      0x48
#define SRM_BIAS_REFEGEN_CAL1__READ(die)                  srm_reg_read(die, SRM_BIAS_REFEGEN_CAL1__ADDRESS)
#define SRM_BIAS_REFEGEN_CAL1__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_REFEGEN_CAL1__ADDRESS, (data))
#define SRM_BIAS_REFEGEN_CAL1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_REFEGEN_CAL1__ADDRESS, (data), (mask))
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD1__READ(die)                SRM_BIAS_REFEGEN_CAL1__RSRVD1__GET(SRM_BIAS_REFEGEN_CAL1__READ(die))
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD1__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD1__RMW(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD1__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD1__OFFSET                     7
#  define SRM_BIAS_REFEGEN_CAL1__EN_REXT_VSS__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_REFEGEN_CAL1__EN_REXT_VSS__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_REFEGEN_CAL1__EN_REXT_VSS__READ(die)                SRM_BIAS_REFEGEN_CAL1__EN_REXT_VSS__GET(SRM_BIAS_REFEGEN_CAL1__READ(die))
#  define SRM_BIAS_REFEGEN_CAL1__EN_REXT_VSS__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_REFEGEN_CAL1__EN_REXT_VSS__RMW(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_REFEGEN_CAL1__EN_REXT_VSS__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CAL1__EN_REXT_VSS__OFFSET                     6
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATBPN__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATBPN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATBPN__READ(die)                SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATBPN__GET(SRM_BIAS_REFEGEN_CAL1__READ(die))
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATBPN__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<5, 0x20)
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATBPN__RMW(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<5, 0x20)
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATBPN__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATBPN__OFFSET                     5
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__READ(die)                SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__GET(SRM_BIAS_REFEGEN_CAL1__READ(die))
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__RMW(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__OFFSET                     4
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICONST_2RCAL__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICONST_2RCAL__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICONST_2RCAL__READ(die)                SRM_BIAS_REFEGEN_CAL1__EN_ICONST_2RCAL__GET(SRM_BIAS_REFEGEN_CAL1__READ(die))
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICONST_2RCAL__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICONST_2RCAL__RMW(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICONST_2RCAL__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICONST_2RCAL__OFFSET                     3
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2RCAL__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2RCAL__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2RCAL__READ(die)                SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2RCAL__GET(SRM_BIAS_REFEGEN_CAL1__READ(die))
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2RCAL__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2RCAL__RMW(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2RCAL__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2RCAL__OFFSET                     2
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__READ(die)                SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__GET(SRM_BIAS_REFEGEN_CAL1__READ(die))
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__RMW(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__OFFSET                     1
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD2__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD2__READ(die)                SRM_BIAS_REFEGEN_CAL1__RSRVD2__GET(SRM_BIAS_REFEGEN_CAL1__READ(die))
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD2__WRITE(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD2__RMW(die, fdata)           SRM_BIAS_REFEGEN_CAL1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD2__MASK                       0x1
#  define SRM_BIAS_REFEGEN_CAL1__RSRVD2__OFFSET                     0

#define SRM_BIAS_SET_ICONST__ADDRESS                      0x6168
#define SRM_BIAS_SET_ICONST__DEFAULT                      0x60
#define SRM_BIAS_SET_ICONST__READ(die)                  srm_reg_read(die, SRM_BIAS_SET_ICONST__ADDRESS)
#define SRM_BIAS_SET_ICONST__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_SET_ICONST__ADDRESS, (data))
#define SRM_BIAS_SET_ICONST__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_SET_ICONST__ADDRESS, (data), (mask))
#  define SRM_BIAS_SET_ICONST__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_SET_ICONST__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_SET_ICONST__RSRVD1__READ(die)                SRM_BIAS_SET_ICONST__RSRVD1__GET(SRM_BIAS_SET_ICONST__READ(die))
#  define SRM_BIAS_SET_ICONST__RSRVD1__WRITE(die, fdata)           SRM_BIAS_SET_ICONST__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_ICONST__RSRVD1__RMW(die, fdata)           SRM_BIAS_SET_ICONST__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_ICONST__RSRVD1__MASK                       0x1
#  define SRM_BIAS_SET_ICONST__RSRVD1__OFFSET                     7
#  define SRM_BIAS_SET_ICONST__OVWR_ICONST__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_SET_ICONST__OVWR_ICONST__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_SET_ICONST__OVWR_ICONST__READ(die)                SRM_BIAS_SET_ICONST__OVWR_ICONST__GET(SRM_BIAS_SET_ICONST__READ(die))
#  define SRM_BIAS_SET_ICONST__OVWR_ICONST__WRITE(die, fdata)           SRM_BIAS_SET_ICONST__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_SET_ICONST__OVWR_ICONST__RMW(die, fdata)           SRM_BIAS_SET_ICONST__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_SET_ICONST__OVWR_ICONST__MASK                       0x1
#  define SRM_BIAS_SET_ICONST__OVWR_ICONST__OFFSET                     6
#  define SRM_BIAS_SET_ICONST__SET_ICONST__SET(rdata, fdata)         (((rdata) & 0xc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SRM_BIAS_SET_ICONST__SET_ICONST__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SRM_BIAS_SET_ICONST__SET_ICONST__READ(die)                SRM_BIAS_SET_ICONST__SET_ICONST__GET(SRM_BIAS_SET_ICONST__READ(die))
#  define SRM_BIAS_SET_ICONST__SET_ICONST__WRITE(die, fdata)           SRM_BIAS_SET_ICONST__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_SET_ICONST__SET_ICONST__RMW(die, fdata)           SRM_BIAS_SET_ICONST__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_SET_ICONST__SET_ICONST__MASK                       0x3f
#  define SRM_BIAS_SET_ICONST__SET_ICONST__OFFSET                     0

#define SRM_BIAS_STATUS_ICONST__ADDRESS                      0x6169
#define SRM_BIAS_STATUS_ICONST__DEFAULT                      0x0
#define SRM_BIAS_STATUS_ICONST__READ(die)                  srm_reg_read(die, SRM_BIAS_STATUS_ICONST__ADDRESS)
#define SRM_BIAS_STATUS_ICONST__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_STATUS_ICONST__ADDRESS, (data))
#define SRM_BIAS_STATUS_ICONST__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_STATUS_ICONST__ADDRESS, (data), (mask))
#  define SRM_BIAS_STATUS_ICONST__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_STATUS_ICONST__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_STATUS_ICONST__RSRVD1__READ(die)                SRM_BIAS_STATUS_ICONST__RSRVD1__GET(SRM_BIAS_STATUS_ICONST__READ(die))
#  define SRM_BIAS_STATUS_ICONST__RSRVD1__WRITE(die, fdata)           SRM_BIAS_STATUS_ICONST__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_ICONST__RSRVD1__RMW(die, fdata)           SRM_BIAS_STATUS_ICONST__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_ICONST__RSRVD1__MASK                       0x1
#  define SRM_BIAS_STATUS_ICONST__RSRVD1__OFFSET                     7
#  define SRM_BIAS_STATUS_ICONST__CAL_ICONST_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_STATUS_ICONST__CAL_ICONST_SUCCESSFUL__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_STATUS_ICONST__CAL_ICONST_SUCCESSFUL__READ(die)                SRM_BIAS_STATUS_ICONST__CAL_ICONST_SUCCESSFUL__GET(SRM_BIAS_STATUS_ICONST__READ(die))
#  define SRM_BIAS_STATUS_ICONST__CAL_ICONST_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_STATUS_ICONST__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_STATUS_ICONST__CAL_ICONST_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_STATUS_ICONST__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_STATUS_ICONST__CAL_ICONST_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_STATUS_ICONST__CAL_ICONST_SUCCESSFUL__OFFSET                     6
#  define SRM_BIAS_STATUS_ICONST__STATUS_ICONST__SET(rdata, fdata)         (((rdata) & 0xc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SRM_BIAS_STATUS_ICONST__STATUS_ICONST__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SRM_BIAS_STATUS_ICONST__STATUS_ICONST__READ(die)                SRM_BIAS_STATUS_ICONST__STATUS_ICONST__GET(SRM_BIAS_STATUS_ICONST__READ(die))
#  define SRM_BIAS_STATUS_ICONST__STATUS_ICONST__WRITE(die, fdata)           SRM_BIAS_STATUS_ICONST__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_STATUS_ICONST__STATUS_ICONST__RMW(die, fdata)           SRM_BIAS_STATUS_ICONST__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_STATUS_ICONST__STATUS_ICONST__MASK                       0x3f
#  define SRM_BIAS_STATUS_ICONST__STATUS_ICONST__OFFSET                     0

#define SRM_BIAS_SET_IPOLY__ADDRESS                      0x616a
#define SRM_BIAS_SET_IPOLY__DEFAULT                      0x60
#define SRM_BIAS_SET_IPOLY__READ(die)                  srm_reg_read(die, SRM_BIAS_SET_IPOLY__ADDRESS)
#define SRM_BIAS_SET_IPOLY__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_SET_IPOLY__ADDRESS, (data))
#define SRM_BIAS_SET_IPOLY__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_SET_IPOLY__ADDRESS, (data), (mask))
#  define SRM_BIAS_SET_IPOLY__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_SET_IPOLY__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_SET_IPOLY__RSRVD1__READ(die)                SRM_BIAS_SET_IPOLY__RSRVD1__GET(SRM_BIAS_SET_IPOLY__READ(die))
#  define SRM_BIAS_SET_IPOLY__RSRVD1__WRITE(die, fdata)           SRM_BIAS_SET_IPOLY__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_IPOLY__RSRVD1__RMW(die, fdata)           SRM_BIAS_SET_IPOLY__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_IPOLY__RSRVD1__MASK                       0x1
#  define SRM_BIAS_SET_IPOLY__RSRVD1__OFFSET                     7
#  define SRM_BIAS_SET_IPOLY__OVWR_IPOLY__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_SET_IPOLY__OVWR_IPOLY__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_SET_IPOLY__OVWR_IPOLY__READ(die)                SRM_BIAS_SET_IPOLY__OVWR_IPOLY__GET(SRM_BIAS_SET_IPOLY__READ(die))
#  define SRM_BIAS_SET_IPOLY__OVWR_IPOLY__WRITE(die, fdata)           SRM_BIAS_SET_IPOLY__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_SET_IPOLY__OVWR_IPOLY__RMW(die, fdata)           SRM_BIAS_SET_IPOLY__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_SET_IPOLY__OVWR_IPOLY__MASK                       0x1
#  define SRM_BIAS_SET_IPOLY__OVWR_IPOLY__OFFSET                     6
#  define SRM_BIAS_SET_IPOLY__SET_IPOLY__SET(rdata, fdata)         (((rdata) & 0xc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SRM_BIAS_SET_IPOLY__SET_IPOLY__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SRM_BIAS_SET_IPOLY__SET_IPOLY__READ(die)                SRM_BIAS_SET_IPOLY__SET_IPOLY__GET(SRM_BIAS_SET_IPOLY__READ(die))
#  define SRM_BIAS_SET_IPOLY__SET_IPOLY__WRITE(die, fdata)           SRM_BIAS_SET_IPOLY__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_SET_IPOLY__SET_IPOLY__RMW(die, fdata)           SRM_BIAS_SET_IPOLY__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_SET_IPOLY__SET_IPOLY__MASK                       0x3f
#  define SRM_BIAS_SET_IPOLY__SET_IPOLY__OFFSET                     0

#define SRM_BIAS_STATUS_IPOLY__ADDRESS                      0x616b
#define SRM_BIAS_STATUS_IPOLY__DEFAULT                      0x0
#define SRM_BIAS_STATUS_IPOLY__READ(die)                  srm_reg_read(die, SRM_BIAS_STATUS_IPOLY__ADDRESS)
#define SRM_BIAS_STATUS_IPOLY__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_STATUS_IPOLY__ADDRESS, (data))
#define SRM_BIAS_STATUS_IPOLY__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_STATUS_IPOLY__ADDRESS, (data), (mask))
#  define SRM_BIAS_STATUS_IPOLY__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_STATUS_IPOLY__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_STATUS_IPOLY__RSRVD1__READ(die)                SRM_BIAS_STATUS_IPOLY__RSRVD1__GET(SRM_BIAS_STATUS_IPOLY__READ(die))
#  define SRM_BIAS_STATUS_IPOLY__RSRVD1__WRITE(die, fdata)           SRM_BIAS_STATUS_IPOLY__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_IPOLY__RSRVD1__RMW(die, fdata)           SRM_BIAS_STATUS_IPOLY__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_IPOLY__RSRVD1__MASK                       0x1
#  define SRM_BIAS_STATUS_IPOLY__RSRVD1__OFFSET                     7
#  define SRM_BIAS_STATUS_IPOLY__CAL_IPOLY_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_STATUS_IPOLY__CAL_IPOLY_SUCCESSFUL__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_STATUS_IPOLY__CAL_IPOLY_SUCCESSFUL__READ(die)                SRM_BIAS_STATUS_IPOLY__CAL_IPOLY_SUCCESSFUL__GET(SRM_BIAS_STATUS_IPOLY__READ(die))
#  define SRM_BIAS_STATUS_IPOLY__CAL_IPOLY_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_STATUS_IPOLY__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_STATUS_IPOLY__CAL_IPOLY_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_STATUS_IPOLY__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_STATUS_IPOLY__CAL_IPOLY_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_STATUS_IPOLY__CAL_IPOLY_SUCCESSFUL__OFFSET                     6
#  define SRM_BIAS_STATUS_IPOLY__STATUS_IPOLY__SET(rdata, fdata)         (((rdata) & 0xc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SRM_BIAS_STATUS_IPOLY__STATUS_IPOLY__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SRM_BIAS_STATUS_IPOLY__STATUS_IPOLY__READ(die)                SRM_BIAS_STATUS_IPOLY__STATUS_IPOLY__GET(SRM_BIAS_STATUS_IPOLY__READ(die))
#  define SRM_BIAS_STATUS_IPOLY__STATUS_IPOLY__WRITE(die, fdata)           SRM_BIAS_STATUS_IPOLY__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_STATUS_IPOLY__STATUS_IPOLY__RMW(die, fdata)           SRM_BIAS_STATUS_IPOLY__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_STATUS_IPOLY__STATUS_IPOLY__MASK                       0x3f
#  define SRM_BIAS_STATUS_IPOLY__STATUS_IPOLY__OFFSET                     0

#define SRM_BIAS_SET_IADCBUF__ADDRESS                      0x616c
#define SRM_BIAS_SET_IADCBUF__DEFAULT                      0x60
#define SRM_BIAS_SET_IADCBUF__READ(die)                  srm_reg_read(die, SRM_BIAS_SET_IADCBUF__ADDRESS)
#define SRM_BIAS_SET_IADCBUF__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_SET_IADCBUF__ADDRESS, (data))
#define SRM_BIAS_SET_IADCBUF__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_SET_IADCBUF__ADDRESS, (data), (mask))
#  define SRM_BIAS_SET_IADCBUF__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_SET_IADCBUF__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_SET_IADCBUF__RSRVD1__READ(die)                SRM_BIAS_SET_IADCBUF__RSRVD1__GET(SRM_BIAS_SET_IADCBUF__READ(die))
#  define SRM_BIAS_SET_IADCBUF__RSRVD1__WRITE(die, fdata)           SRM_BIAS_SET_IADCBUF__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_IADCBUF__RSRVD1__RMW(die, fdata)           SRM_BIAS_SET_IADCBUF__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_IADCBUF__RSRVD1__MASK                       0x1
#  define SRM_BIAS_SET_IADCBUF__RSRVD1__OFFSET                     7
#  define SRM_BIAS_SET_IADCBUF__OVWR_IADCBUF__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_SET_IADCBUF__OVWR_IADCBUF__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_SET_IADCBUF__OVWR_IADCBUF__READ(die)                SRM_BIAS_SET_IADCBUF__OVWR_IADCBUF__GET(SRM_BIAS_SET_IADCBUF__READ(die))
#  define SRM_BIAS_SET_IADCBUF__OVWR_IADCBUF__WRITE(die, fdata)           SRM_BIAS_SET_IADCBUF__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_SET_IADCBUF__OVWR_IADCBUF__RMW(die, fdata)           SRM_BIAS_SET_IADCBUF__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_SET_IADCBUF__OVWR_IADCBUF__MASK                       0x1
#  define SRM_BIAS_SET_IADCBUF__OVWR_IADCBUF__OFFSET                     6
#  define SRM_BIAS_SET_IADCBUF__SET_IADCBUF__SET(rdata, fdata)         (((rdata) & 0xc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SRM_BIAS_SET_IADCBUF__SET_IADCBUF__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SRM_BIAS_SET_IADCBUF__SET_IADCBUF__READ(die)                SRM_BIAS_SET_IADCBUF__SET_IADCBUF__GET(SRM_BIAS_SET_IADCBUF__READ(die))
#  define SRM_BIAS_SET_IADCBUF__SET_IADCBUF__WRITE(die, fdata)           SRM_BIAS_SET_IADCBUF__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_SET_IADCBUF__SET_IADCBUF__RMW(die, fdata)           SRM_BIAS_SET_IADCBUF__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_SET_IADCBUF__SET_IADCBUF__MASK                       0x3f
#  define SRM_BIAS_SET_IADCBUF__SET_IADCBUF__OFFSET                     0

#define SRM_BIAS_STATUS_IADCBUF__ADDRESS                      0x616d
#define SRM_BIAS_STATUS_IADCBUF__DEFAULT                      0x0
#define SRM_BIAS_STATUS_IADCBUF__READ(die)                  srm_reg_read(die, SRM_BIAS_STATUS_IADCBUF__ADDRESS)
#define SRM_BIAS_STATUS_IADCBUF__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_STATUS_IADCBUF__ADDRESS, (data))
#define SRM_BIAS_STATUS_IADCBUF__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_STATUS_IADCBUF__ADDRESS, (data), (mask))
#  define SRM_BIAS_STATUS_IADCBUF__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_STATUS_IADCBUF__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_STATUS_IADCBUF__RSRVD1__READ(die)                SRM_BIAS_STATUS_IADCBUF__RSRVD1__GET(SRM_BIAS_STATUS_IADCBUF__READ(die))
#  define SRM_BIAS_STATUS_IADCBUF__RSRVD1__WRITE(die, fdata)           SRM_BIAS_STATUS_IADCBUF__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_IADCBUF__RSRVD1__RMW(die, fdata)           SRM_BIAS_STATUS_IADCBUF__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_IADCBUF__RSRVD1__MASK                       0x1
#  define SRM_BIAS_STATUS_IADCBUF__RSRVD1__OFFSET                     7
#  define SRM_BIAS_STATUS_IADCBUF__CAL_IADCBUF_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_STATUS_IADCBUF__CAL_IADCBUF_SUCCESSFUL__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_STATUS_IADCBUF__CAL_IADCBUF_SUCCESSFUL__READ(die)                SRM_BIAS_STATUS_IADCBUF__CAL_IADCBUF_SUCCESSFUL__GET(SRM_BIAS_STATUS_IADCBUF__READ(die))
#  define SRM_BIAS_STATUS_IADCBUF__CAL_IADCBUF_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_STATUS_IADCBUF__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_STATUS_IADCBUF__CAL_IADCBUF_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_STATUS_IADCBUF__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_STATUS_IADCBUF__CAL_IADCBUF_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_STATUS_IADCBUF__CAL_IADCBUF_SUCCESSFUL__OFFSET                     6
#  define SRM_BIAS_STATUS_IADCBUF__STATUS_IADCBUF__SET(rdata, fdata)         (((rdata) & 0xc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SRM_BIAS_STATUS_IADCBUF__STATUS_IADCBUF__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SRM_BIAS_STATUS_IADCBUF__STATUS_IADCBUF__READ(die)                SRM_BIAS_STATUS_IADCBUF__STATUS_IADCBUF__GET(SRM_BIAS_STATUS_IADCBUF__READ(die))
#  define SRM_BIAS_STATUS_IADCBUF__STATUS_IADCBUF__WRITE(die, fdata)           SRM_BIAS_STATUS_IADCBUF__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_STATUS_IADCBUF__STATUS_IADCBUF__RMW(die, fdata)           SRM_BIAS_STATUS_IADCBUF__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_STATUS_IADCBUF__STATUS_IADCBUF__MASK                       0x3f
#  define SRM_BIAS_STATUS_IADCBUF__STATUS_IADCBUF__OFFSET                     0

#define SRM_BIAS_SET_LDOBUF__ADDRESS                      0x616e
#define SRM_BIAS_SET_LDOBUF__DEFAULT                      0x60
#define SRM_BIAS_SET_LDOBUF__READ(die)                  srm_reg_read(die, SRM_BIAS_SET_LDOBUF__ADDRESS)
#define SRM_BIAS_SET_LDOBUF__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_SET_LDOBUF__ADDRESS, (data))
#define SRM_BIAS_SET_LDOBUF__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_SET_LDOBUF__ADDRESS, (data), (mask))
#  define SRM_BIAS_SET_LDOBUF__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_SET_LDOBUF__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_SET_LDOBUF__RSRVD1__READ(die)                SRM_BIAS_SET_LDOBUF__RSRVD1__GET(SRM_BIAS_SET_LDOBUF__READ(die))
#  define SRM_BIAS_SET_LDOBUF__RSRVD1__WRITE(die, fdata)           SRM_BIAS_SET_LDOBUF__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_LDOBUF__RSRVD1__RMW(die, fdata)           SRM_BIAS_SET_LDOBUF__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_LDOBUF__RSRVD1__MASK                       0x1
#  define SRM_BIAS_SET_LDOBUF__RSRVD1__OFFSET                     7
#  define SRM_BIAS_SET_LDOBUF__OVWR_LDOBUF__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_SET_LDOBUF__OVWR_LDOBUF__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_SET_LDOBUF__OVWR_LDOBUF__READ(die)                SRM_BIAS_SET_LDOBUF__OVWR_LDOBUF__GET(SRM_BIAS_SET_LDOBUF__READ(die))
#  define SRM_BIAS_SET_LDOBUF__OVWR_LDOBUF__WRITE(die, fdata)           SRM_BIAS_SET_LDOBUF__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_SET_LDOBUF__OVWR_LDOBUF__RMW(die, fdata)           SRM_BIAS_SET_LDOBUF__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_SET_LDOBUF__OVWR_LDOBUF__MASK                       0x1
#  define SRM_BIAS_SET_LDOBUF__OVWR_LDOBUF__OFFSET                     6
#  define SRM_BIAS_SET_LDOBUF__SET_LDOBUF__SET(rdata, fdata)         (((rdata) & 0xc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SRM_BIAS_SET_LDOBUF__SET_LDOBUF__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SRM_BIAS_SET_LDOBUF__SET_LDOBUF__READ(die)                SRM_BIAS_SET_LDOBUF__SET_LDOBUF__GET(SRM_BIAS_SET_LDOBUF__READ(die))
#  define SRM_BIAS_SET_LDOBUF__SET_LDOBUF__WRITE(die, fdata)           SRM_BIAS_SET_LDOBUF__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_SET_LDOBUF__SET_LDOBUF__RMW(die, fdata)           SRM_BIAS_SET_LDOBUF__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_SET_LDOBUF__SET_LDOBUF__MASK                       0x3f
#  define SRM_BIAS_SET_LDOBUF__SET_LDOBUF__OFFSET                     0

#define SRM_BIAS_STATUS_LDOBUF__ADDRESS                      0x616f
#define SRM_BIAS_STATUS_LDOBUF__DEFAULT                      0x0
#define SRM_BIAS_STATUS_LDOBUF__READ(die)                  srm_reg_read(die, SRM_BIAS_STATUS_LDOBUF__ADDRESS)
#define SRM_BIAS_STATUS_LDOBUF__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_STATUS_LDOBUF__ADDRESS, (data))
#define SRM_BIAS_STATUS_LDOBUF__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_STATUS_LDOBUF__ADDRESS, (data), (mask))
#  define SRM_BIAS_STATUS_LDOBUF__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_STATUS_LDOBUF__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_STATUS_LDOBUF__RSRVD1__READ(die)                SRM_BIAS_STATUS_LDOBUF__RSRVD1__GET(SRM_BIAS_STATUS_LDOBUF__READ(die))
#  define SRM_BIAS_STATUS_LDOBUF__RSRVD1__WRITE(die, fdata)           SRM_BIAS_STATUS_LDOBUF__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_LDOBUF__RSRVD1__RMW(die, fdata)           SRM_BIAS_STATUS_LDOBUF__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_LDOBUF__RSRVD1__MASK                       0x1
#  define SRM_BIAS_STATUS_LDOBUF__RSRVD1__OFFSET                     7
#  define SRM_BIAS_STATUS_LDOBUF__CAL_LDOBUF_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_BIAS_STATUS_LDOBUF__CAL_LDOBUF_SUCCESSFUL__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_BIAS_STATUS_LDOBUF__CAL_LDOBUF_SUCCESSFUL__READ(die)                SRM_BIAS_STATUS_LDOBUF__CAL_LDOBUF_SUCCESSFUL__GET(SRM_BIAS_STATUS_LDOBUF__READ(die))
#  define SRM_BIAS_STATUS_LDOBUF__CAL_LDOBUF_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_STATUS_LDOBUF__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_STATUS_LDOBUF__CAL_LDOBUF_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_STATUS_LDOBUF__RMW(die, (fdata)<<6, 0x40)
#  define SRM_BIAS_STATUS_LDOBUF__CAL_LDOBUF_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_STATUS_LDOBUF__CAL_LDOBUF_SUCCESSFUL__OFFSET                     6
#  define SRM_BIAS_STATUS_LDOBUF__STATUS_LDOBUF__SET(rdata, fdata)         (((rdata) & 0xc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SRM_BIAS_STATUS_LDOBUF__STATUS_LDOBUF__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SRM_BIAS_STATUS_LDOBUF__STATUS_LDOBUF__READ(die)                SRM_BIAS_STATUS_LDOBUF__STATUS_LDOBUF__GET(SRM_BIAS_STATUS_LDOBUF__READ(die))
#  define SRM_BIAS_STATUS_LDOBUF__STATUS_LDOBUF__WRITE(die, fdata)           SRM_BIAS_STATUS_LDOBUF__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_STATUS_LDOBUF__STATUS_LDOBUF__RMW(die, fdata)           SRM_BIAS_STATUS_LDOBUF__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_STATUS_LDOBUF__STATUS_LDOBUF__MASK                       0x3f
#  define SRM_BIAS_STATUS_LDOBUF__STATUS_LDOBUF__OFFSET                     0

#define SRM_BIAS_SET_RCAL__ADDRESS                      0x6170
#define SRM_BIAS_SET_RCAL__DEFAULT                      0xb5
#define SRM_BIAS_SET_RCAL__READ(die)                  srm_reg_read(die, SRM_BIAS_SET_RCAL__ADDRESS)
#define SRM_BIAS_SET_RCAL__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_SET_RCAL__ADDRESS, (data))
#define SRM_BIAS_SET_RCAL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_SET_RCAL__ADDRESS, (data), (mask))
#  define SRM_BIAS_SET_RCAL__OVWR_R__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_SET_RCAL__OVWR_R__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_SET_RCAL__OVWR_R__READ(die)                SRM_BIAS_SET_RCAL__OVWR_R__GET(SRM_BIAS_SET_RCAL__READ(die))
#  define SRM_BIAS_SET_RCAL__OVWR_R__WRITE(die, fdata)           SRM_BIAS_SET_RCAL__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_RCAL__OVWR_R__RMW(die, fdata)           SRM_BIAS_SET_RCAL__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_SET_RCAL__OVWR_R__MASK                       0x1
#  define SRM_BIAS_SET_RCAL__OVWR_R__OFFSET                     7
#  define SRM_BIAS_SET_RCAL__RSET__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_BIAS_SET_RCAL__RSET__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_BIAS_SET_RCAL__RSET__READ(die)                SRM_BIAS_SET_RCAL__RSET__GET(SRM_BIAS_SET_RCAL__READ(die))
#  define SRM_BIAS_SET_RCAL__RSET__WRITE(die, fdata)           SRM_BIAS_SET_RCAL__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_SET_RCAL__RSET__RMW(die, fdata)           SRM_BIAS_SET_RCAL__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_SET_RCAL__RSET__MASK                       0x7f
#  define SRM_BIAS_SET_RCAL__RSET__OFFSET                     0

#define SRM_BIAS_STATUS_RCAL__ADDRESS                      0x6171
#define SRM_BIAS_STATUS_RCAL__DEFAULT                      0x0
#define SRM_BIAS_STATUS_RCAL__READ(die)                  srm_reg_read(die, SRM_BIAS_STATUS_RCAL__ADDRESS)
#define SRM_BIAS_STATUS_RCAL__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_STATUS_RCAL__ADDRESS, (data))
#define SRM_BIAS_STATUS_RCAL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_STATUS_RCAL__ADDRESS, (data), (mask))
#  define SRM_BIAS_STATUS_RCAL__RCAL_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_STATUS_RCAL__RCAL_SUCCESSFUL__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_STATUS_RCAL__RCAL_SUCCESSFUL__READ(die)                SRM_BIAS_STATUS_RCAL__RCAL_SUCCESSFUL__GET(SRM_BIAS_STATUS_RCAL__READ(die))
#  define SRM_BIAS_STATUS_RCAL__RCAL_SUCCESSFUL__WRITE(die, fdata)           SRM_BIAS_STATUS_RCAL__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_RCAL__RCAL_SUCCESSFUL__RMW(die, fdata)           SRM_BIAS_STATUS_RCAL__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_STATUS_RCAL__RCAL_SUCCESSFUL__MASK                       0x1
#  define SRM_BIAS_STATUS_RCAL__RCAL_SUCCESSFUL__OFFSET                     7
#  define SRM_BIAS_STATUS_RCAL__STATUS_R__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_BIAS_STATUS_RCAL__STATUS_R__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_BIAS_STATUS_RCAL__STATUS_R__READ(die)                SRM_BIAS_STATUS_RCAL__STATUS_R__GET(SRM_BIAS_STATUS_RCAL__READ(die))
#  define SRM_BIAS_STATUS_RCAL__STATUS_R__WRITE(die, fdata)           SRM_BIAS_STATUS_RCAL__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_STATUS_RCAL__STATUS_R__RMW(die, fdata)           SRM_BIAS_STATUS_RCAL__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_STATUS_RCAL__STATUS_R__MASK                       0x7f
#  define SRM_BIAS_STATUS_RCAL__STATUS_R__OFFSET                     0

#define SRM_BIAS_CK_FSM_STRT_DIV__ADDRESS                      0x6177
#define SRM_BIAS_CK_FSM_STRT_DIV__DEFAULT                      0x7f
#define SRM_BIAS_CK_FSM_STRT_DIV__READ(die)                  srm_reg_read(die, SRM_BIAS_CK_FSM_STRT_DIV__ADDRESS)
#define SRM_BIAS_CK_FSM_STRT_DIV__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_CK_FSM_STRT_DIV__ADDRESS, (data))
#define SRM_BIAS_CK_FSM_STRT_DIV__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_CK_FSM_STRT_DIV__ADDRESS, (data), (mask))
#  define SRM_BIAS_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__READ(die)                SRM_BIAS_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__GET(SRM_BIAS_CK_FSM_STRT_DIV__READ(die))
#  define SRM_BIAS_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__WRITE(die, fdata)           SRM_BIAS_CK_FSM_STRT_DIV__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__RMW(die, fdata)           SRM_BIAS_CK_FSM_STRT_DIV__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__MASK                       0xff
#  define SRM_BIAS_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__OFFSET                     0

#define SRM_BIAS_CK_FSM_LDO_DIV__ADDRESS                      0x6179
#define SRM_BIAS_CK_FSM_LDO_DIV__DEFAULT                      0xf
#define SRM_BIAS_CK_FSM_LDO_DIV__READ(die)                  srm_reg_read(die, SRM_BIAS_CK_FSM_LDO_DIV__ADDRESS)
#define SRM_BIAS_CK_FSM_LDO_DIV__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_CK_FSM_LDO_DIV__ADDRESS, (data))
#define SRM_BIAS_CK_FSM_LDO_DIV__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_CK_FSM_LDO_DIV__ADDRESS, (data), (mask))
#  define SRM_BIAS_CK_FSM_LDO_DIV__CK_FSM_LDO_DIV__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_CK_FSM_LDO_DIV__CK_FSM_LDO_DIV__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_CK_FSM_LDO_DIV__CK_FSM_LDO_DIV__READ(die)                SRM_BIAS_CK_FSM_LDO_DIV__CK_FSM_LDO_DIV__GET(SRM_BIAS_CK_FSM_LDO_DIV__READ(die))
#  define SRM_BIAS_CK_FSM_LDO_DIV__CK_FSM_LDO_DIV__WRITE(die, fdata)           SRM_BIAS_CK_FSM_LDO_DIV__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_CK_FSM_LDO_DIV__CK_FSM_LDO_DIV__RMW(die, fdata)           SRM_BIAS_CK_FSM_LDO_DIV__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_CK_FSM_LDO_DIV__CK_FSM_LDO_DIV__MASK                       0xff
#  define SRM_BIAS_CK_FSM_LDO_DIV__CK_FSM_LDO_DIV__OFFSET                     0

#define SRM_BIAS_IADC_INP_SEL__ADDRESS                      0x617b
#define SRM_BIAS_IADC_INP_SEL__DEFAULT                      0x1
#define SRM_BIAS_IADC_INP_SEL__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_INP_SEL__ADDRESS)
#define SRM_BIAS_IADC_INP_SEL__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_INP_SEL__ADDRESS, (data))
#define SRM_BIAS_IADC_INP_SEL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_INP_SEL__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_INP_SEL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_BIAS_IADC_INP_SEL__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_BIAS_IADC_INP_SEL__RSRVD1__READ(die)                SRM_BIAS_IADC_INP_SEL__RSRVD1__GET(SRM_BIAS_IADC_INP_SEL__READ(die))
#  define SRM_BIAS_IADC_INP_SEL__RSRVD1__WRITE(die, fdata)           SRM_BIAS_IADC_INP_SEL__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_BIAS_IADC_INP_SEL__RSRVD1__RMW(die, fdata)           SRM_BIAS_IADC_INP_SEL__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_BIAS_IADC_INP_SEL__RSRVD1__MASK                       0xf
#  define SRM_BIAS_IADC_INP_SEL__RSRVD1__OFFSET                     4
#  define SRM_BIAS_IADC_INP_SEL__IADC_INPUT_SEL__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_BIAS_IADC_INP_SEL__IADC_INPUT_SEL__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_BIAS_IADC_INP_SEL__IADC_INPUT_SEL__READ(die)                SRM_BIAS_IADC_INP_SEL__IADC_INPUT_SEL__GET(SRM_BIAS_IADC_INP_SEL__READ(die))
#  define SRM_BIAS_IADC_INP_SEL__IADC_INPUT_SEL__WRITE(die, fdata)           SRM_BIAS_IADC_INP_SEL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_BIAS_IADC_INP_SEL__IADC_INPUT_SEL__RMW(die, fdata)           SRM_BIAS_IADC_INP_SEL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_BIAS_IADC_INP_SEL__IADC_INPUT_SEL__MASK                       0xf
#  define SRM_BIAS_IADC_INP_SEL__IADC_INPUT_SEL__OFFSET                     0

#define SRM_BIAS_IADC_BUF_SEL__ADDRESS                      0x617c
#define SRM_BIAS_IADC_BUF_SEL__DEFAULT                      0x0
#define SRM_BIAS_IADC_BUF_SEL__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_BUF_SEL__ADDRESS)
#define SRM_BIAS_IADC_BUF_SEL__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_BUF_SEL__ADDRESS, (data))
#define SRM_BIAS_IADC_BUF_SEL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_BUF_SEL__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_BUF_SEL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_BIAS_IADC_BUF_SEL__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_BIAS_IADC_BUF_SEL__RSRVD1__READ(die)                SRM_BIAS_IADC_BUF_SEL__RSRVD1__GET(SRM_BIAS_IADC_BUF_SEL__READ(die))
#  define SRM_BIAS_IADC_BUF_SEL__RSRVD1__WRITE(die, fdata)           SRM_BIAS_IADC_BUF_SEL__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_BIAS_IADC_BUF_SEL__RSRVD1__RMW(die, fdata)           SRM_BIAS_IADC_BUF_SEL__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_BIAS_IADC_BUF_SEL__RSRVD1__MASK                       0x7
#  define SRM_BIAS_IADC_BUF_SEL__RSRVD1__OFFSET                     5
#  define SRM_BIAS_IADC_BUF_SEL__IADC_BUF_SEL__SET(rdata, fdata)         (((rdata) & 0xe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SRM_BIAS_IADC_BUF_SEL__IADC_BUF_SEL__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SRM_BIAS_IADC_BUF_SEL__IADC_BUF_SEL__READ(die)                SRM_BIAS_IADC_BUF_SEL__IADC_BUF_SEL__GET(SRM_BIAS_IADC_BUF_SEL__READ(die))
#  define SRM_BIAS_IADC_BUF_SEL__IADC_BUF_SEL__WRITE(die, fdata)           SRM_BIAS_IADC_BUF_SEL__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_BIAS_IADC_BUF_SEL__IADC_BUF_SEL__RMW(die, fdata)           SRM_BIAS_IADC_BUF_SEL__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_BIAS_IADC_BUF_SEL__IADC_BUF_SEL__MASK                       0x1f
#  define SRM_BIAS_IADC_BUF_SEL__IADC_BUF_SEL__OFFSET                     0

#define SRM_BIAS_IADC_REF_SEL__ADDRESS                      0x617d
#define SRM_BIAS_IADC_REF_SEL__DEFAULT                      0xf
#define SRM_BIAS_IADC_REF_SEL__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_REF_SEL__ADDRESS)
#define SRM_BIAS_IADC_REF_SEL__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_REF_SEL__ADDRESS, (data))
#define SRM_BIAS_IADC_REF_SEL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_REF_SEL__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_REF_SEL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_BIAS_IADC_REF_SEL__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_BIAS_IADC_REF_SEL__RSRVD1__READ(die)                SRM_BIAS_IADC_REF_SEL__RSRVD1__GET(SRM_BIAS_IADC_REF_SEL__READ(die))
#  define SRM_BIAS_IADC_REF_SEL__RSRVD1__WRITE(die, fdata)           SRM_BIAS_IADC_REF_SEL__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_BIAS_IADC_REF_SEL__RSRVD1__RMW(die, fdata)           SRM_BIAS_IADC_REF_SEL__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_BIAS_IADC_REF_SEL__RSRVD1__MASK                       0xf
#  define SRM_BIAS_IADC_REF_SEL__RSRVD1__OFFSET                     4
#  define SRM_BIAS_IADC_REF_SEL__IADC_REF_SEL__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_BIAS_IADC_REF_SEL__IADC_REF_SEL__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_BIAS_IADC_REF_SEL__IADC_REF_SEL__READ(die)                SRM_BIAS_IADC_REF_SEL__IADC_REF_SEL__GET(SRM_BIAS_IADC_REF_SEL__READ(die))
#  define SRM_BIAS_IADC_REF_SEL__IADC_REF_SEL__WRITE(die, fdata)           SRM_BIAS_IADC_REF_SEL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_BIAS_IADC_REF_SEL__IADC_REF_SEL__RMW(die, fdata)           SRM_BIAS_IADC_REF_SEL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_BIAS_IADC_REF_SEL__IADC_REF_SEL__MASK                       0xf
#  define SRM_BIAS_IADC_REF_SEL__IADC_REF_SEL__OFFSET                     0

#define SRM_BIAS_IADC_CNTL1__ADDRESS                      0x617e
#define SRM_BIAS_IADC_CNTL1__DEFAULT                      0x0
#define SRM_BIAS_IADC_CNTL1__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_CNTL1__ADDRESS)
#define SRM_BIAS_IADC_CNTL1__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_CNTL1__ADDRESS, (data))
#define SRM_BIAS_IADC_CNTL1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_CNTL1__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_CNTL1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_IADC_CNTL1__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_IADC_CNTL1__RSRVD1__READ(die)                SRM_BIAS_IADC_CNTL1__RSRVD1__GET(SRM_BIAS_IADC_CNTL1__READ(die))
#  define SRM_BIAS_IADC_CNTL1__RSRVD1__WRITE(die, fdata)           SRM_BIAS_IADC_CNTL1__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_IADC_CNTL1__RSRVD1__RMW(die, fdata)           SRM_BIAS_IADC_CNTL1__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_IADC_CNTL1__RSRVD1__MASK                       0x1
#  define SRM_BIAS_IADC_CNTL1__RSRVD1__OFFSET                     7
#  define SRM_BIAS_IADC_CNTL1__IADC_NAVG__SET(rdata, fdata)         (((rdata) & 0x8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SRM_BIAS_IADC_CNTL1__IADC_NAVG__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SRM_BIAS_IADC_CNTL1__IADC_NAVG__READ(die)                SRM_BIAS_IADC_CNTL1__IADC_NAVG__GET(SRM_BIAS_IADC_CNTL1__READ(die))
#  define SRM_BIAS_IADC_CNTL1__IADC_NAVG__WRITE(die, fdata)           SRM_BIAS_IADC_CNTL1__RMW(die, (fdata)<<4, 0x70)
#  define SRM_BIAS_IADC_CNTL1__IADC_NAVG__RMW(die, fdata)           SRM_BIAS_IADC_CNTL1__RMW(die, (fdata)<<4, 0x70)
#  define SRM_BIAS_IADC_CNTL1__IADC_NAVG__MASK                       0x7
#  define SRM_BIAS_IADC_CNTL1__IADC_NAVG__OFFSET                     4
#  define SRM_BIAS_IADC_CNTL1__IADC_STRT_CONV__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_BIAS_IADC_CNTL1__IADC_STRT_CONV__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_BIAS_IADC_CNTL1__IADC_STRT_CONV__READ(die)                SRM_BIAS_IADC_CNTL1__IADC_STRT_CONV__GET(SRM_BIAS_IADC_CNTL1__READ(die))
#  define SRM_BIAS_IADC_CNTL1__IADC_STRT_CONV__WRITE(die, fdata)           SRM_BIAS_IADC_CNTL1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_IADC_CNTL1__IADC_STRT_CONV__RMW(die, fdata)           SRM_BIAS_IADC_CNTL1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_BIAS_IADC_CNTL1__IADC_STRT_CONV__MASK                       0x1
#  define SRM_BIAS_IADC_CNTL1__IADC_STRT_CONV__OFFSET                     3
#  define SRM_BIAS_IADC_CNTL1__IADC_BYPASS_REF_BUF__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_BIAS_IADC_CNTL1__IADC_BYPASS_REF_BUF__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_BIAS_IADC_CNTL1__IADC_BYPASS_REF_BUF__READ(die)                SRM_BIAS_IADC_CNTL1__IADC_BYPASS_REF_BUF__GET(SRM_BIAS_IADC_CNTL1__READ(die))
#  define SRM_BIAS_IADC_CNTL1__IADC_BYPASS_REF_BUF__WRITE(die, fdata)           SRM_BIAS_IADC_CNTL1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_IADC_CNTL1__IADC_BYPASS_REF_BUF__RMW(die, fdata)           SRM_BIAS_IADC_CNTL1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_BIAS_IADC_CNTL1__IADC_BYPASS_REF_BUF__MASK                       0x1
#  define SRM_BIAS_IADC_CNTL1__IADC_BYPASS_REF_BUF__OFFSET                     2
#  define SRM_BIAS_IADC_CNTL1__IADC_CMP_MODE__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_BIAS_IADC_CNTL1__IADC_CMP_MODE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_BIAS_IADC_CNTL1__IADC_CMP_MODE__READ(die)                SRM_BIAS_IADC_CNTL1__IADC_CMP_MODE__GET(SRM_BIAS_IADC_CNTL1__READ(die))
#  define SRM_BIAS_IADC_CNTL1__IADC_CMP_MODE__WRITE(die, fdata)           SRM_BIAS_IADC_CNTL1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_IADC_CNTL1__IADC_CMP_MODE__RMW(die, fdata)           SRM_BIAS_IADC_CNTL1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_BIAS_IADC_CNTL1__IADC_CMP_MODE__MASK                       0x1
#  define SRM_BIAS_IADC_CNTL1__IADC_CMP_MODE__OFFSET                     1
#  define SRM_BIAS_IADC_CNTL1__IADC_EN_2X_FS__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_BIAS_IADC_CNTL1__IADC_EN_2X_FS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_BIAS_IADC_CNTL1__IADC_EN_2X_FS__READ(die)                SRM_BIAS_IADC_CNTL1__IADC_EN_2X_FS__GET(SRM_BIAS_IADC_CNTL1__READ(die))
#  define SRM_BIAS_IADC_CNTL1__IADC_EN_2X_FS__WRITE(die, fdata)           SRM_BIAS_IADC_CNTL1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_IADC_CNTL1__IADC_EN_2X_FS__RMW(die, fdata)           SRM_BIAS_IADC_CNTL1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_IADC_CNTL1__IADC_EN_2X_FS__MASK                       0x1
#  define SRM_BIAS_IADC_CNTL1__IADC_EN_2X_FS__OFFSET                     0

#define SRM_BIAS_IADC_CNTL2__ADDRESS                      0x617f
#define SRM_BIAS_IADC_CNTL2__DEFAULT                      0x51
#define SRM_BIAS_IADC_CNTL2__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_CNTL2__ADDRESS)
#define SRM_BIAS_IADC_CNTL2__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_CNTL2__ADDRESS, (data))
#define SRM_BIAS_IADC_CNTL2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_CNTL2__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP_REXT__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP_REXT__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP_REXT__READ(die)                SRM_BIAS_IADC_CNTL2__IADC_NSMP_REXT__GET(SRM_BIAS_IADC_CNTL2__READ(die))
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP_REXT__WRITE(die, fdata)           SRM_BIAS_IADC_CNTL2__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP_REXT__RMW(die, fdata)           SRM_BIAS_IADC_CNTL2__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP_REXT__MASK                       0xf
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP_REXT__OFFSET                     4
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP__READ(die)                SRM_BIAS_IADC_CNTL2__IADC_NSMP__GET(SRM_BIAS_IADC_CNTL2__READ(die))
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP__WRITE(die, fdata)           SRM_BIAS_IADC_CNTL2__RMW(die, (fdata)<<0, 0xf)
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP__RMW(die, fdata)           SRM_BIAS_IADC_CNTL2__RMW(die, (fdata)<<0, 0xf)
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP__MASK                       0xf
#  define SRM_BIAS_IADC_CNTL2__IADC_NSMP__OFFSET                     0

#define SRM_BIAS_IADC_CNTL3__ADDRESS                      0x6180
#define SRM_BIAS_IADC_CNTL3__DEFAULT                      0x4
#define SRM_BIAS_IADC_CNTL3__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_CNTL3__ADDRESS)
#define SRM_BIAS_IADC_CNTL3__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_CNTL3__ADDRESS, (data))
#define SRM_BIAS_IADC_CNTL3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_CNTL3__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_CNTL3__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_BIAS_IADC_CNTL3__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_BIAS_IADC_CNTL3__RSRVD1__READ(die)                SRM_BIAS_IADC_CNTL3__RSRVD1__GET(SRM_BIAS_IADC_CNTL3__READ(die))
#  define SRM_BIAS_IADC_CNTL3__RSRVD1__WRITE(die, fdata)           SRM_BIAS_IADC_CNTL3__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_BIAS_IADC_CNTL3__RSRVD1__RMW(die, fdata)           SRM_BIAS_IADC_CNTL3__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_BIAS_IADC_CNTL3__RSRVD1__MASK                       0x7
#  define SRM_BIAS_IADC_CNTL3__RSRVD1__OFFSET                     5
#  define SRM_BIAS_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_BIAS_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_BIAS_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__READ(die)                SRM_BIAS_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__GET(SRM_BIAS_IADC_CNTL3__READ(die))
#  define SRM_BIAS_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__WRITE(die, fdata)           SRM_BIAS_IADC_CNTL3__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__RMW(die, fdata)           SRM_BIAS_IADC_CNTL3__RMW(die, (fdata)<<4, 0x10)
#  define SRM_BIAS_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__MASK                       0x1
#  define SRM_BIAS_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__OFFSET                     4
#  define SRM_BIAS_IADC_CNTL3__IADC_CK_DIV__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_BIAS_IADC_CNTL3__IADC_CK_DIV__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_BIAS_IADC_CNTL3__IADC_CK_DIV__READ(die)                SRM_BIAS_IADC_CNTL3__IADC_CK_DIV__GET(SRM_BIAS_IADC_CNTL3__READ(die))
#  define SRM_BIAS_IADC_CNTL3__IADC_CK_DIV__WRITE(die, fdata)           SRM_BIAS_IADC_CNTL3__RMW(die, (fdata)<<0, 0xf)
#  define SRM_BIAS_IADC_CNTL3__IADC_CK_DIV__RMW(die, fdata)           SRM_BIAS_IADC_CNTL3__RMW(die, (fdata)<<0, 0xf)
#  define SRM_BIAS_IADC_CNTL3__IADC_CK_DIV__MASK                       0xf
#  define SRM_BIAS_IADC_CNTL3__IADC_CK_DIV__OFFSET                     0

#define SRM_BIAS_IADC_DATA_LOW__ADDRESS                      0x6181
#define SRM_BIAS_IADC_DATA_LOW__DEFAULT                      0x0
#define SRM_BIAS_IADC_DATA_LOW__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_DATA_LOW__ADDRESS)
#define SRM_BIAS_IADC_DATA_LOW__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_DATA_LOW__ADDRESS, (data))
#define SRM_BIAS_IADC_DATA_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_DATA_LOW__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_DATA_LOW__IADC_DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_IADC_DATA_LOW__IADC_DATA__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_IADC_DATA_LOW__IADC_DATA__READ(die)                SRM_BIAS_IADC_DATA_LOW__IADC_DATA__GET(SRM_BIAS_IADC_DATA_LOW__READ(die))
#  define SRM_BIAS_IADC_DATA_LOW__IADC_DATA__WRITE(die, fdata)           SRM_BIAS_IADC_DATA_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_IADC_DATA_LOW__IADC_DATA__RMW(die, fdata)           SRM_BIAS_IADC_DATA_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_IADC_DATA_LOW__IADC_DATA__MASK                       0xff
#  define SRM_BIAS_IADC_DATA_LOW__IADC_DATA__OFFSET                     0

#define SRM_BIAS_IADC_DATA_HIGH__ADDRESS                      0x6182
#define SRM_BIAS_IADC_DATA_HIGH__DEFAULT                      0x0
#define SRM_BIAS_IADC_DATA_HIGH__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_DATA_HIGH__ADDRESS)
#define SRM_BIAS_IADC_DATA_HIGH__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_DATA_HIGH__ADDRESS, (data))
#define SRM_BIAS_IADC_DATA_HIGH__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_DATA_HIGH__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_DATA_HIGH__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SRM_BIAS_IADC_DATA_HIGH__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SRM_BIAS_IADC_DATA_HIGH__RSRVD1__READ(die)                SRM_BIAS_IADC_DATA_HIGH__RSRVD1__GET(SRM_BIAS_IADC_DATA_HIGH__READ(die))
#  define SRM_BIAS_IADC_DATA_HIGH__RSRVD1__WRITE(die, fdata)           SRM_BIAS_IADC_DATA_HIGH__RMW(die, (fdata)<<6, 0xc0)
#  define SRM_BIAS_IADC_DATA_HIGH__RSRVD1__RMW(die, fdata)           SRM_BIAS_IADC_DATA_HIGH__RMW(die, (fdata)<<6, 0xc0)
#  define SRM_BIAS_IADC_DATA_HIGH__RSRVD1__MASK                       0x3
#  define SRM_BIAS_IADC_DATA_HIGH__RSRVD1__OFFSET                     6
#  define SRM_BIAS_IADC_DATA_HIGH__IADC_DATA__SET(rdata, fdata)         (((rdata) & 0xc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SRM_BIAS_IADC_DATA_HIGH__IADC_DATA__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SRM_BIAS_IADC_DATA_HIGH__IADC_DATA__READ(die)                SRM_BIAS_IADC_DATA_HIGH__IADC_DATA__GET(SRM_BIAS_IADC_DATA_HIGH__READ(die))
#  define SRM_BIAS_IADC_DATA_HIGH__IADC_DATA__WRITE(die, fdata)           SRM_BIAS_IADC_DATA_HIGH__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_IADC_DATA_HIGH__IADC_DATA__RMW(die, fdata)           SRM_BIAS_IADC_DATA_HIGH__RMW(die, (fdata)<<0, 0x3f)
#  define SRM_BIAS_IADC_DATA_HIGH__IADC_DATA__MASK                       0x3f
#  define SRM_BIAS_IADC_DATA_HIGH__IADC_DATA__OFFSET                     0

#define SRM_BIAS_IADC_OFFSET_BUF1_LOW__ADDRESS                      0x6183
#define SRM_BIAS_IADC_OFFSET_BUF1_LOW__DEFAULT                      0x0
#define SRM_BIAS_IADC_OFFSET_BUF1_LOW__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_OFFSET_BUF1_LOW__ADDRESS)
#define SRM_BIAS_IADC_OFFSET_BUF1_LOW__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_OFFSET_BUF1_LOW__ADDRESS, (data))
#define SRM_BIAS_IADC_OFFSET_BUF1_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_OFFSET_BUF1_LOW__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_OFFSET_BUF1_LOW__IADC_OFFSET_BUF1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_IADC_OFFSET_BUF1_LOW__IADC_OFFSET_BUF1__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_IADC_OFFSET_BUF1_LOW__IADC_OFFSET_BUF1__READ(die)                SRM_BIAS_IADC_OFFSET_BUF1_LOW__IADC_OFFSET_BUF1__GET(SRM_BIAS_IADC_OFFSET_BUF1_LOW__READ(die))
#  define SRM_BIAS_IADC_OFFSET_BUF1_LOW__IADC_OFFSET_BUF1__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF1_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_IADC_OFFSET_BUF1_LOW__IADC_OFFSET_BUF1__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF1_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_IADC_OFFSET_BUF1_LOW__IADC_OFFSET_BUF1__MASK                       0xff
#  define SRM_BIAS_IADC_OFFSET_BUF1_LOW__IADC_OFFSET_BUF1__OFFSET                     0

#define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__ADDRESS                      0x6184
#define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__DEFAULT                      0x0
#define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_OFFSET_BUF1_HIGH__ADDRESS)
#define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_OFFSET_BUF1_HIGH__ADDRESS, (data))
#define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_OFFSET_BUF1_HIGH__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RSRVD1__READ(die)                SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RSRVD1__GET(SRM_BIAS_IADC_OFFSET_BUF1_HIGH__READ(die))
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RSRVD1__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RSRVD1__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RSRVD1__MASK                       0x1
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RSRVD1__OFFSET                     7
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__IADC_OFFSET_BUF1__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__IADC_OFFSET_BUF1__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__IADC_OFFSET_BUF1__READ(die)                SRM_BIAS_IADC_OFFSET_BUF1_HIGH__IADC_OFFSET_BUF1__GET(SRM_BIAS_IADC_OFFSET_BUF1_HIGH__READ(die))
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__IADC_OFFSET_BUF1__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__IADC_OFFSET_BUF1__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF1_HIGH__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__IADC_OFFSET_BUF1__MASK                       0x7f
#  define SRM_BIAS_IADC_OFFSET_BUF1_HIGH__IADC_OFFSET_BUF1__OFFSET                     0

#define SRM_BIAS_IADC_OFFSET_BUF2_LOW__ADDRESS                      0x6185
#define SRM_BIAS_IADC_OFFSET_BUF2_LOW__DEFAULT                      0x0
#define SRM_BIAS_IADC_OFFSET_BUF2_LOW__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_OFFSET_BUF2_LOW__ADDRESS)
#define SRM_BIAS_IADC_OFFSET_BUF2_LOW__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_OFFSET_BUF2_LOW__ADDRESS, (data))
#define SRM_BIAS_IADC_OFFSET_BUF2_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_OFFSET_BUF2_LOW__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_OFFSET_BUF2_LOW__IADC_OFFSET_BUF2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_IADC_OFFSET_BUF2_LOW__IADC_OFFSET_BUF2__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_IADC_OFFSET_BUF2_LOW__IADC_OFFSET_BUF2__READ(die)                SRM_BIAS_IADC_OFFSET_BUF2_LOW__IADC_OFFSET_BUF2__GET(SRM_BIAS_IADC_OFFSET_BUF2_LOW__READ(die))
#  define SRM_BIAS_IADC_OFFSET_BUF2_LOW__IADC_OFFSET_BUF2__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF2_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_IADC_OFFSET_BUF2_LOW__IADC_OFFSET_BUF2__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF2_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_IADC_OFFSET_BUF2_LOW__IADC_OFFSET_BUF2__MASK                       0xff
#  define SRM_BIAS_IADC_OFFSET_BUF2_LOW__IADC_OFFSET_BUF2__OFFSET                     0

#define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__ADDRESS                      0x6186
#define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__DEFAULT                      0x0
#define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_OFFSET_BUF2_HIGH__ADDRESS)
#define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_OFFSET_BUF2_HIGH__ADDRESS, (data))
#define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_OFFSET_BUF2_HIGH__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RSRVD1__READ(die)                SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RSRVD1__GET(SRM_BIAS_IADC_OFFSET_BUF2_HIGH__READ(die))
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RSRVD1__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RSRVD1__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RSRVD1__MASK                       0x1
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RSRVD1__OFFSET                     7
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__IADC_OFFSET_BUF2__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__IADC_OFFSET_BUF2__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__IADC_OFFSET_BUF2__READ(die)                SRM_BIAS_IADC_OFFSET_BUF2_HIGH__IADC_OFFSET_BUF2__GET(SRM_BIAS_IADC_OFFSET_BUF2_HIGH__READ(die))
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__IADC_OFFSET_BUF2__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__IADC_OFFSET_BUF2__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF2_HIGH__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__IADC_OFFSET_BUF2__MASK                       0x7f
#  define SRM_BIAS_IADC_OFFSET_BUF2_HIGH__IADC_OFFSET_BUF2__OFFSET                     0

#define SRM_BIAS_IADC_OFFSET_BUF3_LOW__ADDRESS                      0x6187
#define SRM_BIAS_IADC_OFFSET_BUF3_LOW__DEFAULT                      0x0
#define SRM_BIAS_IADC_OFFSET_BUF3_LOW__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_OFFSET_BUF3_LOW__ADDRESS)
#define SRM_BIAS_IADC_OFFSET_BUF3_LOW__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_OFFSET_BUF3_LOW__ADDRESS, (data))
#define SRM_BIAS_IADC_OFFSET_BUF3_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_OFFSET_BUF3_LOW__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_OFFSET_BUF3_LOW__IADC_OFFSET_BUF3__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_IADC_OFFSET_BUF3_LOW__IADC_OFFSET_BUF3__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_IADC_OFFSET_BUF3_LOW__IADC_OFFSET_BUF3__READ(die)                SRM_BIAS_IADC_OFFSET_BUF3_LOW__IADC_OFFSET_BUF3__GET(SRM_BIAS_IADC_OFFSET_BUF3_LOW__READ(die))
#  define SRM_BIAS_IADC_OFFSET_BUF3_LOW__IADC_OFFSET_BUF3__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF3_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_IADC_OFFSET_BUF3_LOW__IADC_OFFSET_BUF3__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF3_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_IADC_OFFSET_BUF3_LOW__IADC_OFFSET_BUF3__MASK                       0xff
#  define SRM_BIAS_IADC_OFFSET_BUF3_LOW__IADC_OFFSET_BUF3__OFFSET                     0

#define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__ADDRESS                      0x6188
#define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__DEFAULT                      0x0
#define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_OFFSET_BUF3_HIGH__ADDRESS)
#define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_OFFSET_BUF3_HIGH__ADDRESS, (data))
#define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_OFFSET_BUF3_HIGH__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RSRVD1__READ(die)                SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RSRVD1__GET(SRM_BIAS_IADC_OFFSET_BUF3_HIGH__READ(die))
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RSRVD1__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RSRVD1__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RSRVD1__MASK                       0x1
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RSRVD1__OFFSET                     7
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__IADC_OFFSET_BUF3__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__IADC_OFFSET_BUF3__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__IADC_OFFSET_BUF3__READ(die)                SRM_BIAS_IADC_OFFSET_BUF3_HIGH__IADC_OFFSET_BUF3__GET(SRM_BIAS_IADC_OFFSET_BUF3_HIGH__READ(die))
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__IADC_OFFSET_BUF3__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__IADC_OFFSET_BUF3__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF3_HIGH__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__IADC_OFFSET_BUF3__MASK                       0x7f
#  define SRM_BIAS_IADC_OFFSET_BUF3_HIGH__IADC_OFFSET_BUF3__OFFSET                     0

#define SRM_BIAS_IADC_OFFSET_BUF4_LOW__ADDRESS                      0x6189
#define SRM_BIAS_IADC_OFFSET_BUF4_LOW__DEFAULT                      0x0
#define SRM_BIAS_IADC_OFFSET_BUF4_LOW__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_OFFSET_BUF4_LOW__ADDRESS)
#define SRM_BIAS_IADC_OFFSET_BUF4_LOW__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_OFFSET_BUF4_LOW__ADDRESS, (data))
#define SRM_BIAS_IADC_OFFSET_BUF4_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_OFFSET_BUF4_LOW__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_OFFSET_BUF4_LOW__IADC_OFFSET_BUF4__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_IADC_OFFSET_BUF4_LOW__IADC_OFFSET_BUF4__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_IADC_OFFSET_BUF4_LOW__IADC_OFFSET_BUF4__READ(die)                SRM_BIAS_IADC_OFFSET_BUF4_LOW__IADC_OFFSET_BUF4__GET(SRM_BIAS_IADC_OFFSET_BUF4_LOW__READ(die))
#  define SRM_BIAS_IADC_OFFSET_BUF4_LOW__IADC_OFFSET_BUF4__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF4_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_IADC_OFFSET_BUF4_LOW__IADC_OFFSET_BUF4__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF4_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_IADC_OFFSET_BUF4_LOW__IADC_OFFSET_BUF4__MASK                       0xff
#  define SRM_BIAS_IADC_OFFSET_BUF4_LOW__IADC_OFFSET_BUF4__OFFSET                     0

#define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__ADDRESS                      0x618a
#define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__DEFAULT                      0x0
#define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_OFFSET_BUF4_HIGH__ADDRESS)
#define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_OFFSET_BUF4_HIGH__ADDRESS, (data))
#define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_OFFSET_BUF4_HIGH__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RSRVD1__READ(die)                SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RSRVD1__GET(SRM_BIAS_IADC_OFFSET_BUF4_HIGH__READ(die))
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RSRVD1__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RSRVD1__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RSRVD1__MASK                       0x1
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RSRVD1__OFFSET                     7
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__IADC_OFFSET_BUF4__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__IADC_OFFSET_BUF4__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__IADC_OFFSET_BUF4__READ(die)                SRM_BIAS_IADC_OFFSET_BUF4_HIGH__IADC_OFFSET_BUF4__GET(SRM_BIAS_IADC_OFFSET_BUF4_HIGH__READ(die))
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__IADC_OFFSET_BUF4__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__IADC_OFFSET_BUF4__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_BUF4_HIGH__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__IADC_OFFSET_BUF4__MASK                       0x7f
#  define SRM_BIAS_IADC_OFFSET_BUF4_HIGH__IADC_OFFSET_BUF4__OFFSET                     0

#define SRM_BIAS_IADC_OFFSET_TEMP_LOW__ADDRESS                      0x618b
#define SRM_BIAS_IADC_OFFSET_TEMP_LOW__DEFAULT                      0x0
#define SRM_BIAS_IADC_OFFSET_TEMP_LOW__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_OFFSET_TEMP_LOW__ADDRESS)
#define SRM_BIAS_IADC_OFFSET_TEMP_LOW__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_OFFSET_TEMP_LOW__ADDRESS, (data))
#define SRM_BIAS_IADC_OFFSET_TEMP_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_OFFSET_TEMP_LOW__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_OFFSET_TEMP_LOW__IADC_OFFSET_TEMP__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_IADC_OFFSET_TEMP_LOW__IADC_OFFSET_TEMP__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_IADC_OFFSET_TEMP_LOW__IADC_OFFSET_TEMP__READ(die)                SRM_BIAS_IADC_OFFSET_TEMP_LOW__IADC_OFFSET_TEMP__GET(SRM_BIAS_IADC_OFFSET_TEMP_LOW__READ(die))
#  define SRM_BIAS_IADC_OFFSET_TEMP_LOW__IADC_OFFSET_TEMP__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_TEMP_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_IADC_OFFSET_TEMP_LOW__IADC_OFFSET_TEMP__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_TEMP_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_IADC_OFFSET_TEMP_LOW__IADC_OFFSET_TEMP__MASK                       0xff
#  define SRM_BIAS_IADC_OFFSET_TEMP_LOW__IADC_OFFSET_TEMP__OFFSET                     0

#define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__ADDRESS                      0x618c
#define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__DEFAULT                      0x0
#define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__READ(die)                  srm_reg_read(die, SRM_BIAS_IADC_OFFSET_TEMP_HIGH__ADDRESS)
#define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_IADC_OFFSET_TEMP_HIGH__ADDRESS, (data))
#define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_IADC_OFFSET_TEMP_HIGH__ADDRESS, (data), (mask))
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RSRVD1__READ(die)                SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RSRVD1__GET(SRM_BIAS_IADC_OFFSET_TEMP_HIGH__READ(die))
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RSRVD1__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RSRVD1__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RMW(die, (fdata)<<7, 0x80)
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RSRVD1__MASK                       0x1
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RSRVD1__OFFSET                     7
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__IADC_OFFSET_TEMP__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__IADC_OFFSET_TEMP__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__IADC_OFFSET_TEMP__READ(die)                SRM_BIAS_IADC_OFFSET_TEMP_HIGH__IADC_OFFSET_TEMP__GET(SRM_BIAS_IADC_OFFSET_TEMP_HIGH__READ(die))
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__IADC_OFFSET_TEMP__WRITE(die, fdata)           SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__IADC_OFFSET_TEMP__RMW(die, fdata)           SRM_BIAS_IADC_OFFSET_TEMP_HIGH__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__IADC_OFFSET_TEMP__MASK                       0x7f
#  define SRM_BIAS_IADC_OFFSET_TEMP_HIGH__IADC_OFFSET_TEMP__OFFSET                     0

#define SRM_BIAS_REFEGEN_ATB1__ADDRESS                      0x6191
#define SRM_BIAS_REFEGEN_ATB1__DEFAULT                      0x0
#define SRM_BIAS_REFEGEN_ATB1__READ(die)                  srm_reg_read(die, SRM_BIAS_REFEGEN_ATB1__ADDRESS)
#define SRM_BIAS_REFEGEN_ATB1__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_REFEGEN_ATB1__ADDRESS, (data))
#define SRM_BIAS_REFEGEN_ATB1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_REFEGEN_ATB1__ADDRESS, (data), (mask))
#  define SRM_BIAS_REFEGEN_ATB1__ATB_SEL__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_BIAS_REFEGEN_ATB1__ATB_SEL__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_BIAS_REFEGEN_ATB1__ATB_SEL__READ(die)                SRM_BIAS_REFEGEN_ATB1__ATB_SEL__GET(SRM_BIAS_REFEGEN_ATB1__READ(die))
#  define SRM_BIAS_REFEGEN_ATB1__ATB_SEL__WRITE(die, fdata)           SRM_BIAS_REFEGEN_ATB1__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_REFEGEN_ATB1__ATB_SEL__RMW(die, fdata)           SRM_BIAS_REFEGEN_ATB1__RMW(die, (fdata)<<0, 0xff)
#  define SRM_BIAS_REFEGEN_ATB1__ATB_SEL__MASK                       0xff
#  define SRM_BIAS_REFEGEN_ATB1__ATB_SEL__OFFSET                     0

#define SRM_BIAS_FSM_DEBUG0__ADDRESS                      0x6193
#define SRM_BIAS_FSM_DEBUG0__DEFAULT                      0x0
#define SRM_BIAS_FSM_DEBUG0__READ(die)                  srm_reg_read(die, SRM_BIAS_FSM_DEBUG0__ADDRESS)
#define SRM_BIAS_FSM_DEBUG0__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_FSM_DEBUG0__ADDRESS, (data))
#define SRM_BIAS_FSM_DEBUG0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_FSM_DEBUG0__ADDRESS, (data), (mask))
#  define SRM_BIAS_FSM_DEBUG0__NAVG_STATE__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SRM_BIAS_FSM_DEBUG0__NAVG_STATE__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SRM_BIAS_FSM_DEBUG0__NAVG_STATE__READ(die)                SRM_BIAS_FSM_DEBUG0__NAVG_STATE__GET(SRM_BIAS_FSM_DEBUG0__READ(die))
#  define SRM_BIAS_FSM_DEBUG0__NAVG_STATE__WRITE(die, fdata)           SRM_BIAS_FSM_DEBUG0__RMW(die, (fdata)<<6, 0xc0)
#  define SRM_BIAS_FSM_DEBUG0__NAVG_STATE__RMW(die, fdata)           SRM_BIAS_FSM_DEBUG0__RMW(die, (fdata)<<6, 0xc0)
#  define SRM_BIAS_FSM_DEBUG0__NAVG_STATE__MASK                       0x3
#  define SRM_BIAS_FSM_DEBUG0__NAVG_STATE__OFFSET                     6
#  define SRM_BIAS_FSM_DEBUG0__NSMP_STATE__SET(rdata, fdata)         (((rdata) & 0xcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SRM_BIAS_FSM_DEBUG0__NSMP_STATE__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SRM_BIAS_FSM_DEBUG0__NSMP_STATE__READ(die)                SRM_BIAS_FSM_DEBUG0__NSMP_STATE__GET(SRM_BIAS_FSM_DEBUG0__READ(die))
#  define SRM_BIAS_FSM_DEBUG0__NSMP_STATE__WRITE(die, fdata)           SRM_BIAS_FSM_DEBUG0__RMW(die, (fdata)<<4, 0x30)
#  define SRM_BIAS_FSM_DEBUG0__NSMP_STATE__RMW(die, fdata)           SRM_BIAS_FSM_DEBUG0__RMW(die, (fdata)<<4, 0x30)
#  define SRM_BIAS_FSM_DEBUG0__NSMP_STATE__MASK                       0x3
#  define SRM_BIAS_FSM_DEBUG0__NSMP_STATE__OFFSET                     4
#  define SRM_BIAS_FSM_DEBUG0__PU_STATE__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_BIAS_FSM_DEBUG0__PU_STATE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_BIAS_FSM_DEBUG0__PU_STATE__READ(die)                SRM_BIAS_FSM_DEBUG0__PU_STATE__GET(SRM_BIAS_FSM_DEBUG0__READ(die))
#  define SRM_BIAS_FSM_DEBUG0__PU_STATE__WRITE(die, fdata)           SRM_BIAS_FSM_DEBUG0__RMW(die, (fdata)<<0, 0xf)
#  define SRM_BIAS_FSM_DEBUG0__PU_STATE__RMW(die, fdata)           SRM_BIAS_FSM_DEBUG0__RMW(die, (fdata)<<0, 0xf)
#  define SRM_BIAS_FSM_DEBUG0__PU_STATE__MASK                       0xf
#  define SRM_BIAS_FSM_DEBUG0__PU_STATE__OFFSET                     0

#define SRM_BIAS_CAL_INT__ADDRESS                      0x6196
#define SRM_BIAS_CAL_INT__DEFAULT                      0x0
#define SRM_BIAS_CAL_INT__READ(die)                  srm_reg_read(die, SRM_BIAS_CAL_INT__ADDRESS)
#define SRM_BIAS_CAL_INT__WRITE(die, data)             srm_reg_write(die, SRM_BIAS_CAL_INT__ADDRESS, (data))
#define SRM_BIAS_CAL_INT__RMW(die, data, mask)         srm_reg_rmw(die, SRM_BIAS_CAL_INT__ADDRESS, (data), (mask))
#  define SRM_BIAS_CAL_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SRM_BIAS_CAL_INT__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SRM_BIAS_CAL_INT__RSRVD1__READ(die)                SRM_BIAS_CAL_INT__RSRVD1__GET(SRM_BIAS_CAL_INT__READ(die))
#  define SRM_BIAS_CAL_INT__RSRVD1__WRITE(die, fdata)           SRM_BIAS_CAL_INT__RMW(die, (fdata)<<1, 0xfe)
#  define SRM_BIAS_CAL_INT__RSRVD1__RMW(die, fdata)           SRM_BIAS_CAL_INT__RMW(die, (fdata)<<1, 0xfe)
#  define SRM_BIAS_CAL_INT__RSRVD1__MASK                       0x7f
#  define SRM_BIAS_CAL_INT__RSRVD1__OFFSET                     1
#  define SRM_BIAS_CAL_INT__CAL_DONE__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_BIAS_CAL_INT__CAL_DONE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_BIAS_CAL_INT__CAL_DONE__READ(die)                SRM_BIAS_CAL_INT__CAL_DONE__GET(SRM_BIAS_CAL_INT__READ(die))
#  define SRM_BIAS_CAL_INT__CAL_DONE__WRITE(die, fdata)           SRM_BIAS_CAL_INT__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_CAL_INT__CAL_DONE__RMW(die, fdata)           SRM_BIAS_CAL_INT__RMW(die, (fdata)<<0, 0x1)
#  define SRM_BIAS_CAL_INT__CAL_DONE__MASK                       0x1
#  define SRM_BIAS_CAL_INT__CAL_DONE__OFFSET                     0

#define SRM_ERU_ENB_ICAL__ADDRESS                      0x6225
#define SRM_ERU_ENB_ICAL__DEFAULT                      0x5
#define SRM_ERU_ENB_ICAL__READ(die)                  srm_reg_read(die, SRM_ERU_ENB_ICAL__ADDRESS)
#define SRM_ERU_ENB_ICAL__WRITE(die, data)             srm_reg_write(die, SRM_ERU_ENB_ICAL__ADDRESS, (data))
#define SRM_ERU_ENB_ICAL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_ENB_ICAL__ADDRESS, (data), (mask))
#  define SRM_ERU_ENB_ICAL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xf8))
#  define SRM_ERU_ENB_ICAL__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1f)
#  define SRM_ERU_ENB_ICAL__RSRVD1__READ(die)                SRM_ERU_ENB_ICAL__RSRVD1__GET(SRM_ERU_ENB_ICAL__READ(die))
#  define SRM_ERU_ENB_ICAL__RSRVD1__WRITE(die, fdata)           SRM_ERU_ENB_ICAL__RMW(die, (fdata)<<3, 0xf8)
#  define SRM_ERU_ENB_ICAL__RSRVD1__RMW(die, fdata)           SRM_ERU_ENB_ICAL__RMW(die, (fdata)<<3, 0xf8)
#  define SRM_ERU_ENB_ICAL__RSRVD1__MASK                       0x1f
#  define SRM_ERU_ENB_ICAL__RSRVD1__OFFSET                     3
#  define SRM_ERU_ENB_ICAL__ENB_ICAL__SET(rdata, fdata)         (((rdata) & 0xf8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SRM_ERU_ENB_ICAL__ENB_ICAL__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SRM_ERU_ENB_ICAL__ENB_ICAL__READ(die)                SRM_ERU_ENB_ICAL__ENB_ICAL__GET(SRM_ERU_ENB_ICAL__READ(die))
#  define SRM_ERU_ENB_ICAL__ENB_ICAL__WRITE(die, fdata)           SRM_ERU_ENB_ICAL__RMW(die, (fdata)<<0, 0x7)
#  define SRM_ERU_ENB_ICAL__ENB_ICAL__RMW(die, fdata)           SRM_ERU_ENB_ICAL__RMW(die, (fdata)<<0, 0x7)
#  define SRM_ERU_ENB_ICAL__ENB_ICAL__MASK                       0x7
#  define SRM_ERU_ENB_ICAL__ENB_ICAL__OFFSET                     0

#define SRM_ERU_LDO_RSTB__ADDRESS                      0x623f
#define SRM_ERU_LDO_RSTB__DEFAULT                      0x1
#define SRM_ERU_LDO_RSTB__READ(die)                  srm_reg_read(die, SRM_ERU_LDO_RSTB__ADDRESS)
#define SRM_ERU_LDO_RSTB__WRITE(die, data)             srm_reg_write(die, SRM_ERU_LDO_RSTB__ADDRESS, (data))
#define SRM_ERU_LDO_RSTB__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_LDO_RSTB__ADDRESS, (data), (mask))
#  define SRM_ERU_LDO_RSTB__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SRM_ERU_LDO_RSTB__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SRM_ERU_LDO_RSTB__RSRVD1__READ(die)                SRM_ERU_LDO_RSTB__RSRVD1__GET(SRM_ERU_LDO_RSTB__READ(die))
#  define SRM_ERU_LDO_RSTB__RSRVD1__WRITE(die, fdata)           SRM_ERU_LDO_RSTB__RMW(die, (fdata)<<1, 0xfe)
#  define SRM_ERU_LDO_RSTB__RSRVD1__RMW(die, fdata)           SRM_ERU_LDO_RSTB__RMW(die, (fdata)<<1, 0xfe)
#  define SRM_ERU_LDO_RSTB__RSRVD1__MASK                       0x7f
#  define SRM_ERU_LDO_RSTB__RSRVD1__OFFSET                     1
#  define SRM_ERU_LDO_RSTB__LDO_RSTB__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_ERU_LDO_RSTB__LDO_RSTB__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_ERU_LDO_RSTB__LDO_RSTB__READ(die)                SRM_ERU_LDO_RSTB__LDO_RSTB__GET(SRM_ERU_LDO_RSTB__READ(die))
#  define SRM_ERU_LDO_RSTB__LDO_RSTB__WRITE(die, fdata)           SRM_ERU_LDO_RSTB__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_LDO_RSTB__LDO_RSTB__RMW(die, fdata)           SRM_ERU_LDO_RSTB__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_LDO_RSTB__LDO_RSTB__MASK                       0x1
#  define SRM_ERU_LDO_RSTB__LDO_RSTB__OFFSET                     0

#define SRM_ERU_LDO_CNTL0_LOW__ADDRESS                      0x6242
#define SRM_ERU_LDO_CNTL0_LOW__DEFAULT                      0x0
#define SRM_ERU_LDO_CNTL0_LOW__READ(die)                  srm_reg_read(die, SRM_ERU_LDO_CNTL0_LOW__ADDRESS)
#define SRM_ERU_LDO_CNTL0_LOW__WRITE(die, data)             srm_reg_write(die, SRM_ERU_LDO_CNTL0_LOW__ADDRESS, (data))
#define SRM_ERU_LDO_CNTL0_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_LDO_CNTL0_LOW__ADDRESS, (data), (mask))
#  define SRM_ERU_LDO_CNTL0_LOW__LDO_CNTL0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_ERU_LDO_CNTL0_LOW__LDO_CNTL0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_ERU_LDO_CNTL0_LOW__LDO_CNTL0__READ(die)                SRM_ERU_LDO_CNTL0_LOW__LDO_CNTL0__GET(SRM_ERU_LDO_CNTL0_LOW__READ(die))
#  define SRM_ERU_LDO_CNTL0_LOW__LDO_CNTL0__WRITE(die, fdata)           SRM_ERU_LDO_CNTL0_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_ERU_LDO_CNTL0_LOW__LDO_CNTL0__RMW(die, fdata)           SRM_ERU_LDO_CNTL0_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_ERU_LDO_CNTL0_LOW__LDO_CNTL0__MASK                       0xff
#  define SRM_ERU_LDO_CNTL0_LOW__LDO_CNTL0__OFFSET                     0

#define SRM_ERU_LDO_CNTL10_LOW__ADDRESS                      0x6256
#define SRM_ERU_LDO_CNTL10_LOW__DEFAULT                      0x0
#define SRM_ERU_LDO_CNTL10_LOW__READ(die)                  srm_reg_read(die, SRM_ERU_LDO_CNTL10_LOW__ADDRESS)
#define SRM_ERU_LDO_CNTL10_LOW__WRITE(die, data)             srm_reg_write(die, SRM_ERU_LDO_CNTL10_LOW__ADDRESS, (data))
#define SRM_ERU_LDO_CNTL10_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_LDO_CNTL10_LOW__ADDRESS, (data), (mask))
#  define SRM_ERU_LDO_CNTL10_LOW__LDO_CNTL10__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_ERU_LDO_CNTL10_LOW__LDO_CNTL10__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_ERU_LDO_CNTL10_LOW__LDO_CNTL10__READ(die)                SRM_ERU_LDO_CNTL10_LOW__LDO_CNTL10__GET(SRM_ERU_LDO_CNTL10_LOW__READ(die))
#  define SRM_ERU_LDO_CNTL10_LOW__LDO_CNTL10__WRITE(die, fdata)           SRM_ERU_LDO_CNTL10_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_ERU_LDO_CNTL10_LOW__LDO_CNTL10__RMW(die, fdata)           SRM_ERU_LDO_CNTL10_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_ERU_LDO_CNTL10_LOW__LDO_CNTL10__MASK                       0xff
#  define SRM_ERU_LDO_CNTL10_LOW__LDO_CNTL10__OFFSET                     0

#define SRM_ERU_LDO_CNTL11_LOW__ADDRESS                      0x6258
#define SRM_ERU_LDO_CNTL11_LOW__DEFAULT                      0x40
#define SRM_ERU_LDO_CNTL11_LOW__READ(die)                  srm_reg_read(die, SRM_ERU_LDO_CNTL11_LOW__ADDRESS)
#define SRM_ERU_LDO_CNTL11_LOW__WRITE(die, data)             srm_reg_write(die, SRM_ERU_LDO_CNTL11_LOW__ADDRESS, (data))
#define SRM_ERU_LDO_CNTL11_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_LDO_CNTL11_LOW__ADDRESS, (data), (mask))
#  define SRM_ERU_LDO_CNTL11_LOW__LDO_CNTL11__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_ERU_LDO_CNTL11_LOW__LDO_CNTL11__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_ERU_LDO_CNTL11_LOW__LDO_CNTL11__READ(die)                SRM_ERU_LDO_CNTL11_LOW__LDO_CNTL11__GET(SRM_ERU_LDO_CNTL11_LOW__READ(die))
#  define SRM_ERU_LDO_CNTL11_LOW__LDO_CNTL11__WRITE(die, fdata)           SRM_ERU_LDO_CNTL11_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_ERU_LDO_CNTL11_LOW__LDO_CNTL11__RMW(die, fdata)           SRM_ERU_LDO_CNTL11_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_ERU_LDO_CNTL11_LOW__LDO_CNTL11__MASK                       0xff
#  define SRM_ERU_LDO_CNTL11_LOW__LDO_CNTL11__OFFSET                     0

#define SRM_ERU_LDO_LTCH_EN_LOW__ADDRESS                      0x625a
#define SRM_ERU_LDO_LTCH_EN_LOW__DEFAULT                      0x0
#define SRM_ERU_LDO_LTCH_EN_LOW__READ(die)                  srm_reg_read(die, SRM_ERU_LDO_LTCH_EN_LOW__ADDRESS)
#define SRM_ERU_LDO_LTCH_EN_LOW__WRITE(die, data)             srm_reg_write(die, SRM_ERU_LDO_LTCH_EN_LOW__ADDRESS, (data))
#define SRM_ERU_LDO_LTCH_EN_LOW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_LDO_LTCH_EN_LOW__ADDRESS, (data), (mask))
#  define SRM_ERU_LDO_LTCH_EN_LOW__LDO_LTCH_EN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_ERU_LDO_LTCH_EN_LOW__LDO_LTCH_EN__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_ERU_LDO_LTCH_EN_LOW__LDO_LTCH_EN__READ(die)                SRM_ERU_LDO_LTCH_EN_LOW__LDO_LTCH_EN__GET(SRM_ERU_LDO_LTCH_EN_LOW__READ(die))
#  define SRM_ERU_LDO_LTCH_EN_LOW__LDO_LTCH_EN__WRITE(die, fdata)           SRM_ERU_LDO_LTCH_EN_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_ERU_LDO_LTCH_EN_LOW__LDO_LTCH_EN__RMW(die, fdata)           SRM_ERU_LDO_LTCH_EN_LOW__RMW(die, (fdata)<<0, 0xff)
#  define SRM_ERU_LDO_LTCH_EN_LOW__LDO_LTCH_EN__MASK                       0xff
#  define SRM_ERU_LDO_LTCH_EN_LOW__LDO_LTCH_EN__OFFSET                     0

#define SRM_ERU_LDO_LTCH_EN_HIGH__ADDRESS                      0x625b
#define SRM_ERU_LDO_LTCH_EN_HIGH__DEFAULT                      0x0
#define SRM_ERU_LDO_LTCH_EN_HIGH__READ(die)                  srm_reg_read(die, SRM_ERU_LDO_LTCH_EN_HIGH__ADDRESS)
#define SRM_ERU_LDO_LTCH_EN_HIGH__WRITE(die, data)             srm_reg_write(die, SRM_ERU_LDO_LTCH_EN_HIGH__ADDRESS, (data))
#define SRM_ERU_LDO_LTCH_EN_HIGH__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_LDO_LTCH_EN_HIGH__ADDRESS, (data), (mask))
#  define SRM_ERU_LDO_LTCH_EN_HIGH__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_ERU_LDO_LTCH_EN_HIGH__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_ERU_LDO_LTCH_EN_HIGH__RSRVD1__READ(die)                SRM_ERU_LDO_LTCH_EN_HIGH__RSRVD1__GET(SRM_ERU_LDO_LTCH_EN_HIGH__READ(die))
#  define SRM_ERU_LDO_LTCH_EN_HIGH__RSRVD1__WRITE(die, fdata)           SRM_ERU_LDO_LTCH_EN_HIGH__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_ERU_LDO_LTCH_EN_HIGH__RSRVD1__RMW(die, fdata)           SRM_ERU_LDO_LTCH_EN_HIGH__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_ERU_LDO_LTCH_EN_HIGH__RSRVD1__MASK                       0xf
#  define SRM_ERU_LDO_LTCH_EN_HIGH__RSRVD1__OFFSET                     4
#  define SRM_ERU_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_ERU_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_ERU_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__READ(die)                SRM_ERU_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__GET(SRM_ERU_LDO_LTCH_EN_HIGH__READ(die))
#  define SRM_ERU_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__WRITE(die, fdata)           SRM_ERU_LDO_LTCH_EN_HIGH__RMW(die, (fdata)<<0, 0xf)
#  define SRM_ERU_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__RMW(die, fdata)           SRM_ERU_LDO_LTCH_EN_HIGH__RMW(die, (fdata)<<0, 0xf)
#  define SRM_ERU_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__MASK                       0xf
#  define SRM_ERU_LDO_LTCH_EN_HIGH__LDO_LTCH_EN__OFFSET                     0

#define SRM_ERU_REFEGEN_CNTL1__ADDRESS                      0x625c
#define SRM_ERU_REFEGEN_CNTL1__DEFAULT                      0x0
#define SRM_ERU_REFEGEN_CNTL1__READ(die)                  srm_reg_read(die, SRM_ERU_REFEGEN_CNTL1__ADDRESS)
#define SRM_ERU_REFEGEN_CNTL1__WRITE(die, data)             srm_reg_write(die, SRM_ERU_REFEGEN_CNTL1__ADDRESS, (data))
#define SRM_ERU_REFEGEN_CNTL1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_REFEGEN_CNTL1__ADDRESS, (data), (mask))
#  define SRM_ERU_REFEGEN_CNTL1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_ERU_REFEGEN_CNTL1__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL1__RSRVD1__READ(die)                SRM_ERU_REFEGEN_CNTL1__RSRVD1__GET(SRM_ERU_REFEGEN_CNTL1__READ(die))
#  define SRM_ERU_REFEGEN_CNTL1__RSRVD1__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_REFEGEN_CNTL1__RSRVD1__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_REFEGEN_CNTL1__RSRVD1__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL1__RSRVD1__OFFSET                     7
#  define SRM_ERU_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_ERU_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__READ(die)                SRM_ERU_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__GET(SRM_ERU_REFEGEN_CNTL1__READ(die))
#  define SRM_ERU_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<6, 0x40)
#  define SRM_ERU_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<6, 0x40)
#  define SRM_ERU_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL1__LDO_REFGEN_BYPASS__OFFSET                     6
#  define SRM_ERU_REFEGEN_CNTL1__PU_IADC__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_ERU_REFEGEN_CNTL1__PU_IADC__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL1__PU_IADC__READ(die)                SRM_ERU_REFEGEN_CNTL1__PU_IADC__GET(SRM_ERU_REFEGEN_CNTL1__READ(die))
#  define SRM_ERU_REFEGEN_CNTL1__PU_IADC__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<5, 0x20)
#  define SRM_ERU_REFEGEN_CNTL1__PU_IADC__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<5, 0x20)
#  define SRM_ERU_REFEGEN_CNTL1__PU_IADC__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL1__PU_IADC__OFFSET                     5
#  define SRM_ERU_REFEGEN_CNTL1__PU_LDO_CAL__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_ERU_REFEGEN_CNTL1__PU_LDO_CAL__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL1__PU_LDO_CAL__READ(die)                SRM_ERU_REFEGEN_CNTL1__PU_LDO_CAL__GET(SRM_ERU_REFEGEN_CNTL1__READ(die))
#  define SRM_ERU_REFEGEN_CNTL1__PU_LDO_CAL__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_REFEGEN_CNTL1__PU_LDO_CAL__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_REFEGEN_CNTL1__PU_LDO_CAL__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL1__PU_LDO_CAL__OFFSET                     4
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPTAT__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPTAT__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPTAT__READ(die)                SRM_ERU_REFEGEN_CNTL1__PU_IPTAT__GET(SRM_ERU_REFEGEN_CNTL1__READ(die))
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPTAT__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPTAT__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPTAT__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPTAT__OFFSET                     3
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPOLY__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPOLY__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPOLY__READ(die)                SRM_ERU_REFEGEN_CNTL1__PU_IPOLY__GET(SRM_ERU_REFEGEN_CNTL1__READ(die))
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPOLY__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPOLY__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPOLY__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL1__PU_IPOLY__OFFSET                     2
#  define SRM_ERU_REFEGEN_CNTL1__PU_ICONST__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_ERU_REFEGEN_CNTL1__PU_ICONST__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL1__PU_ICONST__READ(die)                SRM_ERU_REFEGEN_CNTL1__PU_ICONST__GET(SRM_ERU_REFEGEN_CNTL1__READ(die))
#  define SRM_ERU_REFEGEN_CNTL1__PU_ICONST__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFEGEN_CNTL1__PU_ICONST__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFEGEN_CNTL1__PU_ICONST__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL1__PU_ICONST__OFFSET                     1
#  define SRM_ERU_REFEGEN_CNTL1__PU_REFGEN_LDO__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_ERU_REFEGEN_CNTL1__PU_REFGEN_LDO__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL1__PU_REFGEN_LDO__READ(die)                SRM_ERU_REFEGEN_CNTL1__PU_REFGEN_LDO__GET(SRM_ERU_REFEGEN_CNTL1__READ(die))
#  define SRM_ERU_REFEGEN_CNTL1__PU_REFGEN_LDO__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFEGEN_CNTL1__PU_REFGEN_LDO__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFEGEN_CNTL1__PU_REFGEN_LDO__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL1__PU_REFGEN_LDO__OFFSET                     0

#define SRM_ERU_REFEGEN_CNTL3__ADDRESS                      0x625e
#define SRM_ERU_REFEGEN_CNTL3__DEFAULT                      0x1e
#define SRM_ERU_REFEGEN_CNTL3__READ(die)                  srm_reg_read(die, SRM_ERU_REFEGEN_CNTL3__ADDRESS)
#define SRM_ERU_REFEGEN_CNTL3__WRITE(die, data)             srm_reg_write(die, SRM_ERU_REFEGEN_CNTL3__ADDRESS, (data))
#define SRM_ERU_REFEGEN_CNTL3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_REFEGEN_CNTL3__ADDRESS, (data), (mask))
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_RCAL__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_RCAL__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_RCAL__READ(die)                SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_RCAL__GET(SRM_ERU_REFEGEN_CNTL3__READ(die))
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_RCAL__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_RCAL__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_RCAL__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_RCAL__OFFSET                     7
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_IADC__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_IADC__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_IADC__READ(die)                SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_IADC__GET(SRM_ERU_REFEGEN_CNTL3__READ(die))
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_IADC__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<6, 0x40)
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_IADC__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<6, 0x40)
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_IADC__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL3__OVRD_FSM_IADC__OFFSET                     6
#  define SRM_ERU_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_ERU_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__READ(die)                SRM_ERU_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__GET(SRM_ERU_REFEGEN_CNTL3__READ(die))
#  define SRM_ERU_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<5, 0x20)
#  define SRM_ERU_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<5, 0x20)
#  define SRM_ERU_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL3__BYPASS_LDO_CAL_VSS__OFFSET                     5
#  define SRM_ERU_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_ERU_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__READ(die)                SRM_ERU_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__GET(SRM_ERU_REFEGEN_CNTL3__READ(die))
#  define SRM_ERU_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL3__DISABLE_EN_USE_REXT__OFFSET                     4
#  define SRM_ERU_REFEGEN_CNTL3__EN_IPTAT_CHOP__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_ERU_REFEGEN_CNTL3__EN_IPTAT_CHOP__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL3__EN_IPTAT_CHOP__READ(die)                SRM_ERU_REFEGEN_CNTL3__EN_IPTAT_CHOP__GET(SRM_ERU_REFEGEN_CNTL3__READ(die))
#  define SRM_ERU_REFEGEN_CNTL3__EN_IPTAT_CHOP__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_REFEGEN_CNTL3__EN_IPTAT_CHOP__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_REFEGEN_CNTL3__EN_IPTAT_CHOP__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL3__EN_IPTAT_CHOP__OFFSET                     3
#  define SRM_ERU_REFEGEN_CNTL3__EN_ICTAT_CHOP__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_ERU_REFEGEN_CNTL3__EN_ICTAT_CHOP__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL3__EN_ICTAT_CHOP__READ(die)                SRM_ERU_REFEGEN_CNTL3__EN_ICTAT_CHOP__GET(SRM_ERU_REFEGEN_CNTL3__READ(die))
#  define SRM_ERU_REFEGEN_CNTL3__EN_ICTAT_CHOP__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_REFEGEN_CNTL3__EN_ICTAT_CHOP__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_REFEGEN_CNTL3__EN_ICTAT_CHOP__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL3__EN_ICTAT_CHOP__OFFSET                     2
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__READ(die)                SRM_ERU_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__GET(SRM_ERU_REFEGEN_CNTL3__READ(die))
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_DISABLE_STRT__OFFSET                     1
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_FORCE_STRT__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_FORCE_STRT__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_FORCE_STRT__READ(die)                SRM_ERU_REFEGEN_CNTL3__IPTAT_FORCE_STRT__GET(SRM_ERU_REFEGEN_CNTL3__READ(die))
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_FORCE_STRT__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_FORCE_STRT__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL3__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_FORCE_STRT__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL3__IPTAT_FORCE_STRT__OFFSET                     0

#define SRM_ERU_REFEGEN_CNTL4__ADDRESS                      0x625f
#define SRM_ERU_REFEGEN_CNTL4__DEFAULT                      0x8
#define SRM_ERU_REFEGEN_CNTL4__READ(die)                  srm_reg_read(die, SRM_ERU_REFEGEN_CNTL4__ADDRESS)
#define SRM_ERU_REFEGEN_CNTL4__WRITE(die, data)             srm_reg_write(die, SRM_ERU_REFEGEN_CNTL4__ADDRESS, (data))
#define SRM_ERU_REFEGEN_CNTL4__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_REFEGEN_CNTL4__ADDRESS, (data), (mask))
#  define SRM_ERU_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_ERU_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__READ(die)                SRM_ERU_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__GET(SRM_ERU_REFEGEN_CNTL4__READ(die))
#  define SRM_ERU_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL4__NO_SUBTRACT_OFFSET__OFFSET                     7
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_REXT__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_REXT__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_REXT__READ(die)                SRM_ERU_REFEGEN_CNTL4__PROVIDE_REXT__GET(SRM_ERU_REFEGEN_CNTL4__READ(die))
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_REXT__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<6, 0x40)
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_REXT__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<6, 0x40)
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_REXT__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_REXT__OFFSET                     6
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_VREF__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_VREF__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_VREF__READ(die)                SRM_ERU_REFEGEN_CNTL4__PROVIDE_VREF__GET(SRM_ERU_REFEGEN_CNTL4__READ(die))
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_VREF__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<5, 0x20)
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_VREF__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<5, 0x20)
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_VREF__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL4__PROVIDE_VREF__OFFSET                     5
#  define SRM_ERU_REFEGEN_CNTL4__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_ERU_REFEGEN_CNTL4__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL4__RSRVD1__READ(die)                SRM_ERU_REFEGEN_CNTL4__RSRVD1__GET(SRM_ERU_REFEGEN_CNTL4__READ(die))
#  define SRM_ERU_REFEGEN_CNTL4__RSRVD1__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_REFEGEN_CNTL4__RSRVD1__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_REFEGEN_CNTL4__RSRVD1__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL4__RSRVD1__OFFSET                     4
#  define SRM_ERU_REFEGEN_CNTL4__USE_REXT__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_ERU_REFEGEN_CNTL4__USE_REXT__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL4__USE_REXT__READ(die)                SRM_ERU_REFEGEN_CNTL4__USE_REXT__GET(SRM_ERU_REFEGEN_CNTL4__READ(die))
#  define SRM_ERU_REFEGEN_CNTL4__USE_REXT__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_REFEGEN_CNTL4__USE_REXT__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_REFEGEN_CNTL4__USE_REXT__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL4__USE_REXT__OFFSET                     3
#  define SRM_ERU_REFEGEN_CNTL4__OVRD_FSM_PU__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_ERU_REFEGEN_CNTL4__OVRD_FSM_PU__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL4__OVRD_FSM_PU__READ(die)                SRM_ERU_REFEGEN_CNTL4__OVRD_FSM_PU__GET(SRM_ERU_REFEGEN_CNTL4__READ(die))
#  define SRM_ERU_REFEGEN_CNTL4__OVRD_FSM_PU__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_REFEGEN_CNTL4__OVRD_FSM_PU__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_REFEGEN_CNTL4__OVRD_FSM_PU__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL4__OVRD_FSM_PU__OFFSET                     2
#  define SRM_ERU_REFEGEN_CNTL4__USE_EXTERNAL_VREF__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_ERU_REFEGEN_CNTL4__USE_EXTERNAL_VREF__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL4__USE_EXTERNAL_VREF__READ(die)                SRM_ERU_REFEGEN_CNTL4__USE_EXTERNAL_VREF__GET(SRM_ERU_REFEGEN_CNTL4__READ(die))
#  define SRM_ERU_REFEGEN_CNTL4__USE_EXTERNAL_VREF__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFEGEN_CNTL4__USE_EXTERNAL_VREF__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFEGEN_CNTL4__USE_EXTERNAL_VREF__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL4__USE_EXTERNAL_VREF__OFFSET                     1
#  define SRM_ERU_REFEGEN_CNTL4__STRT_PU__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_ERU_REFEGEN_CNTL4__STRT_PU__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL4__STRT_PU__READ(die)                SRM_ERU_REFEGEN_CNTL4__STRT_PU__GET(SRM_ERU_REFEGEN_CNTL4__READ(die))
#  define SRM_ERU_REFEGEN_CNTL4__STRT_PU__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFEGEN_CNTL4__STRT_PU__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL4__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFEGEN_CNTL4__STRT_PU__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL4__STRT_PU__OFFSET                     0

#define SRM_ERU_REFEGEN_CNTL5__ADDRESS                      0x6260
#define SRM_ERU_REFEGEN_CNTL5__DEFAULT                      0x90
#define SRM_ERU_REFEGEN_CNTL5__READ(die)                  srm_reg_read(die, SRM_ERU_REFEGEN_CNTL5__ADDRESS)
#define SRM_ERU_REFEGEN_CNTL5__WRITE(die, data)             srm_reg_write(die, SRM_ERU_REFEGEN_CNTL5__ADDRESS, (data))
#define SRM_ERU_REFEGEN_CNTL5__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_REFEGEN_CNTL5__ADDRESS, (data), (mask))
#  define SRM_ERU_REFEGEN_CNTL5__MAX_LDO_CNT__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_ERU_REFEGEN_CNTL5__MAX_LDO_CNT__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_ERU_REFEGEN_CNTL5__MAX_LDO_CNT__READ(die)                SRM_ERU_REFEGEN_CNTL5__MAX_LDO_CNT__GET(SRM_ERU_REFEGEN_CNTL5__READ(die))
#  define SRM_ERU_REFEGEN_CNTL5__MAX_LDO_CNT__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL5__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_ERU_REFEGEN_CNTL5__MAX_LDO_CNT__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL5__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_ERU_REFEGEN_CNTL5__MAX_LDO_CNT__MASK                       0xf
#  define SRM_ERU_REFEGEN_CNTL5__MAX_LDO_CNT__OFFSET                     4
#  define SRM_ERU_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_ERU_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__READ(die)                SRM_ERU_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__GET(SRM_ERU_REFEGEN_CNTL5__READ(die))
#  define SRM_ERU_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL5__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL5__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL5__STRT_IADC_INPUT_CAL__OFFSET                     3
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VLDO_CAL__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VLDO_CAL__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VLDO_CAL__READ(die)                SRM_ERU_REFEGEN_CNTL5__STRT_VLDO_CAL__GET(SRM_ERU_REFEGEN_CNTL5__READ(die))
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VLDO_CAL__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL5__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VLDO_CAL__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL5__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VLDO_CAL__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VLDO_CAL__OFFSET                     2
#  define SRM_ERU_REFEGEN_CNTL5__STRT_RCAL__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_ERU_REFEGEN_CNTL5__STRT_RCAL__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL5__STRT_RCAL__READ(die)                SRM_ERU_REFEGEN_CNTL5__STRT_RCAL__GET(SRM_ERU_REFEGEN_CNTL5__READ(die))
#  define SRM_ERU_REFEGEN_CNTL5__STRT_RCAL__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL5__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFEGEN_CNTL5__STRT_RCAL__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL5__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFEGEN_CNTL5__STRT_RCAL__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL5__STRT_RCAL__OFFSET                     1
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VTOP_CAL__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VTOP_CAL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VTOP_CAL__READ(die)                SRM_ERU_REFEGEN_CNTL5__STRT_VTOP_CAL__GET(SRM_ERU_REFEGEN_CNTL5__READ(die))
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VTOP_CAL__WRITE(die, fdata)           SRM_ERU_REFEGEN_CNTL5__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VTOP_CAL__RMW(die, fdata)           SRM_ERU_REFEGEN_CNTL5__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VTOP_CAL__MASK                       0x1
#  define SRM_ERU_REFEGEN_CNTL5__STRT_VTOP_CAL__OFFSET                     0

#define SRM_ERU_REFGEN_STATUS3__ADDRESS                      0x6263
#define SRM_ERU_REFGEN_STATUS3__DEFAULT                      0x0
#define SRM_ERU_REFGEN_STATUS3__READ(die)                  srm_reg_read(die, SRM_ERU_REFGEN_STATUS3__ADDRESS)
#define SRM_ERU_REFGEN_STATUS3__WRITE(die, data)             srm_reg_write(die, SRM_ERU_REFGEN_STATUS3__ADDRESS, (data))
#define SRM_ERU_REFGEN_STATUS3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_REFGEN_STATUS3__ADDRESS, (data), (mask))
#  define SRM_ERU_REFGEN_STATUS3__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_ERU_REFGEN_STATUS3__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_ERU_REFGEN_STATUS3__RSRVD1__READ(die)                SRM_ERU_REFGEN_STATUS3__RSRVD1__GET(SRM_ERU_REFGEN_STATUS3__READ(die))
#  define SRM_ERU_REFGEN_STATUS3__RSRVD1__WRITE(die, fdata)           SRM_ERU_REFGEN_STATUS3__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_ERU_REFGEN_STATUS3__RSRVD1__RMW(die, fdata)           SRM_ERU_REFGEN_STATUS3__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_ERU_REFGEN_STATUS3__RSRVD1__MASK                       0x7
#  define SRM_ERU_REFGEN_STATUS3__RSRVD1__OFFSET                     5
#  define SRM_ERU_REFGEN_STATUS3__STRT_PU_DONE__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_ERU_REFGEN_STATUS3__STRT_PU_DONE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_ERU_REFGEN_STATUS3__STRT_PU_DONE__READ(die)                SRM_ERU_REFGEN_STATUS3__STRT_PU_DONE__GET(SRM_ERU_REFGEN_STATUS3__READ(die))
#  define SRM_ERU_REFGEN_STATUS3__STRT_PU_DONE__WRITE(die, fdata)           SRM_ERU_REFGEN_STATUS3__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_REFGEN_STATUS3__STRT_PU_DONE__RMW(die, fdata)           SRM_ERU_REFGEN_STATUS3__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_REFGEN_STATUS3__STRT_PU_DONE__MASK                       0x1
#  define SRM_ERU_REFGEN_STATUS3__STRT_PU_DONE__OFFSET                     4
#  define SRM_ERU_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_ERU_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_ERU_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__READ(die)                SRM_ERU_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__GET(SRM_ERU_REFGEN_STATUS3__READ(die))
#  define SRM_ERU_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__WRITE(die, fdata)           SRM_ERU_REFGEN_STATUS3__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__RMW(die, fdata)           SRM_ERU_REFGEN_STATUS3__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__MASK                       0x1
#  define SRM_ERU_REFGEN_STATUS3__IADC_INPUT_CAL_DONE__OFFSET                     3
#  define SRM_ERU_REFGEN_STATUS3__VLDO_CAL_DONE__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_ERU_REFGEN_STATUS3__VLDO_CAL_DONE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_ERU_REFGEN_STATUS3__VLDO_CAL_DONE__READ(die)                SRM_ERU_REFGEN_STATUS3__VLDO_CAL_DONE__GET(SRM_ERU_REFGEN_STATUS3__READ(die))
#  define SRM_ERU_REFGEN_STATUS3__VLDO_CAL_DONE__WRITE(die, fdata)           SRM_ERU_REFGEN_STATUS3__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_REFGEN_STATUS3__VLDO_CAL_DONE__RMW(die, fdata)           SRM_ERU_REFGEN_STATUS3__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_REFGEN_STATUS3__VLDO_CAL_DONE__MASK                       0x1
#  define SRM_ERU_REFGEN_STATUS3__VLDO_CAL_DONE__OFFSET                     2
#  define SRM_ERU_REFGEN_STATUS3__RCAL_DONE__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_ERU_REFGEN_STATUS3__RCAL_DONE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_ERU_REFGEN_STATUS3__RCAL_DONE__READ(die)                SRM_ERU_REFGEN_STATUS3__RCAL_DONE__GET(SRM_ERU_REFGEN_STATUS3__READ(die))
#  define SRM_ERU_REFGEN_STATUS3__RCAL_DONE__WRITE(die, fdata)           SRM_ERU_REFGEN_STATUS3__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFGEN_STATUS3__RCAL_DONE__RMW(die, fdata)           SRM_ERU_REFGEN_STATUS3__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFGEN_STATUS3__RCAL_DONE__MASK                       0x1
#  define SRM_ERU_REFGEN_STATUS3__RCAL_DONE__OFFSET                     1
#  define SRM_ERU_REFGEN_STATUS3__VTOP_CAL_DONE__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_ERU_REFGEN_STATUS3__VTOP_CAL_DONE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_ERU_REFGEN_STATUS3__VTOP_CAL_DONE__READ(die)                SRM_ERU_REFGEN_STATUS3__VTOP_CAL_DONE__GET(SRM_ERU_REFGEN_STATUS3__READ(die))
#  define SRM_ERU_REFGEN_STATUS3__VTOP_CAL_DONE__WRITE(die, fdata)           SRM_ERU_REFGEN_STATUS3__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFGEN_STATUS3__VTOP_CAL_DONE__RMW(die, fdata)           SRM_ERU_REFGEN_STATUS3__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFGEN_STATUS3__VTOP_CAL_DONE__MASK                       0x1
#  define SRM_ERU_REFGEN_STATUS3__VTOP_CAL_DONE__OFFSET                     0

#define SRM_ERU_REFEGEN_CAL1__ADDRESS                      0x6264
#define SRM_ERU_REFEGEN_CAL1__DEFAULT                      0x48
#define SRM_ERU_REFEGEN_CAL1__READ(die)                  srm_reg_read(die, SRM_ERU_REFEGEN_CAL1__ADDRESS)
#define SRM_ERU_REFEGEN_CAL1__WRITE(die, data)             srm_reg_write(die, SRM_ERU_REFEGEN_CAL1__ADDRESS, (data))
#define SRM_ERU_REFEGEN_CAL1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_REFEGEN_CAL1__ADDRESS, (data), (mask))
#  define SRM_ERU_REFEGEN_CAL1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_ERU_REFEGEN_CAL1__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_ERU_REFEGEN_CAL1__RSRVD1__READ(die)                SRM_ERU_REFEGEN_CAL1__RSRVD1__GET(SRM_ERU_REFEGEN_CAL1__READ(die))
#  define SRM_ERU_REFEGEN_CAL1__RSRVD1__WRITE(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_REFEGEN_CAL1__RSRVD1__RMW(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_REFEGEN_CAL1__RSRVD1__MASK                       0x1
#  define SRM_ERU_REFEGEN_CAL1__RSRVD1__OFFSET                     7
#  define SRM_ERU_REFEGEN_CAL1__EN_REXT_VSS__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_ERU_REFEGEN_CAL1__EN_REXT_VSS__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_ERU_REFEGEN_CAL1__EN_REXT_VSS__READ(die)                SRM_ERU_REFEGEN_CAL1__EN_REXT_VSS__GET(SRM_ERU_REFEGEN_CAL1__READ(die))
#  define SRM_ERU_REFEGEN_CAL1__EN_REXT_VSS__WRITE(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<6, 0x40)
#  define SRM_ERU_REFEGEN_CAL1__EN_REXT_VSS__RMW(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<6, 0x40)
#  define SRM_ERU_REFEGEN_CAL1__EN_REXT_VSS__MASK                       0x1
#  define SRM_ERU_REFEGEN_CAL1__EN_REXT_VSS__OFFSET                     6
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATBPN__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATBPN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATBPN__READ(die)                SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATBPN__GET(SRM_ERU_REFEGEN_CAL1__READ(die))
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATBPN__WRITE(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<5, 0x20)
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATBPN__RMW(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<5, 0x20)
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATBPN__MASK                       0x1
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATBPN__OFFSET                     5
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__READ(die)                SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__GET(SRM_ERU_REFEGEN_CAL1__READ(die))
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__WRITE(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__RMW(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__MASK                       0x1
#  define SRM_ERU_REFEGEN_CAL1__EN_RCAL_2ATB_SENSE__OFFSET                     4
#  define SRM_ERU_REFEGEN_CAL1__EN_ICONST_2RCAL__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_ERU_REFEGEN_CAL1__EN_ICONST_2RCAL__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_ERU_REFEGEN_CAL1__EN_ICONST_2RCAL__READ(die)                SRM_ERU_REFEGEN_CAL1__EN_ICONST_2RCAL__GET(SRM_ERU_REFEGEN_CAL1__READ(die))
#  define SRM_ERU_REFEGEN_CAL1__EN_ICONST_2RCAL__WRITE(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_REFEGEN_CAL1__EN_ICONST_2RCAL__RMW(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_REFEGEN_CAL1__EN_ICONST_2RCAL__MASK                       0x1
#  define SRM_ERU_REFEGEN_CAL1__EN_ICONST_2RCAL__OFFSET                     3
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2RCAL__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2RCAL__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2RCAL__READ(die)                SRM_ERU_REFEGEN_CAL1__EN_ICAL_2RCAL__GET(SRM_ERU_REFEGEN_CAL1__READ(die))
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2RCAL__WRITE(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2RCAL__RMW(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2RCAL__MASK                       0x1
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2RCAL__OFFSET                     2
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__READ(die)                SRM_ERU_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__GET(SRM_ERU_REFEGEN_CAL1__READ(die))
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__WRITE(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__RMW(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__MASK                       0x1
#  define SRM_ERU_REFEGEN_CAL1__EN_ICAL_2ATB_REXT__OFFSET                     1
#  define SRM_ERU_REFEGEN_CAL1__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_ERU_REFEGEN_CAL1__RSRVD2__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_ERU_REFEGEN_CAL1__RSRVD2__READ(die)                SRM_ERU_REFEGEN_CAL1__RSRVD2__GET(SRM_ERU_REFEGEN_CAL1__READ(die))
#  define SRM_ERU_REFEGEN_CAL1__RSRVD2__WRITE(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFEGEN_CAL1__RSRVD2__RMW(die, fdata)           SRM_ERU_REFEGEN_CAL1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFEGEN_CAL1__RSRVD2__MASK                       0x1
#  define SRM_ERU_REFEGEN_CAL1__RSRVD2__OFFSET                     0

#define SRM_ERU_REFEGEN_CAL2__ADDRESS                      0x6265
#define SRM_ERU_REFEGEN_CAL2__DEFAULT                      0x0
#define SRM_ERU_REFEGEN_CAL2__READ(die)                  srm_reg_read(die, SRM_ERU_REFEGEN_CAL2__ADDRESS)
#define SRM_ERU_REFEGEN_CAL2__WRITE(die, data)             srm_reg_write(die, SRM_ERU_REFEGEN_CAL2__ADDRESS, (data))
#define SRM_ERU_REFEGEN_CAL2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_REFEGEN_CAL2__ADDRESS, (data), (mask))
#  define SRM_ERU_REFEGEN_CAL2__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SRM_ERU_REFEGEN_CAL2__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SRM_ERU_REFEGEN_CAL2__RSRVD1__READ(die)                SRM_ERU_REFEGEN_CAL2__RSRVD1__GET(SRM_ERU_REFEGEN_CAL2__READ(die))
#  define SRM_ERU_REFEGEN_CAL2__RSRVD1__WRITE(die, fdata)           SRM_ERU_REFEGEN_CAL2__RMW(die, (fdata)<<2, 0xfc)
#  define SRM_ERU_REFEGEN_CAL2__RSRVD1__RMW(die, fdata)           SRM_ERU_REFEGEN_CAL2__RMW(die, (fdata)<<2, 0xfc)
#  define SRM_ERU_REFEGEN_CAL2__RSRVD1__MASK                       0x3f
#  define SRM_ERU_REFEGEN_CAL2__RSRVD1__OFFSET                     2
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_SENSE__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_SENSE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_SENSE__READ(die)                SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_SENSE__GET(SRM_ERU_REFEGEN_CAL2__READ(die))
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_SENSE__WRITE(die, fdata)           SRM_ERU_REFEGEN_CAL2__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_SENSE__RMW(die, fdata)           SRM_ERU_REFEGEN_CAL2__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_SENSE__MASK                       0x1
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_SENSE__OFFSET                     1
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_REXT__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_REXT__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_REXT__READ(die)                SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_REXT__GET(SRM_ERU_REFEGEN_CAL2__READ(die))
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_REXT__WRITE(die, fdata)           SRM_ERU_REFEGEN_CAL2__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_REXT__RMW(die, fdata)           SRM_ERU_REFEGEN_CAL2__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_REXT__MASK                       0x1
#  define SRM_ERU_REFEGEN_CAL2__REQUEST_REXT_2ATB_REXT__OFFSET                     0

#define SRM_ERU_SET_RCAL__ADDRESS                      0x6270
#define SRM_ERU_SET_RCAL__DEFAULT                      0xb5
#define SRM_ERU_SET_RCAL__READ(die)                  srm_reg_read(die, SRM_ERU_SET_RCAL__ADDRESS)
#define SRM_ERU_SET_RCAL__WRITE(die, data)             srm_reg_write(die, SRM_ERU_SET_RCAL__ADDRESS, (data))
#define SRM_ERU_SET_RCAL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_SET_RCAL__ADDRESS, (data), (mask))
#  define SRM_ERU_SET_RCAL__OVWR_R__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_ERU_SET_RCAL__OVWR_R__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_ERU_SET_RCAL__OVWR_R__READ(die)                SRM_ERU_SET_RCAL__OVWR_R__GET(SRM_ERU_SET_RCAL__READ(die))
#  define SRM_ERU_SET_RCAL__OVWR_R__WRITE(die, fdata)           SRM_ERU_SET_RCAL__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_SET_RCAL__OVWR_R__RMW(die, fdata)           SRM_ERU_SET_RCAL__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_SET_RCAL__OVWR_R__MASK                       0x1
#  define SRM_ERU_SET_RCAL__OVWR_R__OFFSET                     7
#  define SRM_ERU_SET_RCAL__RSET__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_ERU_SET_RCAL__RSET__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_ERU_SET_RCAL__RSET__READ(die)                SRM_ERU_SET_RCAL__RSET__GET(SRM_ERU_SET_RCAL__READ(die))
#  define SRM_ERU_SET_RCAL__RSET__WRITE(die, fdata)           SRM_ERU_SET_RCAL__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_ERU_SET_RCAL__RSET__RMW(die, fdata)           SRM_ERU_SET_RCAL__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_ERU_SET_RCAL__RSET__MASK                       0x7f
#  define SRM_ERU_SET_RCAL__RSET__OFFSET                     0

#define SRM_ERU_STATUS_RCAL__ADDRESS                      0x6271
#define SRM_ERU_STATUS_RCAL__DEFAULT                      0x0
#define SRM_ERU_STATUS_RCAL__READ(die)                  srm_reg_read(die, SRM_ERU_STATUS_RCAL__ADDRESS)
#define SRM_ERU_STATUS_RCAL__WRITE(die, data)             srm_reg_write(die, SRM_ERU_STATUS_RCAL__ADDRESS, (data))
#define SRM_ERU_STATUS_RCAL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_STATUS_RCAL__ADDRESS, (data), (mask))
#  define SRM_ERU_STATUS_RCAL__RCAL_SUCCESSFUL__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_ERU_STATUS_RCAL__RCAL_SUCCESSFUL__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_ERU_STATUS_RCAL__RCAL_SUCCESSFUL__READ(die)                SRM_ERU_STATUS_RCAL__RCAL_SUCCESSFUL__GET(SRM_ERU_STATUS_RCAL__READ(die))
#  define SRM_ERU_STATUS_RCAL__RCAL_SUCCESSFUL__WRITE(die, fdata)           SRM_ERU_STATUS_RCAL__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_STATUS_RCAL__RCAL_SUCCESSFUL__RMW(die, fdata)           SRM_ERU_STATUS_RCAL__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_STATUS_RCAL__RCAL_SUCCESSFUL__MASK                       0x1
#  define SRM_ERU_STATUS_RCAL__RCAL_SUCCESSFUL__OFFSET                     7
#  define SRM_ERU_STATUS_RCAL__STATUS_R__SET(rdata, fdata)         (((rdata) & 0x80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_ERU_STATUS_RCAL__STATUS_R__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_ERU_STATUS_RCAL__STATUS_R__READ(die)                SRM_ERU_STATUS_RCAL__STATUS_R__GET(SRM_ERU_STATUS_RCAL__READ(die))
#  define SRM_ERU_STATUS_RCAL__STATUS_R__WRITE(die, fdata)           SRM_ERU_STATUS_RCAL__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_ERU_STATUS_RCAL__STATUS_R__RMW(die, fdata)           SRM_ERU_STATUS_RCAL__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_ERU_STATUS_RCAL__STATUS_R__MASK                       0x7f
#  define SRM_ERU_STATUS_RCAL__STATUS_R__OFFSET                     0

#define SRM_ERU_CK_FSM_STRT_DIV__ADDRESS                      0x6277
#define SRM_ERU_CK_FSM_STRT_DIV__DEFAULT                      0x7f
#define SRM_ERU_CK_FSM_STRT_DIV__READ(die)                  srm_reg_read(die, SRM_ERU_CK_FSM_STRT_DIV__ADDRESS)
#define SRM_ERU_CK_FSM_STRT_DIV__WRITE(die, data)             srm_reg_write(die, SRM_ERU_CK_FSM_STRT_DIV__ADDRESS, (data))
#define SRM_ERU_CK_FSM_STRT_DIV__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_CK_FSM_STRT_DIV__ADDRESS, (data), (mask))
#  define SRM_ERU_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_ERU_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_ERU_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__READ(die)                SRM_ERU_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__GET(SRM_ERU_CK_FSM_STRT_DIV__READ(die))
#  define SRM_ERU_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__WRITE(die, fdata)           SRM_ERU_CK_FSM_STRT_DIV__RMW(die, (fdata)<<0, 0xff)
#  define SRM_ERU_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__RMW(die, fdata)           SRM_ERU_CK_FSM_STRT_DIV__RMW(die, (fdata)<<0, 0xff)
#  define SRM_ERU_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__MASK                       0xff
#  define SRM_ERU_CK_FSM_STRT_DIV__CK_FSM_STRT_DIV__OFFSET                     0

#define SRM_ERU_IADC_INP_SEL__ADDRESS                      0x627b
#define SRM_ERU_IADC_INP_SEL__DEFAULT                      0x1
#define SRM_ERU_IADC_INP_SEL__READ(die)                  srm_reg_read(die, SRM_ERU_IADC_INP_SEL__ADDRESS)
#define SRM_ERU_IADC_INP_SEL__WRITE(die, data)             srm_reg_write(die, SRM_ERU_IADC_INP_SEL__ADDRESS, (data))
#define SRM_ERU_IADC_INP_SEL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_IADC_INP_SEL__ADDRESS, (data), (mask))
#  define SRM_ERU_IADC_INP_SEL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_ERU_IADC_INP_SEL__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_ERU_IADC_INP_SEL__RSRVD1__READ(die)                SRM_ERU_IADC_INP_SEL__RSRVD1__GET(SRM_ERU_IADC_INP_SEL__READ(die))
#  define SRM_ERU_IADC_INP_SEL__RSRVD1__WRITE(die, fdata)           SRM_ERU_IADC_INP_SEL__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_ERU_IADC_INP_SEL__RSRVD1__RMW(die, fdata)           SRM_ERU_IADC_INP_SEL__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_ERU_IADC_INP_SEL__RSRVD1__MASK                       0xf
#  define SRM_ERU_IADC_INP_SEL__RSRVD1__OFFSET                     4
#  define SRM_ERU_IADC_INP_SEL__IADC_INPUT_SEL__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_ERU_IADC_INP_SEL__IADC_INPUT_SEL__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_ERU_IADC_INP_SEL__IADC_INPUT_SEL__READ(die)                SRM_ERU_IADC_INP_SEL__IADC_INPUT_SEL__GET(SRM_ERU_IADC_INP_SEL__READ(die))
#  define SRM_ERU_IADC_INP_SEL__IADC_INPUT_SEL__WRITE(die, fdata)           SRM_ERU_IADC_INP_SEL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_ERU_IADC_INP_SEL__IADC_INPUT_SEL__RMW(die, fdata)           SRM_ERU_IADC_INP_SEL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_ERU_IADC_INP_SEL__IADC_INPUT_SEL__MASK                       0xf
#  define SRM_ERU_IADC_INP_SEL__IADC_INPUT_SEL__OFFSET                     0

#define SRM_ERU_IADC_BUF_SEL__ADDRESS                      0x627c
#define SRM_ERU_IADC_BUF_SEL__DEFAULT                      0x0
#define SRM_ERU_IADC_BUF_SEL__READ(die)                  srm_reg_read(die, SRM_ERU_IADC_BUF_SEL__ADDRESS)
#define SRM_ERU_IADC_BUF_SEL__WRITE(die, data)             srm_reg_write(die, SRM_ERU_IADC_BUF_SEL__ADDRESS, (data))
#define SRM_ERU_IADC_BUF_SEL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_IADC_BUF_SEL__ADDRESS, (data), (mask))
#  define SRM_ERU_IADC_BUF_SEL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_ERU_IADC_BUF_SEL__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_ERU_IADC_BUF_SEL__RSRVD1__READ(die)                SRM_ERU_IADC_BUF_SEL__RSRVD1__GET(SRM_ERU_IADC_BUF_SEL__READ(die))
#  define SRM_ERU_IADC_BUF_SEL__RSRVD1__WRITE(die, fdata)           SRM_ERU_IADC_BUF_SEL__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_ERU_IADC_BUF_SEL__RSRVD1__RMW(die, fdata)           SRM_ERU_IADC_BUF_SEL__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_ERU_IADC_BUF_SEL__RSRVD1__MASK                       0x7
#  define SRM_ERU_IADC_BUF_SEL__RSRVD1__OFFSET                     5
#  define SRM_ERU_IADC_BUF_SEL__IADC_BUF_SEL__SET(rdata, fdata)         (((rdata) & 0xe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SRM_ERU_IADC_BUF_SEL__IADC_BUF_SEL__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SRM_ERU_IADC_BUF_SEL__IADC_BUF_SEL__READ(die)                SRM_ERU_IADC_BUF_SEL__IADC_BUF_SEL__GET(SRM_ERU_IADC_BUF_SEL__READ(die))
#  define SRM_ERU_IADC_BUF_SEL__IADC_BUF_SEL__WRITE(die, fdata)           SRM_ERU_IADC_BUF_SEL__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_ERU_IADC_BUF_SEL__IADC_BUF_SEL__RMW(die, fdata)           SRM_ERU_IADC_BUF_SEL__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_ERU_IADC_BUF_SEL__IADC_BUF_SEL__MASK                       0x1f
#  define SRM_ERU_IADC_BUF_SEL__IADC_BUF_SEL__OFFSET                     0

#define SRM_ERU_IADC_REF_SEL__ADDRESS                      0x627d
#define SRM_ERU_IADC_REF_SEL__DEFAULT                      0xf
#define SRM_ERU_IADC_REF_SEL__READ(die)                  srm_reg_read(die, SRM_ERU_IADC_REF_SEL__ADDRESS)
#define SRM_ERU_IADC_REF_SEL__WRITE(die, data)             srm_reg_write(die, SRM_ERU_IADC_REF_SEL__ADDRESS, (data))
#define SRM_ERU_IADC_REF_SEL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_IADC_REF_SEL__ADDRESS, (data), (mask))
#  define SRM_ERU_IADC_REF_SEL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_ERU_IADC_REF_SEL__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_ERU_IADC_REF_SEL__RSRVD1__READ(die)                SRM_ERU_IADC_REF_SEL__RSRVD1__GET(SRM_ERU_IADC_REF_SEL__READ(die))
#  define SRM_ERU_IADC_REF_SEL__RSRVD1__WRITE(die, fdata)           SRM_ERU_IADC_REF_SEL__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_ERU_IADC_REF_SEL__RSRVD1__RMW(die, fdata)           SRM_ERU_IADC_REF_SEL__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_ERU_IADC_REF_SEL__RSRVD1__MASK                       0xf
#  define SRM_ERU_IADC_REF_SEL__RSRVD1__OFFSET                     4
#  define SRM_ERU_IADC_REF_SEL__IADC_REF_SEL__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_ERU_IADC_REF_SEL__IADC_REF_SEL__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_ERU_IADC_REF_SEL__IADC_REF_SEL__READ(die)                SRM_ERU_IADC_REF_SEL__IADC_REF_SEL__GET(SRM_ERU_IADC_REF_SEL__READ(die))
#  define SRM_ERU_IADC_REF_SEL__IADC_REF_SEL__WRITE(die, fdata)           SRM_ERU_IADC_REF_SEL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_ERU_IADC_REF_SEL__IADC_REF_SEL__RMW(die, fdata)           SRM_ERU_IADC_REF_SEL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_ERU_IADC_REF_SEL__IADC_REF_SEL__MASK                       0xf
#  define SRM_ERU_IADC_REF_SEL__IADC_REF_SEL__OFFSET                     0

#define SRM_ERU_IADC_CNTL1__ADDRESS                      0x627e
#define SRM_ERU_IADC_CNTL1__DEFAULT                      0x0
#define SRM_ERU_IADC_CNTL1__READ(die)                  srm_reg_read(die, SRM_ERU_IADC_CNTL1__ADDRESS)
#define SRM_ERU_IADC_CNTL1__WRITE(die, data)             srm_reg_write(die, SRM_ERU_IADC_CNTL1__ADDRESS, (data))
#define SRM_ERU_IADC_CNTL1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_IADC_CNTL1__ADDRESS, (data), (mask))
#  define SRM_ERU_IADC_CNTL1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_ERU_IADC_CNTL1__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_ERU_IADC_CNTL1__RSRVD1__READ(die)                SRM_ERU_IADC_CNTL1__RSRVD1__GET(SRM_ERU_IADC_CNTL1__READ(die))
#  define SRM_ERU_IADC_CNTL1__RSRVD1__WRITE(die, fdata)           SRM_ERU_IADC_CNTL1__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_IADC_CNTL1__RSRVD1__RMW(die, fdata)           SRM_ERU_IADC_CNTL1__RMW(die, (fdata)<<7, 0x80)
#  define SRM_ERU_IADC_CNTL1__RSRVD1__MASK                       0x1
#  define SRM_ERU_IADC_CNTL1__RSRVD1__OFFSET                     7
#  define SRM_ERU_IADC_CNTL1__IADC_NAVG__SET(rdata, fdata)         (((rdata) & 0x8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SRM_ERU_IADC_CNTL1__IADC_NAVG__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SRM_ERU_IADC_CNTL1__IADC_NAVG__READ(die)                SRM_ERU_IADC_CNTL1__IADC_NAVG__GET(SRM_ERU_IADC_CNTL1__READ(die))
#  define SRM_ERU_IADC_CNTL1__IADC_NAVG__WRITE(die, fdata)           SRM_ERU_IADC_CNTL1__RMW(die, (fdata)<<4, 0x70)
#  define SRM_ERU_IADC_CNTL1__IADC_NAVG__RMW(die, fdata)           SRM_ERU_IADC_CNTL1__RMW(die, (fdata)<<4, 0x70)
#  define SRM_ERU_IADC_CNTL1__IADC_NAVG__MASK                       0x7
#  define SRM_ERU_IADC_CNTL1__IADC_NAVG__OFFSET                     4
#  define SRM_ERU_IADC_CNTL1__IADC_STRT_CONV__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_ERU_IADC_CNTL1__IADC_STRT_CONV__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_ERU_IADC_CNTL1__IADC_STRT_CONV__READ(die)                SRM_ERU_IADC_CNTL1__IADC_STRT_CONV__GET(SRM_ERU_IADC_CNTL1__READ(die))
#  define SRM_ERU_IADC_CNTL1__IADC_STRT_CONV__WRITE(die, fdata)           SRM_ERU_IADC_CNTL1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_IADC_CNTL1__IADC_STRT_CONV__RMW(die, fdata)           SRM_ERU_IADC_CNTL1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_IADC_CNTL1__IADC_STRT_CONV__MASK                       0x1
#  define SRM_ERU_IADC_CNTL1__IADC_STRT_CONV__OFFSET                     3
#  define SRM_ERU_IADC_CNTL1__IADC_BYPASS_REF_BUF__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_ERU_IADC_CNTL1__IADC_BYPASS_REF_BUF__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_ERU_IADC_CNTL1__IADC_BYPASS_REF_BUF__READ(die)                SRM_ERU_IADC_CNTL1__IADC_BYPASS_REF_BUF__GET(SRM_ERU_IADC_CNTL1__READ(die))
#  define SRM_ERU_IADC_CNTL1__IADC_BYPASS_REF_BUF__WRITE(die, fdata)           SRM_ERU_IADC_CNTL1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_IADC_CNTL1__IADC_BYPASS_REF_BUF__RMW(die, fdata)           SRM_ERU_IADC_CNTL1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_IADC_CNTL1__IADC_BYPASS_REF_BUF__MASK                       0x1
#  define SRM_ERU_IADC_CNTL1__IADC_BYPASS_REF_BUF__OFFSET                     2
#  define SRM_ERU_IADC_CNTL1__IADC_CMP_MODE__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_ERU_IADC_CNTL1__IADC_CMP_MODE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_ERU_IADC_CNTL1__IADC_CMP_MODE__READ(die)                SRM_ERU_IADC_CNTL1__IADC_CMP_MODE__GET(SRM_ERU_IADC_CNTL1__READ(die))
#  define SRM_ERU_IADC_CNTL1__IADC_CMP_MODE__WRITE(die, fdata)           SRM_ERU_IADC_CNTL1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_IADC_CNTL1__IADC_CMP_MODE__RMW(die, fdata)           SRM_ERU_IADC_CNTL1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_IADC_CNTL1__IADC_CMP_MODE__MASK                       0x1
#  define SRM_ERU_IADC_CNTL1__IADC_CMP_MODE__OFFSET                     1
#  define SRM_ERU_IADC_CNTL1__IADC_EN_2X_FS__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_ERU_IADC_CNTL1__IADC_EN_2X_FS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_ERU_IADC_CNTL1__IADC_EN_2X_FS__READ(die)                SRM_ERU_IADC_CNTL1__IADC_EN_2X_FS__GET(SRM_ERU_IADC_CNTL1__READ(die))
#  define SRM_ERU_IADC_CNTL1__IADC_EN_2X_FS__WRITE(die, fdata)           SRM_ERU_IADC_CNTL1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_IADC_CNTL1__IADC_EN_2X_FS__RMW(die, fdata)           SRM_ERU_IADC_CNTL1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_IADC_CNTL1__IADC_EN_2X_FS__MASK                       0x1
#  define SRM_ERU_IADC_CNTL1__IADC_EN_2X_FS__OFFSET                     0

#define SRM_ERU_IADC_CNTL2__ADDRESS                      0x627f
#define SRM_ERU_IADC_CNTL2__DEFAULT                      0x51
#define SRM_ERU_IADC_CNTL2__READ(die)                  srm_reg_read(die, SRM_ERU_IADC_CNTL2__ADDRESS)
#define SRM_ERU_IADC_CNTL2__WRITE(die, data)             srm_reg_write(die, SRM_ERU_IADC_CNTL2__ADDRESS, (data))
#define SRM_ERU_IADC_CNTL2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_IADC_CNTL2__ADDRESS, (data), (mask))
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP_REXT__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP_REXT__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP_REXT__READ(die)                SRM_ERU_IADC_CNTL2__IADC_NSMP_REXT__GET(SRM_ERU_IADC_CNTL2__READ(die))
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP_REXT__WRITE(die, fdata)           SRM_ERU_IADC_CNTL2__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP_REXT__RMW(die, fdata)           SRM_ERU_IADC_CNTL2__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP_REXT__MASK                       0xf
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP_REXT__OFFSET                     4
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP__READ(die)                SRM_ERU_IADC_CNTL2__IADC_NSMP__GET(SRM_ERU_IADC_CNTL2__READ(die))
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP__WRITE(die, fdata)           SRM_ERU_IADC_CNTL2__RMW(die, (fdata)<<0, 0xf)
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP__RMW(die, fdata)           SRM_ERU_IADC_CNTL2__RMW(die, (fdata)<<0, 0xf)
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP__MASK                       0xf
#  define SRM_ERU_IADC_CNTL2__IADC_NSMP__OFFSET                     0

#define SRM_ERU_IADC_CNTL3__ADDRESS                      0x6280
#define SRM_ERU_IADC_CNTL3__DEFAULT                      0x4
#define SRM_ERU_IADC_CNTL3__READ(die)                  srm_reg_read(die, SRM_ERU_IADC_CNTL3__ADDRESS)
#define SRM_ERU_IADC_CNTL3__WRITE(die, data)             srm_reg_write(die, SRM_ERU_IADC_CNTL3__ADDRESS, (data))
#define SRM_ERU_IADC_CNTL3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_IADC_CNTL3__ADDRESS, (data), (mask))
#  define SRM_ERU_IADC_CNTL3__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_ERU_IADC_CNTL3__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_ERU_IADC_CNTL3__RSRVD1__READ(die)                SRM_ERU_IADC_CNTL3__RSRVD1__GET(SRM_ERU_IADC_CNTL3__READ(die))
#  define SRM_ERU_IADC_CNTL3__RSRVD1__WRITE(die, fdata)           SRM_ERU_IADC_CNTL3__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_ERU_IADC_CNTL3__RSRVD1__RMW(die, fdata)           SRM_ERU_IADC_CNTL3__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_ERU_IADC_CNTL3__RSRVD1__MASK                       0x7
#  define SRM_ERU_IADC_CNTL3__RSRVD1__OFFSET                     5
#  define SRM_ERU_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_ERU_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_ERU_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__READ(die)                SRM_ERU_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__GET(SRM_ERU_IADC_CNTL3__READ(die))
#  define SRM_ERU_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__WRITE(die, fdata)           SRM_ERU_IADC_CNTL3__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__RMW(die, fdata)           SRM_ERU_IADC_CNTL3__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__MASK                       0x1
#  define SRM_ERU_IADC_CNTL3__IADC_ATB_SENSE_2VSS_CDAC__OFFSET                     4
#  define SRM_ERU_IADC_CNTL3__IADC_CK_DIV__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_ERU_IADC_CNTL3__IADC_CK_DIV__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_ERU_IADC_CNTL3__IADC_CK_DIV__READ(die)                SRM_ERU_IADC_CNTL3__IADC_CK_DIV__GET(SRM_ERU_IADC_CNTL3__READ(die))
#  define SRM_ERU_IADC_CNTL3__IADC_CK_DIV__WRITE(die, fdata)           SRM_ERU_IADC_CNTL3__RMW(die, (fdata)<<0, 0xf)
#  define SRM_ERU_IADC_CNTL3__IADC_CK_DIV__RMW(die, fdata)           SRM_ERU_IADC_CNTL3__RMW(die, (fdata)<<0, 0xf)
#  define SRM_ERU_IADC_CNTL3__IADC_CK_DIV__MASK                       0xf
#  define SRM_ERU_IADC_CNTL3__IADC_CK_DIV__OFFSET                     0

#define SRM_ERU_FSM_SRESET__ADDRESS                      0x6292
#define SRM_ERU_FSM_SRESET__DEFAULT                      0x0
#define SRM_ERU_FSM_SRESET__READ(die)                  srm_reg_read(die, SRM_ERU_FSM_SRESET__ADDRESS)
#define SRM_ERU_FSM_SRESET__WRITE(die, data)             srm_reg_write(die, SRM_ERU_FSM_SRESET__ADDRESS, (data))
#define SRM_ERU_FSM_SRESET__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_FSM_SRESET__ADDRESS, (data), (mask))
#  define SRM_ERU_FSM_SRESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_ERU_FSM_SRESET__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_ERU_FSM_SRESET__RSRVD1__READ(die)                SRM_ERU_FSM_SRESET__RSRVD1__GET(SRM_ERU_FSM_SRESET__READ(die))
#  define SRM_ERU_FSM_SRESET__RSRVD1__WRITE(die, fdata)           SRM_ERU_FSM_SRESET__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_ERU_FSM_SRESET__RSRVD1__RMW(die, fdata)           SRM_ERU_FSM_SRESET__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_ERU_FSM_SRESET__RSRVD1__MASK                       0x7
#  define SRM_ERU_FSM_SRESET__RSRVD1__OFFSET                     5
#  define SRM_ERU_FSM_SRESET__RCAL_SR__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_ERU_FSM_SRESET__RCAL_SR__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_ERU_FSM_SRESET__RCAL_SR__READ(die)                SRM_ERU_FSM_SRESET__RCAL_SR__GET(SRM_ERU_FSM_SRESET__READ(die))
#  define SRM_ERU_FSM_SRESET__RCAL_SR__WRITE(die, fdata)           SRM_ERU_FSM_SRESET__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_FSM_SRESET__RCAL_SR__RMW(die, fdata)           SRM_ERU_FSM_SRESET__RMW(die, (fdata)<<4, 0x10)
#  define SRM_ERU_FSM_SRESET__RCAL_SR__MASK                       0x1
#  define SRM_ERU_FSM_SRESET__RCAL_SR__OFFSET                     4
#  define SRM_ERU_FSM_SRESET__ADC_SR__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_ERU_FSM_SRESET__ADC_SR__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_ERU_FSM_SRESET__ADC_SR__READ(die)                SRM_ERU_FSM_SRESET__ADC_SR__GET(SRM_ERU_FSM_SRESET__READ(die))
#  define SRM_ERU_FSM_SRESET__ADC_SR__WRITE(die, fdata)           SRM_ERU_FSM_SRESET__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_FSM_SRESET__ADC_SR__RMW(die, fdata)           SRM_ERU_FSM_SRESET__RMW(die, (fdata)<<3, 0x8)
#  define SRM_ERU_FSM_SRESET__ADC_SR__MASK                       0x1
#  define SRM_ERU_FSM_SRESET__ADC_SR__OFFSET                     3
#  define SRM_ERU_FSM_SRESET__LDO_SR__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_ERU_FSM_SRESET__LDO_SR__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_ERU_FSM_SRESET__LDO_SR__READ(die)                SRM_ERU_FSM_SRESET__LDO_SR__GET(SRM_ERU_FSM_SRESET__READ(die))
#  define SRM_ERU_FSM_SRESET__LDO_SR__WRITE(die, fdata)           SRM_ERU_FSM_SRESET__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_FSM_SRESET__LDO_SR__RMW(die, fdata)           SRM_ERU_FSM_SRESET__RMW(die, (fdata)<<2, 0x4)
#  define SRM_ERU_FSM_SRESET__LDO_SR__MASK                       0x1
#  define SRM_ERU_FSM_SRESET__LDO_SR__OFFSET                     2
#  define SRM_ERU_FSM_SRESET__VREG_SR__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_ERU_FSM_SRESET__VREG_SR__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_ERU_FSM_SRESET__VREG_SR__READ(die)                SRM_ERU_FSM_SRESET__VREG_SR__GET(SRM_ERU_FSM_SRESET__READ(die))
#  define SRM_ERU_FSM_SRESET__VREG_SR__WRITE(die, fdata)           SRM_ERU_FSM_SRESET__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_FSM_SRESET__VREG_SR__RMW(die, fdata)           SRM_ERU_FSM_SRESET__RMW(die, (fdata)<<1, 0x2)
#  define SRM_ERU_FSM_SRESET__VREG_SR__MASK                       0x1
#  define SRM_ERU_FSM_SRESET__VREG_SR__OFFSET                     1
#  define SRM_ERU_FSM_SRESET__PU_SR__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_ERU_FSM_SRESET__PU_SR__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_ERU_FSM_SRESET__PU_SR__READ(die)                SRM_ERU_FSM_SRESET__PU_SR__GET(SRM_ERU_FSM_SRESET__READ(die))
#  define SRM_ERU_FSM_SRESET__PU_SR__WRITE(die, fdata)           SRM_ERU_FSM_SRESET__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_FSM_SRESET__PU_SR__RMW(die, fdata)           SRM_ERU_FSM_SRESET__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_FSM_SRESET__PU_SR__MASK                       0x1
#  define SRM_ERU_FSM_SRESET__PU_SR__OFFSET                     0

#define SRM_ERU_FSM_DEBUG0__ADDRESS                      0x6293
#define SRM_ERU_FSM_DEBUG0__DEFAULT                      0x0
#define SRM_ERU_FSM_DEBUG0__READ(die)                  srm_reg_read(die, SRM_ERU_FSM_DEBUG0__ADDRESS)
#define SRM_ERU_FSM_DEBUG0__WRITE(die, data)             srm_reg_write(die, SRM_ERU_FSM_DEBUG0__ADDRESS, (data))
#define SRM_ERU_FSM_DEBUG0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_FSM_DEBUG0__ADDRESS, (data), (mask))
#  define SRM_ERU_FSM_DEBUG0__NAVG_STATE__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SRM_ERU_FSM_DEBUG0__NAVG_STATE__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SRM_ERU_FSM_DEBUG0__NAVG_STATE__READ(die)                SRM_ERU_FSM_DEBUG0__NAVG_STATE__GET(SRM_ERU_FSM_DEBUG0__READ(die))
#  define SRM_ERU_FSM_DEBUG0__NAVG_STATE__WRITE(die, fdata)           SRM_ERU_FSM_DEBUG0__RMW(die, (fdata)<<6, 0xc0)
#  define SRM_ERU_FSM_DEBUG0__NAVG_STATE__RMW(die, fdata)           SRM_ERU_FSM_DEBUG0__RMW(die, (fdata)<<6, 0xc0)
#  define SRM_ERU_FSM_DEBUG0__NAVG_STATE__MASK                       0x3
#  define SRM_ERU_FSM_DEBUG0__NAVG_STATE__OFFSET                     6
#  define SRM_ERU_FSM_DEBUG0__NSMP_STATE__SET(rdata, fdata)         (((rdata) & 0xcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SRM_ERU_FSM_DEBUG0__NSMP_STATE__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SRM_ERU_FSM_DEBUG0__NSMP_STATE__READ(die)                SRM_ERU_FSM_DEBUG0__NSMP_STATE__GET(SRM_ERU_FSM_DEBUG0__READ(die))
#  define SRM_ERU_FSM_DEBUG0__NSMP_STATE__WRITE(die, fdata)           SRM_ERU_FSM_DEBUG0__RMW(die, (fdata)<<4, 0x30)
#  define SRM_ERU_FSM_DEBUG0__NSMP_STATE__RMW(die, fdata)           SRM_ERU_FSM_DEBUG0__RMW(die, (fdata)<<4, 0x30)
#  define SRM_ERU_FSM_DEBUG0__NSMP_STATE__MASK                       0x3
#  define SRM_ERU_FSM_DEBUG0__NSMP_STATE__OFFSET                     4
#  define SRM_ERU_FSM_DEBUG0__PU_STATE__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_ERU_FSM_DEBUG0__PU_STATE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_ERU_FSM_DEBUG0__PU_STATE__READ(die)                SRM_ERU_FSM_DEBUG0__PU_STATE__GET(SRM_ERU_FSM_DEBUG0__READ(die))
#  define SRM_ERU_FSM_DEBUG0__PU_STATE__WRITE(die, fdata)           SRM_ERU_FSM_DEBUG0__RMW(die, (fdata)<<0, 0xf)
#  define SRM_ERU_FSM_DEBUG0__PU_STATE__RMW(die, fdata)           SRM_ERU_FSM_DEBUG0__RMW(die, (fdata)<<0, 0xf)
#  define SRM_ERU_FSM_DEBUG0__PU_STATE__MASK                       0xf
#  define SRM_ERU_FSM_DEBUG0__PU_STATE__OFFSET                     0

#define SRM_ERU_CAL_INT__ADDRESS                      0x6296
#define SRM_ERU_CAL_INT__DEFAULT                      0x0
#define SRM_ERU_CAL_INT__READ(die)                  srm_reg_read(die, SRM_ERU_CAL_INT__ADDRESS)
#define SRM_ERU_CAL_INT__WRITE(die, data)             srm_reg_write(die, SRM_ERU_CAL_INT__ADDRESS, (data))
#define SRM_ERU_CAL_INT__RMW(die, data, mask)         srm_reg_rmw(die, SRM_ERU_CAL_INT__ADDRESS, (data), (mask))
#  define SRM_ERU_CAL_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SRM_ERU_CAL_INT__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SRM_ERU_CAL_INT__RSRVD1__READ(die)                SRM_ERU_CAL_INT__RSRVD1__GET(SRM_ERU_CAL_INT__READ(die))
#  define SRM_ERU_CAL_INT__RSRVD1__WRITE(die, fdata)           SRM_ERU_CAL_INT__RMW(die, (fdata)<<1, 0xfe)
#  define SRM_ERU_CAL_INT__RSRVD1__RMW(die, fdata)           SRM_ERU_CAL_INT__RMW(die, (fdata)<<1, 0xfe)
#  define SRM_ERU_CAL_INT__RSRVD1__MASK                       0x7f
#  define SRM_ERU_CAL_INT__RSRVD1__OFFSET                     1
#  define SRM_ERU_CAL_INT__CAL_DONE__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_ERU_CAL_INT__CAL_DONE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_ERU_CAL_INT__CAL_DONE__READ(die)                SRM_ERU_CAL_INT__CAL_DONE__GET(SRM_ERU_CAL_INT__READ(die))
#  define SRM_ERU_CAL_INT__CAL_DONE__WRITE(die, fdata)           SRM_ERU_CAL_INT__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_CAL_INT__CAL_DONE__RMW(die, fdata)           SRM_ERU_CAL_INT__RMW(die, (fdata)<<0, 0x1)
#  define SRM_ERU_CAL_INT__CAL_DONE__MASK                       0x1
#  define SRM_ERU_CAL_INT__CAL_DONE__OFFSET                     0

#define SRM_MCU_RESET__ADDRESS                      0xe000
#define SRM_MCU_RESET__DEFAULT                      0x0
#define SRM_MCU_RESET__READ(die)                  srm_reg_read(die, SRM_MCU_RESET__ADDRESS)
#define SRM_MCU_RESET__WRITE(die, data)             srm_reg_write(die, SRM_MCU_RESET__ADDRESS, (data))
#define SRM_MCU_RESET__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_RESET__ADDRESS, (data), (mask))
#  define SRM_MCU_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3ff) | (((uint32_t)(fdata) << 10) & 0xfc00))
#  define SRM_MCU_RESET__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x3f)
#  define SRM_MCU_RESET__RSRVD1__READ(die)                SRM_MCU_RESET__RSRVD1__GET(SRM_MCU_RESET__READ(die))
#  define SRM_MCU_RESET__RSRVD1__WRITE(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<10, 0xfc00)
#  define SRM_MCU_RESET__RSRVD1__RMW(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<10, 0xfc00)
#  define SRM_MCU_RESET__RSRVD1__MASK                       0x3f
#  define SRM_MCU_RESET__RSRVD1__OFFSET                     10
#  define SRM_MCU_RESET__CHKSUM_RST__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_MCU_RESET__CHKSUM_RST__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_MCU_RESET__CHKSUM_RST__READ(die)                SRM_MCU_RESET__CHKSUM_RST__GET(SRM_MCU_RESET__READ(die))
#  define SRM_MCU_RESET__CHKSUM_RST__WRITE(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_RESET__CHKSUM_RST__RMW(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_RESET__CHKSUM_RST__MASK                       0x1
#  define SRM_MCU_RESET__CHKSUM_RST__OFFSET                     9
#  define SRM_MCU_RESET__PFE_RST__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_MCU_RESET__PFE_RST__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_MCU_RESET__PFE_RST__READ(die)                SRM_MCU_RESET__PFE_RST__GET(SRM_MCU_RESET__READ(die))
#  define SRM_MCU_RESET__PFE_RST__WRITE(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_RESET__PFE_RST__RMW(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_RESET__PFE_RST__MASK                       0x1
#  define SRM_MCU_RESET__PFE_RST__OFFSET                     8
#  define SRM_MCU_RESET__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_MCU_RESET__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_MCU_RESET__RSRVD2__READ(die)                SRM_MCU_RESET__RSRVD2__GET(SRM_MCU_RESET__READ(die))
#  define SRM_MCU_RESET__RSRVD2__WRITE(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_RESET__RSRVD2__RMW(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_RESET__RSRVD2__MASK                       0x7
#  define SRM_MCU_RESET__RSRVD2__OFFSET                     5
#  define SRM_MCU_RESET__PROCRST_HOLD__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_MCU_RESET__PROCRST_HOLD__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_MCU_RESET__PROCRST_HOLD__READ(die)                SRM_MCU_RESET__PROCRST_HOLD__GET(SRM_MCU_RESET__READ(die))
#  define SRM_MCU_RESET__PROCRST_HOLD__WRITE(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_RESET__PROCRST_HOLD__RMW(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_RESET__PROCRST_HOLD__MASK                       0x1
#  define SRM_MCU_RESET__PROCRST_HOLD__OFFSET                     4
#  define SRM_MCU_RESET__PWRUPRST__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MCU_RESET__PWRUPRST__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MCU_RESET__PWRUPRST__READ(die)                SRM_MCU_RESET__PWRUPRST__GET(SRM_MCU_RESET__READ(die))
#  define SRM_MCU_RESET__PWRUPRST__WRITE(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_RESET__PWRUPRST__RMW(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_RESET__PWRUPRST__MASK                       0x1
#  define SRM_MCU_RESET__PWRUPRST__OFFSET                     3
#  define SRM_MCU_RESET__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_RESET__RSRVD3__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_RESET__RSRVD3__READ(die)                SRM_MCU_RESET__RSRVD3__GET(SRM_MCU_RESET__READ(die))
#  define SRM_MCU_RESET__RSRVD3__WRITE(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_RESET__RSRVD3__RMW(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_RESET__RSRVD3__MASK                       0x1
#  define SRM_MCU_RESET__RSRVD3__OFFSET                     2
#  define SRM_MCU_RESET__IPRST__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_RESET__IPRST__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_RESET__IPRST__READ(die)                SRM_MCU_RESET__IPRST__GET(SRM_MCU_RESET__READ(die))
#  define SRM_MCU_RESET__IPRST__WRITE(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_RESET__IPRST__RMW(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_RESET__IPRST__MASK                       0x1
#  define SRM_MCU_RESET__IPRST__OFFSET                     1
#  define SRM_MCU_RESET__PROCRST__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_RESET__PROCRST__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_RESET__PROCRST__READ(die)                SRM_MCU_RESET__PROCRST__GET(SRM_MCU_RESET__READ(die))
#  define SRM_MCU_RESET__PROCRST__WRITE(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_RESET__PROCRST__RMW(die, fdata)           SRM_MCU_RESET__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_RESET__PROCRST__MASK                       0x1
#  define SRM_MCU_RESET__PROCRST__OFFSET                     0

#define SRM_MCU_GEN_CFG__ADDRESS                      0xe001
#define SRM_MCU_GEN_CFG__DEFAULT                      0x1001
#define SRM_MCU_GEN_CFG__READ(die)                  srm_reg_read(die, SRM_MCU_GEN_CFG__ADDRESS)
#define SRM_MCU_GEN_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MCU_GEN_CFG__ADDRESS, (data))
#define SRM_MCU_GEN_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_GEN_CFG__ADDRESS, (data), (mask))
#  define SRM_MCU_GEN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SRM_MCU_GEN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SRM_MCU_GEN_CFG__RSRVD1__READ(die)                SRM_MCU_GEN_CFG__RSRVD1__GET(SRM_MCU_GEN_CFG__READ(die))
#  define SRM_MCU_GEN_CFG__RSRVD1__WRITE(die, fdata)           SRM_MCU_GEN_CFG__RMW(die, (fdata)<<14, 0xc000)
#  define SRM_MCU_GEN_CFG__RSRVD1__RMW(die, fdata)           SRM_MCU_GEN_CFG__RMW(die, (fdata)<<14, 0xc000)
#  define SRM_MCU_GEN_CFG__RSRVD1__MASK                       0x3
#  define SRM_MCU_GEN_CFG__RSRVD1__OFFSET                     14
#  define SRM_MCU_GEN_CFG__PDEBUG_EN__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_MCU_GEN_CFG__PDEBUG_EN__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_MCU_GEN_CFG__PDEBUG_EN__READ(die)                SRM_MCU_GEN_CFG__PDEBUG_EN__GET(SRM_MCU_GEN_CFG__READ(die))
#  define SRM_MCU_GEN_CFG__PDEBUG_EN__WRITE(die, fdata)           SRM_MCU_GEN_CFG__RMW(die, (fdata)<<13, 0x2000)
#  define SRM_MCU_GEN_CFG__PDEBUG_EN__RMW(die, fdata)           SRM_MCU_GEN_CFG__RMW(die, (fdata)<<13, 0x2000)
#  define SRM_MCU_GEN_CFG__PDEBUG_EN__MASK                       0x1
#  define SRM_MCU_GEN_CFG__PDEBUG_EN__OFFSET                     13
#  define SRM_MCU_GEN_CFG__STATVECTOR_SEL__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_MCU_GEN_CFG__STATVECTOR_SEL__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_MCU_GEN_CFG__STATVECTOR_SEL__READ(die)                SRM_MCU_GEN_CFG__STATVECTOR_SEL__GET(SRM_MCU_GEN_CFG__READ(die))
#  define SRM_MCU_GEN_CFG__STATVECTOR_SEL__WRITE(die, fdata)           SRM_MCU_GEN_CFG__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_GEN_CFG__STATVECTOR_SEL__RMW(die, fdata)           SRM_MCU_GEN_CFG__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_GEN_CFG__STATVECTOR_SEL__MASK                       0x1
#  define SRM_MCU_GEN_CFG__STATVECTOR_SEL__OFFSET                     12
#  define SRM_MCU_GEN_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf001) | (((uint32_t)(fdata) << 1) & 0xffe))
#  define SRM_MCU_GEN_CFG__RSRVD2__GET(rdata)                (((rdata) >> 1) & 0x7ff)
#  define SRM_MCU_GEN_CFG__RSRVD2__READ(die)                SRM_MCU_GEN_CFG__RSRVD2__GET(SRM_MCU_GEN_CFG__READ(die))
#  define SRM_MCU_GEN_CFG__RSRVD2__WRITE(die, fdata)           SRM_MCU_GEN_CFG__RMW(die, (fdata)<<1, 0xffe)
#  define SRM_MCU_GEN_CFG__RSRVD2__RMW(die, fdata)           SRM_MCU_GEN_CFG__RMW(die, (fdata)<<1, 0xffe)
#  define SRM_MCU_GEN_CFG__RSRVD2__MASK                       0x7ff
#  define SRM_MCU_GEN_CFG__RSRVD2__OFFSET                     1
#  define SRM_MCU_GEN_CFG__RUNSTALL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_GEN_CFG__RUNSTALL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_GEN_CFG__RUNSTALL__READ(die)                SRM_MCU_GEN_CFG__RUNSTALL__GET(SRM_MCU_GEN_CFG__READ(die))
#  define SRM_MCU_GEN_CFG__RUNSTALL__WRITE(die, fdata)           SRM_MCU_GEN_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_GEN_CFG__RUNSTALL__RMW(die, fdata)           SRM_MCU_GEN_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_GEN_CFG__RUNSTALL__MASK                       0x1
#  define SRM_MCU_GEN_CFG__RUNSTALL__OFFSET                     0

#define SRM_MCU_IRAM_CFG__ADDRESS                      0xe002
#define SRM_MCU_IRAM_CFG__DEFAULT                      0x1
#define SRM_MCU_IRAM_CFG__READ(die)                  srm_reg_read(die, SRM_MCU_IRAM_CFG__ADDRESS)
#define SRM_MCU_IRAM_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MCU_IRAM_CFG__ADDRESS, (data))
#define SRM_MCU_IRAM_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_IRAM_CFG__ADDRESS, (data), (mask))
#  define SRM_MCU_IRAM_CFG__IRAM_SLP__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_MCU_IRAM_CFG__IRAM_SLP__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_MCU_IRAM_CFG__IRAM_SLP__READ(die)                SRM_MCU_IRAM_CFG__IRAM_SLP__GET(SRM_MCU_IRAM_CFG__READ(die))
#  define SRM_MCU_IRAM_CFG__IRAM_SLP__WRITE(die, fdata)           SRM_MCU_IRAM_CFG__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_MCU_IRAM_CFG__IRAM_SLP__RMW(die, fdata)           SRM_MCU_IRAM_CFG__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_MCU_IRAM_CFG__IRAM_SLP__MASK                       0xf
#  define SRM_MCU_IRAM_CFG__IRAM_SLP__OFFSET                     12
#  define SRM_MCU_IRAM_CFG__IRAM_SD__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SRM_MCU_IRAM_CFG__IRAM_SD__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SRM_MCU_IRAM_CFG__IRAM_SD__READ(die)                SRM_MCU_IRAM_CFG__IRAM_SD__GET(SRM_MCU_IRAM_CFG__READ(die))
#  define SRM_MCU_IRAM_CFG__IRAM_SD__WRITE(die, fdata)           SRM_MCU_IRAM_CFG__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_MCU_IRAM_CFG__IRAM_SD__RMW(die, fdata)           SRM_MCU_IRAM_CFG__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_MCU_IRAM_CFG__IRAM_SD__MASK                       0xf
#  define SRM_MCU_IRAM_CFG__IRAM_SD__OFFSET                     8
#  define SRM_MCU_IRAM_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff03) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SRM_MCU_IRAM_CFG__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SRM_MCU_IRAM_CFG__RSRVD1__READ(die)                SRM_MCU_IRAM_CFG__RSRVD1__GET(SRM_MCU_IRAM_CFG__READ(die))
#  define SRM_MCU_IRAM_CFG__RSRVD1__WRITE(die, fdata)           SRM_MCU_IRAM_CFG__RMW(die, (fdata)<<2, 0xfc)
#  define SRM_MCU_IRAM_CFG__RSRVD1__RMW(die, fdata)           SRM_MCU_IRAM_CFG__RMW(die, (fdata)<<2, 0xfc)
#  define SRM_MCU_IRAM_CFG__RSRVD1__MASK                       0x3f
#  define SRM_MCU_IRAM_CFG__RSRVD1__OFFSET                     2
#  define SRM_MCU_IRAM_CFG__INIT_IRAM__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_IRAM_CFG__INIT_IRAM__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_IRAM_CFG__INIT_IRAM__READ(die)                SRM_MCU_IRAM_CFG__INIT_IRAM__GET(SRM_MCU_IRAM_CFG__READ(die))
#  define SRM_MCU_IRAM_CFG__INIT_IRAM__WRITE(die, fdata)           SRM_MCU_IRAM_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_IRAM_CFG__INIT_IRAM__RMW(die, fdata)           SRM_MCU_IRAM_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_IRAM_CFG__INIT_IRAM__MASK                       0x1
#  define SRM_MCU_IRAM_CFG__INIT_IRAM__OFFSET                     1
#  define SRM_MCU_IRAM_CFG__IRAM_EC_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_IRAM_CFG__IRAM_EC_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_IRAM_CFG__IRAM_EC_EN__READ(die)                SRM_MCU_IRAM_CFG__IRAM_EC_EN__GET(SRM_MCU_IRAM_CFG__READ(die))
#  define SRM_MCU_IRAM_CFG__IRAM_EC_EN__WRITE(die, fdata)           SRM_MCU_IRAM_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_IRAM_CFG__IRAM_EC_EN__RMW(die, fdata)           SRM_MCU_IRAM_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_IRAM_CFG__IRAM_EC_EN__MASK                       0x1
#  define SRM_MCU_IRAM_CFG__IRAM_EC_EN__OFFSET                     0

#define SRM_MCU_DRAM_CFG__ADDRESS                      0xe003
#define SRM_MCU_DRAM_CFG__DEFAULT                      0x1
#define SRM_MCU_DRAM_CFG__READ(die)                  srm_reg_read(die, SRM_MCU_DRAM_CFG__ADDRESS)
#define SRM_MCU_DRAM_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MCU_DRAM_CFG__ADDRESS, (data))
#define SRM_MCU_DRAM_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_DRAM_CFG__ADDRESS, (data), (mask))
#  define SRM_MCU_DRAM_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SRM_MCU_DRAM_CFG__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SRM_MCU_DRAM_CFG__RSRVD1__READ(die)                SRM_MCU_DRAM_CFG__RSRVD1__GET(SRM_MCU_DRAM_CFG__READ(die))
#  define SRM_MCU_DRAM_CFG__RSRVD1__WRITE(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<14, 0xc000)
#  define SRM_MCU_DRAM_CFG__RSRVD1__RMW(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<14, 0xc000)
#  define SRM_MCU_DRAM_CFG__RSRVD1__MASK                       0x3
#  define SRM_MCU_DRAM_CFG__RSRVD1__OFFSET                     14
#  define SRM_MCU_DRAM_CFG__DRAM_SLP__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SRM_MCU_DRAM_CFG__DRAM_SLP__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SRM_MCU_DRAM_CFG__DRAM_SLP__READ(die)                SRM_MCU_DRAM_CFG__DRAM_SLP__GET(SRM_MCU_DRAM_CFG__READ(die))
#  define SRM_MCU_DRAM_CFG__DRAM_SLP__WRITE(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<12, 0x3000)
#  define SRM_MCU_DRAM_CFG__DRAM_SLP__RMW(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<12, 0x3000)
#  define SRM_MCU_DRAM_CFG__DRAM_SLP__MASK                       0x3
#  define SRM_MCU_DRAM_CFG__DRAM_SLP__OFFSET                     12
#  define SRM_MCU_DRAM_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SRM_MCU_DRAM_CFG__RSRVD2__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SRM_MCU_DRAM_CFG__RSRVD2__READ(die)                SRM_MCU_DRAM_CFG__RSRVD2__GET(SRM_MCU_DRAM_CFG__READ(die))
#  define SRM_MCU_DRAM_CFG__RSRVD2__WRITE(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<10, 0xc00)
#  define SRM_MCU_DRAM_CFG__RSRVD2__RMW(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<10, 0xc00)
#  define SRM_MCU_DRAM_CFG__RSRVD2__MASK                       0x3
#  define SRM_MCU_DRAM_CFG__RSRVD2__OFFSET                     10
#  define SRM_MCU_DRAM_CFG__DRAM_SD__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_MCU_DRAM_CFG__DRAM_SD__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_MCU_DRAM_CFG__DRAM_SD__READ(die)                SRM_MCU_DRAM_CFG__DRAM_SD__GET(SRM_MCU_DRAM_CFG__READ(die))
#  define SRM_MCU_DRAM_CFG__DRAM_SD__WRITE(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_DRAM_CFG__DRAM_SD__RMW(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_DRAM_CFG__DRAM_SD__MASK                       0x3
#  define SRM_MCU_DRAM_CFG__DRAM_SD__OFFSET                     8
#  define SRM_MCU_DRAM_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_MCU_DRAM_CFG__RSRVD3__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_MCU_DRAM_CFG__RSRVD3__READ(die)                SRM_MCU_DRAM_CFG__RSRVD3__GET(SRM_MCU_DRAM_CFG__READ(die))
#  define SRM_MCU_DRAM_CFG__RSRVD3__WRITE(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_MCU_DRAM_CFG__RSRVD3__RMW(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_MCU_DRAM_CFG__RSRVD3__MASK                       0xf
#  define SRM_MCU_DRAM_CFG__RSRVD3__OFFSET                     4
#  define SRM_MCU_DRAM_CFG__DRAM_WR_MODE__SET(rdata, fdata)         (((rdata) & 0xfff3) | (((uint32_t)(fdata) << 2) & 0xc))
#  define SRM_MCU_DRAM_CFG__DRAM_WR_MODE__GET(rdata)                (((rdata) >> 2) & 0x3)
#  define SRM_MCU_DRAM_CFG__DRAM_WR_MODE__READ(die)                SRM_MCU_DRAM_CFG__DRAM_WR_MODE__GET(SRM_MCU_DRAM_CFG__READ(die))
#  define SRM_MCU_DRAM_CFG__DRAM_WR_MODE__WRITE(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<2, 0xc)
#  define SRM_MCU_DRAM_CFG__DRAM_WR_MODE__RMW(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<2, 0xc)
#  define SRM_MCU_DRAM_CFG__DRAM_WR_MODE__MASK                       0x3
#  define SRM_MCU_DRAM_CFG__DRAM_WR_MODE__OFFSET                     2
#  define SRM_MCU_DRAM_CFG__INIT_DRAM__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_DRAM_CFG__INIT_DRAM__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_DRAM_CFG__INIT_DRAM__READ(die)                SRM_MCU_DRAM_CFG__INIT_DRAM__GET(SRM_MCU_DRAM_CFG__READ(die))
#  define SRM_MCU_DRAM_CFG__INIT_DRAM__WRITE(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_DRAM_CFG__INIT_DRAM__RMW(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_DRAM_CFG__INIT_DRAM__MASK                       0x1
#  define SRM_MCU_DRAM_CFG__INIT_DRAM__OFFSET                     1
#  define SRM_MCU_DRAM_CFG__DRAM_EC_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_DRAM_CFG__DRAM_EC_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_DRAM_CFG__DRAM_EC_EN__READ(die)                SRM_MCU_DRAM_CFG__DRAM_EC_EN__GET(SRM_MCU_DRAM_CFG__READ(die))
#  define SRM_MCU_DRAM_CFG__DRAM_EC_EN__WRITE(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_DRAM_CFG__DRAM_EC_EN__RMW(die, fdata)           SRM_MCU_DRAM_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_DRAM_CFG__DRAM_EC_EN__MASK                       0x1
#  define SRM_MCU_DRAM_CFG__DRAM_EC_EN__OFFSET                     0

#define SRM_MCU_GEN_STATUS__ADDRESS                      0xe004
#define SRM_MCU_GEN_STATUS__DEFAULT                      0x0
#define SRM_MCU_GEN_STATUS__READ(die)                  srm_reg_read(die, SRM_MCU_GEN_STATUS__ADDRESS)
#define SRM_MCU_GEN_STATUS__WRITE(die, data)             srm_reg_write(die, SRM_MCU_GEN_STATUS__ADDRESS, (data))
#define SRM_MCU_GEN_STATUS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_GEN_STATUS__ADDRESS, (data), (mask))
#  define SRM_MCU_GEN_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SRM_MCU_GEN_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SRM_MCU_GEN_STATUS__RSRVD1__READ(die)                SRM_MCU_GEN_STATUS__RSRVD1__GET(SRM_MCU_GEN_STATUS__READ(die))
#  define SRM_MCU_GEN_STATUS__RSRVD1__WRITE(die, fdata)           SRM_MCU_GEN_STATUS__RMW(die, (fdata)<<9, 0xfe00)
#  define SRM_MCU_GEN_STATUS__RSRVD1__RMW(die, fdata)           SRM_MCU_GEN_STATUS__RMW(die, (fdata)<<9, 0xfe00)
#  define SRM_MCU_GEN_STATUS__RSRVD1__MASK                       0x7f
#  define SRM_MCU_GEN_STATUS__RSRVD1__OFFSET                     9
#  define SRM_MCU_GEN_STATUS__IRAM_ST__SET(rdata, fdata)         (((rdata) & 0xfe1f) | (((uint32_t)(fdata) << 5) & 0x1e0))
#  define SRM_MCU_GEN_STATUS__IRAM_ST__GET(rdata)                (((rdata) >> 5) & 0xf)
#  define SRM_MCU_GEN_STATUS__IRAM_ST__READ(die)                SRM_MCU_GEN_STATUS__IRAM_ST__GET(SRM_MCU_GEN_STATUS__READ(die))
#  define SRM_MCU_GEN_STATUS__IRAM_ST__WRITE(die, fdata)           SRM_MCU_GEN_STATUS__RMW(die, (fdata)<<5, 0x1e0)
#  define SRM_MCU_GEN_STATUS__IRAM_ST__RMW(die, fdata)           SRM_MCU_GEN_STATUS__RMW(die, (fdata)<<5, 0x1e0)
#  define SRM_MCU_GEN_STATUS__IRAM_ST__MASK                       0xf
#  define SRM_MCU_GEN_STATUS__IRAM_ST__OFFSET                     5
#  define SRM_MCU_GEN_STATUS__DRAM_ST__SET(rdata, fdata)         (((rdata) & 0xffe7) | (((uint32_t)(fdata) << 3) & 0x18))
#  define SRM_MCU_GEN_STATUS__DRAM_ST__GET(rdata)                (((rdata) >> 3) & 0x3)
#  define SRM_MCU_GEN_STATUS__DRAM_ST__READ(die)                SRM_MCU_GEN_STATUS__DRAM_ST__GET(SRM_MCU_GEN_STATUS__READ(die))
#  define SRM_MCU_GEN_STATUS__DRAM_ST__WRITE(die, fdata)           SRM_MCU_GEN_STATUS__RMW(die, (fdata)<<3, 0x18)
#  define SRM_MCU_GEN_STATUS__DRAM_ST__RMW(die, fdata)           SRM_MCU_GEN_STATUS__RMW(die, (fdata)<<3, 0x18)
#  define SRM_MCU_GEN_STATUS__DRAM_ST__MASK                       0x3
#  define SRM_MCU_GEN_STATUS__DRAM_ST__OFFSET                     3
#  define SRM_MCU_GEN_STATUS__PWAITMODE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_GEN_STATUS__PWAITMODE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_GEN_STATUS__PWAITMODE__READ(die)                SRM_MCU_GEN_STATUS__PWAITMODE__GET(SRM_MCU_GEN_STATUS__READ(die))
#  define SRM_MCU_GEN_STATUS__PWAITMODE__WRITE(die, fdata)           SRM_MCU_GEN_STATUS__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_GEN_STATUS__PWAITMODE__RMW(die, fdata)           SRM_MCU_GEN_STATUS__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_GEN_STATUS__PWAITMODE__MASK                       0x1
#  define SRM_MCU_GEN_STATUS__PWAITMODE__OFFSET                     2
#  define SRM_MCU_GEN_STATUS__INIT_IRAM_ST__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_GEN_STATUS__INIT_IRAM_ST__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_GEN_STATUS__INIT_IRAM_ST__READ(die)                SRM_MCU_GEN_STATUS__INIT_IRAM_ST__GET(SRM_MCU_GEN_STATUS__READ(die))
#  define SRM_MCU_GEN_STATUS__INIT_IRAM_ST__WRITE(die, fdata)           SRM_MCU_GEN_STATUS__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_GEN_STATUS__INIT_IRAM_ST__RMW(die, fdata)           SRM_MCU_GEN_STATUS__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_GEN_STATUS__INIT_IRAM_ST__MASK                       0x1
#  define SRM_MCU_GEN_STATUS__INIT_IRAM_ST__OFFSET                     1
#  define SRM_MCU_GEN_STATUS__INIT_DRAM_ST__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_GEN_STATUS__INIT_DRAM_ST__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_GEN_STATUS__INIT_DRAM_ST__READ(die)                SRM_MCU_GEN_STATUS__INIT_DRAM_ST__GET(SRM_MCU_GEN_STATUS__READ(die))
#  define SRM_MCU_GEN_STATUS__INIT_DRAM_ST__WRITE(die, fdata)           SRM_MCU_GEN_STATUS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_GEN_STATUS__INIT_DRAM_ST__RMW(die, fdata)           SRM_MCU_GEN_STATUS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_GEN_STATUS__INIT_DRAM_ST__MASK                       0x1
#  define SRM_MCU_GEN_STATUS__INIT_DRAM_ST__OFFSET                     0

#define SRM_MCU_IRAM_INIT_CFG__ADDRESS                      0xe005
#define SRM_MCU_IRAM_INIT_CFG__DEFAULT                      0x8000
#define SRM_MCU_IRAM_INIT_CFG__READ(die)                  srm_reg_read(die, SRM_MCU_IRAM_INIT_CFG__ADDRESS)
#define SRM_MCU_IRAM_INIT_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MCU_IRAM_INIT_CFG__ADDRESS, (data))
#define SRM_MCU_IRAM_INIT_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_IRAM_INIT_CFG__ADDRESS, (data), (mask))
#  define SRM_MCU_IRAM_INIT_CFG__CNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_IRAM_INIT_CFG__CNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_IRAM_INIT_CFG__CNT__READ(die)                SRM_MCU_IRAM_INIT_CFG__CNT__GET(SRM_MCU_IRAM_INIT_CFG__READ(die))
#  define SRM_MCU_IRAM_INIT_CFG__CNT__WRITE(die, fdata)           SRM_MCU_IRAM_INIT_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_IRAM_INIT_CFG__CNT__RMW(die, fdata)           SRM_MCU_IRAM_INIT_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_IRAM_INIT_CFG__CNT__MASK                       0xffff
#  define SRM_MCU_IRAM_INIT_CFG__CNT__OFFSET                     0

#define SRM_MCU_DRAM_INIT_CFG__ADDRESS                      0xe006
#define SRM_MCU_DRAM_INIT_CFG__DEFAULT                      0x4000
#define SRM_MCU_DRAM_INIT_CFG__READ(die)                  srm_reg_read(die, SRM_MCU_DRAM_INIT_CFG__ADDRESS)
#define SRM_MCU_DRAM_INIT_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MCU_DRAM_INIT_CFG__ADDRESS, (data))
#define SRM_MCU_DRAM_INIT_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_DRAM_INIT_CFG__ADDRESS, (data), (mask))
#  define SRM_MCU_DRAM_INIT_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_DRAM_INIT_CFG__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_DRAM_INIT_CFG__RSRVD1__READ(die)                SRM_MCU_DRAM_INIT_CFG__RSRVD1__GET(SRM_MCU_DRAM_INIT_CFG__READ(die))
#  define SRM_MCU_DRAM_INIT_CFG__RSRVD1__WRITE(die, fdata)           SRM_MCU_DRAM_INIT_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_DRAM_INIT_CFG__RSRVD1__RMW(die, fdata)           SRM_MCU_DRAM_INIT_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_DRAM_INIT_CFG__RSRVD1__MASK                       0x1
#  define SRM_MCU_DRAM_INIT_CFG__RSRVD1__OFFSET                     15
#  define SRM_MCU_DRAM_INIT_CFG__CNT__SET(rdata, fdata)         (((rdata) & 0x8000) | (((uint32_t)(fdata) << 0) & 0x7fff))
#  define SRM_MCU_DRAM_INIT_CFG__CNT__GET(rdata)                (((rdata) >> 0) & 0x7fff)
#  define SRM_MCU_DRAM_INIT_CFG__CNT__READ(die)                SRM_MCU_DRAM_INIT_CFG__CNT__GET(SRM_MCU_DRAM_INIT_CFG__READ(die))
#  define SRM_MCU_DRAM_INIT_CFG__CNT__WRITE(die, fdata)           SRM_MCU_DRAM_INIT_CFG__RMW(die, (fdata)<<0, 0x7fff)
#  define SRM_MCU_DRAM_INIT_CFG__CNT__RMW(die, fdata)           SRM_MCU_DRAM_INIT_CFG__RMW(die, (fdata)<<0, 0x7fff)
#  define SRM_MCU_DRAM_INIT_CFG__CNT__MASK                       0x7fff
#  define SRM_MCU_DRAM_INIT_CFG__CNT__OFFSET                     0

#define SRM_MCU_MDIO_CFG__ADDRESS                      0xe007
#define SRM_MCU_MDIO_CFG__DEFAULT                      0x0
#define SRM_MCU_MDIO_CFG__READ(die)                  srm_reg_read(die, SRM_MCU_MDIO_CFG__ADDRESS)
#define SRM_MCU_MDIO_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MCU_MDIO_CFG__ADDRESS, (data))
#define SRM_MCU_MDIO_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_MDIO_CFG__ADDRESS, (data), (mask))
#  define SRM_MCU_MDIO_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_MCU_MDIO_CFG__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_MCU_MDIO_CFG__RSRVD1__READ(die)                SRM_MCU_MDIO_CFG__RSRVD1__GET(SRM_MCU_MDIO_CFG__READ(die))
#  define SRM_MCU_MDIO_CFG__RSRVD1__WRITE(die, fdata)           SRM_MCU_MDIO_CFG__RMW(die, (fdata)<<2, 0xfffc)
#  define SRM_MCU_MDIO_CFG__RSRVD1__RMW(die, fdata)           SRM_MCU_MDIO_CFG__RMW(die, (fdata)<<2, 0xfffc)
#  define SRM_MCU_MDIO_CFG__RSRVD1__MASK                       0x3fff
#  define SRM_MCU_MDIO_CFG__RSRVD1__OFFSET                     2
#  define SRM_MCU_MDIO_CFG__UWREN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_MDIO_CFG__UWREN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_MDIO_CFG__UWREN__READ(die)                SRM_MCU_MDIO_CFG__UWREN__GET(SRM_MCU_MDIO_CFG__READ(die))
#  define SRM_MCU_MDIO_CFG__UWREN__WRITE(die, fdata)           SRM_MCU_MDIO_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_MDIO_CFG__UWREN__RMW(die, fdata)           SRM_MCU_MDIO_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_MDIO_CFG__UWREN__MASK                       0x1
#  define SRM_MCU_MDIO_CFG__UWREN__OFFSET                     1
#  define SRM_MCU_MDIO_CFG__WR_BURST__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_MDIO_CFG__WR_BURST__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_MDIO_CFG__WR_BURST__READ(die)                SRM_MCU_MDIO_CFG__WR_BURST__GET(SRM_MCU_MDIO_CFG__READ(die))
#  define SRM_MCU_MDIO_CFG__WR_BURST__WRITE(die, fdata)           SRM_MCU_MDIO_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_MDIO_CFG__WR_BURST__RMW(die, fdata)           SRM_MCU_MDIO_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_MDIO_CFG__WR_BURST__MASK                       0x1
#  define SRM_MCU_MDIO_CFG__WR_BURST__OFFSET                     0

#define SRM_MCU_MBOX_CFG__ADDRESS                      0xe00a
#define SRM_MCU_MBOX_CFG__DEFAULT                      0x0
#define SRM_MCU_MBOX_CFG__READ(die)                  srm_reg_read(die, SRM_MCU_MBOX_CFG__ADDRESS)
#define SRM_MCU_MBOX_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MCU_MBOX_CFG__ADDRESS, (data))
#define SRM_MCU_MBOX_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_MBOX_CFG__ADDRESS, (data), (mask))
#  define SRM_MCU_MBOX_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SRM_MCU_MBOX_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SRM_MCU_MBOX_CFG__RSRVD1__READ(die)                SRM_MCU_MBOX_CFG__RSRVD1__GET(SRM_MCU_MBOX_CFG__READ(die))
#  define SRM_MCU_MBOX_CFG__RSRVD1__WRITE(die, fdata)           SRM_MCU_MBOX_CFG__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MCU_MBOX_CFG__RSRVD1__RMW(die, fdata)           SRM_MCU_MBOX_CFG__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MCU_MBOX_CFG__RSRVD1__MASK                       0x7
#  define SRM_MCU_MBOX_CFG__RSRVD1__OFFSET                     13
#  define SRM_MCU_MBOX_CFG__TX_INT_THRESHOLD__SET(rdata, fdata)         (((rdata) & 0xe0ff) | (((uint32_t)(fdata) << 8) & 0x1f00))
#  define SRM_MCU_MBOX_CFG__TX_INT_THRESHOLD__GET(rdata)                (((rdata) >> 8) & 0x1f)
#  define SRM_MCU_MBOX_CFG__TX_INT_THRESHOLD__READ(die)                SRM_MCU_MBOX_CFG__TX_INT_THRESHOLD__GET(SRM_MCU_MBOX_CFG__READ(die))
#  define SRM_MCU_MBOX_CFG__TX_INT_THRESHOLD__WRITE(die, fdata)           SRM_MCU_MBOX_CFG__RMW(die, (fdata)<<8, 0x1f00)
#  define SRM_MCU_MBOX_CFG__TX_INT_THRESHOLD__RMW(die, fdata)           SRM_MCU_MBOX_CFG__RMW(die, (fdata)<<8, 0x1f00)
#  define SRM_MCU_MBOX_CFG__TX_INT_THRESHOLD__MASK                       0x1f
#  define SRM_MCU_MBOX_CFG__TX_INT_THRESHOLD__OFFSET                     8
#  define SRM_MCU_MBOX_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_MCU_MBOX_CFG__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_MCU_MBOX_CFG__RSRVD2__READ(die)                SRM_MCU_MBOX_CFG__RSRVD2__GET(SRM_MCU_MBOX_CFG__READ(die))
#  define SRM_MCU_MBOX_CFG__RSRVD2__WRITE(die, fdata)           SRM_MCU_MBOX_CFG__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_MBOX_CFG__RSRVD2__RMW(die, fdata)           SRM_MCU_MBOX_CFG__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_MBOX_CFG__RSRVD2__MASK                       0x7
#  define SRM_MCU_MBOX_CFG__RSRVD2__OFFSET                     5
#  define SRM_MCU_MBOX_CFG__RX_INT_THRESHOLD__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SRM_MCU_MBOX_CFG__RX_INT_THRESHOLD__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SRM_MCU_MBOX_CFG__RX_INT_THRESHOLD__READ(die)                SRM_MCU_MBOX_CFG__RX_INT_THRESHOLD__GET(SRM_MCU_MBOX_CFG__READ(die))
#  define SRM_MCU_MBOX_CFG__RX_INT_THRESHOLD__WRITE(die, fdata)           SRM_MCU_MBOX_CFG__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_MCU_MBOX_CFG__RX_INT_THRESHOLD__RMW(die, fdata)           SRM_MCU_MBOX_CFG__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_MCU_MBOX_CFG__RX_INT_THRESHOLD__MASK                       0x1f
#  define SRM_MCU_MBOX_CFG__RX_INT_THRESHOLD__OFFSET                     0

#define SRM_MCU_MBOX_STATUS__ADDRESS                      0xe00b
#define SRM_MCU_MBOX_STATUS__DEFAULT                      0x0
#define SRM_MCU_MBOX_STATUS__READ(die)                  srm_reg_read(die, SRM_MCU_MBOX_STATUS__ADDRESS)
#define SRM_MCU_MBOX_STATUS__WRITE(die, data)             srm_reg_write(die, SRM_MCU_MBOX_STATUS__ADDRESS, (data))
#define SRM_MCU_MBOX_STATUS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_MBOX_STATUS__ADDRESS, (data), (mask))
#  define SRM_MCU_MBOX_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SRM_MCU_MBOX_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SRM_MCU_MBOX_STATUS__RSRVD1__READ(die)                SRM_MCU_MBOX_STATUS__RSRVD1__GET(SRM_MCU_MBOX_STATUS__READ(die))
#  define SRM_MCU_MBOX_STATUS__RSRVD1__WRITE(die, fdata)           SRM_MCU_MBOX_STATUS__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MCU_MBOX_STATUS__RSRVD1__RMW(die, fdata)           SRM_MCU_MBOX_STATUS__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MCU_MBOX_STATUS__RSRVD1__MASK                       0x7
#  define SRM_MCU_MBOX_STATUS__RSRVD1__OFFSET                     13
#  define SRM_MCU_MBOX_STATUS__TXCNT__SET(rdata, fdata)         (((rdata) & 0xe0ff) | (((uint32_t)(fdata) << 8) & 0x1f00))
#  define SRM_MCU_MBOX_STATUS__TXCNT__GET(rdata)                (((rdata) >> 8) & 0x1f)
#  define SRM_MCU_MBOX_STATUS__TXCNT__READ(die)                SRM_MCU_MBOX_STATUS__TXCNT__GET(SRM_MCU_MBOX_STATUS__READ(die))
#  define SRM_MCU_MBOX_STATUS__TXCNT__WRITE(die, fdata)           SRM_MCU_MBOX_STATUS__RMW(die, (fdata)<<8, 0x1f00)
#  define SRM_MCU_MBOX_STATUS__TXCNT__RMW(die, fdata)           SRM_MCU_MBOX_STATUS__RMW(die, (fdata)<<8, 0x1f00)
#  define SRM_MCU_MBOX_STATUS__TXCNT__MASK                       0x1f
#  define SRM_MCU_MBOX_STATUS__TXCNT__OFFSET                     8
#  define SRM_MCU_MBOX_STATUS__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_MCU_MBOX_STATUS__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_MCU_MBOX_STATUS__RSRVD2__READ(die)                SRM_MCU_MBOX_STATUS__RSRVD2__GET(SRM_MCU_MBOX_STATUS__READ(die))
#  define SRM_MCU_MBOX_STATUS__RSRVD2__WRITE(die, fdata)           SRM_MCU_MBOX_STATUS__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_MBOX_STATUS__RSRVD2__RMW(die, fdata)           SRM_MCU_MBOX_STATUS__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_MBOX_STATUS__RSRVD2__MASK                       0x7
#  define SRM_MCU_MBOX_STATUS__RSRVD2__OFFSET                     5
#  define SRM_MCU_MBOX_STATUS__RXCNT__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SRM_MCU_MBOX_STATUS__RXCNT__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SRM_MCU_MBOX_STATUS__RXCNT__READ(die)                SRM_MCU_MBOX_STATUS__RXCNT__GET(SRM_MCU_MBOX_STATUS__READ(die))
#  define SRM_MCU_MBOX_STATUS__RXCNT__WRITE(die, fdata)           SRM_MCU_MBOX_STATUS__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_MCU_MBOX_STATUS__RXCNT__RMW(die, fdata)           SRM_MCU_MBOX_STATUS__RMW(die, (fdata)<<0, 0x1f)
#  define SRM_MCU_MBOX_STATUS__RXCNT__MASK                       0x1f
#  define SRM_MCU_MBOX_STATUS__RXCNT__OFFSET                     0

#define SRM_MCU_MBOX_INT__ADDRESS                      0xe00c
#define SRM_MCU_MBOX_INT__DEFAULT                      0x0
#define SRM_MCU_MBOX_INT__READ(die)                  srm_reg_read(die, SRM_MCU_MBOX_INT__ADDRESS)
#define SRM_MCU_MBOX_INT__WRITE(die, data)             srm_reg_write(die, SRM_MCU_MBOX_INT__ADDRESS, (data))
#define SRM_MCU_MBOX_INT__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_MBOX_INT__ADDRESS, (data), (mask))
#  define SRM_MCU_MBOX_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SRM_MCU_MBOX_INT__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SRM_MCU_MBOX_INT__RSRVD1__READ(die)                SRM_MCU_MBOX_INT__RSRVD1__GET(SRM_MCU_MBOX_INT__READ(die))
#  define SRM_MCU_MBOX_INT__RSRVD1__WRITE(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MCU_MBOX_INT__RSRVD1__RMW(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MCU_MBOX_INT__RSRVD1__MASK                       0x7
#  define SRM_MCU_MBOX_INT__RSRVD1__OFFSET                     13
#  define SRM_MCU_MBOX_INT__TX_OFLOW__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_MCU_MBOX_INT__TX_OFLOW__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_MCU_MBOX_INT__TX_OFLOW__READ(die)                SRM_MCU_MBOX_INT__TX_OFLOW__GET(SRM_MCU_MBOX_INT__READ(die))
#  define SRM_MCU_MBOX_INT__TX_OFLOW__WRITE(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_MBOX_INT__TX_OFLOW__RMW(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_MBOX_INT__TX_OFLOW__MASK                       0x1
#  define SRM_MCU_MBOX_INT__TX_OFLOW__OFFSET                     12
#  define SRM_MCU_MBOX_INT__TX_UFLOW__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_MCU_MBOX_INT__TX_UFLOW__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_MCU_MBOX_INT__TX_UFLOW__READ(die)                SRM_MCU_MBOX_INT__TX_UFLOW__GET(SRM_MCU_MBOX_INT__READ(die))
#  define SRM_MCU_MBOX_INT__TX_UFLOW__WRITE(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_MBOX_INT__TX_UFLOW__RMW(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_MBOX_INT__TX_UFLOW__MASK                       0x1
#  define SRM_MCU_MBOX_INT__TX_UFLOW__OFFSET                     11
#  define SRM_MCU_MBOX_INT__TX_FULL__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_MCU_MBOX_INT__TX_FULL__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_MCU_MBOX_INT__TX_FULL__READ(die)                SRM_MCU_MBOX_INT__TX_FULL__GET(SRM_MCU_MBOX_INT__READ(die))
#  define SRM_MCU_MBOX_INT__TX_FULL__WRITE(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_MBOX_INT__TX_FULL__RMW(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_MBOX_INT__TX_FULL__MASK                       0x1
#  define SRM_MCU_MBOX_INT__TX_FULL__OFFSET                     10
#  define SRM_MCU_MBOX_INT__TX_EMPTY__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_MCU_MBOX_INT__TX_EMPTY__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_MCU_MBOX_INT__TX_EMPTY__READ(die)                SRM_MCU_MBOX_INT__TX_EMPTY__GET(SRM_MCU_MBOX_INT__READ(die))
#  define SRM_MCU_MBOX_INT__TX_EMPTY__WRITE(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_MBOX_INT__TX_EMPTY__RMW(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_MBOX_INT__TX_EMPTY__MASK                       0x1
#  define SRM_MCU_MBOX_INT__TX_EMPTY__OFFSET                     9
#  define SRM_MCU_MBOX_INT__TX_CNT__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_MCU_MBOX_INT__TX_CNT__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_MCU_MBOX_INT__TX_CNT__READ(die)                SRM_MCU_MBOX_INT__TX_CNT__GET(SRM_MCU_MBOX_INT__READ(die))
#  define SRM_MCU_MBOX_INT__TX_CNT__WRITE(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_MBOX_INT__TX_CNT__RMW(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_MBOX_INT__TX_CNT__MASK                       0x1
#  define SRM_MCU_MBOX_INT__TX_CNT__OFFSET                     8
#  define SRM_MCU_MBOX_INT__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_MCU_MBOX_INT__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_MCU_MBOX_INT__RSRVD2__READ(die)                SRM_MCU_MBOX_INT__RSRVD2__GET(SRM_MCU_MBOX_INT__READ(die))
#  define SRM_MCU_MBOX_INT__RSRVD2__WRITE(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_MBOX_INT__RSRVD2__RMW(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_MBOX_INT__RSRVD2__MASK                       0x7
#  define SRM_MCU_MBOX_INT__RSRVD2__OFFSET                     5
#  define SRM_MCU_MBOX_INT__RX_OFLOW__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_MCU_MBOX_INT__RX_OFLOW__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_MCU_MBOX_INT__RX_OFLOW__READ(die)                SRM_MCU_MBOX_INT__RX_OFLOW__GET(SRM_MCU_MBOX_INT__READ(die))
#  define SRM_MCU_MBOX_INT__RX_OFLOW__WRITE(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_MBOX_INT__RX_OFLOW__RMW(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_MBOX_INT__RX_OFLOW__MASK                       0x1
#  define SRM_MCU_MBOX_INT__RX_OFLOW__OFFSET                     4
#  define SRM_MCU_MBOX_INT__RX_UFLOW__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MCU_MBOX_INT__RX_UFLOW__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MCU_MBOX_INT__RX_UFLOW__READ(die)                SRM_MCU_MBOX_INT__RX_UFLOW__GET(SRM_MCU_MBOX_INT__READ(die))
#  define SRM_MCU_MBOX_INT__RX_UFLOW__WRITE(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_MBOX_INT__RX_UFLOW__RMW(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_MBOX_INT__RX_UFLOW__MASK                       0x1
#  define SRM_MCU_MBOX_INT__RX_UFLOW__OFFSET                     3
#  define SRM_MCU_MBOX_INT__RX_FULL__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_MBOX_INT__RX_FULL__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_MBOX_INT__RX_FULL__READ(die)                SRM_MCU_MBOX_INT__RX_FULL__GET(SRM_MCU_MBOX_INT__READ(die))
#  define SRM_MCU_MBOX_INT__RX_FULL__WRITE(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_MBOX_INT__RX_FULL__RMW(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_MBOX_INT__RX_FULL__MASK                       0x1
#  define SRM_MCU_MBOX_INT__RX_FULL__OFFSET                     2
#  define SRM_MCU_MBOX_INT__RX_EMPTY__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_MBOX_INT__RX_EMPTY__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_MBOX_INT__RX_EMPTY__READ(die)                SRM_MCU_MBOX_INT__RX_EMPTY__GET(SRM_MCU_MBOX_INT__READ(die))
#  define SRM_MCU_MBOX_INT__RX_EMPTY__WRITE(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_MBOX_INT__RX_EMPTY__RMW(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_MBOX_INT__RX_EMPTY__MASK                       0x1
#  define SRM_MCU_MBOX_INT__RX_EMPTY__OFFSET                     1
#  define SRM_MCU_MBOX_INT__RX_CNT__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_MBOX_INT__RX_CNT__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_MBOX_INT__RX_CNT__READ(die)                SRM_MCU_MBOX_INT__RX_CNT__GET(SRM_MCU_MBOX_INT__READ(die))
#  define SRM_MCU_MBOX_INT__RX_CNT__WRITE(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_MBOX_INT__RX_CNT__RMW(die, fdata)           SRM_MCU_MBOX_INT__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_MBOX_INT__RX_CNT__MASK                       0x1
#  define SRM_MCU_MBOX_INT__RX_CNT__OFFSET                     0

#define SRM_MCU_MBOX_INTE__ADDRESS                      0xe00d
#define SRM_MCU_MBOX_INTE__DEFAULT                      0x0
#define SRM_MCU_MBOX_INTE__READ(die)                  srm_reg_read(die, SRM_MCU_MBOX_INTE__ADDRESS)
#define SRM_MCU_MBOX_INTE__WRITE(die, data)             srm_reg_write(die, SRM_MCU_MBOX_INTE__ADDRESS, (data))
#define SRM_MCU_MBOX_INTE__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_MBOX_INTE__ADDRESS, (data), (mask))
#  define SRM_MCU_MBOX_INTE__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SRM_MCU_MBOX_INTE__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SRM_MCU_MBOX_INTE__RSRVD1__READ(die)                SRM_MCU_MBOX_INTE__RSRVD1__GET(SRM_MCU_MBOX_INTE__READ(die))
#  define SRM_MCU_MBOX_INTE__RSRVD1__WRITE(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MCU_MBOX_INTE__RSRVD1__RMW(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MCU_MBOX_INTE__RSRVD1__MASK                       0x7
#  define SRM_MCU_MBOX_INTE__RSRVD1__OFFSET                     13
#  define SRM_MCU_MBOX_INTE__TX_OFLOWE__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_MCU_MBOX_INTE__TX_OFLOWE__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_MCU_MBOX_INTE__TX_OFLOWE__READ(die)                SRM_MCU_MBOX_INTE__TX_OFLOWE__GET(SRM_MCU_MBOX_INTE__READ(die))
#  define SRM_MCU_MBOX_INTE__TX_OFLOWE__WRITE(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_MBOX_INTE__TX_OFLOWE__RMW(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_MBOX_INTE__TX_OFLOWE__MASK                       0x1
#  define SRM_MCU_MBOX_INTE__TX_OFLOWE__OFFSET                     12
#  define SRM_MCU_MBOX_INTE__TX_UFLOWE__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_MCU_MBOX_INTE__TX_UFLOWE__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_MCU_MBOX_INTE__TX_UFLOWE__READ(die)                SRM_MCU_MBOX_INTE__TX_UFLOWE__GET(SRM_MCU_MBOX_INTE__READ(die))
#  define SRM_MCU_MBOX_INTE__TX_UFLOWE__WRITE(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_MBOX_INTE__TX_UFLOWE__RMW(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_MBOX_INTE__TX_UFLOWE__MASK                       0x1
#  define SRM_MCU_MBOX_INTE__TX_UFLOWE__OFFSET                     11
#  define SRM_MCU_MBOX_INTE__TX_FULLE__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_MCU_MBOX_INTE__TX_FULLE__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_MCU_MBOX_INTE__TX_FULLE__READ(die)                SRM_MCU_MBOX_INTE__TX_FULLE__GET(SRM_MCU_MBOX_INTE__READ(die))
#  define SRM_MCU_MBOX_INTE__TX_FULLE__WRITE(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_MBOX_INTE__TX_FULLE__RMW(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_MBOX_INTE__TX_FULLE__MASK                       0x1
#  define SRM_MCU_MBOX_INTE__TX_FULLE__OFFSET                     10
#  define SRM_MCU_MBOX_INTE__TX_EMPTYE__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_MCU_MBOX_INTE__TX_EMPTYE__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_MCU_MBOX_INTE__TX_EMPTYE__READ(die)                SRM_MCU_MBOX_INTE__TX_EMPTYE__GET(SRM_MCU_MBOX_INTE__READ(die))
#  define SRM_MCU_MBOX_INTE__TX_EMPTYE__WRITE(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_MBOX_INTE__TX_EMPTYE__RMW(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_MBOX_INTE__TX_EMPTYE__MASK                       0x1
#  define SRM_MCU_MBOX_INTE__TX_EMPTYE__OFFSET                     9
#  define SRM_MCU_MBOX_INTE__TX_CNTE__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_MCU_MBOX_INTE__TX_CNTE__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_MCU_MBOX_INTE__TX_CNTE__READ(die)                SRM_MCU_MBOX_INTE__TX_CNTE__GET(SRM_MCU_MBOX_INTE__READ(die))
#  define SRM_MCU_MBOX_INTE__TX_CNTE__WRITE(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_MBOX_INTE__TX_CNTE__RMW(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_MBOX_INTE__TX_CNTE__MASK                       0x1
#  define SRM_MCU_MBOX_INTE__TX_CNTE__OFFSET                     8
#  define SRM_MCU_MBOX_INTE__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_MCU_MBOX_INTE__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_MCU_MBOX_INTE__RSRVD2__READ(die)                SRM_MCU_MBOX_INTE__RSRVD2__GET(SRM_MCU_MBOX_INTE__READ(die))
#  define SRM_MCU_MBOX_INTE__RSRVD2__WRITE(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_MBOX_INTE__RSRVD2__RMW(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_MBOX_INTE__RSRVD2__MASK                       0x7
#  define SRM_MCU_MBOX_INTE__RSRVD2__OFFSET                     5
#  define SRM_MCU_MBOX_INTE__RX_OFLOWE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_MCU_MBOX_INTE__RX_OFLOWE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_MCU_MBOX_INTE__RX_OFLOWE__READ(die)                SRM_MCU_MBOX_INTE__RX_OFLOWE__GET(SRM_MCU_MBOX_INTE__READ(die))
#  define SRM_MCU_MBOX_INTE__RX_OFLOWE__WRITE(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_MBOX_INTE__RX_OFLOWE__RMW(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_MBOX_INTE__RX_OFLOWE__MASK                       0x1
#  define SRM_MCU_MBOX_INTE__RX_OFLOWE__OFFSET                     4
#  define SRM_MCU_MBOX_INTE__RX_UFLOWE__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MCU_MBOX_INTE__RX_UFLOWE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MCU_MBOX_INTE__RX_UFLOWE__READ(die)                SRM_MCU_MBOX_INTE__RX_UFLOWE__GET(SRM_MCU_MBOX_INTE__READ(die))
#  define SRM_MCU_MBOX_INTE__RX_UFLOWE__WRITE(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_MBOX_INTE__RX_UFLOWE__RMW(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_MBOX_INTE__RX_UFLOWE__MASK                       0x1
#  define SRM_MCU_MBOX_INTE__RX_UFLOWE__OFFSET                     3
#  define SRM_MCU_MBOX_INTE__RX_FULLE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_MBOX_INTE__RX_FULLE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_MBOX_INTE__RX_FULLE__READ(die)                SRM_MCU_MBOX_INTE__RX_FULLE__GET(SRM_MCU_MBOX_INTE__READ(die))
#  define SRM_MCU_MBOX_INTE__RX_FULLE__WRITE(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_MBOX_INTE__RX_FULLE__RMW(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_MBOX_INTE__RX_FULLE__MASK                       0x1
#  define SRM_MCU_MBOX_INTE__RX_FULLE__OFFSET                     2
#  define SRM_MCU_MBOX_INTE__RX_EMPTYE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_MBOX_INTE__RX_EMPTYE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_MBOX_INTE__RX_EMPTYE__READ(die)                SRM_MCU_MBOX_INTE__RX_EMPTYE__GET(SRM_MCU_MBOX_INTE__READ(die))
#  define SRM_MCU_MBOX_INTE__RX_EMPTYE__WRITE(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_MBOX_INTE__RX_EMPTYE__RMW(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_MBOX_INTE__RX_EMPTYE__MASK                       0x1
#  define SRM_MCU_MBOX_INTE__RX_EMPTYE__OFFSET                     1
#  define SRM_MCU_MBOX_INTE__RX_CNTE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_MBOX_INTE__RX_CNTE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_MBOX_INTE__RX_CNTE__READ(die)                SRM_MCU_MBOX_INTE__RX_CNTE__GET(SRM_MCU_MBOX_INTE__READ(die))
#  define SRM_MCU_MBOX_INTE__RX_CNTE__WRITE(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_MBOX_INTE__RX_CNTE__RMW(die, fdata)           SRM_MCU_MBOX_INTE__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_MBOX_INTE__RX_CNTE__MASK                       0x1
#  define SRM_MCU_MBOX_INTE__RX_CNTE__OFFSET                     0

#define SRM_MCU_MBOX_INTS__ADDRESS                      0xe00e
#define SRM_MCU_MBOX_INTS__DEFAULT                      0x0
#define SRM_MCU_MBOX_INTS__READ(die)                  srm_reg_read(die, SRM_MCU_MBOX_INTS__ADDRESS)
#define SRM_MCU_MBOX_INTS__WRITE(die, data)             srm_reg_write(die, SRM_MCU_MBOX_INTS__ADDRESS, (data))
#define SRM_MCU_MBOX_INTS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_MBOX_INTS__ADDRESS, (data), (mask))
#  define SRM_MCU_MBOX_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SRM_MCU_MBOX_INTS__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SRM_MCU_MBOX_INTS__RSRVD1__READ(die)                SRM_MCU_MBOX_INTS__RSRVD1__GET(SRM_MCU_MBOX_INTS__READ(die))
#  define SRM_MCU_MBOX_INTS__RSRVD1__WRITE(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MCU_MBOX_INTS__RSRVD1__RMW(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MCU_MBOX_INTS__RSRVD1__MASK                       0x7
#  define SRM_MCU_MBOX_INTS__RSRVD1__OFFSET                     13
#  define SRM_MCU_MBOX_INTS__TX_OFLOWS__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_MCU_MBOX_INTS__TX_OFLOWS__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_MCU_MBOX_INTS__TX_OFLOWS__READ(die)                SRM_MCU_MBOX_INTS__TX_OFLOWS__GET(SRM_MCU_MBOX_INTS__READ(die))
#  define SRM_MCU_MBOX_INTS__TX_OFLOWS__WRITE(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_MBOX_INTS__TX_OFLOWS__RMW(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_MBOX_INTS__TX_OFLOWS__MASK                       0x1
#  define SRM_MCU_MBOX_INTS__TX_OFLOWS__OFFSET                     12
#  define SRM_MCU_MBOX_INTS__TX_UFLOWS__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_MCU_MBOX_INTS__TX_UFLOWS__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_MCU_MBOX_INTS__TX_UFLOWS__READ(die)                SRM_MCU_MBOX_INTS__TX_UFLOWS__GET(SRM_MCU_MBOX_INTS__READ(die))
#  define SRM_MCU_MBOX_INTS__TX_UFLOWS__WRITE(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_MBOX_INTS__TX_UFLOWS__RMW(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_MBOX_INTS__TX_UFLOWS__MASK                       0x1
#  define SRM_MCU_MBOX_INTS__TX_UFLOWS__OFFSET                     11
#  define SRM_MCU_MBOX_INTS__TX_FULLS__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_MCU_MBOX_INTS__TX_FULLS__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_MCU_MBOX_INTS__TX_FULLS__READ(die)                SRM_MCU_MBOX_INTS__TX_FULLS__GET(SRM_MCU_MBOX_INTS__READ(die))
#  define SRM_MCU_MBOX_INTS__TX_FULLS__WRITE(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_MBOX_INTS__TX_FULLS__RMW(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_MBOX_INTS__TX_FULLS__MASK                       0x1
#  define SRM_MCU_MBOX_INTS__TX_FULLS__OFFSET                     10
#  define SRM_MCU_MBOX_INTS__TX_EMPTYS__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_MCU_MBOX_INTS__TX_EMPTYS__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_MCU_MBOX_INTS__TX_EMPTYS__READ(die)                SRM_MCU_MBOX_INTS__TX_EMPTYS__GET(SRM_MCU_MBOX_INTS__READ(die))
#  define SRM_MCU_MBOX_INTS__TX_EMPTYS__WRITE(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_MBOX_INTS__TX_EMPTYS__RMW(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_MBOX_INTS__TX_EMPTYS__MASK                       0x1
#  define SRM_MCU_MBOX_INTS__TX_EMPTYS__OFFSET                     9
#  define SRM_MCU_MBOX_INTS__TX_CNTS__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_MCU_MBOX_INTS__TX_CNTS__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_MCU_MBOX_INTS__TX_CNTS__READ(die)                SRM_MCU_MBOX_INTS__TX_CNTS__GET(SRM_MCU_MBOX_INTS__READ(die))
#  define SRM_MCU_MBOX_INTS__TX_CNTS__WRITE(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_MBOX_INTS__TX_CNTS__RMW(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_MBOX_INTS__TX_CNTS__MASK                       0x1
#  define SRM_MCU_MBOX_INTS__TX_CNTS__OFFSET                     8
#  define SRM_MCU_MBOX_INTS__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_MCU_MBOX_INTS__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_MCU_MBOX_INTS__RSRVD2__READ(die)                SRM_MCU_MBOX_INTS__RSRVD2__GET(SRM_MCU_MBOX_INTS__READ(die))
#  define SRM_MCU_MBOX_INTS__RSRVD2__WRITE(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_MBOX_INTS__RSRVD2__RMW(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_MBOX_INTS__RSRVD2__MASK                       0x7
#  define SRM_MCU_MBOX_INTS__RSRVD2__OFFSET                     5
#  define SRM_MCU_MBOX_INTS__RX_OFLOWS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_MCU_MBOX_INTS__RX_OFLOWS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_MCU_MBOX_INTS__RX_OFLOWS__READ(die)                SRM_MCU_MBOX_INTS__RX_OFLOWS__GET(SRM_MCU_MBOX_INTS__READ(die))
#  define SRM_MCU_MBOX_INTS__RX_OFLOWS__WRITE(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_MBOX_INTS__RX_OFLOWS__RMW(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_MBOX_INTS__RX_OFLOWS__MASK                       0x1
#  define SRM_MCU_MBOX_INTS__RX_OFLOWS__OFFSET                     4
#  define SRM_MCU_MBOX_INTS__RX_UFLOWS__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MCU_MBOX_INTS__RX_UFLOWS__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MCU_MBOX_INTS__RX_UFLOWS__READ(die)                SRM_MCU_MBOX_INTS__RX_UFLOWS__GET(SRM_MCU_MBOX_INTS__READ(die))
#  define SRM_MCU_MBOX_INTS__RX_UFLOWS__WRITE(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_MBOX_INTS__RX_UFLOWS__RMW(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_MBOX_INTS__RX_UFLOWS__MASK                       0x1
#  define SRM_MCU_MBOX_INTS__RX_UFLOWS__OFFSET                     3
#  define SRM_MCU_MBOX_INTS__RX_FULLS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_MBOX_INTS__RX_FULLS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_MBOX_INTS__RX_FULLS__READ(die)                SRM_MCU_MBOX_INTS__RX_FULLS__GET(SRM_MCU_MBOX_INTS__READ(die))
#  define SRM_MCU_MBOX_INTS__RX_FULLS__WRITE(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_MBOX_INTS__RX_FULLS__RMW(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_MBOX_INTS__RX_FULLS__MASK                       0x1
#  define SRM_MCU_MBOX_INTS__RX_FULLS__OFFSET                     2
#  define SRM_MCU_MBOX_INTS__RX_EMPTYS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_MBOX_INTS__RX_EMPTYS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_MBOX_INTS__RX_EMPTYS__READ(die)                SRM_MCU_MBOX_INTS__RX_EMPTYS__GET(SRM_MCU_MBOX_INTS__READ(die))
#  define SRM_MCU_MBOX_INTS__RX_EMPTYS__WRITE(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_MBOX_INTS__RX_EMPTYS__RMW(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_MBOX_INTS__RX_EMPTYS__MASK                       0x1
#  define SRM_MCU_MBOX_INTS__RX_EMPTYS__OFFSET                     1
#  define SRM_MCU_MBOX_INTS__RX_CNTS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_MBOX_INTS__RX_CNTS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_MBOX_INTS__RX_CNTS__READ(die)                SRM_MCU_MBOX_INTS__RX_CNTS__GET(SRM_MCU_MBOX_INTS__READ(die))
#  define SRM_MCU_MBOX_INTS__RX_CNTS__WRITE(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_MBOX_INTS__RX_CNTS__RMW(die, fdata)           SRM_MCU_MBOX_INTS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_MBOX_INTS__RX_CNTS__MASK                       0x1
#  define SRM_MCU_MBOX_INTS__RX_CNTS__OFFSET                     0

#define SRM_MCU_MBOX_INTZ__ADDRESS                      0xe00f
#define SRM_MCU_MBOX_INTZ__DEFAULT                      0x0
#define SRM_MCU_MBOX_INTZ__READ(die)                  srm_reg_read(die, SRM_MCU_MBOX_INTZ__ADDRESS)
#define SRM_MCU_MBOX_INTZ__WRITE(die, data)             srm_reg_write(die, SRM_MCU_MBOX_INTZ__ADDRESS, (data))
#define SRM_MCU_MBOX_INTZ__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_MBOX_INTZ__ADDRESS, (data), (mask))
#  define SRM_MCU_MBOX_INTZ__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SRM_MCU_MBOX_INTZ__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SRM_MCU_MBOX_INTZ__RSRVD1__READ(die)                SRM_MCU_MBOX_INTZ__RSRVD1__GET(SRM_MCU_MBOX_INTZ__READ(die))
#  define SRM_MCU_MBOX_INTZ__RSRVD1__WRITE(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MCU_MBOX_INTZ__RSRVD1__RMW(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_MCU_MBOX_INTZ__RSRVD1__MASK                       0x7
#  define SRM_MCU_MBOX_INTZ__RSRVD1__OFFSET                     13
#  define SRM_MCU_MBOX_INTZ__TX_OFLOWZ__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_MCU_MBOX_INTZ__TX_OFLOWZ__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_MCU_MBOX_INTZ__TX_OFLOWZ__READ(die)                SRM_MCU_MBOX_INTZ__TX_OFLOWZ__GET(SRM_MCU_MBOX_INTZ__READ(die))
#  define SRM_MCU_MBOX_INTZ__TX_OFLOWZ__WRITE(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_MBOX_INTZ__TX_OFLOWZ__RMW(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_MBOX_INTZ__TX_OFLOWZ__MASK                       0x1
#  define SRM_MCU_MBOX_INTZ__TX_OFLOWZ__OFFSET                     12
#  define SRM_MCU_MBOX_INTZ__TX_UFLOWZ__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_MCU_MBOX_INTZ__TX_UFLOWZ__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_MCU_MBOX_INTZ__TX_UFLOWZ__READ(die)                SRM_MCU_MBOX_INTZ__TX_UFLOWZ__GET(SRM_MCU_MBOX_INTZ__READ(die))
#  define SRM_MCU_MBOX_INTZ__TX_UFLOWZ__WRITE(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_MBOX_INTZ__TX_UFLOWZ__RMW(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_MBOX_INTZ__TX_UFLOWZ__MASK                       0x1
#  define SRM_MCU_MBOX_INTZ__TX_UFLOWZ__OFFSET                     11
#  define SRM_MCU_MBOX_INTZ__TX_FULLZ__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_MCU_MBOX_INTZ__TX_FULLZ__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_MCU_MBOX_INTZ__TX_FULLZ__READ(die)                SRM_MCU_MBOX_INTZ__TX_FULLZ__GET(SRM_MCU_MBOX_INTZ__READ(die))
#  define SRM_MCU_MBOX_INTZ__TX_FULLZ__WRITE(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_MBOX_INTZ__TX_FULLZ__RMW(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_MBOX_INTZ__TX_FULLZ__MASK                       0x1
#  define SRM_MCU_MBOX_INTZ__TX_FULLZ__OFFSET                     10
#  define SRM_MCU_MBOX_INTZ__TX_EMPTYZ__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_MCU_MBOX_INTZ__TX_EMPTYZ__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_MCU_MBOX_INTZ__TX_EMPTYZ__READ(die)                SRM_MCU_MBOX_INTZ__TX_EMPTYZ__GET(SRM_MCU_MBOX_INTZ__READ(die))
#  define SRM_MCU_MBOX_INTZ__TX_EMPTYZ__WRITE(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_MBOX_INTZ__TX_EMPTYZ__RMW(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_MBOX_INTZ__TX_EMPTYZ__MASK                       0x1
#  define SRM_MCU_MBOX_INTZ__TX_EMPTYZ__OFFSET                     9
#  define SRM_MCU_MBOX_INTZ__TX_CNTZ__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_MCU_MBOX_INTZ__TX_CNTZ__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_MCU_MBOX_INTZ__TX_CNTZ__READ(die)                SRM_MCU_MBOX_INTZ__TX_CNTZ__GET(SRM_MCU_MBOX_INTZ__READ(die))
#  define SRM_MCU_MBOX_INTZ__TX_CNTZ__WRITE(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_MBOX_INTZ__TX_CNTZ__RMW(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_MBOX_INTZ__TX_CNTZ__MASK                       0x1
#  define SRM_MCU_MBOX_INTZ__TX_CNTZ__OFFSET                     8
#  define SRM_MCU_MBOX_INTZ__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_MCU_MBOX_INTZ__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_MCU_MBOX_INTZ__RSRVD2__READ(die)                SRM_MCU_MBOX_INTZ__RSRVD2__GET(SRM_MCU_MBOX_INTZ__READ(die))
#  define SRM_MCU_MBOX_INTZ__RSRVD2__WRITE(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_MBOX_INTZ__RSRVD2__RMW(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_MCU_MBOX_INTZ__RSRVD2__MASK                       0x7
#  define SRM_MCU_MBOX_INTZ__RSRVD2__OFFSET                     5
#  define SRM_MCU_MBOX_INTZ__RX_OFLOWZ__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_MCU_MBOX_INTZ__RX_OFLOWZ__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_MCU_MBOX_INTZ__RX_OFLOWZ__READ(die)                SRM_MCU_MBOX_INTZ__RX_OFLOWZ__GET(SRM_MCU_MBOX_INTZ__READ(die))
#  define SRM_MCU_MBOX_INTZ__RX_OFLOWZ__WRITE(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_MBOX_INTZ__RX_OFLOWZ__RMW(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_MBOX_INTZ__RX_OFLOWZ__MASK                       0x1
#  define SRM_MCU_MBOX_INTZ__RX_OFLOWZ__OFFSET                     4
#  define SRM_MCU_MBOX_INTZ__RX_UFLOWZ__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MCU_MBOX_INTZ__RX_UFLOWZ__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MCU_MBOX_INTZ__RX_UFLOWZ__READ(die)                SRM_MCU_MBOX_INTZ__RX_UFLOWZ__GET(SRM_MCU_MBOX_INTZ__READ(die))
#  define SRM_MCU_MBOX_INTZ__RX_UFLOWZ__WRITE(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_MBOX_INTZ__RX_UFLOWZ__RMW(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_MBOX_INTZ__RX_UFLOWZ__MASK                       0x1
#  define SRM_MCU_MBOX_INTZ__RX_UFLOWZ__OFFSET                     3
#  define SRM_MCU_MBOX_INTZ__RX_FULLZ__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_MBOX_INTZ__RX_FULLZ__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_MBOX_INTZ__RX_FULLZ__READ(die)                SRM_MCU_MBOX_INTZ__RX_FULLZ__GET(SRM_MCU_MBOX_INTZ__READ(die))
#  define SRM_MCU_MBOX_INTZ__RX_FULLZ__WRITE(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_MBOX_INTZ__RX_FULLZ__RMW(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_MBOX_INTZ__RX_FULLZ__MASK                       0x1
#  define SRM_MCU_MBOX_INTZ__RX_FULLZ__OFFSET                     2
#  define SRM_MCU_MBOX_INTZ__RX_EMPTYZ__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_MBOX_INTZ__RX_EMPTYZ__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_MBOX_INTZ__RX_EMPTYZ__READ(die)                SRM_MCU_MBOX_INTZ__RX_EMPTYZ__GET(SRM_MCU_MBOX_INTZ__READ(die))
#  define SRM_MCU_MBOX_INTZ__RX_EMPTYZ__WRITE(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_MBOX_INTZ__RX_EMPTYZ__RMW(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_MBOX_INTZ__RX_EMPTYZ__MASK                       0x1
#  define SRM_MCU_MBOX_INTZ__RX_EMPTYZ__OFFSET                     1
#  define SRM_MCU_MBOX_INTZ__RX_CNTZ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_MBOX_INTZ__RX_CNTZ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_MBOX_INTZ__RX_CNTZ__READ(die)                SRM_MCU_MBOX_INTZ__RX_CNTZ__GET(SRM_MCU_MBOX_INTZ__READ(die))
#  define SRM_MCU_MBOX_INTZ__RX_CNTZ__WRITE(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_MBOX_INTZ__RX_CNTZ__RMW(die, fdata)           SRM_MCU_MBOX_INTZ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_MBOX_INTZ__RX_CNTZ__MASK                       0x1
#  define SRM_MCU_MBOX_INTZ__RX_CNTZ__OFFSET                     0

#define SRM_MCU_MDIO_AERR_STATUS0__ADDRESS                      0xe024
#define SRM_MCU_MDIO_AERR_STATUS0__DEFAULT                      0x0
#define SRM_MCU_MDIO_AERR_STATUS0__READ(die)                  srm_reg_read(die, SRM_MCU_MDIO_AERR_STATUS0__ADDRESS)
#define SRM_MCU_MDIO_AERR_STATUS0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_MDIO_AERR_STATUS0__ADDRESS, (data))
#define SRM_MCU_MDIO_AERR_STATUS0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_MDIO_AERR_STATUS0__ADDRESS, (data), (mask))
#  define SRM_MCU_MDIO_AERR_STATUS0__ADDR__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_MDIO_AERR_STATUS0__ADDR__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_MDIO_AERR_STATUS0__ADDR__READ(die)                SRM_MCU_MDIO_AERR_STATUS0__ADDR__GET(SRM_MCU_MDIO_AERR_STATUS0__READ(die))
#  define SRM_MCU_MDIO_AERR_STATUS0__ADDR__WRITE(die, fdata)           SRM_MCU_MDIO_AERR_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_MDIO_AERR_STATUS0__ADDR__RMW(die, fdata)           SRM_MCU_MDIO_AERR_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_MDIO_AERR_STATUS0__ADDR__MASK                       0xffff
#  define SRM_MCU_MDIO_AERR_STATUS0__ADDR__OFFSET                     0

#define SRM_MCU_MDIO_AERR_STATUS1__ADDRESS                      0xe025
#define SRM_MCU_MDIO_AERR_STATUS1__DEFAULT                      0x0
#define SRM_MCU_MDIO_AERR_STATUS1__READ(die)                  srm_reg_read(die, SRM_MCU_MDIO_AERR_STATUS1__ADDRESS)
#define SRM_MCU_MDIO_AERR_STATUS1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_MDIO_AERR_STATUS1__ADDRESS, (data))
#define SRM_MCU_MDIO_AERR_STATUS1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_MDIO_AERR_STATUS1__ADDRESS, (data), (mask))
#  define SRM_MCU_MDIO_AERR_STATUS1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SRM_MCU_MDIO_AERR_STATUS1__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SRM_MCU_MDIO_AERR_STATUS1__RSRVD1__READ(die)                SRM_MCU_MDIO_AERR_STATUS1__RSRVD1__GET(SRM_MCU_MDIO_AERR_STATUS1__READ(die))
#  define SRM_MCU_MDIO_AERR_STATUS1__RSRVD1__WRITE(die, fdata)           SRM_MCU_MDIO_AERR_STATUS1__RMW(die, (fdata)<<2, 0xfffc)
#  define SRM_MCU_MDIO_AERR_STATUS1__RSRVD1__RMW(die, fdata)           SRM_MCU_MDIO_AERR_STATUS1__RMW(die, (fdata)<<2, 0xfffc)
#  define SRM_MCU_MDIO_AERR_STATUS1__RSRVD1__MASK                       0x3fff
#  define SRM_MCU_MDIO_AERR_STATUS1__RSRVD1__OFFSET                     2
#  define SRM_MCU_MDIO_AERR_STATUS1__ADDR__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MCU_MDIO_AERR_STATUS1__ADDR__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MCU_MDIO_AERR_STATUS1__ADDR__READ(die)                SRM_MCU_MDIO_AERR_STATUS1__ADDR__GET(SRM_MCU_MDIO_AERR_STATUS1__READ(die))
#  define SRM_MCU_MDIO_AERR_STATUS1__ADDR__WRITE(die, fdata)           SRM_MCU_MDIO_AERR_STATUS1__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_MDIO_AERR_STATUS1__ADDR__RMW(die, fdata)           SRM_MCU_MDIO_AERR_STATUS1__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_MDIO_AERR_STATUS1__ADDR__MASK                       0x3
#  define SRM_MCU_MDIO_AERR_STATUS1__ADDR__OFFSET                     0

#define SRM_MCU_INBPIF_CFG0__ADDRESS                      0xe02d
#define SRM_MCU_INBPIF_CFG0__DEFAULT                      0x81
#define SRM_MCU_INBPIF_CFG0__READ(die)                  srm_reg_read(die, SRM_MCU_INBPIF_CFG0__ADDRESS)
#define SRM_MCU_INBPIF_CFG0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_INBPIF_CFG0__ADDRESS, (data))
#define SRM_MCU_INBPIF_CFG0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_INBPIF_CFG0__ADDRESS, (data), (mask))
#  define SRM_MCU_INBPIF_CFG0__PRIORITY__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SRM_MCU_INBPIF_CFG0__PRIORITY__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SRM_MCU_INBPIF_CFG0__PRIORITY__READ(die)                SRM_MCU_INBPIF_CFG0__PRIORITY__GET(SRM_MCU_INBPIF_CFG0__READ(die))
#  define SRM_MCU_INBPIF_CFG0__PRIORITY__WRITE(die, fdata)           SRM_MCU_INBPIF_CFG0__RMW(die, (fdata)<<14, 0xc000)
#  define SRM_MCU_INBPIF_CFG0__PRIORITY__RMW(die, fdata)           SRM_MCU_INBPIF_CFG0__RMW(die, (fdata)<<14, 0xc000)
#  define SRM_MCU_INBPIF_CFG0__PRIORITY__MASK                       0x3
#  define SRM_MCU_INBPIF_CFG0__PRIORITY__OFFSET                     14
#  define SRM_MCU_INBPIF_CFG0__ID__SET(rdata, fdata)         (((rdata) & 0xc0ff) | (((uint32_t)(fdata) << 8) & 0x3f00))
#  define SRM_MCU_INBPIF_CFG0__ID__GET(rdata)                (((rdata) >> 8) & 0x3f)
#  define SRM_MCU_INBPIF_CFG0__ID__READ(die)                SRM_MCU_INBPIF_CFG0__ID__GET(SRM_MCU_INBPIF_CFG0__READ(die))
#  define SRM_MCU_INBPIF_CFG0__ID__WRITE(die, fdata)           SRM_MCU_INBPIF_CFG0__RMW(die, (fdata)<<8, 0x3f00)
#  define SRM_MCU_INBPIF_CFG0__ID__RMW(die, fdata)           SRM_MCU_INBPIF_CFG0__RMW(die, (fdata)<<8, 0x3f00)
#  define SRM_MCU_INBPIF_CFG0__ID__MASK                       0x3f
#  define SRM_MCU_INBPIF_CFG0__ID__OFFSET                     8
#  define SRM_MCU_INBPIF_CFG0__CNTL__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_INBPIF_CFG0__CNTL__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_INBPIF_CFG0__CNTL__READ(die)                SRM_MCU_INBPIF_CFG0__CNTL__GET(SRM_MCU_INBPIF_CFG0__READ(die))
#  define SRM_MCU_INBPIF_CFG0__CNTL__WRITE(die, fdata)           SRM_MCU_INBPIF_CFG0__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_INBPIF_CFG0__CNTL__RMW(die, fdata)           SRM_MCU_INBPIF_CFG0__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_INBPIF_CFG0__CNTL__MASK                       0xff
#  define SRM_MCU_INBPIF_CFG0__CNTL__OFFSET                     0

#define SRM_MCU_INBPIF_CFG1__ADDRESS                      0xe02e
#define SRM_MCU_INBPIF_CFG1__DEFAULT                      0x400
#define SRM_MCU_INBPIF_CFG1__READ(die)                  srm_reg_read(die, SRM_MCU_INBPIF_CFG1__ADDRESS)
#define SRM_MCU_INBPIF_CFG1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_INBPIF_CFG1__ADDRESS, (data))
#define SRM_MCU_INBPIF_CFG1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_INBPIF_CFG1__ADDRESS, (data), (mask))
#  define SRM_MCU_INBPIF_CFG1__RDENA__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_INBPIF_CFG1__RDENA__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_INBPIF_CFG1__RDENA__READ(die)                SRM_MCU_INBPIF_CFG1__RDENA__GET(SRM_MCU_INBPIF_CFG1__READ(die))
#  define SRM_MCU_INBPIF_CFG1__RDENA__WRITE(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_INBPIF_CFG1__RDENA__RMW(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_INBPIF_CFG1__RDENA__MASK                       0x1
#  define SRM_MCU_INBPIF_CFG1__RDENA__OFFSET                     15
#  define SRM_MCU_INBPIF_CFG1__BEOVR__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_MCU_INBPIF_CFG1__BEOVR__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_MCU_INBPIF_CFG1__BEOVR__READ(die)                SRM_MCU_INBPIF_CFG1__BEOVR__GET(SRM_MCU_INBPIF_CFG1__READ(die))
#  define SRM_MCU_INBPIF_CFG1__BEOVR__WRITE(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_MCU_INBPIF_CFG1__BEOVR__RMW(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_MCU_INBPIF_CFG1__BEOVR__MASK                       0x1
#  define SRM_MCU_INBPIF_CFG1__BEOVR__OFFSET                     14
#  define SRM_MCU_INBPIF_CFG1__IDOVR__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_MCU_INBPIF_CFG1__IDOVR__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_MCU_INBPIF_CFG1__IDOVR__READ(die)                SRM_MCU_INBPIF_CFG1__IDOVR__GET(SRM_MCU_INBPIF_CFG1__READ(die))
#  define SRM_MCU_INBPIF_CFG1__IDOVR__WRITE(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<13, 0x2000)
#  define SRM_MCU_INBPIF_CFG1__IDOVR__RMW(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<13, 0x2000)
#  define SRM_MCU_INBPIF_CFG1__IDOVR__MASK                       0x1
#  define SRM_MCU_INBPIF_CFG1__IDOVR__OFFSET                     13
#  define SRM_MCU_INBPIF_CFG1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_MCU_INBPIF_CFG1__RSRVD1__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_MCU_INBPIF_CFG1__RSRVD1__READ(die)                SRM_MCU_INBPIF_CFG1__RSRVD1__GET(SRM_MCU_INBPIF_CFG1__READ(die))
#  define SRM_MCU_INBPIF_CFG1__RSRVD1__WRITE(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_INBPIF_CFG1__RSRVD1__RMW(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_INBPIF_CFG1__RSRVD1__MASK                       0x1
#  define SRM_MCU_INBPIF_CFG1__RSRVD1__OFFSET                     12
#  define SRM_MCU_INBPIF_CFG1__STRIDE__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SRM_MCU_INBPIF_CFG1__STRIDE__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SRM_MCU_INBPIF_CFG1__STRIDE__READ(die)                SRM_MCU_INBPIF_CFG1__STRIDE__GET(SRM_MCU_INBPIF_CFG1__READ(die))
#  define SRM_MCU_INBPIF_CFG1__STRIDE__WRITE(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_MCU_INBPIF_CFG1__STRIDE__RMW(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_MCU_INBPIF_CFG1__STRIDE__MASK                       0xf
#  define SRM_MCU_INBPIF_CFG1__STRIDE__OFFSET                     8
#  define SRM_MCU_INBPIF_CFG1__BE__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_MCU_INBPIF_CFG1__BE__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_MCU_INBPIF_CFG1__BE__READ(die)                SRM_MCU_INBPIF_CFG1__BE__GET(SRM_MCU_INBPIF_CFG1__READ(die))
#  define SRM_MCU_INBPIF_CFG1__BE__WRITE(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_MCU_INBPIF_CFG1__BE__RMW(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_MCU_INBPIF_CFG1__BE__MASK                       0xf
#  define SRM_MCU_INBPIF_CFG1__BE__OFFSET                     4
#  define SRM_MCU_INBPIF_CFG1__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_MCU_INBPIF_CFG1__RSRVD2__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_MCU_INBPIF_CFG1__RSRVD2__READ(die)                SRM_MCU_INBPIF_CFG1__RSRVD2__GET(SRM_MCU_INBPIF_CFG1__READ(die))
#  define SRM_MCU_INBPIF_CFG1__RSRVD2__WRITE(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MCU_INBPIF_CFG1__RSRVD2__RMW(die, fdata)           SRM_MCU_INBPIF_CFG1__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MCU_INBPIF_CFG1__RSRVD2__MASK                       0xf
#  define SRM_MCU_INBPIF_CFG1__RSRVD2__OFFSET                     0

#define SRM_MCU_INBPIF_ADDR0__ADDRESS                      0xe02f
#define SRM_MCU_INBPIF_ADDR0__DEFAULT                      0x0
#define SRM_MCU_INBPIF_ADDR0__READ(die)                  srm_reg_read(die, SRM_MCU_INBPIF_ADDR0__ADDRESS)
#define SRM_MCU_INBPIF_ADDR0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_INBPIF_ADDR0__ADDRESS, (data))
#define SRM_MCU_INBPIF_ADDR0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_INBPIF_ADDR0__ADDRESS, (data), (mask))
#  define SRM_MCU_INBPIF_ADDR0__ADDR__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_INBPIF_ADDR0__ADDR__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_INBPIF_ADDR0__ADDR__READ(die)                SRM_MCU_INBPIF_ADDR0__ADDR__GET(SRM_MCU_INBPIF_ADDR0__READ(die))
#  define SRM_MCU_INBPIF_ADDR0__ADDR__WRITE(die, fdata)           SRM_MCU_INBPIF_ADDR0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_INBPIF_ADDR0__ADDR__RMW(die, fdata)           SRM_MCU_INBPIF_ADDR0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_INBPIF_ADDR0__ADDR__MASK                       0xffff
#  define SRM_MCU_INBPIF_ADDR0__ADDR__OFFSET                     0

#define SRM_MCU_INBPIF_ADDR1__ADDRESS                      0xe030
#define SRM_MCU_INBPIF_ADDR1__DEFAULT                      0x0
#define SRM_MCU_INBPIF_ADDR1__READ(die)                  srm_reg_read(die, SRM_MCU_INBPIF_ADDR1__ADDRESS)
#define SRM_MCU_INBPIF_ADDR1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_INBPIF_ADDR1__ADDRESS, (data))
#define SRM_MCU_INBPIF_ADDR1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_INBPIF_ADDR1__ADDRESS, (data), (mask))
#  define SRM_MCU_INBPIF_ADDR1__ADDR__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_INBPIF_ADDR1__ADDR__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_INBPIF_ADDR1__ADDR__READ(die)                SRM_MCU_INBPIF_ADDR1__ADDR__GET(SRM_MCU_INBPIF_ADDR1__READ(die))
#  define SRM_MCU_INBPIF_ADDR1__ADDR__WRITE(die, fdata)           SRM_MCU_INBPIF_ADDR1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_INBPIF_ADDR1__ADDR__RMW(die, fdata)           SRM_MCU_INBPIF_ADDR1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_INBPIF_ADDR1__ADDR__MASK                       0xffff
#  define SRM_MCU_INBPIF_ADDR1__ADDR__OFFSET                     0

#define SRM_MCU_INBPIF_WDATA0__ADDRESS                      0xe031
#define SRM_MCU_INBPIF_WDATA0__DEFAULT                      0x0
#define SRM_MCU_INBPIF_WDATA0__READ(die)                  srm_reg_read(die, SRM_MCU_INBPIF_WDATA0__ADDRESS)
#define SRM_MCU_INBPIF_WDATA0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_INBPIF_WDATA0__ADDRESS, (data))
#define SRM_MCU_INBPIF_WDATA0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_INBPIF_WDATA0__ADDRESS, (data), (mask))
#  define SRM_MCU_INBPIF_WDATA0__WDATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_INBPIF_WDATA0__WDATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_INBPIF_WDATA0__WDATA__READ(die)                SRM_MCU_INBPIF_WDATA0__WDATA__GET(SRM_MCU_INBPIF_WDATA0__READ(die))
#  define SRM_MCU_INBPIF_WDATA0__WDATA__WRITE(die, fdata)           SRM_MCU_INBPIF_WDATA0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_INBPIF_WDATA0__WDATA__RMW(die, fdata)           SRM_MCU_INBPIF_WDATA0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_INBPIF_WDATA0__WDATA__MASK                       0xffff
#  define SRM_MCU_INBPIF_WDATA0__WDATA__OFFSET                     0

#define SRM_MCU_INBPIF_WDATA1__ADDRESS                      0xe032
#define SRM_MCU_INBPIF_WDATA1__DEFAULT                      0x0
#define SRM_MCU_INBPIF_WDATA1__READ(die)                  srm_reg_read(die, SRM_MCU_INBPIF_WDATA1__ADDRESS)
#define SRM_MCU_INBPIF_WDATA1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_INBPIF_WDATA1__ADDRESS, (data))
#define SRM_MCU_INBPIF_WDATA1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_INBPIF_WDATA1__ADDRESS, (data), (mask))
#  define SRM_MCU_INBPIF_WDATA1__WDATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_INBPIF_WDATA1__WDATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_INBPIF_WDATA1__WDATA__READ(die)                SRM_MCU_INBPIF_WDATA1__WDATA__GET(SRM_MCU_INBPIF_WDATA1__READ(die))
#  define SRM_MCU_INBPIF_WDATA1__WDATA__WRITE(die, fdata)           SRM_MCU_INBPIF_WDATA1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_INBPIF_WDATA1__WDATA__RMW(die, fdata)           SRM_MCU_INBPIF_WDATA1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_INBPIF_WDATA1__WDATA__MASK                       0xffff
#  define SRM_MCU_INBPIF_WDATA1__WDATA__OFFSET                     0

#define SRM_MCU_INBPIF_RDATA__ADDRESS                      0xe033
#define SRM_MCU_INBPIF_RDATA__DEFAULT                      0x0
#define SRM_MCU_INBPIF_RDATA__READ(die)                  srm_reg_read(die, SRM_MCU_INBPIF_RDATA__ADDRESS)
#define SRM_MCU_INBPIF_RDATA__WRITE(die, data)             srm_reg_write(die, SRM_MCU_INBPIF_RDATA__ADDRESS, (data))
#define SRM_MCU_INBPIF_RDATA__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_INBPIF_RDATA__ADDRESS, (data), (mask))
#  define SRM_MCU_INBPIF_RDATA__RDATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_INBPIF_RDATA__RDATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_INBPIF_RDATA__RDATA__READ(die)                SRM_MCU_INBPIF_RDATA__RDATA__GET(SRM_MCU_INBPIF_RDATA__READ(die))
#  define SRM_MCU_INBPIF_RDATA__RDATA__WRITE(die, fdata)           SRM_MCU_INBPIF_RDATA__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_INBPIF_RDATA__RDATA__RMW(die, fdata)           SRM_MCU_INBPIF_RDATA__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_INBPIF_RDATA__RDATA__MASK                       0xffff
#  define SRM_MCU_INBPIF_RDATA__RDATA__OFFSET                     0

#define SRM_MCU_INBPIF_RSTATUS0__ADDRESS                      0xe034
#define SRM_MCU_INBPIF_RSTATUS0__DEFAULT                      0x0
#define SRM_MCU_INBPIF_RSTATUS0__READ(die)                  srm_reg_read(die, SRM_MCU_INBPIF_RSTATUS0__ADDRESS)
#define SRM_MCU_INBPIF_RSTATUS0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_INBPIF_RSTATUS0__ADDRESS, (data))
#define SRM_MCU_INBPIF_RSTATUS0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_INBPIF_RSTATUS0__ADDRESS, (data), (mask))
#  define SRM_MCU_INBPIF_RSTATUS0__PRIORITY__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SRM_MCU_INBPIF_RSTATUS0__PRIORITY__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SRM_MCU_INBPIF_RSTATUS0__PRIORITY__READ(die)                SRM_MCU_INBPIF_RSTATUS0__PRIORITY__GET(SRM_MCU_INBPIF_RSTATUS0__READ(die))
#  define SRM_MCU_INBPIF_RSTATUS0__PRIORITY__WRITE(die, fdata)           SRM_MCU_INBPIF_RSTATUS0__RMW(die, (fdata)<<14, 0xc000)
#  define SRM_MCU_INBPIF_RSTATUS0__PRIORITY__RMW(die, fdata)           SRM_MCU_INBPIF_RSTATUS0__RMW(die, (fdata)<<14, 0xc000)
#  define SRM_MCU_INBPIF_RSTATUS0__PRIORITY__MASK                       0x3
#  define SRM_MCU_INBPIF_RSTATUS0__PRIORITY__OFFSET                     14
#  define SRM_MCU_INBPIF_RSTATUS0__ID__SET(rdata, fdata)         (((rdata) & 0xc0ff) | (((uint32_t)(fdata) << 8) & 0x3f00))
#  define SRM_MCU_INBPIF_RSTATUS0__ID__GET(rdata)                (((rdata) >> 8) & 0x3f)
#  define SRM_MCU_INBPIF_RSTATUS0__ID__READ(die)                SRM_MCU_INBPIF_RSTATUS0__ID__GET(SRM_MCU_INBPIF_RSTATUS0__READ(die))
#  define SRM_MCU_INBPIF_RSTATUS0__ID__WRITE(die, fdata)           SRM_MCU_INBPIF_RSTATUS0__RMW(die, (fdata)<<8, 0x3f00)
#  define SRM_MCU_INBPIF_RSTATUS0__ID__RMW(die, fdata)           SRM_MCU_INBPIF_RSTATUS0__RMW(die, (fdata)<<8, 0x3f00)
#  define SRM_MCU_INBPIF_RSTATUS0__ID__MASK                       0x3f
#  define SRM_MCU_INBPIF_RSTATUS0__ID__OFFSET                     8
#  define SRM_MCU_INBPIF_RSTATUS0__CNTL__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_INBPIF_RSTATUS0__CNTL__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_INBPIF_RSTATUS0__CNTL__READ(die)                SRM_MCU_INBPIF_RSTATUS0__CNTL__GET(SRM_MCU_INBPIF_RSTATUS0__READ(die))
#  define SRM_MCU_INBPIF_RSTATUS0__CNTL__WRITE(die, fdata)           SRM_MCU_INBPIF_RSTATUS0__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_INBPIF_RSTATUS0__CNTL__RMW(die, fdata)           SRM_MCU_INBPIF_RSTATUS0__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_INBPIF_RSTATUS0__CNTL__MASK                       0xff
#  define SRM_MCU_INBPIF_RSTATUS0__CNTL__OFFSET                     0

#define SRM_MCU_INBPIF_RSTATUS1__ADDRESS                      0xe035
#define SRM_MCU_INBPIF_RSTATUS1__DEFAULT                      0x0
#define SRM_MCU_INBPIF_RSTATUS1__READ(die)                  srm_reg_read(die, SRM_MCU_INBPIF_RSTATUS1__ADDRESS)
#define SRM_MCU_INBPIF_RSTATUS1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_INBPIF_RSTATUS1__ADDRESS, (data))
#define SRM_MCU_INBPIF_RSTATUS1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_INBPIF_RSTATUS1__ADDRESS, (data), (mask))
#  define SRM_MCU_INBPIF_RSTATUS1__RD_PENDING__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_INBPIF_RSTATUS1__RD_PENDING__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_INBPIF_RSTATUS1__RD_PENDING__READ(die)                SRM_MCU_INBPIF_RSTATUS1__RD_PENDING__GET(SRM_MCU_INBPIF_RSTATUS1__READ(die))
#  define SRM_MCU_INBPIF_RSTATUS1__RD_PENDING__WRITE(die, fdata)           SRM_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_INBPIF_RSTATUS1__RD_PENDING__RMW(die, fdata)           SRM_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_INBPIF_RSTATUS1__RD_PENDING__MASK                       0x1
#  define SRM_MCU_INBPIF_RSTATUS1__RD_PENDING__OFFSET                     15
#  define SRM_MCU_INBPIF_RSTATUS1__REQRDY__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_MCU_INBPIF_RSTATUS1__REQRDY__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_MCU_INBPIF_RSTATUS1__REQRDY__READ(die)                SRM_MCU_INBPIF_RSTATUS1__REQRDY__GET(SRM_MCU_INBPIF_RSTATUS1__READ(die))
#  define SRM_MCU_INBPIF_RSTATUS1__REQRDY__WRITE(die, fdata)           SRM_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_MCU_INBPIF_RSTATUS1__REQRDY__RMW(die, fdata)           SRM_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_MCU_INBPIF_RSTATUS1__REQRDY__MASK                       0x1
#  define SRM_MCU_INBPIF_RSTATUS1__REQRDY__OFFSET                     14
#  define SRM_MCU_INBPIF_RSTATUS1__STATE__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SRM_MCU_INBPIF_RSTATUS1__STATE__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SRM_MCU_INBPIF_RSTATUS1__STATE__READ(die)                SRM_MCU_INBPIF_RSTATUS1__STATE__GET(SRM_MCU_INBPIF_RSTATUS1__READ(die))
#  define SRM_MCU_INBPIF_RSTATUS1__STATE__WRITE(die, fdata)           SRM_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<12, 0x3000)
#  define SRM_MCU_INBPIF_RSTATUS1__STATE__RMW(die, fdata)           SRM_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<12, 0x3000)
#  define SRM_MCU_INBPIF_RSTATUS1__STATE__MASK                       0x3
#  define SRM_MCU_INBPIF_RSTATUS1__STATE__OFFSET                     12
#  define SRM_MCU_INBPIF_RSTATUS1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf000) | (((uint32_t)(fdata) << 0) & 0xfff))
#  define SRM_MCU_INBPIF_RSTATUS1__RSRVD1__GET(rdata)                (((rdata) >> 0) & 0xfff)
#  define SRM_MCU_INBPIF_RSTATUS1__RSRVD1__READ(die)                SRM_MCU_INBPIF_RSTATUS1__RSRVD1__GET(SRM_MCU_INBPIF_RSTATUS1__READ(die))
#  define SRM_MCU_INBPIF_RSTATUS1__RSRVD1__WRITE(die, fdata)           SRM_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<0, 0xfff)
#  define SRM_MCU_INBPIF_RSTATUS1__RSRVD1__RMW(die, fdata)           SRM_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<0, 0xfff)
#  define SRM_MCU_INBPIF_RSTATUS1__RSRVD1__MASK                       0xfff
#  define SRM_MCU_INBPIF_RSTATUS1__RSRVD1__OFFSET                     0

#define SRM_MCU_FIRMWARE_REV0__ADDRESS                      0xe045
#define SRM_MCU_FIRMWARE_REV0__DEFAULT                      0x0
#define SRM_MCU_FIRMWARE_REV0__READ(die)                  srm_reg_read(die, SRM_MCU_FIRMWARE_REV0__ADDRESS)
#define SRM_MCU_FIRMWARE_REV0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_FIRMWARE_REV0__ADDRESS, (data))
#define SRM_MCU_FIRMWARE_REV0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_FIRMWARE_REV0__ADDRESS, (data), (mask))
#  define SRM_MCU_FIRMWARE_REV0__REV__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_FIRMWARE_REV0__REV__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_FIRMWARE_REV0__REV__READ(die)                SRM_MCU_FIRMWARE_REV0__REV__GET(SRM_MCU_FIRMWARE_REV0__READ(die))
#  define SRM_MCU_FIRMWARE_REV0__REV__WRITE(die, fdata)           SRM_MCU_FIRMWARE_REV0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_FIRMWARE_REV0__REV__RMW(die, fdata)           SRM_MCU_FIRMWARE_REV0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_FIRMWARE_REV0__REV__MASK                       0xffff
#  define SRM_MCU_FIRMWARE_REV0__REV__OFFSET                     0

#define SRM_MCU_FIRMWARE_REV1__ADDRESS                      0xe046
#define SRM_MCU_FIRMWARE_REV1__DEFAULT                      0x0
#define SRM_MCU_FIRMWARE_REV1__READ(die)                  srm_reg_read(die, SRM_MCU_FIRMWARE_REV1__ADDRESS)
#define SRM_MCU_FIRMWARE_REV1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_FIRMWARE_REV1__ADDRESS, (data))
#define SRM_MCU_FIRMWARE_REV1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_FIRMWARE_REV1__ADDRESS, (data), (mask))
#  define SRM_MCU_FIRMWARE_REV1__REV__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_FIRMWARE_REV1__REV__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_FIRMWARE_REV1__REV__READ(die)                SRM_MCU_FIRMWARE_REV1__REV__GET(SRM_MCU_FIRMWARE_REV1__READ(die))
#  define SRM_MCU_FIRMWARE_REV1__REV__WRITE(die, fdata)           SRM_MCU_FIRMWARE_REV1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_FIRMWARE_REV1__REV__RMW(die, fdata)           SRM_MCU_FIRMWARE_REV1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_FIRMWARE_REV1__REV__MASK                       0xffff
#  define SRM_MCU_FIRMWARE_REV1__REV__OFFSET                     0

#define SRM_MCU_BOOT_STATUS0__ADDRESS                      0xe047
#define SRM_MCU_BOOT_STATUS0__DEFAULT                      0x0
#define SRM_MCU_BOOT_STATUS0__READ(die)                  srm_reg_read(die, SRM_MCU_BOOT_STATUS0__ADDRESS)
#define SRM_MCU_BOOT_STATUS0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_BOOT_STATUS0__ADDRESS, (data))
#define SRM_MCU_BOOT_STATUS0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_BOOT_STATUS0__ADDRESS, (data), (mask))
#  define SRM_MCU_BOOT_STATUS0__BOOT_STATUS__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_BOOT_STATUS0__BOOT_STATUS__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_BOOT_STATUS0__BOOT_STATUS__READ(die)                SRM_MCU_BOOT_STATUS0__BOOT_STATUS__GET(SRM_MCU_BOOT_STATUS0__READ(die))
#  define SRM_MCU_BOOT_STATUS0__BOOT_STATUS__WRITE(die, fdata)           SRM_MCU_BOOT_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_BOOT_STATUS0__BOOT_STATUS__RMW(die, fdata)           SRM_MCU_BOOT_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_BOOT_STATUS0__BOOT_STATUS__MASK                       0xffff
#  define SRM_MCU_BOOT_STATUS0__BOOT_STATUS__OFFSET                     0

#define SRM_MCU_BOOT_STATUS1__ADDRESS                      0xe048
#define SRM_MCU_BOOT_STATUS1__DEFAULT                      0x0
#define SRM_MCU_BOOT_STATUS1__READ(die)                  srm_reg_read(die, SRM_MCU_BOOT_STATUS1__ADDRESS)
#define SRM_MCU_BOOT_STATUS1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_BOOT_STATUS1__ADDRESS, (data))
#define SRM_MCU_BOOT_STATUS1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_BOOT_STATUS1__ADDRESS, (data), (mask))
#  define SRM_MCU_BOOT_STATUS1__UPGRADE_STATE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_BOOT_STATUS1__UPGRADE_STATE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_BOOT_STATUS1__UPGRADE_STATE__READ(die)                SRM_MCU_BOOT_STATUS1__UPGRADE_STATE__GET(SRM_MCU_BOOT_STATUS1__READ(die))
#  define SRM_MCU_BOOT_STATUS1__UPGRADE_STATE__WRITE(die, fdata)           SRM_MCU_BOOT_STATUS1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_BOOT_STATUS1__UPGRADE_STATE__RMW(die, fdata)           SRM_MCU_BOOT_STATUS1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_BOOT_STATUS1__UPGRADE_STATE__MASK                       0xffff
#  define SRM_MCU_BOOT_STATUS1__UPGRADE_STATE__OFFSET                     0

#define SRM_MCU_CRC_CALC0__ADDRESS                      0xe049
#define SRM_MCU_CRC_CALC0__DEFAULT                      0x0
#define SRM_MCU_CRC_CALC0__READ(die)                  srm_reg_read(die, SRM_MCU_CRC_CALC0__ADDRESS)
#define SRM_MCU_CRC_CALC0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_CRC_CALC0__ADDRESS, (data))
#define SRM_MCU_CRC_CALC0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_CRC_CALC0__ADDRESS, (data), (mask))
#  define SRM_MCU_CRC_CALC0__CRC__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_CRC_CALC0__CRC__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_CRC_CALC0__CRC__READ(die)                SRM_MCU_CRC_CALC0__CRC__GET(SRM_MCU_CRC_CALC0__READ(die))
#  define SRM_MCU_CRC_CALC0__CRC__WRITE(die, fdata)           SRM_MCU_CRC_CALC0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CRC_CALC0__CRC__RMW(die, fdata)           SRM_MCU_CRC_CALC0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CRC_CALC0__CRC__MASK                       0xffff
#  define SRM_MCU_CRC_CALC0__CRC__OFFSET                     0

#define SRM_MCU_CRC_CALC1__ADDRESS                      0xe04a
#define SRM_MCU_CRC_CALC1__DEFAULT                      0x0
#define SRM_MCU_CRC_CALC1__READ(die)                  srm_reg_read(die, SRM_MCU_CRC_CALC1__ADDRESS)
#define SRM_MCU_CRC_CALC1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_CRC_CALC1__ADDRESS, (data))
#define SRM_MCU_CRC_CALC1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_CRC_CALC1__ADDRESS, (data), (mask))
#  define SRM_MCU_CRC_CALC1__CRC__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_CRC_CALC1__CRC__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_CRC_CALC1__CRC__READ(die)                SRM_MCU_CRC_CALC1__CRC__GET(SRM_MCU_CRC_CALC1__READ(die))
#  define SRM_MCU_CRC_CALC1__CRC__WRITE(die, fdata)           SRM_MCU_CRC_CALC1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CRC_CALC1__CRC__RMW(die, fdata)           SRM_MCU_CRC_CALC1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CRC_CALC1__CRC__MASK                       0xffff
#  define SRM_MCU_CRC_CALC1__CRC__OFFSET                     0

#define SRM_MCU_API_INFO0__ADDRESS                      0xe04b
#define SRM_MCU_API_INFO0__DEFAULT                      0x0
#define SRM_MCU_API_INFO0__READ(die)                  srm_reg_read(die, SRM_MCU_API_INFO0__ADDRESS)
#define SRM_MCU_API_INFO0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_API_INFO0__ADDRESS, (data))
#define SRM_MCU_API_INFO0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_API_INFO0__ADDRESS, (data), (mask))
#  define SRM_MCU_API_INFO0__INFO__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_API_INFO0__INFO__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_API_INFO0__INFO__READ(die)                SRM_MCU_API_INFO0__INFO__GET(SRM_MCU_API_INFO0__READ(die))
#  define SRM_MCU_API_INFO0__INFO__WRITE(die, fdata)           SRM_MCU_API_INFO0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_API_INFO0__INFO__RMW(die, fdata)           SRM_MCU_API_INFO0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_API_INFO0__INFO__MASK                       0xffff
#  define SRM_MCU_API_INFO0__INFO__OFFSET                     0

#define SRM_MCU_API_INFO1__ADDRESS                      0xe04c
#define SRM_MCU_API_INFO1__DEFAULT                      0x0
#define SRM_MCU_API_INFO1__READ(die)                  srm_reg_read(die, SRM_MCU_API_INFO1__ADDRESS)
#define SRM_MCU_API_INFO1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_API_INFO1__ADDRESS, (data))
#define SRM_MCU_API_INFO1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_API_INFO1__ADDRESS, (data), (mask))
#  define SRM_MCU_API_INFO1__INFO__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_API_INFO1__INFO__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_API_INFO1__INFO__READ(die)                SRM_MCU_API_INFO1__INFO__GET(SRM_MCU_API_INFO1__READ(die))
#  define SRM_MCU_API_INFO1__INFO__WRITE(die, fdata)           SRM_MCU_API_INFO1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_API_INFO1__INFO__RMW(die, fdata)           SRM_MCU_API_INFO1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_API_INFO1__INFO__MASK                       0xffff
#  define SRM_MCU_API_INFO1__INFO__OFFSET                     0

#define SRM_MCU_BOOTVER__ADDRESS                      0xe04d
#define SRM_MCU_BOOTVER__DEFAULT                      0x0
#define SRM_MCU_BOOTVER__READ(die)                  srm_reg_read(die, SRM_MCU_BOOTVER__ADDRESS)
#define SRM_MCU_BOOTVER__WRITE(die, data)             srm_reg_write(die, SRM_MCU_BOOTVER__ADDRESS, (data))
#define SRM_MCU_BOOTVER__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_BOOTVER__ADDRESS, (data), (mask))
#  define SRM_MCU_BOOTVER__BOOTVER__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_BOOTVER__BOOTVER__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_BOOTVER__BOOTVER__READ(die)                SRM_MCU_BOOTVER__BOOTVER__GET(SRM_MCU_BOOTVER__READ(die))
#  define SRM_MCU_BOOTVER__BOOTVER__WRITE(die, fdata)           SRM_MCU_BOOTVER__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_BOOTVER__BOOTVER__RMW(die, fdata)           SRM_MCU_BOOTVER__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_BOOTVER__BOOTVER__MASK                       0xffff
#  define SRM_MCU_BOOTVER__BOOTVER__OFFSET                     0

#define SRM_MCU_FW_MODE__ADDRESS                      0xe04e
#define SRM_MCU_FW_MODE__DEFAULT                      0x0
#define SRM_MCU_FW_MODE__READ(die)                  srm_reg_read(die, SRM_MCU_FW_MODE__ADDRESS)
#define SRM_MCU_FW_MODE__WRITE(die, data)             srm_reg_write(die, SRM_MCU_FW_MODE__ADDRESS, (data))
#define SRM_MCU_FW_MODE__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_FW_MODE__ADDRESS, (data), (mask))
#  define SRM_MCU_FW_MODE__FW_MODE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_FW_MODE__FW_MODE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_FW_MODE__FW_MODE__READ(die)                SRM_MCU_FW_MODE__FW_MODE__GET(SRM_MCU_FW_MODE__READ(die))
#  define SRM_MCU_FW_MODE__FW_MODE__WRITE(die, fdata)           SRM_MCU_FW_MODE__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_FW_MODE__FW_MODE__RMW(die, fdata)           SRM_MCU_FW_MODE__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_FW_MODE__FW_MODE__MASK                       0xffff
#  define SRM_MCU_FW_MODE__FW_MODE__OFFSET                     0

#define SRM_MCU_SPARE0__ADDRESS                      0xe04f
#define SRM_MCU_SPARE0__DEFAULT                      0x0
#define SRM_MCU_SPARE0__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE0__ADDRESS)
#define SRM_MCU_SPARE0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE0__ADDRESS, (data))
#define SRM_MCU_SPARE0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE0__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE0__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE0__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE0__DATA__READ(die)                SRM_MCU_SPARE0__DATA__GET(SRM_MCU_SPARE0__READ(die))
#  define SRM_MCU_SPARE0__DATA__WRITE(die, fdata)           SRM_MCU_SPARE0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE0__DATA__RMW(die, fdata)           SRM_MCU_SPARE0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE0__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE0__DATA__OFFSET                     0

#define SRM_MCU_SPARE1__ADDRESS                      0xe050
#define SRM_MCU_SPARE1__DEFAULT                      0x0
#define SRM_MCU_SPARE1__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE1__ADDRESS)
#define SRM_MCU_SPARE1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE1__ADDRESS, (data))
#define SRM_MCU_SPARE1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE1__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE1__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE1__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE1__DATA__READ(die)                SRM_MCU_SPARE1__DATA__GET(SRM_MCU_SPARE1__READ(die))
#  define SRM_MCU_SPARE1__DATA__WRITE(die, fdata)           SRM_MCU_SPARE1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE1__DATA__RMW(die, fdata)           SRM_MCU_SPARE1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE1__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE1__DATA__OFFSET                     0

#define SRM_MCU_SPARE2__ADDRESS                      0xe051
#define SRM_MCU_SPARE2__DEFAULT                      0x0
#define SRM_MCU_SPARE2__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE2__ADDRESS)
#define SRM_MCU_SPARE2__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE2__ADDRESS, (data))
#define SRM_MCU_SPARE2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE2__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE2__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE2__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE2__DATA__READ(die)                SRM_MCU_SPARE2__DATA__GET(SRM_MCU_SPARE2__READ(die))
#  define SRM_MCU_SPARE2__DATA__WRITE(die, fdata)           SRM_MCU_SPARE2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE2__DATA__RMW(die, fdata)           SRM_MCU_SPARE2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE2__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE2__DATA__OFFSET                     0

#define SRM_MCU_SPARE3__ADDRESS                      0xe052
#define SRM_MCU_SPARE3__DEFAULT                      0x0
#define SRM_MCU_SPARE3__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE3__ADDRESS)
#define SRM_MCU_SPARE3__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE3__ADDRESS, (data))
#define SRM_MCU_SPARE3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE3__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE3__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE3__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE3__DATA__READ(die)                SRM_MCU_SPARE3__DATA__GET(SRM_MCU_SPARE3__READ(die))
#  define SRM_MCU_SPARE3__DATA__WRITE(die, fdata)           SRM_MCU_SPARE3__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE3__DATA__RMW(die, fdata)           SRM_MCU_SPARE3__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE3__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE3__DATA__OFFSET                     0

#define SRM_MCU_SPARE4__ADDRESS                      0xe053
#define SRM_MCU_SPARE4__DEFAULT                      0x0
#define SRM_MCU_SPARE4__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE4__ADDRESS)
#define SRM_MCU_SPARE4__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE4__ADDRESS, (data))
#define SRM_MCU_SPARE4__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE4__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE4__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE4__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE4__DATA__READ(die)                SRM_MCU_SPARE4__DATA__GET(SRM_MCU_SPARE4__READ(die))
#  define SRM_MCU_SPARE4__DATA__WRITE(die, fdata)           SRM_MCU_SPARE4__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE4__DATA__RMW(die, fdata)           SRM_MCU_SPARE4__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE4__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE4__DATA__OFFSET                     0

#define SRM_MCU_SPARE5__ADDRESS                      0xe054
#define SRM_MCU_SPARE5__DEFAULT                      0x0
#define SRM_MCU_SPARE5__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE5__ADDRESS)
#define SRM_MCU_SPARE5__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE5__ADDRESS, (data))
#define SRM_MCU_SPARE5__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE5__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE5__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE5__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE5__DATA__READ(die)                SRM_MCU_SPARE5__DATA__GET(SRM_MCU_SPARE5__READ(die))
#  define SRM_MCU_SPARE5__DATA__WRITE(die, fdata)           SRM_MCU_SPARE5__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE5__DATA__RMW(die, fdata)           SRM_MCU_SPARE5__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE5__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE5__DATA__OFFSET                     0

#define SRM_MCU_SPARE6__ADDRESS                      0xe055
#define SRM_MCU_SPARE6__DEFAULT                      0x0
#define SRM_MCU_SPARE6__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE6__ADDRESS)
#define SRM_MCU_SPARE6__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE6__ADDRESS, (data))
#define SRM_MCU_SPARE6__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE6__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE6__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE6__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE6__DATA__READ(die)                SRM_MCU_SPARE6__DATA__GET(SRM_MCU_SPARE6__READ(die))
#  define SRM_MCU_SPARE6__DATA__WRITE(die, fdata)           SRM_MCU_SPARE6__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE6__DATA__RMW(die, fdata)           SRM_MCU_SPARE6__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE6__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE6__DATA__OFFSET                     0

#define SRM_MCU_SPARE7__ADDRESS                      0xe056
#define SRM_MCU_SPARE7__DEFAULT                      0x0
#define SRM_MCU_SPARE7__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE7__ADDRESS)
#define SRM_MCU_SPARE7__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE7__ADDRESS, (data))
#define SRM_MCU_SPARE7__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE7__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE7__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE7__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE7__DATA__READ(die)                SRM_MCU_SPARE7__DATA__GET(SRM_MCU_SPARE7__READ(die))
#  define SRM_MCU_SPARE7__DATA__WRITE(die, fdata)           SRM_MCU_SPARE7__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE7__DATA__RMW(die, fdata)           SRM_MCU_SPARE7__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE7__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE7__DATA__OFFSET                     0

#define SRM_MCU_SPARE8__ADDRESS                      0xe057
#define SRM_MCU_SPARE8__DEFAULT                      0x0
#define SRM_MCU_SPARE8__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE8__ADDRESS)
#define SRM_MCU_SPARE8__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE8__ADDRESS, (data))
#define SRM_MCU_SPARE8__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE8__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE8__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE8__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE8__DATA__READ(die)                SRM_MCU_SPARE8__DATA__GET(SRM_MCU_SPARE8__READ(die))
#  define SRM_MCU_SPARE8__DATA__WRITE(die, fdata)           SRM_MCU_SPARE8__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE8__DATA__RMW(die, fdata)           SRM_MCU_SPARE8__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE8__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE8__DATA__OFFSET                     0

#define SRM_MCU_SPARE9__ADDRESS                      0xe058
#define SRM_MCU_SPARE9__DEFAULT                      0x0
#define SRM_MCU_SPARE9__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE9__ADDRESS)
#define SRM_MCU_SPARE9__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE9__ADDRESS, (data))
#define SRM_MCU_SPARE9__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE9__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE9__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE9__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE9__DATA__READ(die)                SRM_MCU_SPARE9__DATA__GET(SRM_MCU_SPARE9__READ(die))
#  define SRM_MCU_SPARE9__DATA__WRITE(die, fdata)           SRM_MCU_SPARE9__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE9__DATA__RMW(die, fdata)           SRM_MCU_SPARE9__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE9__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE9__DATA__OFFSET                     0

#define SRM_MCU_SPARE10__ADDRESS                      0xe059
#define SRM_MCU_SPARE10__DEFAULT                      0x0
#define SRM_MCU_SPARE10__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE10__ADDRESS)
#define SRM_MCU_SPARE10__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE10__ADDRESS, (data))
#define SRM_MCU_SPARE10__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE10__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE10__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE10__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE10__DATA__READ(die)                SRM_MCU_SPARE10__DATA__GET(SRM_MCU_SPARE10__READ(die))
#  define SRM_MCU_SPARE10__DATA__WRITE(die, fdata)           SRM_MCU_SPARE10__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE10__DATA__RMW(die, fdata)           SRM_MCU_SPARE10__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE10__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE10__DATA__OFFSET                     0

#define SRM_MCU_SPARE11__ADDRESS                      0xe05a
#define SRM_MCU_SPARE11__DEFAULT                      0x0
#define SRM_MCU_SPARE11__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE11__ADDRESS)
#define SRM_MCU_SPARE11__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE11__ADDRESS, (data))
#define SRM_MCU_SPARE11__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE11__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE11__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE11__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE11__DATA__READ(die)                SRM_MCU_SPARE11__DATA__GET(SRM_MCU_SPARE11__READ(die))
#  define SRM_MCU_SPARE11__DATA__WRITE(die, fdata)           SRM_MCU_SPARE11__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE11__DATA__RMW(die, fdata)           SRM_MCU_SPARE11__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE11__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE11__DATA__OFFSET                     0

#define SRM_MCU_SPARE12__ADDRESS                      0xe05b
#define SRM_MCU_SPARE12__DEFAULT                      0x0
#define SRM_MCU_SPARE12__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE12__ADDRESS)
#define SRM_MCU_SPARE12__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE12__ADDRESS, (data))
#define SRM_MCU_SPARE12__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE12__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE12__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE12__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE12__DATA__READ(die)                SRM_MCU_SPARE12__DATA__GET(SRM_MCU_SPARE12__READ(die))
#  define SRM_MCU_SPARE12__DATA__WRITE(die, fdata)           SRM_MCU_SPARE12__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE12__DATA__RMW(die, fdata)           SRM_MCU_SPARE12__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE12__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE12__DATA__OFFSET                     0

#define SRM_MCU_SPARE13__ADDRESS                      0xe05c
#define SRM_MCU_SPARE13__DEFAULT                      0x0
#define SRM_MCU_SPARE13__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE13__ADDRESS)
#define SRM_MCU_SPARE13__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE13__ADDRESS, (data))
#define SRM_MCU_SPARE13__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE13__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE13__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE13__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE13__DATA__READ(die)                SRM_MCU_SPARE13__DATA__GET(SRM_MCU_SPARE13__READ(die))
#  define SRM_MCU_SPARE13__DATA__WRITE(die, fdata)           SRM_MCU_SPARE13__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE13__DATA__RMW(die, fdata)           SRM_MCU_SPARE13__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE13__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE13__DATA__OFFSET                     0

#define SRM_MCU_SPARE14__ADDRESS                      0xe05d
#define SRM_MCU_SPARE14__DEFAULT                      0x0
#define SRM_MCU_SPARE14__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE14__ADDRESS)
#define SRM_MCU_SPARE14__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE14__ADDRESS, (data))
#define SRM_MCU_SPARE14__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE14__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE14__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE14__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE14__DATA__READ(die)                SRM_MCU_SPARE14__DATA__GET(SRM_MCU_SPARE14__READ(die))
#  define SRM_MCU_SPARE14__DATA__WRITE(die, fdata)           SRM_MCU_SPARE14__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE14__DATA__RMW(die, fdata)           SRM_MCU_SPARE14__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE14__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE14__DATA__OFFSET                     0

#define SRM_MCU_SPARE15__ADDRESS                      0xe05e
#define SRM_MCU_SPARE15__DEFAULT                      0x0
#define SRM_MCU_SPARE15__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE15__ADDRESS)
#define SRM_MCU_SPARE15__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE15__ADDRESS, (data))
#define SRM_MCU_SPARE15__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE15__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE15__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE15__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE15__DATA__READ(die)                SRM_MCU_SPARE15__DATA__GET(SRM_MCU_SPARE15__READ(die))
#  define SRM_MCU_SPARE15__DATA__WRITE(die, fdata)           SRM_MCU_SPARE15__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE15__DATA__RMW(die, fdata)           SRM_MCU_SPARE15__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE15__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE15__DATA__OFFSET                     0

#define SRM_MCU_SPARE16__ADDRESS                      0xe05f
#define SRM_MCU_SPARE16__DEFAULT                      0x0
#define SRM_MCU_SPARE16__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE16__ADDRESS)
#define SRM_MCU_SPARE16__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE16__ADDRESS, (data))
#define SRM_MCU_SPARE16__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE16__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE16__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE16__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE16__DATA__READ(die)                SRM_MCU_SPARE16__DATA__GET(SRM_MCU_SPARE16__READ(die))
#  define SRM_MCU_SPARE16__DATA__WRITE(die, fdata)           SRM_MCU_SPARE16__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE16__DATA__RMW(die, fdata)           SRM_MCU_SPARE16__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE16__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE16__DATA__OFFSET                     0

#define SRM_MCU_SPARE17__ADDRESS                      0xe060
#define SRM_MCU_SPARE17__DEFAULT                      0x0
#define SRM_MCU_SPARE17__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE17__ADDRESS)
#define SRM_MCU_SPARE17__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE17__ADDRESS, (data))
#define SRM_MCU_SPARE17__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE17__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE17__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE17__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE17__DATA__READ(die)                SRM_MCU_SPARE17__DATA__GET(SRM_MCU_SPARE17__READ(die))
#  define SRM_MCU_SPARE17__DATA__WRITE(die, fdata)           SRM_MCU_SPARE17__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE17__DATA__RMW(die, fdata)           SRM_MCU_SPARE17__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE17__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE17__DATA__OFFSET                     0

#define SRM_MCU_SPARE18__ADDRESS                      0xe061
#define SRM_MCU_SPARE18__DEFAULT                      0x0
#define SRM_MCU_SPARE18__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE18__ADDRESS)
#define SRM_MCU_SPARE18__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE18__ADDRESS, (data))
#define SRM_MCU_SPARE18__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE18__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE18__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE18__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE18__DATA__READ(die)                SRM_MCU_SPARE18__DATA__GET(SRM_MCU_SPARE18__READ(die))
#  define SRM_MCU_SPARE18__DATA__WRITE(die, fdata)           SRM_MCU_SPARE18__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE18__DATA__RMW(die, fdata)           SRM_MCU_SPARE18__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE18__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE18__DATA__OFFSET                     0

#define SRM_MCU_SPARE19__ADDRESS                      0xe062
#define SRM_MCU_SPARE19__DEFAULT                      0x0
#define SRM_MCU_SPARE19__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE19__ADDRESS)
#define SRM_MCU_SPARE19__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE19__ADDRESS, (data))
#define SRM_MCU_SPARE19__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE19__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE19__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE19__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE19__DATA__READ(die)                SRM_MCU_SPARE19__DATA__GET(SRM_MCU_SPARE19__READ(die))
#  define SRM_MCU_SPARE19__DATA__WRITE(die, fdata)           SRM_MCU_SPARE19__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE19__DATA__RMW(die, fdata)           SRM_MCU_SPARE19__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE19__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE19__DATA__OFFSET                     0

#define SRM_MCU_SPARE20__ADDRESS                      0xe063
#define SRM_MCU_SPARE20__DEFAULT                      0x0
#define SRM_MCU_SPARE20__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE20__ADDRESS)
#define SRM_MCU_SPARE20__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE20__ADDRESS, (data))
#define SRM_MCU_SPARE20__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE20__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE20__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE20__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE20__DATA__READ(die)                SRM_MCU_SPARE20__DATA__GET(SRM_MCU_SPARE20__READ(die))
#  define SRM_MCU_SPARE20__DATA__WRITE(die, fdata)           SRM_MCU_SPARE20__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE20__DATA__RMW(die, fdata)           SRM_MCU_SPARE20__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE20__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE20__DATA__OFFSET                     0

#define SRM_MCU_SPARE21__ADDRESS                      0xe064
#define SRM_MCU_SPARE21__DEFAULT                      0x0
#define SRM_MCU_SPARE21__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE21__ADDRESS)
#define SRM_MCU_SPARE21__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE21__ADDRESS, (data))
#define SRM_MCU_SPARE21__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE21__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE21__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE21__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE21__DATA__READ(die)                SRM_MCU_SPARE21__DATA__GET(SRM_MCU_SPARE21__READ(die))
#  define SRM_MCU_SPARE21__DATA__WRITE(die, fdata)           SRM_MCU_SPARE21__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE21__DATA__RMW(die, fdata)           SRM_MCU_SPARE21__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE21__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE21__DATA__OFFSET                     0

#define SRM_MCU_SPARE22__ADDRESS                      0xe065
#define SRM_MCU_SPARE22__DEFAULT                      0x0
#define SRM_MCU_SPARE22__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE22__ADDRESS)
#define SRM_MCU_SPARE22__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE22__ADDRESS, (data))
#define SRM_MCU_SPARE22__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE22__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE22__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE22__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE22__DATA__READ(die)                SRM_MCU_SPARE22__DATA__GET(SRM_MCU_SPARE22__READ(die))
#  define SRM_MCU_SPARE22__DATA__WRITE(die, fdata)           SRM_MCU_SPARE22__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE22__DATA__RMW(die, fdata)           SRM_MCU_SPARE22__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE22__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE22__DATA__OFFSET                     0

#define SRM_MCU_SPARE23__ADDRESS                      0xe066
#define SRM_MCU_SPARE23__DEFAULT                      0x0
#define SRM_MCU_SPARE23__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE23__ADDRESS)
#define SRM_MCU_SPARE23__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE23__ADDRESS, (data))
#define SRM_MCU_SPARE23__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE23__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE23__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE23__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE23__DATA__READ(die)                SRM_MCU_SPARE23__DATA__GET(SRM_MCU_SPARE23__READ(die))
#  define SRM_MCU_SPARE23__DATA__WRITE(die, fdata)           SRM_MCU_SPARE23__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE23__DATA__RMW(die, fdata)           SRM_MCU_SPARE23__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE23__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE23__DATA__OFFSET                     0

#define SRM_MCU_SPARE24__ADDRESS                      0xe067
#define SRM_MCU_SPARE24__DEFAULT                      0x0
#define SRM_MCU_SPARE24__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE24__ADDRESS)
#define SRM_MCU_SPARE24__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE24__ADDRESS, (data))
#define SRM_MCU_SPARE24__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE24__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE24__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE24__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE24__DATA__READ(die)                SRM_MCU_SPARE24__DATA__GET(SRM_MCU_SPARE24__READ(die))
#  define SRM_MCU_SPARE24__DATA__WRITE(die, fdata)           SRM_MCU_SPARE24__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE24__DATA__RMW(die, fdata)           SRM_MCU_SPARE24__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE24__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE24__DATA__OFFSET                     0

#define SRM_MCU_SPARE25__ADDRESS                      0xe068
#define SRM_MCU_SPARE25__DEFAULT                      0x0
#define SRM_MCU_SPARE25__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE25__ADDRESS)
#define SRM_MCU_SPARE25__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE25__ADDRESS, (data))
#define SRM_MCU_SPARE25__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE25__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE25__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE25__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE25__DATA__READ(die)                SRM_MCU_SPARE25__DATA__GET(SRM_MCU_SPARE25__READ(die))
#  define SRM_MCU_SPARE25__DATA__WRITE(die, fdata)           SRM_MCU_SPARE25__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE25__DATA__RMW(die, fdata)           SRM_MCU_SPARE25__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE25__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE25__DATA__OFFSET                     0

#define SRM_MCU_SPARE26__ADDRESS                      0xe069
#define SRM_MCU_SPARE26__DEFAULT                      0x0
#define SRM_MCU_SPARE26__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE26__ADDRESS)
#define SRM_MCU_SPARE26__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE26__ADDRESS, (data))
#define SRM_MCU_SPARE26__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE26__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE26__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE26__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE26__DATA__READ(die)                SRM_MCU_SPARE26__DATA__GET(SRM_MCU_SPARE26__READ(die))
#  define SRM_MCU_SPARE26__DATA__WRITE(die, fdata)           SRM_MCU_SPARE26__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE26__DATA__RMW(die, fdata)           SRM_MCU_SPARE26__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE26__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE26__DATA__OFFSET                     0

#define SRM_MCU_SPARE27__ADDRESS                      0xe06a
#define SRM_MCU_SPARE27__DEFAULT                      0x0
#define SRM_MCU_SPARE27__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE27__ADDRESS)
#define SRM_MCU_SPARE27__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE27__ADDRESS, (data))
#define SRM_MCU_SPARE27__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE27__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE27__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE27__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE27__DATA__READ(die)                SRM_MCU_SPARE27__DATA__GET(SRM_MCU_SPARE27__READ(die))
#  define SRM_MCU_SPARE27__DATA__WRITE(die, fdata)           SRM_MCU_SPARE27__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE27__DATA__RMW(die, fdata)           SRM_MCU_SPARE27__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE27__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE27__DATA__OFFSET                     0

#define SRM_MCU_SPARE28__ADDRESS                      0xe06b
#define SRM_MCU_SPARE28__DEFAULT                      0x0
#define SRM_MCU_SPARE28__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE28__ADDRESS)
#define SRM_MCU_SPARE28__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE28__ADDRESS, (data))
#define SRM_MCU_SPARE28__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE28__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE28__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE28__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE28__DATA__READ(die)                SRM_MCU_SPARE28__DATA__GET(SRM_MCU_SPARE28__READ(die))
#  define SRM_MCU_SPARE28__DATA__WRITE(die, fdata)           SRM_MCU_SPARE28__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE28__DATA__RMW(die, fdata)           SRM_MCU_SPARE28__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE28__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE28__DATA__OFFSET                     0

#define SRM_MCU_SPARE29__ADDRESS                      0xe06c
#define SRM_MCU_SPARE29__DEFAULT                      0x0
#define SRM_MCU_SPARE29__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE29__ADDRESS)
#define SRM_MCU_SPARE29__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE29__ADDRESS, (data))
#define SRM_MCU_SPARE29__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE29__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE29__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE29__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE29__DATA__READ(die)                SRM_MCU_SPARE29__DATA__GET(SRM_MCU_SPARE29__READ(die))
#  define SRM_MCU_SPARE29__DATA__WRITE(die, fdata)           SRM_MCU_SPARE29__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE29__DATA__RMW(die, fdata)           SRM_MCU_SPARE29__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE29__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE29__DATA__OFFSET                     0

#define SRM_MCU_SPARE30__ADDRESS                      0xe06d
#define SRM_MCU_SPARE30__DEFAULT                      0x0
#define SRM_MCU_SPARE30__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE30__ADDRESS)
#define SRM_MCU_SPARE30__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE30__ADDRESS, (data))
#define SRM_MCU_SPARE30__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE30__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE30__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE30__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE30__DATA__READ(die)                SRM_MCU_SPARE30__DATA__GET(SRM_MCU_SPARE30__READ(die))
#  define SRM_MCU_SPARE30__DATA__WRITE(die, fdata)           SRM_MCU_SPARE30__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE30__DATA__RMW(die, fdata)           SRM_MCU_SPARE30__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE30__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE30__DATA__OFFSET                     0

#define SRM_MCU_SPARE31__ADDRESS                      0xe06e
#define SRM_MCU_SPARE31__DEFAULT                      0x0
#define SRM_MCU_SPARE31__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE31__ADDRESS)
#define SRM_MCU_SPARE31__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE31__ADDRESS, (data))
#define SRM_MCU_SPARE31__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE31__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE31__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE31__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE31__DATA__READ(die)                SRM_MCU_SPARE31__DATA__GET(SRM_MCU_SPARE31__READ(die))
#  define SRM_MCU_SPARE31__DATA__WRITE(die, fdata)           SRM_MCU_SPARE31__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE31__DATA__RMW(die, fdata)           SRM_MCU_SPARE31__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE31__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE31__DATA__OFFSET                     0

#define SRM_MCU_SPARE32__ADDRESS                      0xe06f
#define SRM_MCU_SPARE32__DEFAULT                      0x0
#define SRM_MCU_SPARE32__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE32__ADDRESS)
#define SRM_MCU_SPARE32__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE32__ADDRESS, (data))
#define SRM_MCU_SPARE32__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE32__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE32__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE32__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE32__DATA__READ(die)                SRM_MCU_SPARE32__DATA__GET(SRM_MCU_SPARE32__READ(die))
#  define SRM_MCU_SPARE32__DATA__WRITE(die, fdata)           SRM_MCU_SPARE32__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE32__DATA__RMW(die, fdata)           SRM_MCU_SPARE32__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE32__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE32__DATA__OFFSET                     0

#define SRM_MCU_SPARE33__ADDRESS                      0xe070
#define SRM_MCU_SPARE33__DEFAULT                      0x0
#define SRM_MCU_SPARE33__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE33__ADDRESS)
#define SRM_MCU_SPARE33__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE33__ADDRESS, (data))
#define SRM_MCU_SPARE33__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE33__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE33__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE33__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE33__DATA__READ(die)                SRM_MCU_SPARE33__DATA__GET(SRM_MCU_SPARE33__READ(die))
#  define SRM_MCU_SPARE33__DATA__WRITE(die, fdata)           SRM_MCU_SPARE33__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE33__DATA__RMW(die, fdata)           SRM_MCU_SPARE33__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE33__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE33__DATA__OFFSET                     0

#define SRM_MCU_SPARE34__ADDRESS                      0xe071
#define SRM_MCU_SPARE34__DEFAULT                      0x0
#define SRM_MCU_SPARE34__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE34__ADDRESS)
#define SRM_MCU_SPARE34__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE34__ADDRESS, (data))
#define SRM_MCU_SPARE34__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE34__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE34__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE34__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE34__DATA__READ(die)                SRM_MCU_SPARE34__DATA__GET(SRM_MCU_SPARE34__READ(die))
#  define SRM_MCU_SPARE34__DATA__WRITE(die, fdata)           SRM_MCU_SPARE34__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE34__DATA__RMW(die, fdata)           SRM_MCU_SPARE34__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE34__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE34__DATA__OFFSET                     0

#define SRM_MCU_SPARE35__ADDRESS                      0xe072
#define SRM_MCU_SPARE35__DEFAULT                      0x0
#define SRM_MCU_SPARE35__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE35__ADDRESS)
#define SRM_MCU_SPARE35__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE35__ADDRESS, (data))
#define SRM_MCU_SPARE35__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE35__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE35__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE35__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE35__DATA__READ(die)                SRM_MCU_SPARE35__DATA__GET(SRM_MCU_SPARE35__READ(die))
#  define SRM_MCU_SPARE35__DATA__WRITE(die, fdata)           SRM_MCU_SPARE35__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE35__DATA__RMW(die, fdata)           SRM_MCU_SPARE35__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE35__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE35__DATA__OFFSET                     0

#define SRM_MCU_SPARE36__ADDRESS                      0xe073
#define SRM_MCU_SPARE36__DEFAULT                      0x0
#define SRM_MCU_SPARE36__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE36__ADDRESS)
#define SRM_MCU_SPARE36__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE36__ADDRESS, (data))
#define SRM_MCU_SPARE36__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE36__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE36__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE36__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE36__DATA__READ(die)                SRM_MCU_SPARE36__DATA__GET(SRM_MCU_SPARE36__READ(die))
#  define SRM_MCU_SPARE36__DATA__WRITE(die, fdata)           SRM_MCU_SPARE36__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE36__DATA__RMW(die, fdata)           SRM_MCU_SPARE36__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE36__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE36__DATA__OFFSET                     0

#define SRM_MCU_SPARE37__ADDRESS                      0xe074
#define SRM_MCU_SPARE37__DEFAULT                      0x0
#define SRM_MCU_SPARE37__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE37__ADDRESS)
#define SRM_MCU_SPARE37__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE37__ADDRESS, (data))
#define SRM_MCU_SPARE37__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE37__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE37__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE37__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE37__DATA__READ(die)                SRM_MCU_SPARE37__DATA__GET(SRM_MCU_SPARE37__READ(die))
#  define SRM_MCU_SPARE37__DATA__WRITE(die, fdata)           SRM_MCU_SPARE37__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE37__DATA__RMW(die, fdata)           SRM_MCU_SPARE37__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE37__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE37__DATA__OFFSET                     0

#define SRM_MCU_SPARE38__ADDRESS                      0xe075
#define SRM_MCU_SPARE38__DEFAULT                      0x0
#define SRM_MCU_SPARE38__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE38__ADDRESS)
#define SRM_MCU_SPARE38__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE38__ADDRESS, (data))
#define SRM_MCU_SPARE38__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE38__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE38__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE38__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE38__DATA__READ(die)                SRM_MCU_SPARE38__DATA__GET(SRM_MCU_SPARE38__READ(die))
#  define SRM_MCU_SPARE38__DATA__WRITE(die, fdata)           SRM_MCU_SPARE38__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE38__DATA__RMW(die, fdata)           SRM_MCU_SPARE38__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE38__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE38__DATA__OFFSET                     0

#define SRM_MCU_SPARE39__ADDRESS                      0xe076
#define SRM_MCU_SPARE39__DEFAULT                      0x0
#define SRM_MCU_SPARE39__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE39__ADDRESS)
#define SRM_MCU_SPARE39__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE39__ADDRESS, (data))
#define SRM_MCU_SPARE39__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE39__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE39__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE39__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE39__DATA__READ(die)                SRM_MCU_SPARE39__DATA__GET(SRM_MCU_SPARE39__READ(die))
#  define SRM_MCU_SPARE39__DATA__WRITE(die, fdata)           SRM_MCU_SPARE39__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE39__DATA__RMW(die, fdata)           SRM_MCU_SPARE39__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE39__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE39__DATA__OFFSET                     0

#define SRM_MCU_SPARE40__ADDRESS                      0xe077
#define SRM_MCU_SPARE40__DEFAULT                      0x0
#define SRM_MCU_SPARE40__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE40__ADDRESS)
#define SRM_MCU_SPARE40__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE40__ADDRESS, (data))
#define SRM_MCU_SPARE40__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE40__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE40__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE40__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE40__DATA__READ(die)                SRM_MCU_SPARE40__DATA__GET(SRM_MCU_SPARE40__READ(die))
#  define SRM_MCU_SPARE40__DATA__WRITE(die, fdata)           SRM_MCU_SPARE40__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE40__DATA__RMW(die, fdata)           SRM_MCU_SPARE40__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE40__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE40__DATA__OFFSET                     0

#define SRM_MCU_SPARE41__ADDRESS                      0xe078
#define SRM_MCU_SPARE41__DEFAULT                      0x0
#define SRM_MCU_SPARE41__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE41__ADDRESS)
#define SRM_MCU_SPARE41__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE41__ADDRESS, (data))
#define SRM_MCU_SPARE41__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE41__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE41__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE41__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE41__DATA__READ(die)                SRM_MCU_SPARE41__DATA__GET(SRM_MCU_SPARE41__READ(die))
#  define SRM_MCU_SPARE41__DATA__WRITE(die, fdata)           SRM_MCU_SPARE41__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE41__DATA__RMW(die, fdata)           SRM_MCU_SPARE41__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE41__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE41__DATA__OFFSET                     0

#define SRM_MCU_SPARE42__ADDRESS                      0xe079
#define SRM_MCU_SPARE42__DEFAULT                      0x0
#define SRM_MCU_SPARE42__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE42__ADDRESS)
#define SRM_MCU_SPARE42__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE42__ADDRESS, (data))
#define SRM_MCU_SPARE42__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE42__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE42__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE42__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE42__DATA__READ(die)                SRM_MCU_SPARE42__DATA__GET(SRM_MCU_SPARE42__READ(die))
#  define SRM_MCU_SPARE42__DATA__WRITE(die, fdata)           SRM_MCU_SPARE42__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE42__DATA__RMW(die, fdata)           SRM_MCU_SPARE42__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE42__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE42__DATA__OFFSET                     0

#define SRM_MCU_SPARE43__ADDRESS                      0xe07a
#define SRM_MCU_SPARE43__DEFAULT                      0x0
#define SRM_MCU_SPARE43__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE43__ADDRESS)
#define SRM_MCU_SPARE43__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE43__ADDRESS, (data))
#define SRM_MCU_SPARE43__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE43__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE43__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE43__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE43__DATA__READ(die)                SRM_MCU_SPARE43__DATA__GET(SRM_MCU_SPARE43__READ(die))
#  define SRM_MCU_SPARE43__DATA__WRITE(die, fdata)           SRM_MCU_SPARE43__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE43__DATA__RMW(die, fdata)           SRM_MCU_SPARE43__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE43__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE43__DATA__OFFSET                     0

#define SRM_MCU_SPARE44__ADDRESS                      0xe07b
#define SRM_MCU_SPARE44__DEFAULT                      0x0
#define SRM_MCU_SPARE44__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE44__ADDRESS)
#define SRM_MCU_SPARE44__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE44__ADDRESS, (data))
#define SRM_MCU_SPARE44__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE44__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE44__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE44__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE44__DATA__READ(die)                SRM_MCU_SPARE44__DATA__GET(SRM_MCU_SPARE44__READ(die))
#  define SRM_MCU_SPARE44__DATA__WRITE(die, fdata)           SRM_MCU_SPARE44__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE44__DATA__RMW(die, fdata)           SRM_MCU_SPARE44__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE44__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE44__DATA__OFFSET                     0

#define SRM_MCU_SPARE45__ADDRESS                      0xe07c
#define SRM_MCU_SPARE45__DEFAULT                      0x0
#define SRM_MCU_SPARE45__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE45__ADDRESS)
#define SRM_MCU_SPARE45__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE45__ADDRESS, (data))
#define SRM_MCU_SPARE45__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE45__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE45__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE45__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE45__DATA__READ(die)                SRM_MCU_SPARE45__DATA__GET(SRM_MCU_SPARE45__READ(die))
#  define SRM_MCU_SPARE45__DATA__WRITE(die, fdata)           SRM_MCU_SPARE45__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE45__DATA__RMW(die, fdata)           SRM_MCU_SPARE45__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE45__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE45__DATA__OFFSET                     0

#define SRM_MCU_SPARE46__ADDRESS                      0xe07d
#define SRM_MCU_SPARE46__DEFAULT                      0x0
#define SRM_MCU_SPARE46__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE46__ADDRESS)
#define SRM_MCU_SPARE46__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE46__ADDRESS, (data))
#define SRM_MCU_SPARE46__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE46__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE46__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE46__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE46__DATA__READ(die)                SRM_MCU_SPARE46__DATA__GET(SRM_MCU_SPARE46__READ(die))
#  define SRM_MCU_SPARE46__DATA__WRITE(die, fdata)           SRM_MCU_SPARE46__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE46__DATA__RMW(die, fdata)           SRM_MCU_SPARE46__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE46__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE46__DATA__OFFSET                     0

#define SRM_MCU_SPARE47__ADDRESS                      0xe07e
#define SRM_MCU_SPARE47__DEFAULT                      0x0
#define SRM_MCU_SPARE47__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE47__ADDRESS)
#define SRM_MCU_SPARE47__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE47__ADDRESS, (data))
#define SRM_MCU_SPARE47__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE47__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE47__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE47__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE47__DATA__READ(die)                SRM_MCU_SPARE47__DATA__GET(SRM_MCU_SPARE47__READ(die))
#  define SRM_MCU_SPARE47__DATA__WRITE(die, fdata)           SRM_MCU_SPARE47__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE47__DATA__RMW(die, fdata)           SRM_MCU_SPARE47__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE47__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE47__DATA__OFFSET                     0

#define SRM_MCU_SPARE48__ADDRESS                      0xe07f
#define SRM_MCU_SPARE48__DEFAULT                      0x0
#define SRM_MCU_SPARE48__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE48__ADDRESS)
#define SRM_MCU_SPARE48__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE48__ADDRESS, (data))
#define SRM_MCU_SPARE48__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE48__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE48__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE48__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE48__DATA__READ(die)                SRM_MCU_SPARE48__DATA__GET(SRM_MCU_SPARE48__READ(die))
#  define SRM_MCU_SPARE48__DATA__WRITE(die, fdata)           SRM_MCU_SPARE48__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE48__DATA__RMW(die, fdata)           SRM_MCU_SPARE48__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE48__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE48__DATA__OFFSET                     0

#define SRM_MCU_SPARE49__ADDRESS                      0xe080
#define SRM_MCU_SPARE49__DEFAULT                      0x0
#define SRM_MCU_SPARE49__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE49__ADDRESS)
#define SRM_MCU_SPARE49__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE49__ADDRESS, (data))
#define SRM_MCU_SPARE49__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE49__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE49__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE49__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE49__DATA__READ(die)                SRM_MCU_SPARE49__DATA__GET(SRM_MCU_SPARE49__READ(die))
#  define SRM_MCU_SPARE49__DATA__WRITE(die, fdata)           SRM_MCU_SPARE49__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE49__DATA__RMW(die, fdata)           SRM_MCU_SPARE49__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE49__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE49__DATA__OFFSET                     0

#define SRM_MCU_SPARE50__ADDRESS                      0xe081
#define SRM_MCU_SPARE50__DEFAULT                      0x0
#define SRM_MCU_SPARE50__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE50__ADDRESS)
#define SRM_MCU_SPARE50__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE50__ADDRESS, (data))
#define SRM_MCU_SPARE50__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE50__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE50__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE50__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE50__DATA__READ(die)                SRM_MCU_SPARE50__DATA__GET(SRM_MCU_SPARE50__READ(die))
#  define SRM_MCU_SPARE50__DATA__WRITE(die, fdata)           SRM_MCU_SPARE50__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE50__DATA__RMW(die, fdata)           SRM_MCU_SPARE50__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE50__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE50__DATA__OFFSET                     0

#define SRM_MCU_SPARE51__ADDRESS                      0xe082
#define SRM_MCU_SPARE51__DEFAULT                      0x0
#define SRM_MCU_SPARE51__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE51__ADDRESS)
#define SRM_MCU_SPARE51__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE51__ADDRESS, (data))
#define SRM_MCU_SPARE51__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE51__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE51__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE51__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE51__DATA__READ(die)                SRM_MCU_SPARE51__DATA__GET(SRM_MCU_SPARE51__READ(die))
#  define SRM_MCU_SPARE51__DATA__WRITE(die, fdata)           SRM_MCU_SPARE51__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE51__DATA__RMW(die, fdata)           SRM_MCU_SPARE51__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE51__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE51__DATA__OFFSET                     0

#define SRM_MCU_SPARE52__ADDRESS                      0xe083
#define SRM_MCU_SPARE52__DEFAULT                      0x0
#define SRM_MCU_SPARE52__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE52__ADDRESS)
#define SRM_MCU_SPARE52__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE52__ADDRESS, (data))
#define SRM_MCU_SPARE52__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE52__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE52__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE52__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE52__DATA__READ(die)                SRM_MCU_SPARE52__DATA__GET(SRM_MCU_SPARE52__READ(die))
#  define SRM_MCU_SPARE52__DATA__WRITE(die, fdata)           SRM_MCU_SPARE52__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE52__DATA__RMW(die, fdata)           SRM_MCU_SPARE52__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE52__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE52__DATA__OFFSET                     0

#define SRM_MCU_SPARE53__ADDRESS                      0xe084
#define SRM_MCU_SPARE53__DEFAULT                      0x0
#define SRM_MCU_SPARE53__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE53__ADDRESS)
#define SRM_MCU_SPARE53__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE53__ADDRESS, (data))
#define SRM_MCU_SPARE53__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE53__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE53__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE53__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE53__DATA__READ(die)                SRM_MCU_SPARE53__DATA__GET(SRM_MCU_SPARE53__READ(die))
#  define SRM_MCU_SPARE53__DATA__WRITE(die, fdata)           SRM_MCU_SPARE53__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE53__DATA__RMW(die, fdata)           SRM_MCU_SPARE53__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE53__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE53__DATA__OFFSET                     0

#define SRM_MCU_SPARE54__ADDRESS                      0xe085
#define SRM_MCU_SPARE54__DEFAULT                      0x0
#define SRM_MCU_SPARE54__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE54__ADDRESS)
#define SRM_MCU_SPARE54__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE54__ADDRESS, (data))
#define SRM_MCU_SPARE54__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE54__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE54__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE54__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE54__DATA__READ(die)                SRM_MCU_SPARE54__DATA__GET(SRM_MCU_SPARE54__READ(die))
#  define SRM_MCU_SPARE54__DATA__WRITE(die, fdata)           SRM_MCU_SPARE54__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE54__DATA__RMW(die, fdata)           SRM_MCU_SPARE54__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE54__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE54__DATA__OFFSET                     0

#define SRM_MCU_SPARE55__ADDRESS                      0xe086
#define SRM_MCU_SPARE55__DEFAULT                      0x0
#define SRM_MCU_SPARE55__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE55__ADDRESS)
#define SRM_MCU_SPARE55__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE55__ADDRESS, (data))
#define SRM_MCU_SPARE55__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE55__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE55__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE55__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE55__DATA__READ(die)                SRM_MCU_SPARE55__DATA__GET(SRM_MCU_SPARE55__READ(die))
#  define SRM_MCU_SPARE55__DATA__WRITE(die, fdata)           SRM_MCU_SPARE55__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE55__DATA__RMW(die, fdata)           SRM_MCU_SPARE55__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE55__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE55__DATA__OFFSET                     0

#define SRM_MCU_SPARE56__ADDRESS                      0xe087
#define SRM_MCU_SPARE56__DEFAULT                      0x0
#define SRM_MCU_SPARE56__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE56__ADDRESS)
#define SRM_MCU_SPARE56__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE56__ADDRESS, (data))
#define SRM_MCU_SPARE56__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE56__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE56__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE56__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE56__DATA__READ(die)                SRM_MCU_SPARE56__DATA__GET(SRM_MCU_SPARE56__READ(die))
#  define SRM_MCU_SPARE56__DATA__WRITE(die, fdata)           SRM_MCU_SPARE56__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE56__DATA__RMW(die, fdata)           SRM_MCU_SPARE56__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE56__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE56__DATA__OFFSET                     0

#define SRM_MCU_SPARE57__ADDRESS                      0xe088
#define SRM_MCU_SPARE57__DEFAULT                      0x0
#define SRM_MCU_SPARE57__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE57__ADDRESS)
#define SRM_MCU_SPARE57__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE57__ADDRESS, (data))
#define SRM_MCU_SPARE57__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE57__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE57__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE57__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE57__DATA__READ(die)                SRM_MCU_SPARE57__DATA__GET(SRM_MCU_SPARE57__READ(die))
#  define SRM_MCU_SPARE57__DATA__WRITE(die, fdata)           SRM_MCU_SPARE57__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE57__DATA__RMW(die, fdata)           SRM_MCU_SPARE57__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE57__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE57__DATA__OFFSET                     0

#define SRM_MCU_SPARE58__ADDRESS                      0xe089
#define SRM_MCU_SPARE58__DEFAULT                      0x0
#define SRM_MCU_SPARE58__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE58__ADDRESS)
#define SRM_MCU_SPARE58__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE58__ADDRESS, (data))
#define SRM_MCU_SPARE58__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE58__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE58__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE58__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE58__DATA__READ(die)                SRM_MCU_SPARE58__DATA__GET(SRM_MCU_SPARE58__READ(die))
#  define SRM_MCU_SPARE58__DATA__WRITE(die, fdata)           SRM_MCU_SPARE58__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE58__DATA__RMW(die, fdata)           SRM_MCU_SPARE58__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE58__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE58__DATA__OFFSET                     0

#define SRM_MCU_SPARE59__ADDRESS                      0xe08a
#define SRM_MCU_SPARE59__DEFAULT                      0x0
#define SRM_MCU_SPARE59__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE59__ADDRESS)
#define SRM_MCU_SPARE59__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE59__ADDRESS, (data))
#define SRM_MCU_SPARE59__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE59__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE59__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE59__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE59__DATA__READ(die)                SRM_MCU_SPARE59__DATA__GET(SRM_MCU_SPARE59__READ(die))
#  define SRM_MCU_SPARE59__DATA__WRITE(die, fdata)           SRM_MCU_SPARE59__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE59__DATA__RMW(die, fdata)           SRM_MCU_SPARE59__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE59__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE59__DATA__OFFSET                     0

#define SRM_MCU_SPARE60__ADDRESS                      0xe08b
#define SRM_MCU_SPARE60__DEFAULT                      0x0
#define SRM_MCU_SPARE60__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE60__ADDRESS)
#define SRM_MCU_SPARE60__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE60__ADDRESS, (data))
#define SRM_MCU_SPARE60__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE60__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE60__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE60__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE60__DATA__READ(die)                SRM_MCU_SPARE60__DATA__GET(SRM_MCU_SPARE60__READ(die))
#  define SRM_MCU_SPARE60__DATA__WRITE(die, fdata)           SRM_MCU_SPARE60__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE60__DATA__RMW(die, fdata)           SRM_MCU_SPARE60__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE60__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE60__DATA__OFFSET                     0

#define SRM_MCU_SPARE61__ADDRESS                      0xe08c
#define SRM_MCU_SPARE61__DEFAULT                      0x0
#define SRM_MCU_SPARE61__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE61__ADDRESS)
#define SRM_MCU_SPARE61__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE61__ADDRESS, (data))
#define SRM_MCU_SPARE61__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE61__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE61__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE61__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE61__DATA__READ(die)                SRM_MCU_SPARE61__DATA__GET(SRM_MCU_SPARE61__READ(die))
#  define SRM_MCU_SPARE61__DATA__WRITE(die, fdata)           SRM_MCU_SPARE61__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE61__DATA__RMW(die, fdata)           SRM_MCU_SPARE61__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE61__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE61__DATA__OFFSET                     0

#define SRM_MCU_SPARE62__ADDRESS                      0xe08d
#define SRM_MCU_SPARE62__DEFAULT                      0x0
#define SRM_MCU_SPARE62__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE62__ADDRESS)
#define SRM_MCU_SPARE62__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE62__ADDRESS, (data))
#define SRM_MCU_SPARE62__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE62__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE62__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE62__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE62__DATA__READ(die)                SRM_MCU_SPARE62__DATA__GET(SRM_MCU_SPARE62__READ(die))
#  define SRM_MCU_SPARE62__DATA__WRITE(die, fdata)           SRM_MCU_SPARE62__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE62__DATA__RMW(die, fdata)           SRM_MCU_SPARE62__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE62__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE62__DATA__OFFSET                     0

#define SRM_MCU_SPARE63__ADDRESS                      0xe08e
#define SRM_MCU_SPARE63__DEFAULT                      0x0
#define SRM_MCU_SPARE63__READ(die)                  srm_reg_read(die, SRM_MCU_SPARE63__ADDRESS)
#define SRM_MCU_SPARE63__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SPARE63__ADDRESS, (data))
#define SRM_MCU_SPARE63__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SPARE63__ADDRESS, (data), (mask))
#  define SRM_MCU_SPARE63__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SPARE63__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SPARE63__DATA__READ(die)                SRM_MCU_SPARE63__DATA__GET(SRM_MCU_SPARE63__READ(die))
#  define SRM_MCU_SPARE63__DATA__WRITE(die, fdata)           SRM_MCU_SPARE63__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE63__DATA__RMW(die, fdata)           SRM_MCU_SPARE63__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SPARE63__DATA__MASK                       0xffff
#  define SRM_MCU_SPARE63__DATA__OFFSET                     0

#define SRM_MCU_PDEBUG_PC0__ADDRESS                      0xe08f
#define SRM_MCU_PDEBUG_PC0__DEFAULT                      0x0
#define SRM_MCU_PDEBUG_PC0__READ(die)                  srm_reg_read(die, SRM_MCU_PDEBUG_PC0__ADDRESS)
#define SRM_MCU_PDEBUG_PC0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_PDEBUG_PC0__ADDRESS, (data))
#define SRM_MCU_PDEBUG_PC0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_PDEBUG_PC0__ADDRESS, (data), (mask))
#  define SRM_MCU_PDEBUG_PC0__PC__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_PDEBUG_PC0__PC__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_PDEBUG_PC0__PC__READ(die)                SRM_MCU_PDEBUG_PC0__PC__GET(SRM_MCU_PDEBUG_PC0__READ(die))
#  define SRM_MCU_PDEBUG_PC0__PC__WRITE(die, fdata)           SRM_MCU_PDEBUG_PC0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_PDEBUG_PC0__PC__RMW(die, fdata)           SRM_MCU_PDEBUG_PC0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_PDEBUG_PC0__PC__MASK                       0xffff
#  define SRM_MCU_PDEBUG_PC0__PC__OFFSET                     0

#define SRM_MCU_PDEBUG_PC1__ADDRESS                      0xe090
#define SRM_MCU_PDEBUG_PC1__DEFAULT                      0x0
#define SRM_MCU_PDEBUG_PC1__READ(die)                  srm_reg_read(die, SRM_MCU_PDEBUG_PC1__ADDRESS)
#define SRM_MCU_PDEBUG_PC1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_PDEBUG_PC1__ADDRESS, (data))
#define SRM_MCU_PDEBUG_PC1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_PDEBUG_PC1__ADDRESS, (data), (mask))
#  define SRM_MCU_PDEBUG_PC1__PC__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_PDEBUG_PC1__PC__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_PDEBUG_PC1__PC__READ(die)                SRM_MCU_PDEBUG_PC1__PC__GET(SRM_MCU_PDEBUG_PC1__READ(die))
#  define SRM_MCU_PDEBUG_PC1__PC__WRITE(die, fdata)           SRM_MCU_PDEBUG_PC1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_PDEBUG_PC1__PC__RMW(die, fdata)           SRM_MCU_PDEBUG_PC1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_PDEBUG_PC1__PC__MASK                       0xffff
#  define SRM_MCU_PDEBUG_PC1__PC__OFFSET                     0

#define SRM_MCU_PDEBUG_DATA0__ADDRESS                      0xe091
#define SRM_MCU_PDEBUG_DATA0__DEFAULT                      0x0
#define SRM_MCU_PDEBUG_DATA0__READ(die)                  srm_reg_read(die, SRM_MCU_PDEBUG_DATA0__ADDRESS)
#define SRM_MCU_PDEBUG_DATA0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_PDEBUG_DATA0__ADDRESS, (data))
#define SRM_MCU_PDEBUG_DATA0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_PDEBUG_DATA0__ADDRESS, (data), (mask))
#  define SRM_MCU_PDEBUG_DATA0__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_PDEBUG_DATA0__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_PDEBUG_DATA0__DATA__READ(die)                SRM_MCU_PDEBUG_DATA0__DATA__GET(SRM_MCU_PDEBUG_DATA0__READ(die))
#  define SRM_MCU_PDEBUG_DATA0__DATA__WRITE(die, fdata)           SRM_MCU_PDEBUG_DATA0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_PDEBUG_DATA0__DATA__RMW(die, fdata)           SRM_MCU_PDEBUG_DATA0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_PDEBUG_DATA0__DATA__MASK                       0xffff
#  define SRM_MCU_PDEBUG_DATA0__DATA__OFFSET                     0

#define SRM_MCU_PDEBUG_DATA1__ADDRESS                      0xe092
#define SRM_MCU_PDEBUG_DATA1__DEFAULT                      0x0
#define SRM_MCU_PDEBUG_DATA1__READ(die)                  srm_reg_read(die, SRM_MCU_PDEBUG_DATA1__ADDRESS)
#define SRM_MCU_PDEBUG_DATA1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_PDEBUG_DATA1__ADDRESS, (data))
#define SRM_MCU_PDEBUG_DATA1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_PDEBUG_DATA1__ADDRESS, (data), (mask))
#  define SRM_MCU_PDEBUG_DATA1__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_PDEBUG_DATA1__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_PDEBUG_DATA1__DATA__READ(die)                SRM_MCU_PDEBUG_DATA1__DATA__GET(SRM_MCU_PDEBUG_DATA1__READ(die))
#  define SRM_MCU_PDEBUG_DATA1__DATA__WRITE(die, fdata)           SRM_MCU_PDEBUG_DATA1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_PDEBUG_DATA1__DATA__RMW(die, fdata)           SRM_MCU_PDEBUG_DATA1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_PDEBUG_DATA1__DATA__MASK                       0xffff
#  define SRM_MCU_PDEBUG_DATA1__DATA__OFFSET                     0

#define SRM_MCU_PDEBUG_STATUS__ADDRESS                      0xe093
#define SRM_MCU_PDEBUG_STATUS__DEFAULT                      0x0
#define SRM_MCU_PDEBUG_STATUS__READ(die)                  srm_reg_read(die, SRM_MCU_PDEBUG_STATUS__ADDRESS)
#define SRM_MCU_PDEBUG_STATUS__WRITE(die, data)             srm_reg_write(die, SRM_MCU_PDEBUG_STATUS__ADDRESS, (data))
#define SRM_MCU_PDEBUG_STATUS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_PDEBUG_STATUS__ADDRESS, (data), (mask))
#  define SRM_MCU_PDEBUG_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_MCU_PDEBUG_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_MCU_PDEBUG_STATUS__RSRVD1__READ(die)                SRM_MCU_PDEBUG_STATUS__RSRVD1__GET(SRM_MCU_PDEBUG_STATUS__READ(die))
#  define SRM_MCU_PDEBUG_STATUS__RSRVD1__WRITE(die, fdata)           SRM_MCU_PDEBUG_STATUS__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_PDEBUG_STATUS__RSRVD1__RMW(die, fdata)           SRM_MCU_PDEBUG_STATUS__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_PDEBUG_STATUS__RSRVD1__MASK                       0xff
#  define SRM_MCU_PDEBUG_STATUS__RSRVD1__OFFSET                     8
#  define SRM_MCU_PDEBUG_STATUS__STATUS__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_PDEBUG_STATUS__STATUS__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_PDEBUG_STATUS__STATUS__READ(die)                SRM_MCU_PDEBUG_STATUS__STATUS__GET(SRM_MCU_PDEBUG_STATUS__READ(die))
#  define SRM_MCU_PDEBUG_STATUS__STATUS__WRITE(die, fdata)           SRM_MCU_PDEBUG_STATUS__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_PDEBUG_STATUS__STATUS__RMW(die, fdata)           SRM_MCU_PDEBUG_STATUS__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_PDEBUG_STATUS__STATUS__MASK                       0xff
#  define SRM_MCU_PDEBUG_STATUS__STATUS__OFFSET                     0

#define SRM_MCU_BINT_STATUS0__ADDRESS                      0xe094
#define SRM_MCU_BINT_STATUS0__DEFAULT                      0x0
#define SRM_MCU_BINT_STATUS0__READ(die)                  srm_reg_read(die, SRM_MCU_BINT_STATUS0__ADDRESS)
#define SRM_MCU_BINT_STATUS0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_BINT_STATUS0__ADDRESS, (data))
#define SRM_MCU_BINT_STATUS0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_BINT_STATUS0__ADDRESS, (data), (mask))
#  define SRM_MCU_BINT_STATUS0__TTC0_2_I__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_BINT_STATUS0__TTC0_2_I__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_BINT_STATUS0__TTC0_2_I__READ(die)                SRM_MCU_BINT_STATUS0__TTC0_2_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__TTC0_2_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_BINT_STATUS0__TTC0_2_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_BINT_STATUS0__TTC0_2_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__TTC0_2_I__OFFSET                     15
#  define SRM_MCU_BINT_STATUS0__TTC0_1_I__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_MCU_BINT_STATUS0__TTC0_1_I__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_MCU_BINT_STATUS0__TTC0_1_I__READ(die)                SRM_MCU_BINT_STATUS0__TTC0_1_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__TTC0_1_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_MCU_BINT_STATUS0__TTC0_1_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_MCU_BINT_STATUS0__TTC0_1_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__TTC0_1_I__OFFSET                     14
#  define SRM_MCU_BINT_STATUS0__TTC0_0_I__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_MCU_BINT_STATUS0__TTC0_0_I__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_MCU_BINT_STATUS0__TTC0_0_I__READ(die)                SRM_MCU_BINT_STATUS0__TTC0_0_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__TTC0_0_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<13, 0x2000)
#  define SRM_MCU_BINT_STATUS0__TTC0_0_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<13, 0x2000)
#  define SRM_MCU_BINT_STATUS0__TTC0_0_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__TTC0_0_I__OFFSET                     13
#  define SRM_MCU_BINT_STATUS0__TRIG_NMI_I__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_MCU_BINT_STATUS0__TRIG_NMI_I__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_MCU_BINT_STATUS0__TRIG_NMI_I__READ(die)                SRM_MCU_BINT_STATUS0__TRIG_NMI_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__TRIG_NMI_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_BINT_STATUS0__TRIG_NMI_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_BINT_STATUS0__TRIG_NMI_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__TRIG_NMI_I__OFFSET                     12
#  define SRM_MCU_BINT_STATUS0__TTC2_2_I__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_MCU_BINT_STATUS0__TTC2_2_I__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_MCU_BINT_STATUS0__TTC2_2_I__READ(die)                SRM_MCU_BINT_STATUS0__TTC2_2_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__TTC2_2_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_BINT_STATUS0__TTC2_2_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_BINT_STATUS0__TTC2_2_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__TTC2_2_I__OFFSET                     11
#  define SRM_MCU_BINT_STATUS0__WDT_I__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_MCU_BINT_STATUS0__WDT_I__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_MCU_BINT_STATUS0__WDT_I__READ(die)                SRM_MCU_BINT_STATUS0__WDT_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__WDT_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_BINT_STATUS0__WDT_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_BINT_STATUS0__WDT_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__WDT_I__OFFSET                     10
#  define SRM_MCU_BINT_STATUS0__MBOX_I__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_MCU_BINT_STATUS0__MBOX_I__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_MCU_BINT_STATUS0__MBOX_I__READ(die)                SRM_MCU_BINT_STATUS0__MBOX_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__MBOX_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_BINT_STATUS0__MBOX_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_BINT_STATUS0__MBOX_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__MBOX_I__OFFSET                     9
#  define SRM_MCU_BINT_STATUS0__CORE_IP_I__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_MCU_BINT_STATUS0__CORE_IP_I__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_MCU_BINT_STATUS0__CORE_IP_I__READ(die)                SRM_MCU_BINT_STATUS0__CORE_IP_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__CORE_IP_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_BINT_STATUS0__CORE_IP_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_BINT_STATUS0__CORE_IP_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__CORE_IP_I__OFFSET                     8
#  define SRM_MCU_BINT_STATUS0__TRIG7_I__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_BINT_STATUS0__TRIG7_I__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_BINT_STATUS0__TRIG7_I__READ(die)                SRM_MCU_BINT_STATUS0__TRIG7_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__TRIG7_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_BINT_STATUS0__TRIG7_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_BINT_STATUS0__TRIG7_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__TRIG7_I__OFFSET                     7
#  define SRM_MCU_BINT_STATUS0__TRIG6_I__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_MCU_BINT_STATUS0__TRIG6_I__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_MCU_BINT_STATUS0__TRIG6_I__READ(die)                SRM_MCU_BINT_STATUS0__TRIG6_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__TRIG6_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<6, 0x40)
#  define SRM_MCU_BINT_STATUS0__TRIG6_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<6, 0x40)
#  define SRM_MCU_BINT_STATUS0__TRIG6_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__TRIG6_I__OFFSET                     6
#  define SRM_MCU_BINT_STATUS0__TRIG5_I__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_MCU_BINT_STATUS0__TRIG5_I__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_MCU_BINT_STATUS0__TRIG5_I__READ(die)                SRM_MCU_BINT_STATUS0__TRIG5_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__TRIG5_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<5, 0x20)
#  define SRM_MCU_BINT_STATUS0__TRIG5_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<5, 0x20)
#  define SRM_MCU_BINT_STATUS0__TRIG5_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__TRIG5_I__OFFSET                     5
#  define SRM_MCU_BINT_STATUS0__ERR_I__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_MCU_BINT_STATUS0__ERR_I__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_MCU_BINT_STATUS0__ERR_I__READ(die)                SRM_MCU_BINT_STATUS0__ERR_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__ERR_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_BINT_STATUS0__ERR_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_BINT_STATUS0__ERR_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__ERR_I__OFFSET                     4
#  define SRM_MCU_BINT_STATUS0__CLK_I__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MCU_BINT_STATUS0__CLK_I__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MCU_BINT_STATUS0__CLK_I__READ(die)                SRM_MCU_BINT_STATUS0__CLK_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__CLK_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_BINT_STATUS0__CLK_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_BINT_STATUS0__CLK_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__CLK_I__OFFSET                     3
#  define SRM_MCU_BINT_STATUS0__CORE_I__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_BINT_STATUS0__CORE_I__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_BINT_STATUS0__CORE_I__READ(die)                SRM_MCU_BINT_STATUS0__CORE_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__CORE_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_BINT_STATUS0__CORE_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_BINT_STATUS0__CORE_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__CORE_I__OFFSET                     2
#  define SRM_MCU_BINT_STATUS0__TRIG1_I__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_BINT_STATUS0__TRIG1_I__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_BINT_STATUS0__TRIG1_I__READ(die)                SRM_MCU_BINT_STATUS0__TRIG1_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__TRIG1_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_BINT_STATUS0__TRIG1_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_BINT_STATUS0__TRIG1_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__TRIG1_I__OFFSET                     1
#  define SRM_MCU_BINT_STATUS0__SPI_I__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_BINT_STATUS0__SPI_I__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_BINT_STATUS0__SPI_I__READ(die)                SRM_MCU_BINT_STATUS0__SPI_I__GET(SRM_MCU_BINT_STATUS0__READ(die))
#  define SRM_MCU_BINT_STATUS0__SPI_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_BINT_STATUS0__SPI_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_BINT_STATUS0__SPI_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS0__SPI_I__OFFSET                     0

#define SRM_MCU_BINT_STATUS1__ADDRESS                      0xe095
#define SRM_MCU_BINT_STATUS1__DEFAULT                      0x0
#define SRM_MCU_BINT_STATUS1__READ(die)                  srm_reg_read(die, SRM_MCU_BINT_STATUS1__ADDRESS)
#define SRM_MCU_BINT_STATUS1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_BINT_STATUS1__ADDRESS, (data))
#define SRM_MCU_BINT_STATUS1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_BINT_STATUS1__ADDRESS, (data), (mask))
#  define SRM_MCU_BINT_STATUS1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xffc0))
#  define SRM_MCU_BINT_STATUS1__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3ff)
#  define SRM_MCU_BINT_STATUS1__RSRVD1__READ(die)                SRM_MCU_BINT_STATUS1__RSRVD1__GET(SRM_MCU_BINT_STATUS1__READ(die))
#  define SRM_MCU_BINT_STATUS1__RSRVD1__WRITE(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<6, 0xffc0)
#  define SRM_MCU_BINT_STATUS1__RSRVD1__RMW(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<6, 0xffc0)
#  define SRM_MCU_BINT_STATUS1__RSRVD1__MASK                       0x3ff
#  define SRM_MCU_BINT_STATUS1__RSRVD1__OFFSET                     6
#  define SRM_MCU_BINT_STATUS1__TRIG21_I__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_MCU_BINT_STATUS1__TRIG21_I__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_MCU_BINT_STATUS1__TRIG21_I__READ(die)                SRM_MCU_BINT_STATUS1__TRIG21_I__GET(SRM_MCU_BINT_STATUS1__READ(die))
#  define SRM_MCU_BINT_STATUS1__TRIG21_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<5, 0x20)
#  define SRM_MCU_BINT_STATUS1__TRIG21_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<5, 0x20)
#  define SRM_MCU_BINT_STATUS1__TRIG21_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS1__TRIG21_I__OFFSET                     5
#  define SRM_MCU_BINT_STATUS1__TTC2_1_I__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_MCU_BINT_STATUS1__TTC2_1_I__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_MCU_BINT_STATUS1__TTC2_1_I__READ(die)                SRM_MCU_BINT_STATUS1__TTC2_1_I__GET(SRM_MCU_BINT_STATUS1__READ(die))
#  define SRM_MCU_BINT_STATUS1__TTC2_1_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_BINT_STATUS1__TTC2_1_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_BINT_STATUS1__TTC2_1_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS1__TTC2_1_I__OFFSET                     4
#  define SRM_MCU_BINT_STATUS1__TTC2_0_I__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MCU_BINT_STATUS1__TTC2_0_I__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MCU_BINT_STATUS1__TTC2_0_I__READ(die)                SRM_MCU_BINT_STATUS1__TTC2_0_I__GET(SRM_MCU_BINT_STATUS1__READ(die))
#  define SRM_MCU_BINT_STATUS1__TTC2_0_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_BINT_STATUS1__TTC2_0_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_BINT_STATUS1__TTC2_0_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS1__TTC2_0_I__OFFSET                     3
#  define SRM_MCU_BINT_STATUS1__TTC1_2_I__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_BINT_STATUS1__TTC1_2_I__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_BINT_STATUS1__TTC1_2_I__READ(die)                SRM_MCU_BINT_STATUS1__TTC1_2_I__GET(SRM_MCU_BINT_STATUS1__READ(die))
#  define SRM_MCU_BINT_STATUS1__TTC1_2_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_BINT_STATUS1__TTC1_2_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_BINT_STATUS1__TTC1_2_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS1__TTC1_2_I__OFFSET                     2
#  define SRM_MCU_BINT_STATUS1__TTC1_1_I__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_BINT_STATUS1__TTC1_1_I__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_BINT_STATUS1__TTC1_1_I__READ(die)                SRM_MCU_BINT_STATUS1__TTC1_1_I__GET(SRM_MCU_BINT_STATUS1__READ(die))
#  define SRM_MCU_BINT_STATUS1__TTC1_1_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_BINT_STATUS1__TTC1_1_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_BINT_STATUS1__TTC1_1_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS1__TTC1_1_I__OFFSET                     1
#  define SRM_MCU_BINT_STATUS1__TTC1_0_I__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_BINT_STATUS1__TTC1_0_I__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_BINT_STATUS1__TTC1_0_I__READ(die)                SRM_MCU_BINT_STATUS1__TTC1_0_I__GET(SRM_MCU_BINT_STATUS1__READ(die))
#  define SRM_MCU_BINT_STATUS1__TTC1_0_I__WRITE(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_BINT_STATUS1__TTC1_0_I__RMW(die, fdata)           SRM_MCU_BINT_STATUS1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_BINT_STATUS1__TTC1_0_I__MASK                       0x1
#  define SRM_MCU_BINT_STATUS1__TTC1_0_I__OFFSET                     0

#define SRM_MCU_BINT_MASK_CFG0__ADDRESS                      0xe096
#define SRM_MCU_BINT_MASK_CFG0__DEFAULT                      0x0
#define SRM_MCU_BINT_MASK_CFG0__READ(die)                  srm_reg_read(die, SRM_MCU_BINT_MASK_CFG0__ADDRESS)
#define SRM_MCU_BINT_MASK_CFG0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_BINT_MASK_CFG0__ADDRESS, (data))
#define SRM_MCU_BINT_MASK_CFG0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_BINT_MASK_CFG0__ADDRESS, (data), (mask))
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_2_MSK__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_2_MSK__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_2_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__TTC0_2_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_2_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_2_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_2_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_2_MSK__OFFSET                     15
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_1_MSK__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_1_MSK__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_1_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__TTC0_1_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_1_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_1_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_1_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_1_MSK__OFFSET                     14
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_0_MSK__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_0_MSK__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_0_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__TTC0_0_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_0_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<13, 0x2000)
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_0_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<13, 0x2000)
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_0_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__TTC0_0_MSK__OFFSET                     13
#  define SRM_MCU_BINT_MASK_CFG0__TRIG_NMI_MSK__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_MCU_BINT_MASK_CFG0__TRIG_NMI_MSK__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG_NMI_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__TRIG_NMI_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__TRIG_NMI_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG_NMI_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG_NMI_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__TRIG_NMI_MSK__OFFSET                     12
#  define SRM_MCU_BINT_MASK_CFG0__TTC2_2_MSK__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_MCU_BINT_MASK_CFG0__TTC2_2_MSK__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__TTC2_2_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__TTC2_2_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__TTC2_2_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_BINT_MASK_CFG0__TTC2_2_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_BINT_MASK_CFG0__TTC2_2_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__TTC2_2_MSK__OFFSET                     11
#  define SRM_MCU_BINT_MASK_CFG0__WDT_MSK__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_MCU_BINT_MASK_CFG0__WDT_MSK__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__WDT_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__WDT_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__WDT_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_BINT_MASK_CFG0__WDT_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_BINT_MASK_CFG0__WDT_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__WDT_MSK__OFFSET                     10
#  define SRM_MCU_BINT_MASK_CFG0__MBOX_MSK__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_MCU_BINT_MASK_CFG0__MBOX_MSK__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__MBOX_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__MBOX_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__MBOX_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_BINT_MASK_CFG0__MBOX_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<9, 0x200)
#  define SRM_MCU_BINT_MASK_CFG0__MBOX_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__MBOX_MSK__OFFSET                     9
#  define SRM_MCU_BINT_MASK_CFG0__CORE_IP_MSK__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_MCU_BINT_MASK_CFG0__CORE_IP_MSK__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__CORE_IP_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__CORE_IP_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__CORE_IP_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_BINT_MASK_CFG0__CORE_IP_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<8, 0x100)
#  define SRM_MCU_BINT_MASK_CFG0__CORE_IP_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__CORE_IP_MSK__OFFSET                     8
#  define SRM_MCU_BINT_MASK_CFG0__TRIG7_MSK__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_BINT_MASK_CFG0__TRIG7_MSK__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG7_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__TRIG7_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__TRIG7_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG7_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG7_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__TRIG7_MSK__OFFSET                     7
#  define SRM_MCU_BINT_MASK_CFG0__TRIG6_MSK__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_MCU_BINT_MASK_CFG0__TRIG6_MSK__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG6_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__TRIG6_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__TRIG6_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<6, 0x40)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG6_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<6, 0x40)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG6_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__TRIG6_MSK__OFFSET                     6
#  define SRM_MCU_BINT_MASK_CFG0__TRIG5_MSK__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_MCU_BINT_MASK_CFG0__TRIG5_MSK__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG5_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__TRIG5_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__TRIG5_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<5, 0x20)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG5_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<5, 0x20)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG5_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__TRIG5_MSK__OFFSET                     5
#  define SRM_MCU_BINT_MASK_CFG0__ERR_MSK__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_MCU_BINT_MASK_CFG0__ERR_MSK__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__ERR_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__ERR_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__ERR_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_BINT_MASK_CFG0__ERR_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_BINT_MASK_CFG0__ERR_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__ERR_MSK__OFFSET                     4
#  define SRM_MCU_BINT_MASK_CFG0__CLK_MSK__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MCU_BINT_MASK_CFG0__CLK_MSK__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__CLK_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__CLK_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__CLK_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_BINT_MASK_CFG0__CLK_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_BINT_MASK_CFG0__CLK_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__CLK_MSK__OFFSET                     3
#  define SRM_MCU_BINT_MASK_CFG0__CORE_MSK__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_BINT_MASK_CFG0__CORE_MSK__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__CORE_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__CORE_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__CORE_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_BINT_MASK_CFG0__CORE_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_BINT_MASK_CFG0__CORE_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__CORE_MSK__OFFSET                     2
#  define SRM_MCU_BINT_MASK_CFG0__TRIG1_MSK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_BINT_MASK_CFG0__TRIG1_MSK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG1_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__TRIG1_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__TRIG1_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG1_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_BINT_MASK_CFG0__TRIG1_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__TRIG1_MSK__OFFSET                     1
#  define SRM_MCU_BINT_MASK_CFG0__SPI_MSK__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_BINT_MASK_CFG0__SPI_MSK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__SPI_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG0__SPI_MSK__GET(SRM_MCU_BINT_MASK_CFG0__READ(die))
#  define SRM_MCU_BINT_MASK_CFG0__SPI_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__SPI_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_BINT_MASK_CFG0__SPI_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG0__SPI_MSK__OFFSET                     0

#define SRM_MCU_BINT_MASK_CFG1__ADDRESS                      0xe097
#define SRM_MCU_BINT_MASK_CFG1__DEFAULT                      0x0
#define SRM_MCU_BINT_MASK_CFG1__READ(die)                  srm_reg_read(die, SRM_MCU_BINT_MASK_CFG1__ADDRESS)
#define SRM_MCU_BINT_MASK_CFG1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_BINT_MASK_CFG1__ADDRESS, (data))
#define SRM_MCU_BINT_MASK_CFG1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_BINT_MASK_CFG1__ADDRESS, (data), (mask))
#  define SRM_MCU_BINT_MASK_CFG1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xffc0))
#  define SRM_MCU_BINT_MASK_CFG1__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3ff)
#  define SRM_MCU_BINT_MASK_CFG1__RSRVD1__READ(die)                SRM_MCU_BINT_MASK_CFG1__RSRVD1__GET(SRM_MCU_BINT_MASK_CFG1__READ(die))
#  define SRM_MCU_BINT_MASK_CFG1__RSRVD1__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<6, 0xffc0)
#  define SRM_MCU_BINT_MASK_CFG1__RSRVD1__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<6, 0xffc0)
#  define SRM_MCU_BINT_MASK_CFG1__RSRVD1__MASK                       0x3ff
#  define SRM_MCU_BINT_MASK_CFG1__RSRVD1__OFFSET                     6
#  define SRM_MCU_BINT_MASK_CFG1__TRIG21_MSK__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_MCU_BINT_MASK_CFG1__TRIG21_MSK__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG1__TRIG21_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG1__TRIG21_MSK__GET(SRM_MCU_BINT_MASK_CFG1__READ(die))
#  define SRM_MCU_BINT_MASK_CFG1__TRIG21_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<5, 0x20)
#  define SRM_MCU_BINT_MASK_CFG1__TRIG21_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<5, 0x20)
#  define SRM_MCU_BINT_MASK_CFG1__TRIG21_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG1__TRIG21_MSK__OFFSET                     5
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_1_MSK__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_1_MSK__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_1_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG1__TTC2_1_MSK__GET(SRM_MCU_BINT_MASK_CFG1__READ(die))
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_1_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_1_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_1_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_1_MSK__OFFSET                     4
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_0_MSK__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_0_MSK__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_0_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG1__TTC2_0_MSK__GET(SRM_MCU_BINT_MASK_CFG1__READ(die))
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_0_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_0_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_0_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG1__TTC2_0_MSK__OFFSET                     3
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_2_MSK__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_2_MSK__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_2_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG1__TTC1_2_MSK__GET(SRM_MCU_BINT_MASK_CFG1__READ(die))
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_2_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_2_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_2_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_2_MSK__OFFSET                     2
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_1_MSK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_1_MSK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_1_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG1__TTC1_1_MSK__GET(SRM_MCU_BINT_MASK_CFG1__READ(die))
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_1_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_1_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_1_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_1_MSK__OFFSET                     1
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_0_MSK__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_0_MSK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_0_MSK__READ(die)                SRM_MCU_BINT_MASK_CFG1__TTC1_0_MSK__GET(SRM_MCU_BINT_MASK_CFG1__READ(die))
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_0_MSK__WRITE(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_0_MSK__RMW(die, fdata)           SRM_MCU_BINT_MASK_CFG1__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_0_MSK__MASK                       0x1
#  define SRM_MCU_BINT_MASK_CFG1__TTC1_0_MSK__OFFSET                     0

#define SRM_MCU_CHKSUM_ADDR_CFG0__ADDRESS                      0xe0a1
#define SRM_MCU_CHKSUM_ADDR_CFG0__DEFAULT                      0x0
#define SRM_MCU_CHKSUM_ADDR_CFG0__READ(die)                  srm_reg_read(die, SRM_MCU_CHKSUM_ADDR_CFG0__ADDRESS)
#define SRM_MCU_CHKSUM_ADDR_CFG0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_CHKSUM_ADDR_CFG0__ADDRESS, (data))
#define SRM_MCU_CHKSUM_ADDR_CFG0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_CHKSUM_ADDR_CFG0__ADDRESS, (data), (mask))
#  define SRM_MCU_CHKSUM_ADDR_CFG0__START_ADDR__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_CHKSUM_ADDR_CFG0__START_ADDR__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_CHKSUM_ADDR_CFG0__START_ADDR__READ(die)                SRM_MCU_CHKSUM_ADDR_CFG0__START_ADDR__GET(SRM_MCU_CHKSUM_ADDR_CFG0__READ(die))
#  define SRM_MCU_CHKSUM_ADDR_CFG0__START_ADDR__WRITE(die, fdata)           SRM_MCU_CHKSUM_ADDR_CFG0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CHKSUM_ADDR_CFG0__START_ADDR__RMW(die, fdata)           SRM_MCU_CHKSUM_ADDR_CFG0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CHKSUM_ADDR_CFG0__START_ADDR__MASK                       0xffff
#  define SRM_MCU_CHKSUM_ADDR_CFG0__START_ADDR__OFFSET                     0

#define SRM_MCU_CHKSUM_ADDR_CFG1__ADDRESS                      0xe0a2
#define SRM_MCU_CHKSUM_ADDR_CFG1__DEFAULT                      0x0
#define SRM_MCU_CHKSUM_ADDR_CFG1__READ(die)                  srm_reg_read(die, SRM_MCU_CHKSUM_ADDR_CFG1__ADDRESS)
#define SRM_MCU_CHKSUM_ADDR_CFG1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_CHKSUM_ADDR_CFG1__ADDRESS, (data))
#define SRM_MCU_CHKSUM_ADDR_CFG1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_CHKSUM_ADDR_CFG1__ADDRESS, (data), (mask))
#  define SRM_MCU_CHKSUM_ADDR_CFG1__START_ADDR__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_CHKSUM_ADDR_CFG1__START_ADDR__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_CHKSUM_ADDR_CFG1__START_ADDR__READ(die)                SRM_MCU_CHKSUM_ADDR_CFG1__START_ADDR__GET(SRM_MCU_CHKSUM_ADDR_CFG1__READ(die))
#  define SRM_MCU_CHKSUM_ADDR_CFG1__START_ADDR__WRITE(die, fdata)           SRM_MCU_CHKSUM_ADDR_CFG1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CHKSUM_ADDR_CFG1__START_ADDR__RMW(die, fdata)           SRM_MCU_CHKSUM_ADDR_CFG1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CHKSUM_ADDR_CFG1__START_ADDR__MASK                       0xffff
#  define SRM_MCU_CHKSUM_ADDR_CFG1__START_ADDR__OFFSET                     0

#define SRM_MCU_CHKSUM_CNT_CFG__ADDRESS                      0xe0a3
#define SRM_MCU_CHKSUM_CNT_CFG__DEFAULT                      0x0
#define SRM_MCU_CHKSUM_CNT_CFG__READ(die)                  srm_reg_read(die, SRM_MCU_CHKSUM_CNT_CFG__ADDRESS)
#define SRM_MCU_CHKSUM_CNT_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MCU_CHKSUM_CNT_CFG__ADDRESS, (data))
#define SRM_MCU_CHKSUM_CNT_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_CHKSUM_CNT_CFG__ADDRESS, (data), (mask))
#  define SRM_MCU_CHKSUM_CNT_CFG__COUNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_CHKSUM_CNT_CFG__COUNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_CHKSUM_CNT_CFG__COUNT__READ(die)                SRM_MCU_CHKSUM_CNT_CFG__COUNT__GET(SRM_MCU_CHKSUM_CNT_CFG__READ(die))
#  define SRM_MCU_CHKSUM_CNT_CFG__COUNT__WRITE(die, fdata)           SRM_MCU_CHKSUM_CNT_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CHKSUM_CNT_CFG__COUNT__RMW(die, fdata)           SRM_MCU_CHKSUM_CNT_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CHKSUM_CNT_CFG__COUNT__MASK                       0xffff
#  define SRM_MCU_CHKSUM_CNT_CFG__COUNT__OFFSET                     0

#define SRM_MCU_CHKSUM_CFG__ADDRESS                      0xe0a4
#define SRM_MCU_CHKSUM_CFG__DEFAULT                      0x0
#define SRM_MCU_CHKSUM_CFG__READ(die)                  srm_reg_read(die, SRM_MCU_CHKSUM_CFG__ADDRESS)
#define SRM_MCU_CHKSUM_CFG__WRITE(die, data)             srm_reg_write(die, SRM_MCU_CHKSUM_CFG__ADDRESS, (data))
#define SRM_MCU_CHKSUM_CFG__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_CHKSUM_CFG__ADDRESS, (data), (mask))
#  define SRM_MCU_CHKSUM_CFG__START__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_CHKSUM_CFG__START__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_CHKSUM_CFG__START__READ(die)                SRM_MCU_CHKSUM_CFG__START__GET(SRM_MCU_CHKSUM_CFG__READ(die))
#  define SRM_MCU_CHKSUM_CFG__START__WRITE(die, fdata)           SRM_MCU_CHKSUM_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_CHKSUM_CFG__START__RMW(die, fdata)           SRM_MCU_CHKSUM_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_CHKSUM_CFG__START__MASK                       0x1
#  define SRM_MCU_CHKSUM_CFG__START__OFFSET                     15
#  define SRM_MCU_CHKSUM_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x8001) | (((uint32_t)(fdata) << 1) & 0x7ffe))
#  define SRM_MCU_CHKSUM_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x3fff)
#  define SRM_MCU_CHKSUM_CFG__RSRVD1__READ(die)                SRM_MCU_CHKSUM_CFG__RSRVD1__GET(SRM_MCU_CHKSUM_CFG__READ(die))
#  define SRM_MCU_CHKSUM_CFG__RSRVD1__WRITE(die, fdata)           SRM_MCU_CHKSUM_CFG__RMW(die, (fdata)<<1, 0x7ffe)
#  define SRM_MCU_CHKSUM_CFG__RSRVD1__RMW(die, fdata)           SRM_MCU_CHKSUM_CFG__RMW(die, (fdata)<<1, 0x7ffe)
#  define SRM_MCU_CHKSUM_CFG__RSRVD1__MASK                       0x3fff
#  define SRM_MCU_CHKSUM_CFG__RSRVD1__OFFSET                     1
#  define SRM_MCU_CHKSUM_CFG__ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_CHKSUM_CFG__ENABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_CHKSUM_CFG__ENABLE__READ(die)                SRM_MCU_CHKSUM_CFG__ENABLE__GET(SRM_MCU_CHKSUM_CFG__READ(die))
#  define SRM_MCU_CHKSUM_CFG__ENABLE__WRITE(die, fdata)           SRM_MCU_CHKSUM_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_CHKSUM_CFG__ENABLE__RMW(die, fdata)           SRM_MCU_CHKSUM_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_CHKSUM_CFG__ENABLE__MASK                       0x1
#  define SRM_MCU_CHKSUM_CFG__ENABLE__OFFSET                     0

#define SRM_MCU_CHKSUM_STATUS__ADDRESS                      0xe0a5
#define SRM_MCU_CHKSUM_STATUS__DEFAULT                      0x0
#define SRM_MCU_CHKSUM_STATUS__READ(die)                  srm_reg_read(die, SRM_MCU_CHKSUM_STATUS__ADDRESS)
#define SRM_MCU_CHKSUM_STATUS__WRITE(die, data)             srm_reg_write(die, SRM_MCU_CHKSUM_STATUS__ADDRESS, (data))
#define SRM_MCU_CHKSUM_STATUS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_CHKSUM_STATUS__ADDRESS, (data), (mask))
#  define SRM_MCU_CHKSUM_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SRM_MCU_CHKSUM_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SRM_MCU_CHKSUM_STATUS__RSRVD1__READ(die)                SRM_MCU_CHKSUM_STATUS__RSRVD1__GET(SRM_MCU_CHKSUM_STATUS__READ(die))
#  define SRM_MCU_CHKSUM_STATUS__RSRVD1__WRITE(die, fdata)           SRM_MCU_CHKSUM_STATUS__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MCU_CHKSUM_STATUS__RSRVD1__RMW(die, fdata)           SRM_MCU_CHKSUM_STATUS__RMW(die, (fdata)<<1, 0xfffe)
#  define SRM_MCU_CHKSUM_STATUS__RSRVD1__MASK                       0x7fff
#  define SRM_MCU_CHKSUM_STATUS__RSRVD1__OFFSET                     1
#  define SRM_MCU_CHKSUM_STATUS__DONE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_CHKSUM_STATUS__DONE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_CHKSUM_STATUS__DONE__READ(die)                SRM_MCU_CHKSUM_STATUS__DONE__GET(SRM_MCU_CHKSUM_STATUS__READ(die))
#  define SRM_MCU_CHKSUM_STATUS__DONE__WRITE(die, fdata)           SRM_MCU_CHKSUM_STATUS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_CHKSUM_STATUS__DONE__RMW(die, fdata)           SRM_MCU_CHKSUM_STATUS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_CHKSUM_STATUS__DONE__MASK                       0x1
#  define SRM_MCU_CHKSUM_STATUS__DONE__OFFSET                     0

#define SRM_MCU_CHKSUM_RESULT_STATUS0__ADDRESS                      0xe0a6
#define SRM_MCU_CHKSUM_RESULT_STATUS0__DEFAULT                      0xffff
#define SRM_MCU_CHKSUM_RESULT_STATUS0__READ(die)                  srm_reg_read(die, SRM_MCU_CHKSUM_RESULT_STATUS0__ADDRESS)
#define SRM_MCU_CHKSUM_RESULT_STATUS0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_CHKSUM_RESULT_STATUS0__ADDRESS, (data))
#define SRM_MCU_CHKSUM_RESULT_STATUS0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_CHKSUM_RESULT_STATUS0__ADDRESS, (data), (mask))
#  define SRM_MCU_CHKSUM_RESULT_STATUS0__CHECKSUM__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_CHKSUM_RESULT_STATUS0__CHECKSUM__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_CHKSUM_RESULT_STATUS0__CHECKSUM__READ(die)                SRM_MCU_CHKSUM_RESULT_STATUS0__CHECKSUM__GET(SRM_MCU_CHKSUM_RESULT_STATUS0__READ(die))
#  define SRM_MCU_CHKSUM_RESULT_STATUS0__CHECKSUM__WRITE(die, fdata)           SRM_MCU_CHKSUM_RESULT_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CHKSUM_RESULT_STATUS0__CHECKSUM__RMW(die, fdata)           SRM_MCU_CHKSUM_RESULT_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CHKSUM_RESULT_STATUS0__CHECKSUM__MASK                       0xffff
#  define SRM_MCU_CHKSUM_RESULT_STATUS0__CHECKSUM__OFFSET                     0

#define SRM_MCU_CHKSUM_RESULT_STATUS1__ADDRESS                      0xe0a7
#define SRM_MCU_CHKSUM_RESULT_STATUS1__DEFAULT                      0xffff
#define SRM_MCU_CHKSUM_RESULT_STATUS1__READ(die)                  srm_reg_read(die, SRM_MCU_CHKSUM_RESULT_STATUS1__ADDRESS)
#define SRM_MCU_CHKSUM_RESULT_STATUS1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_CHKSUM_RESULT_STATUS1__ADDRESS, (data))
#define SRM_MCU_CHKSUM_RESULT_STATUS1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_CHKSUM_RESULT_STATUS1__ADDRESS, (data), (mask))
#  define SRM_MCU_CHKSUM_RESULT_STATUS1__CHECKSUM__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_CHKSUM_RESULT_STATUS1__CHECKSUM__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_CHKSUM_RESULT_STATUS1__CHECKSUM__READ(die)                SRM_MCU_CHKSUM_RESULT_STATUS1__CHECKSUM__GET(SRM_MCU_CHKSUM_RESULT_STATUS1__READ(die))
#  define SRM_MCU_CHKSUM_RESULT_STATUS1__CHECKSUM__WRITE(die, fdata)           SRM_MCU_CHKSUM_RESULT_STATUS1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CHKSUM_RESULT_STATUS1__CHECKSUM__RMW(die, fdata)           SRM_MCU_CHKSUM_RESULT_STATUS1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_CHKSUM_RESULT_STATUS1__CHECKSUM__MASK                       0xffff
#  define SRM_MCU_CHKSUM_RESULT_STATUS1__CHECKSUM__OFFSET                     0

#define SRM_RXMBOX_RXMAILBOX__ADDRESS                      0xe400
#define SRM_RXMBOX_RXMAILBOX__DEFAULT                      0x0
#define SRM_RXMBOX_RXMAILBOX__READ(die)                  srm_reg_read(die, SRM_RXMBOX_RXMAILBOX__ADDRESS)
#define SRM_RXMBOX_RXMAILBOX__WRITE(die, data)             srm_reg_write(die, SRM_RXMBOX_RXMAILBOX__ADDRESS, (data))
#define SRM_RXMBOX_RXMAILBOX__RMW(die, data, mask)         srm_reg_rmw(die, SRM_RXMBOX_RXMAILBOX__ADDRESS, (data), (mask))
#  define SRM_RXMBOX_RXMAILBOX__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RXMBOX_RXMAILBOX__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RXMBOX_RXMAILBOX__DATA__READ(die)                SRM_RXMBOX_RXMAILBOX__DATA__GET(SRM_RXMBOX_RXMAILBOX__READ(die))
#  define SRM_RXMBOX_RXMAILBOX__DATA__WRITE(die, fdata)           SRM_RXMBOX_RXMAILBOX__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RXMBOX_RXMAILBOX__DATA__RMW(die, fdata)           SRM_RXMBOX_RXMAILBOX__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_RXMBOX_RXMAILBOX__DATA__MASK                       0xffff
#  define SRM_RXMBOX_RXMAILBOX__DATA__OFFSET                     0

#define SRM_TXMBOX_TXMAILBOX__ADDRESS                      0xe800
#define SRM_TXMBOX_TXMAILBOX__DEFAULT                      0x0
#define SRM_TXMBOX_TXMAILBOX__READ(die)                  srm_reg_read(die, SRM_TXMBOX_TXMAILBOX__ADDRESS)
#define SRM_TXMBOX_TXMAILBOX__WRITE(die, data)             srm_reg_write(die, SRM_TXMBOX_TXMAILBOX__ADDRESS, (data))
#define SRM_TXMBOX_TXMAILBOX__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TXMBOX_TXMAILBOX__ADDRESS, (data), (mask))
#  define SRM_TXMBOX_TXMAILBOX__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TXMBOX_TXMAILBOX__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TXMBOX_TXMAILBOX__DATA__READ(die)                SRM_TXMBOX_TXMAILBOX__DATA__GET(SRM_TXMBOX_TXMAILBOX__READ(die))
#  define SRM_TXMBOX_TXMAILBOX__DATA__WRITE(die, fdata)           SRM_TXMBOX_TXMAILBOX__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TXMBOX_TXMAILBOX__DATA__RMW(die, fdata)           SRM_TXMBOX_TXMAILBOX__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TXMBOX_TXMAILBOX__DATA__MASK                       0xffff
#  define SRM_TXMBOX_TXMAILBOX__DATA__OFFSET                     0

#define SRM_TOP_RULES_0__ADDRESS                      0x47
#define SRM_TOP_RULES_0__DEFAULT                      0x0
#define SRM_TOP_RULES_0__READ(die)                  srm_reg_read(die, SRM_TOP_RULES_0__ADDRESS)
#define SRM_TOP_RULES_0__WRITE(die, data)             srm_reg_write(die, SRM_TOP_RULES_0__ADDRESS, (data))
#define SRM_TOP_RULES_0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TOP_RULES_0__ADDRESS, (data), (mask))
#  define SRM_TOP_RULES_0__SELF_TEST_MODE__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SRM_TOP_RULES_0__SELF_TEST_MODE__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SRM_TOP_RULES_0__SELF_TEST_MODE__READ(die)                SRM_TOP_RULES_0__SELF_TEST_MODE__GET(SRM_TOP_RULES_0__READ(die))
#  define SRM_TOP_RULES_0__SELF_TEST_MODE__WRITE(die, fdata)           SRM_TOP_RULES_0__RMW(die, (fdata)<<1, 0xe)
#  define SRM_TOP_RULES_0__SELF_TEST_MODE__RMW(die, fdata)           SRM_TOP_RULES_0__RMW(die, (fdata)<<1, 0xe)
#  define SRM_TOP_RULES_0__SELF_TEST_MODE__MASK                       0x7
#  define SRM_TOP_RULES_0__SELF_TEST_MODE__OFFSET                     1
#  define SRM_TOP_RULES_0__SELF_TEST_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TOP_RULES_0__SELF_TEST_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TOP_RULES_0__SELF_TEST_EN__READ(die)                SRM_TOP_RULES_0__SELF_TEST_EN__GET(SRM_TOP_RULES_0__READ(die))
#  define SRM_TOP_RULES_0__SELF_TEST_EN__WRITE(die, fdata)           SRM_TOP_RULES_0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TOP_RULES_0__SELF_TEST_EN__RMW(die, fdata)           SRM_TOP_RULES_0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TOP_RULES_0__SELF_TEST_EN__MASK                       0x1
#  define SRM_TOP_RULES_0__SELF_TEST_EN__OFFSET                     0

#define SRM_TOP_INIT_REQ__ADDRESS                      0x48
#define SRM_TOP_INIT_REQ__DEFAULT                      0x0
#define SRM_TOP_INIT_REQ__READ(die)                  srm_reg_read(die, SRM_TOP_INIT_REQ__ADDRESS)
#define SRM_TOP_INIT_REQ__WRITE(die, data)             srm_reg_write(die, SRM_TOP_INIT_REQ__ADDRESS, (data))
#define SRM_TOP_INIT_REQ__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TOP_INIT_REQ__ADDRESS, (data), (mask))
#  define SRM_TOP_INIT_REQ__ANLT_REQ_CMD__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_TOP_INIT_REQ__ANLT_REQ_CMD__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_TOP_INIT_REQ__ANLT_REQ_CMD__READ(die)                SRM_TOP_INIT_REQ__ANLT_REQ_CMD__GET(SRM_TOP_INIT_REQ__READ(die))
#  define SRM_TOP_INIT_REQ__ANLT_REQ_CMD__WRITE(die, fdata)           SRM_TOP_INIT_REQ__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_TOP_INIT_REQ__ANLT_REQ_CMD__RMW(die, fdata)           SRM_TOP_INIT_REQ__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_TOP_INIT_REQ__ANLT_REQ_CMD__MASK                       0xf
#  define SRM_TOP_INIT_REQ__ANLT_REQ_CMD__OFFSET                     12
#  define SRM_TOP_INIT_REQ__ANLT_REQ__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TOP_INIT_REQ__ANLT_REQ__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TOP_INIT_REQ__ANLT_REQ__READ(die)                SRM_TOP_INIT_REQ__ANLT_REQ__GET(SRM_TOP_INIT_REQ__READ(die))
#  define SRM_TOP_INIT_REQ__ANLT_REQ__WRITE(die, fdata)           SRM_TOP_INIT_REQ__RMW(die, (fdata)<<2, 0x4)
#  define SRM_TOP_INIT_REQ__ANLT_REQ__RMW(die, fdata)           SRM_TOP_INIT_REQ__RMW(die, (fdata)<<2, 0x4)
#  define SRM_TOP_INIT_REQ__ANLT_REQ__MASK                       0x1
#  define SRM_TOP_INIT_REQ__ANLT_REQ__OFFSET                     2
#  define SRM_TOP_INIT_REQ__CHIP_INIT_REQ__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TOP_INIT_REQ__CHIP_INIT_REQ__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TOP_INIT_REQ__CHIP_INIT_REQ__READ(die)                SRM_TOP_INIT_REQ__CHIP_INIT_REQ__GET(SRM_TOP_INIT_REQ__READ(die))
#  define SRM_TOP_INIT_REQ__CHIP_INIT_REQ__WRITE(die, fdata)           SRM_TOP_INIT_REQ__RMW(die, (fdata)<<1, 0x2)
#  define SRM_TOP_INIT_REQ__CHIP_INIT_REQ__RMW(die, fdata)           SRM_TOP_INIT_REQ__RMW(die, (fdata)<<1, 0x2)
#  define SRM_TOP_INIT_REQ__CHIP_INIT_REQ__MASK                       0x1
#  define SRM_TOP_INIT_REQ__CHIP_INIT_REQ__OFFSET                     1
#  define SRM_TOP_INIT_REQ__PLL_INIT_REQ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TOP_INIT_REQ__PLL_INIT_REQ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TOP_INIT_REQ__PLL_INIT_REQ__READ(die)                SRM_TOP_INIT_REQ__PLL_INIT_REQ__GET(SRM_TOP_INIT_REQ__READ(die))
#  define SRM_TOP_INIT_REQ__PLL_INIT_REQ__WRITE(die, fdata)           SRM_TOP_INIT_REQ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TOP_INIT_REQ__PLL_INIT_REQ__RMW(die, fdata)           SRM_TOP_INIT_REQ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TOP_INIT_REQ__PLL_INIT_REQ__MASK                       0x1
#  define SRM_TOP_INIT_REQ__PLL_INIT_REQ__OFFSET                     0

#define SRM_TOP_INIT_ACK__ADDRESS                      0x49
#define SRM_TOP_INIT_ACK__DEFAULT                      0x0
#define SRM_TOP_INIT_ACK__READ(die)                  srm_reg_read(die, SRM_TOP_INIT_ACK__ADDRESS)
#define SRM_TOP_INIT_ACK__WRITE(die, data)             srm_reg_write(die, SRM_TOP_INIT_ACK__ADDRESS, (data))
#define SRM_TOP_INIT_ACK__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TOP_INIT_ACK__ADDRESS, (data), (mask))
#  define SRM_TOP_INIT_ACK__ANLT_ACK_CMD__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_TOP_INIT_ACK__ANLT_ACK_CMD__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_TOP_INIT_ACK__ANLT_ACK_CMD__READ(die)                SRM_TOP_INIT_ACK__ANLT_ACK_CMD__GET(SRM_TOP_INIT_ACK__READ(die))
#  define SRM_TOP_INIT_ACK__ANLT_ACK_CMD__WRITE(die, fdata)           SRM_TOP_INIT_ACK__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_TOP_INIT_ACK__ANLT_ACK_CMD__RMW(die, fdata)           SRM_TOP_INIT_ACK__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_TOP_INIT_ACK__ANLT_ACK_CMD__MASK                       0xf
#  define SRM_TOP_INIT_ACK__ANLT_ACK_CMD__OFFSET                     12
#  define SRM_TOP_INIT_ACK__ANLT_ACK__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TOP_INIT_ACK__ANLT_ACK__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TOP_INIT_ACK__ANLT_ACK__READ(die)                SRM_TOP_INIT_ACK__ANLT_ACK__GET(SRM_TOP_INIT_ACK__READ(die))
#  define SRM_TOP_INIT_ACK__ANLT_ACK__WRITE(die, fdata)           SRM_TOP_INIT_ACK__RMW(die, (fdata)<<2, 0x4)
#  define SRM_TOP_INIT_ACK__ANLT_ACK__RMW(die, fdata)           SRM_TOP_INIT_ACK__RMW(die, (fdata)<<2, 0x4)
#  define SRM_TOP_INIT_ACK__ANLT_ACK__MASK                       0x1
#  define SRM_TOP_INIT_ACK__ANLT_ACK__OFFSET                     2
#  define SRM_TOP_INIT_ACK__CHIP_INIT_ACK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_TOP_INIT_ACK__CHIP_INIT_ACK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_TOP_INIT_ACK__CHIP_INIT_ACK__READ(die)                SRM_TOP_INIT_ACK__CHIP_INIT_ACK__GET(SRM_TOP_INIT_ACK__READ(die))
#  define SRM_TOP_INIT_ACK__CHIP_INIT_ACK__WRITE(die, fdata)           SRM_TOP_INIT_ACK__RMW(die, (fdata)<<1, 0x2)
#  define SRM_TOP_INIT_ACK__CHIP_INIT_ACK__RMW(die, fdata)           SRM_TOP_INIT_ACK__RMW(die, (fdata)<<1, 0x2)
#  define SRM_TOP_INIT_ACK__CHIP_INIT_ACK__MASK                       0x1
#  define SRM_TOP_INIT_ACK__CHIP_INIT_ACK__OFFSET                     1
#  define SRM_TOP_INIT_ACK__PLL_INIT_ACK__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_TOP_INIT_ACK__PLL_INIT_ACK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_TOP_INIT_ACK__PLL_INIT_ACK__READ(die)                SRM_TOP_INIT_ACK__PLL_INIT_ACK__GET(SRM_TOP_INIT_ACK__READ(die))
#  define SRM_TOP_INIT_ACK__PLL_INIT_ACK__WRITE(die, fdata)           SRM_TOP_INIT_ACK__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TOP_INIT_ACK__PLL_INIT_ACK__RMW(die, fdata)           SRM_TOP_INIT_ACK__RMW(die, (fdata)<<0, 0x1)
#  define SRM_TOP_INIT_ACK__PLL_INIT_ACK__MASK                       0x1
#  define SRM_TOP_INIT_ACK__PLL_INIT_ACK__OFFSET                     0

#define SRM_PLL_RULES__ADDRESS                      0x4a
#define SRM_PLL_RULES__DEFAULT                      0x0
#define SRM_PLL_RULES__READ(die)                  srm_reg_read(die, SRM_PLL_RULES__ADDRESS)
#define SRM_PLL_RULES__WRITE(die, data)             srm_reg_write(die, SRM_PLL_RULES__ADDRESS, (data))
#define SRM_PLL_RULES__RMW(die, data, mask)         srm_reg_rmw(die, SRM_PLL_RULES__ADDRESS, (data), (mask))
#  define SRM_PLL_RULES__PLL_TMON_CAL_DISABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_PLL_RULES__PLL_TMON_CAL_DISABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_PLL_RULES__PLL_TMON_CAL_DISABLE__READ(die)                SRM_PLL_RULES__PLL_TMON_CAL_DISABLE__GET(SRM_PLL_RULES__READ(die))
#  define SRM_PLL_RULES__PLL_TMON_CAL_DISABLE__WRITE(die, fdata)           SRM_PLL_RULES__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_PLL_RULES__PLL_TMON_CAL_DISABLE__RMW(die, fdata)           SRM_PLL_RULES__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_PLL_RULES__PLL_TMON_CAL_DISABLE__MASK                       0x1
#  define SRM_PLL_RULES__PLL_TMON_CAL_DISABLE__OFFSET                     15
#  define SRM_PLL_RULES__PLL_TMON_CAL_FORCE__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_PLL_RULES__PLL_TMON_CAL_FORCE__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_PLL_RULES__PLL_TMON_CAL_FORCE__READ(die)                SRM_PLL_RULES__PLL_TMON_CAL_FORCE__GET(SRM_PLL_RULES__READ(die))
#  define SRM_PLL_RULES__PLL_TMON_CAL_FORCE__WRITE(die, fdata)           SRM_PLL_RULES__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_PLL_RULES__PLL_TMON_CAL_FORCE__RMW(die, fdata)           SRM_PLL_RULES__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_PLL_RULES__PLL_TMON_CAL_FORCE__MASK                       0x1f
#  define SRM_PLL_RULES__PLL_TMON_CAL_FORCE__OFFSET                     10
#  define SRM_PLL_RULES__PLL_SETTINGS_DISABLE__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_PLL_RULES__PLL_SETTINGS_DISABLE__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_PLL_RULES__PLL_SETTINGS_DISABLE__READ(die)                SRM_PLL_RULES__PLL_SETTINGS_DISABLE__GET(SRM_PLL_RULES__READ(die))
#  define SRM_PLL_RULES__PLL_SETTINGS_DISABLE__WRITE(die, fdata)           SRM_PLL_RULES__RMW(die, (fdata)<<9, 0x200)
#  define SRM_PLL_RULES__PLL_SETTINGS_DISABLE__RMW(die, fdata)           SRM_PLL_RULES__RMW(die, (fdata)<<9, 0x200)
#  define SRM_PLL_RULES__PLL_SETTINGS_DISABLE__MASK                       0x1
#  define SRM_PLL_RULES__PLL_SETTINGS_DISABLE__OFFSET                     9
#  define SRM_PLL_RULES__PLL_IGNORE_LOL__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_PLL_RULES__PLL_IGNORE_LOL__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_PLL_RULES__PLL_IGNORE_LOL__READ(die)                SRM_PLL_RULES__PLL_IGNORE_LOL__GET(SRM_PLL_RULES__READ(die))
#  define SRM_PLL_RULES__PLL_IGNORE_LOL__WRITE(die, fdata)           SRM_PLL_RULES__RMW(die, (fdata)<<8, 0x100)
#  define SRM_PLL_RULES__PLL_IGNORE_LOL__RMW(die, fdata)           SRM_PLL_RULES__RMW(die, (fdata)<<8, 0x100)
#  define SRM_PLL_RULES__PLL_IGNORE_LOL__MASK                       0x1
#  define SRM_PLL_RULES__PLL_IGNORE_LOL__OFFSET                     8

#define SRM_PLL_BAUD_RATE_LSW__ADDRESS                      0x4b
#define SRM_PLL_BAUD_RATE_LSW__DEFAULT                      0x0
#define SRM_PLL_BAUD_RATE_LSW__READ(die)                  srm_reg_read(die, SRM_PLL_BAUD_RATE_LSW__ADDRESS)
#define SRM_PLL_BAUD_RATE_LSW__WRITE(die, data)             srm_reg_write(die, SRM_PLL_BAUD_RATE_LSW__ADDRESS, (data))
#define SRM_PLL_BAUD_RATE_LSW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_PLL_BAUD_RATE_LSW__ADDRESS, (data), (mask))
#  define SRM_PLL_BAUD_RATE_LSW__PLL_BAUD_RATE_LSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_PLL_BAUD_RATE_LSW__PLL_BAUD_RATE_LSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_PLL_BAUD_RATE_LSW__PLL_BAUD_RATE_LSW__READ(die)                SRM_PLL_BAUD_RATE_LSW__PLL_BAUD_RATE_LSW__GET(SRM_PLL_BAUD_RATE_LSW__READ(die))
#  define SRM_PLL_BAUD_RATE_LSW__PLL_BAUD_RATE_LSW__WRITE(die, fdata)           SRM_PLL_BAUD_RATE_LSW__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_PLL_BAUD_RATE_LSW__PLL_BAUD_RATE_LSW__RMW(die, fdata)           SRM_PLL_BAUD_RATE_LSW__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_PLL_BAUD_RATE_LSW__PLL_BAUD_RATE_LSW__MASK                       0xffff
#  define SRM_PLL_BAUD_RATE_LSW__PLL_BAUD_RATE_LSW__OFFSET                     0

#define SRM_PLL_BAUD_RATE_MSW__ADDRESS                      0x4c
#define SRM_PLL_BAUD_RATE_MSW__DEFAULT                      0x0
#define SRM_PLL_BAUD_RATE_MSW__READ(die)                  srm_reg_read(die, SRM_PLL_BAUD_RATE_MSW__ADDRESS)
#define SRM_PLL_BAUD_RATE_MSW__WRITE(die, data)             srm_reg_write(die, SRM_PLL_BAUD_RATE_MSW__ADDRESS, (data))
#define SRM_PLL_BAUD_RATE_MSW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_PLL_BAUD_RATE_MSW__ADDRESS, (data), (mask))
#  define SRM_PLL_BAUD_RATE_MSW__PLL_BAUD_RATE_MSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_PLL_BAUD_RATE_MSW__PLL_BAUD_RATE_MSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_PLL_BAUD_RATE_MSW__PLL_BAUD_RATE_MSW__READ(die)                SRM_PLL_BAUD_RATE_MSW__PLL_BAUD_RATE_MSW__GET(SRM_PLL_BAUD_RATE_MSW__READ(die))
#  define SRM_PLL_BAUD_RATE_MSW__PLL_BAUD_RATE_MSW__WRITE(die, fdata)           SRM_PLL_BAUD_RATE_MSW__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_PLL_BAUD_RATE_MSW__PLL_BAUD_RATE_MSW__RMW(die, fdata)           SRM_PLL_BAUD_RATE_MSW__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_PLL_BAUD_RATE_MSW__PLL_BAUD_RATE_MSW__MASK                       0xffff
#  define SRM_PLL_BAUD_RATE_MSW__PLL_BAUD_RATE_MSW__OFFSET                     0

#define SRM_CHANNEL_INIT_REQ__ADDRESS                      0xe081
#define SRM_CHANNEL_INIT_REQ__DEFAULT                      0x0
#define SRM_CHANNEL_INIT_REQ__READ(die)                  srm_reg_read(die, SRM_CHANNEL_INIT_REQ__ADDRESS)
#define SRM_CHANNEL_INIT_REQ__WRITE(die, data)             srm_reg_write(die, SRM_CHANNEL_INIT_REQ__ADDRESS, (data))
#define SRM_CHANNEL_INIT_REQ__RMW(die, data, mask)         srm_reg_rmw(die, SRM_CHANNEL_INIT_REQ__ADDRESS, (data), (mask))
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH1__READ(die)                SRM_CHANNEL_INIT_REQ__RX_CMD_CH1__GET(SRM_CHANNEL_INIT_REQ__READ(die))
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH1__WRITE(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH1__RMW(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<13, 0xe000)
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH1__MASK                       0x7
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH1__OFFSET                     13
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH1__SET(rdata, fdata)         (((rdata) & 0xe3ff) | (((uint32_t)(fdata) << 10) & 0x1c00))
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH1__GET(rdata)                (((rdata) >> 10) & 0x7)
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH1__READ(die)                SRM_CHANNEL_INIT_REQ__TX_CMD_CH1__GET(SRM_CHANNEL_INIT_REQ__READ(die))
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH1__WRITE(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<10, 0x1c00)
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH1__RMW(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<10, 0x1c00)
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH1__MASK                       0x7
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH1__OFFSET                     10
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH1__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH1__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH1__READ(die)                SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH1__GET(SRM_CHANNEL_INIT_REQ__READ(die))
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH1__WRITE(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<9, 0x200)
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH1__RMW(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<9, 0x200)
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH1__MASK                       0x1
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH1__OFFSET                     9
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH1__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH1__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH1__READ(die)                SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH1__GET(SRM_CHANNEL_INIT_REQ__READ(die))
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH1__WRITE(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<8, 0x100)
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH1__RMW(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<8, 0x100)
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH1__MASK                       0x1
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH1__OFFSET                     8
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH0__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH0__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH0__READ(die)                SRM_CHANNEL_INIT_REQ__RX_CMD_CH0__GET(SRM_CHANNEL_INIT_REQ__READ(die))
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH0__WRITE(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH0__RMW(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<5, 0xe0)
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH0__MASK                       0x7
#  define SRM_CHANNEL_INIT_REQ__RX_CMD_CH0__OFFSET                     5
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH0__SET(rdata, fdata)         (((rdata) & 0xffe3) | (((uint32_t)(fdata) << 2) & 0x1c))
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH0__GET(rdata)                (((rdata) >> 2) & 0x7)
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH0__READ(die)                SRM_CHANNEL_INIT_REQ__TX_CMD_CH0__GET(SRM_CHANNEL_INIT_REQ__READ(die))
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH0__WRITE(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<2, 0x1c)
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH0__RMW(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<2, 0x1c)
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH0__MASK                       0x7
#  define SRM_CHANNEL_INIT_REQ__TX_CMD_CH0__OFFSET                     2
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH0__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH0__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH0__READ(die)                SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH0__GET(SRM_CHANNEL_INIT_REQ__READ(die))
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH0__WRITE(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<1, 0x2)
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH0__RMW(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<1, 0x2)
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH0__MASK                       0x1
#  define SRM_CHANNEL_INIT_REQ__RX_INIT_REQ_CH0__OFFSET                     1
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH0__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH0__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH0__READ(die)                SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH0__GET(SRM_CHANNEL_INIT_REQ__READ(die))
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH0__WRITE(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH0__RMW(die, fdata)           SRM_CHANNEL_INIT_REQ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH0__MASK                       0x1
#  define SRM_CHANNEL_INIT_REQ__TX_INIT_REQ_CH0__OFFSET                     0

#define SRM_CHANNEL_INIT_ACK__ADDRESS                      0xe082
#define SRM_CHANNEL_INIT_ACK__DEFAULT                      0x0
#define SRM_CHANNEL_INIT_ACK__READ(die)                  srm_reg_read(die, SRM_CHANNEL_INIT_ACK__ADDRESS)
#define SRM_CHANNEL_INIT_ACK__WRITE(die, data)             srm_reg_write(die, SRM_CHANNEL_INIT_ACK__ADDRESS, (data))
#define SRM_CHANNEL_INIT_ACK__RMW(die, data, mask)         srm_reg_rmw(die, SRM_CHANNEL_INIT_ACK__ADDRESS, (data), (mask))
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH1__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH1__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH1__READ(die)                SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH1__GET(SRM_CHANNEL_INIT_ACK__READ(die))
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH1__WRITE(die, fdata)           SRM_CHANNEL_INIT_ACK__RMW(die, (fdata)<<9, 0x200)
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH1__RMW(die, fdata)           SRM_CHANNEL_INIT_ACK__RMW(die, (fdata)<<9, 0x200)
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH1__MASK                       0x1
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH1__OFFSET                     9
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH1__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH1__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH1__READ(die)                SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH1__GET(SRM_CHANNEL_INIT_ACK__READ(die))
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH1__WRITE(die, fdata)           SRM_CHANNEL_INIT_ACK__RMW(die, (fdata)<<8, 0x100)
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH1__RMW(die, fdata)           SRM_CHANNEL_INIT_ACK__RMW(die, (fdata)<<8, 0x100)
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH1__MASK                       0x1
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH1__OFFSET                     8
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH0__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH0__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH0__READ(die)                SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH0__GET(SRM_CHANNEL_INIT_ACK__READ(die))
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH0__WRITE(die, fdata)           SRM_CHANNEL_INIT_ACK__RMW(die, (fdata)<<1, 0x2)
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH0__RMW(die, fdata)           SRM_CHANNEL_INIT_ACK__RMW(die, (fdata)<<1, 0x2)
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH0__MASK                       0x1
#  define SRM_CHANNEL_INIT_ACK__RX_INIT_ACK_CH0__OFFSET                     1
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH0__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH0__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH0__READ(die)                SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH0__GET(SRM_CHANNEL_INIT_ACK__READ(die))
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH0__WRITE(die, fdata)           SRM_CHANNEL_INIT_ACK__RMW(die, (fdata)<<0, 0x1)
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH0__RMW(die, fdata)           SRM_CHANNEL_INIT_ACK__RMW(die, (fdata)<<0, 0x1)
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH0__MASK                       0x1
#  define SRM_CHANNEL_INIT_ACK__TX_INIT_ACK_CH0__OFFSET                     0

#define SRM_CHANNEL0_REQ__ADDRESS                      0xe085
#define SRM_CHANNEL0_REQ__DEFAULT                      0x0
#define SRM_CHANNEL0_REQ__READ(die)                  srm_reg_read(die, SRM_CHANNEL0_REQ__ADDRESS)
#define SRM_CHANNEL0_REQ__WRITE(die, data)             srm_reg_write(die, SRM_CHANNEL0_REQ__ADDRESS, (data))
#define SRM_CHANNEL0_REQ__RMW(die, data, mask)         srm_reg_rmw(die, SRM_CHANNEL0_REQ__ADDRESS, (data), (mask))
#  define SRM_CHANNEL0_REQ__RX_REQ_CMD__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_CHANNEL0_REQ__RX_REQ_CMD__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_CHANNEL0_REQ__RX_REQ_CMD__READ(die)                SRM_CHANNEL0_REQ__RX_REQ_CMD__GET(SRM_CHANNEL0_REQ__READ(die))
#  define SRM_CHANNEL0_REQ__RX_REQ_CMD__WRITE(die, fdata)           SRM_CHANNEL0_REQ__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_CHANNEL0_REQ__RX_REQ_CMD__RMW(die, fdata)           SRM_CHANNEL0_REQ__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_CHANNEL0_REQ__RX_REQ_CMD__MASK                       0xf
#  define SRM_CHANNEL0_REQ__RX_REQ_CMD__OFFSET                     12
#  define SRM_CHANNEL0_REQ__TX_REQ_CMD__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SRM_CHANNEL0_REQ__TX_REQ_CMD__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SRM_CHANNEL0_REQ__TX_REQ_CMD__READ(die)                SRM_CHANNEL0_REQ__TX_REQ_CMD__GET(SRM_CHANNEL0_REQ__READ(die))
#  define SRM_CHANNEL0_REQ__TX_REQ_CMD__WRITE(die, fdata)           SRM_CHANNEL0_REQ__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_CHANNEL0_REQ__TX_REQ_CMD__RMW(die, fdata)           SRM_CHANNEL0_REQ__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_CHANNEL0_REQ__TX_REQ_CMD__MASK                       0xf
#  define SRM_CHANNEL0_REQ__TX_REQ_CMD__OFFSET                     8
#  define SRM_CHANNEL0_REQ__RX_REQ__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_CHANNEL0_REQ__RX_REQ__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_CHANNEL0_REQ__RX_REQ__READ(die)                SRM_CHANNEL0_REQ__RX_REQ__GET(SRM_CHANNEL0_REQ__READ(die))
#  define SRM_CHANNEL0_REQ__RX_REQ__WRITE(die, fdata)           SRM_CHANNEL0_REQ__RMW(die, (fdata)<<1, 0x2)
#  define SRM_CHANNEL0_REQ__RX_REQ__RMW(die, fdata)           SRM_CHANNEL0_REQ__RMW(die, (fdata)<<1, 0x2)
#  define SRM_CHANNEL0_REQ__RX_REQ__MASK                       0x1
#  define SRM_CHANNEL0_REQ__RX_REQ__OFFSET                     1
#  define SRM_CHANNEL0_REQ__TX_REQ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_CHANNEL0_REQ__TX_REQ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_CHANNEL0_REQ__TX_REQ__READ(die)                SRM_CHANNEL0_REQ__TX_REQ__GET(SRM_CHANNEL0_REQ__READ(die))
#  define SRM_CHANNEL0_REQ__TX_REQ__WRITE(die, fdata)           SRM_CHANNEL0_REQ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_CHANNEL0_REQ__TX_REQ__RMW(die, fdata)           SRM_CHANNEL0_REQ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_CHANNEL0_REQ__TX_REQ__MASK                       0x1
#  define SRM_CHANNEL0_REQ__TX_REQ__OFFSET                     0

#define SRM_CHANNEL0_ACK__ADDRESS                      0xe086
#define SRM_CHANNEL0_ACK__DEFAULT                      0x0
#define SRM_CHANNEL0_ACK__READ(die)                  srm_reg_read(die, SRM_CHANNEL0_ACK__ADDRESS)
#define SRM_CHANNEL0_ACK__WRITE(die, data)             srm_reg_write(die, SRM_CHANNEL0_ACK__ADDRESS, (data))
#define SRM_CHANNEL0_ACK__RMW(die, data, mask)         srm_reg_rmw(die, SRM_CHANNEL0_ACK__ADDRESS, (data), (mask))
#  define SRM_CHANNEL0_ACK__RX_ACK_CMD__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_CHANNEL0_ACK__RX_ACK_CMD__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_CHANNEL0_ACK__RX_ACK_CMD__READ(die)                SRM_CHANNEL0_ACK__RX_ACK_CMD__GET(SRM_CHANNEL0_ACK__READ(die))
#  define SRM_CHANNEL0_ACK__RX_ACK_CMD__WRITE(die, fdata)           SRM_CHANNEL0_ACK__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_CHANNEL0_ACK__RX_ACK_CMD__RMW(die, fdata)           SRM_CHANNEL0_ACK__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_CHANNEL0_ACK__RX_ACK_CMD__MASK                       0xf
#  define SRM_CHANNEL0_ACK__RX_ACK_CMD__OFFSET                     12
#  define SRM_CHANNEL0_ACK__TX_ACK_CMD__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SRM_CHANNEL0_ACK__TX_ACK_CMD__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SRM_CHANNEL0_ACK__TX_ACK_CMD__READ(die)                SRM_CHANNEL0_ACK__TX_ACK_CMD__GET(SRM_CHANNEL0_ACK__READ(die))
#  define SRM_CHANNEL0_ACK__TX_ACK_CMD__WRITE(die, fdata)           SRM_CHANNEL0_ACK__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_CHANNEL0_ACK__TX_ACK_CMD__RMW(die, fdata)           SRM_CHANNEL0_ACK__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_CHANNEL0_ACK__TX_ACK_CMD__MASK                       0xf
#  define SRM_CHANNEL0_ACK__TX_ACK_CMD__OFFSET                     8
#  define SRM_CHANNEL0_ACK__RX_ACK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_CHANNEL0_ACK__RX_ACK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_CHANNEL0_ACK__RX_ACK__READ(die)                SRM_CHANNEL0_ACK__RX_ACK__GET(SRM_CHANNEL0_ACK__READ(die))
#  define SRM_CHANNEL0_ACK__RX_ACK__WRITE(die, fdata)           SRM_CHANNEL0_ACK__RMW(die, (fdata)<<1, 0x2)
#  define SRM_CHANNEL0_ACK__RX_ACK__RMW(die, fdata)           SRM_CHANNEL0_ACK__RMW(die, (fdata)<<1, 0x2)
#  define SRM_CHANNEL0_ACK__RX_ACK__MASK                       0x1
#  define SRM_CHANNEL0_ACK__RX_ACK__OFFSET                     1
#  define SRM_CHANNEL0_ACK__TX_ACK__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_CHANNEL0_ACK__TX_ACK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_CHANNEL0_ACK__TX_ACK__READ(die)                SRM_CHANNEL0_ACK__TX_ACK__GET(SRM_CHANNEL0_ACK__READ(die))
#  define SRM_CHANNEL0_ACK__TX_ACK__WRITE(die, fdata)           SRM_CHANNEL0_ACK__RMW(die, (fdata)<<0, 0x1)
#  define SRM_CHANNEL0_ACK__TX_ACK__RMW(die, fdata)           SRM_CHANNEL0_ACK__RMW(die, (fdata)<<0, 0x1)
#  define SRM_CHANNEL0_ACK__TX_ACK__MASK                       0x1
#  define SRM_CHANNEL0_ACK__TX_ACK__OFFSET                     0

#define SRM_CHANNEL1_REQ__ADDRESS                      0xe087
#define SRM_CHANNEL1_REQ__DEFAULT                      0x0
#define SRM_CHANNEL1_REQ__READ(die)                  srm_reg_read(die, SRM_CHANNEL1_REQ__ADDRESS)
#define SRM_CHANNEL1_REQ__WRITE(die, data)             srm_reg_write(die, SRM_CHANNEL1_REQ__ADDRESS, (data))
#define SRM_CHANNEL1_REQ__RMW(die, data, mask)         srm_reg_rmw(die, SRM_CHANNEL1_REQ__ADDRESS, (data), (mask))
#  define SRM_CHANNEL1_REQ__RX_REQ_CMD__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_CHANNEL1_REQ__RX_REQ_CMD__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_CHANNEL1_REQ__RX_REQ_CMD__READ(die)                SRM_CHANNEL1_REQ__RX_REQ_CMD__GET(SRM_CHANNEL1_REQ__READ(die))
#  define SRM_CHANNEL1_REQ__RX_REQ_CMD__WRITE(die, fdata)           SRM_CHANNEL1_REQ__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_CHANNEL1_REQ__RX_REQ_CMD__RMW(die, fdata)           SRM_CHANNEL1_REQ__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_CHANNEL1_REQ__RX_REQ_CMD__MASK                       0xf
#  define SRM_CHANNEL1_REQ__RX_REQ_CMD__OFFSET                     12
#  define SRM_CHANNEL1_REQ__TX_REQ_CMD__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SRM_CHANNEL1_REQ__TX_REQ_CMD__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SRM_CHANNEL1_REQ__TX_REQ_CMD__READ(die)                SRM_CHANNEL1_REQ__TX_REQ_CMD__GET(SRM_CHANNEL1_REQ__READ(die))
#  define SRM_CHANNEL1_REQ__TX_REQ_CMD__WRITE(die, fdata)           SRM_CHANNEL1_REQ__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_CHANNEL1_REQ__TX_REQ_CMD__RMW(die, fdata)           SRM_CHANNEL1_REQ__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_CHANNEL1_REQ__TX_REQ_CMD__MASK                       0xf
#  define SRM_CHANNEL1_REQ__TX_REQ_CMD__OFFSET                     8
#  define SRM_CHANNEL1_REQ__RX_REQ__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_CHANNEL1_REQ__RX_REQ__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_CHANNEL1_REQ__RX_REQ__READ(die)                SRM_CHANNEL1_REQ__RX_REQ__GET(SRM_CHANNEL1_REQ__READ(die))
#  define SRM_CHANNEL1_REQ__RX_REQ__WRITE(die, fdata)           SRM_CHANNEL1_REQ__RMW(die, (fdata)<<1, 0x2)
#  define SRM_CHANNEL1_REQ__RX_REQ__RMW(die, fdata)           SRM_CHANNEL1_REQ__RMW(die, (fdata)<<1, 0x2)
#  define SRM_CHANNEL1_REQ__RX_REQ__MASK                       0x1
#  define SRM_CHANNEL1_REQ__RX_REQ__OFFSET                     1
#  define SRM_CHANNEL1_REQ__TX_REQ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_CHANNEL1_REQ__TX_REQ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_CHANNEL1_REQ__TX_REQ__READ(die)                SRM_CHANNEL1_REQ__TX_REQ__GET(SRM_CHANNEL1_REQ__READ(die))
#  define SRM_CHANNEL1_REQ__TX_REQ__WRITE(die, fdata)           SRM_CHANNEL1_REQ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_CHANNEL1_REQ__TX_REQ__RMW(die, fdata)           SRM_CHANNEL1_REQ__RMW(die, (fdata)<<0, 0x1)
#  define SRM_CHANNEL1_REQ__TX_REQ__MASK                       0x1
#  define SRM_CHANNEL1_REQ__TX_REQ__OFFSET                     0

#define SRM_CHANNEL1_ACK__ADDRESS                      0xe088
#define SRM_CHANNEL1_ACK__DEFAULT                      0x0
#define SRM_CHANNEL1_ACK__READ(die)                  srm_reg_read(die, SRM_CHANNEL1_ACK__ADDRESS)
#define SRM_CHANNEL1_ACK__WRITE(die, data)             srm_reg_write(die, SRM_CHANNEL1_ACK__ADDRESS, (data))
#define SRM_CHANNEL1_ACK__RMW(die, data, mask)         srm_reg_rmw(die, SRM_CHANNEL1_ACK__ADDRESS, (data), (mask))
#  define SRM_CHANNEL1_ACK__RX_ACK_CMD__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_CHANNEL1_ACK__RX_ACK_CMD__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_CHANNEL1_ACK__RX_ACK_CMD__READ(die)                SRM_CHANNEL1_ACK__RX_ACK_CMD__GET(SRM_CHANNEL1_ACK__READ(die))
#  define SRM_CHANNEL1_ACK__RX_ACK_CMD__WRITE(die, fdata)           SRM_CHANNEL1_ACK__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_CHANNEL1_ACK__RX_ACK_CMD__RMW(die, fdata)           SRM_CHANNEL1_ACK__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_CHANNEL1_ACK__RX_ACK_CMD__MASK                       0xf
#  define SRM_CHANNEL1_ACK__RX_ACK_CMD__OFFSET                     12
#  define SRM_CHANNEL1_ACK__TX_ACK_CMD__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SRM_CHANNEL1_ACK__TX_ACK_CMD__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SRM_CHANNEL1_ACK__TX_ACK_CMD__READ(die)                SRM_CHANNEL1_ACK__TX_ACK_CMD__GET(SRM_CHANNEL1_ACK__READ(die))
#  define SRM_CHANNEL1_ACK__TX_ACK_CMD__WRITE(die, fdata)           SRM_CHANNEL1_ACK__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_CHANNEL1_ACK__TX_ACK_CMD__RMW(die, fdata)           SRM_CHANNEL1_ACK__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_CHANNEL1_ACK__TX_ACK_CMD__MASK                       0xf
#  define SRM_CHANNEL1_ACK__TX_ACK_CMD__OFFSET                     8
#  define SRM_CHANNEL1_ACK__RX_ACK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_CHANNEL1_ACK__RX_ACK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_CHANNEL1_ACK__RX_ACK__READ(die)                SRM_CHANNEL1_ACK__RX_ACK__GET(SRM_CHANNEL1_ACK__READ(die))
#  define SRM_CHANNEL1_ACK__RX_ACK__WRITE(die, fdata)           SRM_CHANNEL1_ACK__RMW(die, (fdata)<<1, 0x2)
#  define SRM_CHANNEL1_ACK__RX_ACK__RMW(die, fdata)           SRM_CHANNEL1_ACK__RMW(die, (fdata)<<1, 0x2)
#  define SRM_CHANNEL1_ACK__RX_ACK__MASK                       0x1
#  define SRM_CHANNEL1_ACK__RX_ACK__OFFSET                     1
#  define SRM_CHANNEL1_ACK__TX_ACK__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_CHANNEL1_ACK__TX_ACK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_CHANNEL1_ACK__TX_ACK__READ(die)                SRM_CHANNEL1_ACK__TX_ACK__GET(SRM_CHANNEL1_ACK__READ(die))
#  define SRM_CHANNEL1_ACK__TX_ACK__WRITE(die, fdata)           SRM_CHANNEL1_ACK__RMW(die, (fdata)<<0, 0x1)
#  define SRM_CHANNEL1_ACK__TX_ACK__RMW(die, fdata)           SRM_CHANNEL1_ACK__RMW(die, (fdata)<<0, 0x1)
#  define SRM_CHANNEL1_ACK__TX_ACK__MASK                       0x1
#  define SRM_CHANNEL1_ACK__TX_ACK__OFFSET                     0

#define SRM_RX_RULES_0__ADDRESS                      0x295d
#define SRM_RX_RULES_0__DEFAULT                      0x0
#define SRM_RX_RULES_0__ICOUNT                        3
#define SRM_RX_RULES_0__ISPAN                         0x800
#define SRM_RX_RULES_0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_RULES_0__ADDRESS)
#define SRM_RX_RULES_0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_RULES_0__ADDRESS)
#define SRM_RX_RULES_0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_RULES_0__ADDRESS, (data))
#define SRM_RX_RULES_0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_RULES_0__ADDRESS, (data), (mask))
#  define SRM_RX_RULES_0__SUBRATE_RATIO__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SRM_RX_RULES_0__SUBRATE_RATIO__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SRM_RX_RULES_0__SUBRATE_RATIO__READ(die, channel)         SRM_RX_RULES_0__SUBRATE_RATIO__GET(SRM_RX_RULES_0__READ(die, channel))
#  define SRM_RX_RULES_0__SUBRATE_RATIO__WRITE(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SRM_RX_RULES_0__SUBRATE_RATIO__RMW(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SRM_RX_RULES_0__SUBRATE_RATIO__MASK                       0x7
#  define SRM_RX_RULES_0__SUBRATE_RATIO__OFFSET                     13
#  define SRM_RX_RULES_0__IEEE_DEMAP__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_RX_RULES_0__IEEE_DEMAP__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_RX_RULES_0__IEEE_DEMAP__READ(die, channel)         SRM_RX_RULES_0__IEEE_DEMAP__GET(SRM_RX_RULES_0__READ(die, channel))
#  define SRM_RX_RULES_0__IEEE_DEMAP__WRITE(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_RULES_0__IEEE_DEMAP__RMW(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SRM_RX_RULES_0__IEEE_DEMAP__MASK                       0x1
#  define SRM_RX_RULES_0__IEEE_DEMAP__OFFSET                     12
#  define SRM_RX_RULES_0__AFE_TRIM__SET(rdata, fdata)         (((rdata) & 0xf07f) | (((uint32_t)(fdata) << 7) & 0xf80))
#  define SRM_RX_RULES_0__AFE_TRIM__GET(rdata)                (((rdata) >> 7) & 0x1f)
#  define SRM_RX_RULES_0__AFE_TRIM__READ(die, channel)         SRM_RX_RULES_0__AFE_TRIM__GET(SRM_RX_RULES_0__READ(die, channel))
#  define SRM_RX_RULES_0__AFE_TRIM__WRITE(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<7, 0xf80)
#  define SRM_RX_RULES_0__AFE_TRIM__RMW(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<7, 0xf80)
#  define SRM_RX_RULES_0__AFE_TRIM__MASK                       0x1f
#  define SRM_RX_RULES_0__AFE_TRIM__OFFSET                     7
#  define SRM_RX_RULES_0__IPP_EN__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_RX_RULES_0__IPP_EN__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_RX_RULES_0__IPP_EN__READ(die, channel)         SRM_RX_RULES_0__IPP_EN__GET(SRM_RX_RULES_0__READ(die, channel))
#  define SRM_RX_RULES_0__IPP_EN__WRITE(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_RULES_0__IPP_EN__RMW(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SRM_RX_RULES_0__IPP_EN__MASK                       0x1
#  define SRM_RX_RULES_0__IPP_EN__OFFSET                     6
#  define SRM_RX_RULES_0__PRECODER_EN__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_RX_RULES_0__PRECODER_EN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_RX_RULES_0__PRECODER_EN__READ(die, channel)         SRM_RX_RULES_0__PRECODER_EN__GET(SRM_RX_RULES_0__READ(die, channel))
#  define SRM_RX_RULES_0__PRECODER_EN__WRITE(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_RULES_0__PRECODER_EN__RMW(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SRM_RX_RULES_0__PRECODER_EN__MASK                       0x1
#  define SRM_RX_RULES_0__PRECODER_EN__OFFSET                     5
#  define SRM_RX_RULES_0__PAM4_MODE__SET(rdata, fdata)         (((rdata) & 0xffe1) | (((uint32_t)(fdata) << 1) & 0x1e))
#  define SRM_RX_RULES_0__PAM4_MODE__GET(rdata)                (((rdata) >> 1) & 0xf)
#  define SRM_RX_RULES_0__PAM4_MODE__READ(die, channel)         SRM_RX_RULES_0__PAM4_MODE__GET(SRM_RX_RULES_0__READ(die, channel))
#  define SRM_RX_RULES_0__PAM4_MODE__WRITE(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<1, 0x1e)
#  define SRM_RX_RULES_0__PAM4_MODE__RMW(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<1, 0x1e)
#  define SRM_RX_RULES_0__PAM4_MODE__MASK                       0xf
#  define SRM_RX_RULES_0__PAM4_MODE__OFFSET                     1
#  define SRM_RX_RULES_0__SIGNALLING__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_RULES_0__SIGNALLING__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_RULES_0__SIGNALLING__READ(die, channel)         SRM_RX_RULES_0__SIGNALLING__GET(SRM_RX_RULES_0__READ(die, channel))
#  define SRM_RX_RULES_0__SIGNALLING__WRITE(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_RULES_0__SIGNALLING__RMW(die, channel, fdata) SRM_RX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_RULES_0__SIGNALLING__MASK                       0x1
#  define SRM_RX_RULES_0__SIGNALLING__OFFSET                     0

#define SRM_RX_RULES_1__ADDRESS                      0x295e
#define SRM_RX_RULES_1__DEFAULT                      0x0
#define SRM_RX_RULES_1__ICOUNT                        3
#define SRM_RX_RULES_1__ISPAN                         0x800
#define SRM_RX_RULES_1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_RULES_1__ADDRESS)
#define SRM_RX_RULES_1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_RULES_1__ADDRESS)
#define SRM_RX_RULES_1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_RULES_1__ADDRESS, (data))
#define SRM_RX_RULES_1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_RULES_1__ADDRESS, (data), (mask))
#  define SRM_RX_RULES_1__ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_RX_RULES_1__ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_RX_RULES_1__ENABLE__READ(die, channel)         SRM_RX_RULES_1__ENABLE__GET(SRM_RX_RULES_1__READ(die, channel))
#  define SRM_RX_RULES_1__ENABLE__WRITE(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_RULES_1__ENABLE__RMW(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_RULES_1__ENABLE__MASK                       0x1
#  define SRM_RX_RULES_1__ENABLE__OFFSET                     15
#  define SRM_RX_RULES_1__CTLE__SET(rdata, fdata)         (((rdata) & 0x80ff) | (((uint32_t)(fdata) << 8) & 0x7f00))
#  define SRM_RX_RULES_1__CTLE__GET(rdata)                (((rdata) >> 8) & 0x7f)
#  define SRM_RX_RULES_1__CTLE__READ(die, channel)         SRM_RX_RULES_1__CTLE__GET(SRM_RX_RULES_1__READ(die, channel))
#  define SRM_RX_RULES_1__CTLE__WRITE(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SRM_RX_RULES_1__CTLE__RMW(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SRM_RX_RULES_1__CTLE__MASK                       0x7f
#  define SRM_RX_RULES_1__CTLE__OFFSET                     8
#  define SRM_RX_RULES_1__PGA_ATT_EN__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_RX_RULES_1__PGA_ATT_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_RX_RULES_1__PGA_ATT_EN__READ(die, channel)         SRM_RX_RULES_1__PGA_ATT_EN__GET(SRM_RX_RULES_1__READ(die, channel))
#  define SRM_RX_RULES_1__PGA_ATT_EN__WRITE(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_RULES_1__PGA_ATT_EN__RMW(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_RX_RULES_1__PGA_ATT_EN__MASK                       0x1
#  define SRM_RX_RULES_1__PGA_ATT_EN__OFFSET                     4
#  define SRM_RX_RULES_1__AC_COUPLING_BYPASS__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_RX_RULES_1__AC_COUPLING_BYPASS__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_RX_RULES_1__AC_COUPLING_BYPASS__READ(die, channel)         SRM_RX_RULES_1__AC_COUPLING_BYPASS__GET(SRM_RX_RULES_1__READ(die, channel))
#  define SRM_RX_RULES_1__AC_COUPLING_BYPASS__WRITE(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_RULES_1__AC_COUPLING_BYPASS__RMW(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_RX_RULES_1__AC_COUPLING_BYPASS__MASK                       0x1
#  define SRM_RX_RULES_1__AC_COUPLING_BYPASS__OFFSET                     3
#  define SRM_RX_RULES_1__GRAY_MAPPING__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_RULES_1__GRAY_MAPPING__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_RULES_1__GRAY_MAPPING__READ(die, channel)         SRM_RX_RULES_1__GRAY_MAPPING__GET(SRM_RX_RULES_1__READ(die, channel))
#  define SRM_RX_RULES_1__GRAY_MAPPING__WRITE(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_RULES_1__GRAY_MAPPING__RMW(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_RULES_1__GRAY_MAPPING__MASK                       0x1
#  define SRM_RX_RULES_1__GRAY_MAPPING__OFFSET                     2
#  define SRM_RX_RULES_1__INVERT_CHAN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_RULES_1__INVERT_CHAN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_RULES_1__INVERT_CHAN__READ(die, channel)         SRM_RX_RULES_1__INVERT_CHAN__GET(SRM_RX_RULES_1__READ(die, channel))
#  define SRM_RX_RULES_1__INVERT_CHAN__WRITE(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_RULES_1__INVERT_CHAN__RMW(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_RULES_1__INVERT_CHAN__MASK                       0x1
#  define SRM_RX_RULES_1__INVERT_CHAN__OFFSET                     1
#  define SRM_RX_RULES_1__VGA_TRACKING__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_RULES_1__VGA_TRACKING__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_RULES_1__VGA_TRACKING__READ(die, channel)         SRM_RX_RULES_1__VGA_TRACKING__GET(SRM_RX_RULES_1__READ(die, channel))
#  define SRM_RX_RULES_1__VGA_TRACKING__WRITE(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_RULES_1__VGA_TRACKING__RMW(die, channel, fdata) SRM_RX_RULES_1__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_RULES_1__VGA_TRACKING__MASK                       0x1
#  define SRM_RX_RULES_1__VGA_TRACKING__OFFSET                     0

#define SRM_RX_RULES_2__ADDRESS                      0x2966
#define SRM_RX_RULES_2__DEFAULT                      0x0
#define SRM_RX_RULES_2__ICOUNT                        3
#define SRM_RX_RULES_2__ISPAN                         0x800
#define SRM_RX_RULES_2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_RULES_2__ADDRESS)
#define SRM_RX_RULES_2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_RULES_2__ADDRESS)
#define SRM_RX_RULES_2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_RULES_2__ADDRESS, (data))
#define SRM_RX_RULES_2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_RULES_2__ADDRESS, (data), (mask))
#  define SRM_RX_RULES_2__RX_PWRUP_MODE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SRM_RX_RULES_2__RX_PWRUP_MODE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SRM_RX_RULES_2__RX_PWRUP_MODE__READ(die, channel)         SRM_RX_RULES_2__RX_PWRUP_MODE__GET(SRM_RX_RULES_2__READ(die, channel))
#  define SRM_RX_RULES_2__RX_PWRUP_MODE__WRITE(die, channel, fdata) SRM_RX_RULES_2__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SRM_RX_RULES_2__RX_PWRUP_MODE__RMW(die, channel, fdata) SRM_RX_RULES_2__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SRM_RX_RULES_2__RX_PWRUP_MODE__MASK                       0x7
#  define SRM_RX_RULES_2__RX_PWRUP_MODE__OFFSET                     8
#  define SRM_RX_RULES_2__PREAMP_BIAS_CTRL__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_RX_RULES_2__PREAMP_BIAS_CTRL__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_RX_RULES_2__PREAMP_BIAS_CTRL__READ(die, channel)         SRM_RX_RULES_2__PREAMP_BIAS_CTRL__GET(SRM_RX_RULES_2__READ(die, channel))
#  define SRM_RX_RULES_2__PREAMP_BIAS_CTRL__WRITE(die, channel, fdata) SRM_RX_RULES_2__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SRM_RX_RULES_2__PREAMP_BIAS_CTRL__RMW(die, channel, fdata) SRM_RX_RULES_2__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SRM_RX_RULES_2__PREAMP_BIAS_CTRL__MASK                       0x7
#  define SRM_RX_RULES_2__PREAMP_BIAS_CTRL__OFFSET                     5
#  define SRM_RX_RULES_2__SRC__SET(rdata, fdata)         (((rdata) & 0xffe7) | (((uint32_t)(fdata) << 3) & 0x18))
#  define SRM_RX_RULES_2__SRC__GET(rdata)                (((rdata) >> 3) & 0x3)
#  define SRM_RX_RULES_2__SRC__READ(die, channel)         SRM_RX_RULES_2__SRC__GET(SRM_RX_RULES_2__READ(die, channel))
#  define SRM_RX_RULES_2__SRC__WRITE(die, channel, fdata) SRM_RX_RULES_2__RMW(die, (channel), (fdata)<<3, 0x18)
#  define SRM_RX_RULES_2__SRC__RMW(die, channel, fdata) SRM_RX_RULES_2__RMW(die, (channel), (fdata)<<3, 0x18)
#  define SRM_RX_RULES_2__SRC__MASK                       0x3
#  define SRM_RX_RULES_2__SRC__OFFSET                     3
#  define SRM_RX_RULES_2__PRBS_EN__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_RX_RULES_2__PRBS_EN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_RX_RULES_2__PRBS_EN__READ(die, channel)         SRM_RX_RULES_2__PRBS_EN__GET(SRM_RX_RULES_2__READ(die, channel))
#  define SRM_RX_RULES_2__PRBS_EN__WRITE(die, channel, fdata) SRM_RX_RULES_2__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_RULES_2__PRBS_EN__RMW(die, channel, fdata) SRM_RX_RULES_2__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_RX_RULES_2__PRBS_EN__MASK                       0x1
#  define SRM_RX_RULES_2__PRBS_EN__OFFSET                     2
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FW__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FW__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FW__READ(die, channel)         SRM_RX_RULES_2__BYPASS_REFTRIM_FW__GET(SRM_RX_RULES_2__READ(die, channel))
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FW__WRITE(die, channel, fdata) SRM_RX_RULES_2__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FW__RMW(die, channel, fdata) SRM_RX_RULES_2__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FW__MASK                       0x1
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FW__OFFSET                     1
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FINETUNE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FINETUNE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FINETUNE__READ(die, channel)         SRM_RX_RULES_2__BYPASS_REFTRIM_FINETUNE__GET(SRM_RX_RULES_2__READ(die, channel))
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FINETUNE__WRITE(die, channel, fdata) SRM_RX_RULES_2__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FINETUNE__RMW(die, channel, fdata) SRM_RX_RULES_2__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FINETUNE__MASK                       0x1
#  define SRM_RX_RULES_2__BYPASS_REFTRIM_FINETUNE__OFFSET                     0

#define SRM_RX_FW_STATUS__ADDRESS                      0x2961
#define SRM_RX_FW_STATUS__DEFAULT                      0x0
#define SRM_RX_FW_STATUS__ICOUNT                        3
#define SRM_RX_FW_STATUS__ISPAN                         0x800
#define SRM_RX_FW_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_FW_STATUS__ADDRESS)
#define SRM_RX_FW_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_FW_STATUS__ADDRESS)
#define SRM_RX_FW_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_FW_STATUS__ADDRESS, (data))
#define SRM_RX_FW_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_FW_STATUS__ADDRESS, (data), (mask))
#  define SRM_RX_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_RX_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_RX_FW_STATUS__LOCKED__READ(die, channel)         SRM_RX_FW_STATUS__LOCKED__GET(SRM_RX_FW_STATUS__READ(die, channel))
#  define SRM_RX_FW_STATUS__LOCKED__WRITE(die, channel, fdata) SRM_RX_FW_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_FW_STATUS__LOCKED__RMW(die, channel, fdata) SRM_RX_FW_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_RX_FW_STATUS__LOCKED__MASK                       0x1
#  define SRM_RX_FW_STATUS__LOCKED__OFFSET                     15
#  define SRM_RX_FW_STATUS__RX_INIT__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_RX_FW_STATUS__RX_INIT__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_RX_FW_STATUS__RX_INIT__READ(die, channel)         SRM_RX_FW_STATUS__RX_INIT__GET(SRM_RX_FW_STATUS__READ(die, channel))
#  define SRM_RX_FW_STATUS__RX_INIT__WRITE(die, channel, fdata) SRM_RX_FW_STATUS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_FW_STATUS__RX_INIT__RMW(die, channel, fdata) SRM_RX_FW_STATUS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_RX_FW_STATUS__RX_INIT__MASK                       0x1
#  define SRM_RX_FW_STATUS__RX_INIT__OFFSET                     14
#  define SRM_RX_FW_STATUS__PMD_STATE__SET(rdata, fdata)         (((rdata) & 0xc0ff) | (((uint32_t)(fdata) << 8) & 0x3f00))
#  define SRM_RX_FW_STATUS__PMD_STATE__GET(rdata)                (((rdata) >> 8) & 0x3f)
#  define SRM_RX_FW_STATUS__PMD_STATE__READ(die, channel)         SRM_RX_FW_STATUS__PMD_STATE__GET(SRM_RX_FW_STATUS__READ(die, channel))
#  define SRM_RX_FW_STATUS__PMD_STATE__WRITE(die, channel, fdata) SRM_RX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x3f00)
#  define SRM_RX_FW_STATUS__PMD_STATE__RMW(die, channel, fdata) SRM_RX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x3f00)
#  define SRM_RX_FW_STATUS__PMD_STATE__MASK                       0x3f
#  define SRM_RX_FW_STATUS__PMD_STATE__OFFSET                     8
#  define SRM_RX_FW_STATUS__ERROR__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_RX_FW_STATUS__ERROR__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_RX_FW_STATUS__ERROR__READ(die, channel)         SRM_RX_FW_STATUS__ERROR__GET(SRM_RX_FW_STATUS__READ(die, channel))
#  define SRM_RX_FW_STATUS__ERROR__WRITE(die, channel, fdata) SRM_RX_FW_STATUS__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_FW_STATUS__ERROR__RMW(die, channel, fdata) SRM_RX_FW_STATUS__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SRM_RX_FW_STATUS__ERROR__MASK                       0xf
#  define SRM_RX_FW_STATUS__ERROR__OFFSET                     4
#  define SRM_RX_FW_STATUS__RESET_COUNT__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_RX_FW_STATUS__RESET_COUNT__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_RX_FW_STATUS__RESET_COUNT__READ(die, channel)         SRM_RX_FW_STATUS__RESET_COUNT__GET(SRM_RX_FW_STATUS__READ(die, channel))
#  define SRM_RX_FW_STATUS__RESET_COUNT__WRITE(die, channel, fdata) SRM_RX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_FW_STATUS__RESET_COUNT__RMW(die, channel, fdata) SRM_RX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_RX_FW_STATUS__RESET_COUNT__MASK                       0xf
#  define SRM_RX_FW_STATUS__RESET_COUNT__OFFSET                     0

#define SRM_RX_QC_RULES__ADDRESS                      0x2962
#define SRM_RX_QC_RULES__DEFAULT                      0x0
#define SRM_RX_QC_RULES__ICOUNT                        3
#define SRM_RX_QC_RULES__ISPAN                         0x800
#define SRM_RX_QC_RULES__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_QC_RULES__ADDRESS)
#define SRM_RX_QC_RULES__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_QC_RULES__ADDRESS)
#define SRM_RX_QC_RULES__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_QC_RULES__ADDRESS, (data))
#define SRM_RX_QC_RULES__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_QC_RULES__ADDRESS, (data), (mask))
#  define SRM_RX_QC_RULES__DIS__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SRM_RX_QC_RULES__DIS__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SRM_RX_QC_RULES__DIS__READ(die, channel)         SRM_RX_QC_RULES__DIS__GET(SRM_RX_QC_RULES__READ(die, channel))
#  define SRM_RX_QC_RULES__DIS__WRITE(die, channel, fdata) SRM_RX_QC_RULES__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_QC_RULES__DIS__RMW(die, channel, fdata) SRM_RX_QC_RULES__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SRM_RX_QC_RULES__DIS__MASK                       0x1
#  define SRM_RX_QC_RULES__DIS__OFFSET                     9
#  define SRM_RX_QC_RULES__DATA_MODE_DIS__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_RX_QC_RULES__DATA_MODE_DIS__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_RX_QC_RULES__DATA_MODE_DIS__READ(die, channel)         SRM_RX_QC_RULES__DATA_MODE_DIS__GET(SRM_RX_QC_RULES__READ(die, channel))
#  define SRM_RX_QC_RULES__DATA_MODE_DIS__WRITE(die, channel, fdata) SRM_RX_QC_RULES__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_QC_RULES__DATA_MODE_DIS__RMW(die, channel, fdata) SRM_RX_QC_RULES__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_RX_QC_RULES__DATA_MODE_DIS__MASK                       0x1
#  define SRM_RX_QC_RULES__DATA_MODE_DIS__OFFSET                     8
#  define SRM_RX_QC_RULES__MSE_MIN_THRESHOLD__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_RX_QC_RULES__MSE_MIN_THRESHOLD__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_RX_QC_RULES__MSE_MIN_THRESHOLD__READ(die, channel)         SRM_RX_QC_RULES__MSE_MIN_THRESHOLD__GET(SRM_RX_QC_RULES__READ(die, channel))
#  define SRM_RX_QC_RULES__MSE_MIN_THRESHOLD__WRITE(die, channel, fdata) SRM_RX_QC_RULES__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_RX_QC_RULES__MSE_MIN_THRESHOLD__RMW(die, channel, fdata) SRM_RX_QC_RULES__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_RX_QC_RULES__MSE_MIN_THRESHOLD__MASK                       0xff
#  define SRM_RX_QC_RULES__MSE_MIN_THRESHOLD__OFFSET                     0

#define SRM_RX_SNR_VALUE__ADDRESS                      0x2963
#define SRM_RX_SNR_VALUE__DEFAULT                      0x0
#define SRM_RX_SNR_VALUE__ICOUNT                        3
#define SRM_RX_SNR_VALUE__ISPAN                         0x800
#define SRM_RX_SNR_VALUE__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_SNR_VALUE__ADDRESS)
#define SRM_RX_SNR_VALUE__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_SNR_VALUE__ADDRESS)
#define SRM_RX_SNR_VALUE__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_SNR_VALUE__ADDRESS, (data))
#define SRM_RX_SNR_VALUE__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_SNR_VALUE__ADDRESS, (data), (mask))
#  define SRM_RX_SNR_VALUE__SNR__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_SNR_VALUE__SNR__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_SNR_VALUE__SNR__READ(die, channel)         SRM_RX_SNR_VALUE__SNR__GET(SRM_RX_SNR_VALUE__READ(die, channel))
#  define SRM_RX_SNR_VALUE__SNR__WRITE(die, channel, fdata) SRM_RX_SNR_VALUE__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_SNR_VALUE__SNR__RMW(die, channel, fdata) SRM_RX_SNR_VALUE__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_SNR_VALUE__SNR__MASK                       0xffff
#  define SRM_RX_SNR_VALUE__SNR__OFFSET                     0

#define SRM_LINE_RX_TEMP_SCRATCH7__ADDRESS                      0x2964
#define SRM_LINE_RX_TEMP_SCRATCH7__DEFAULT                      0x0
#define SRM_LINE_RX_TEMP_SCRATCH7__ICOUNT                        3
#define SRM_LINE_RX_TEMP_SCRATCH7__ISPAN                         0x800
#define SRM_LINE_RX_TEMP_SCRATCH7__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LINE_RX_TEMP_SCRATCH7__ADDRESS)
#define SRM_LINE_RX_TEMP_SCRATCH7__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LINE_RX_TEMP_SCRATCH7__ADDRESS)
#define SRM_LINE_RX_TEMP_SCRATCH7__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LINE_RX_TEMP_SCRATCH7__ADDRESS, (data))
#define SRM_LINE_RX_TEMP_SCRATCH7__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LINE_RX_TEMP_SCRATCH7__ADDRESS, (data), (mask))
#  define SRM_LINE_RX_TEMP_SCRATCH7__RX_TEMP__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_LINE_RX_TEMP_SCRATCH7__RX_TEMP__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_LINE_RX_TEMP_SCRATCH7__RX_TEMP__READ(die, channel)         SRM_LINE_RX_TEMP_SCRATCH7__RX_TEMP__GET(SRM_LINE_RX_TEMP_SCRATCH7__READ(die, channel))
#  define SRM_LINE_RX_TEMP_SCRATCH7__RX_TEMP__WRITE(die, channel, fdata) SRM_LINE_RX_TEMP_SCRATCH7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LINE_RX_TEMP_SCRATCH7__RX_TEMP__RMW(die, channel, fdata) SRM_LINE_RX_TEMP_SCRATCH7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_LINE_RX_TEMP_SCRATCH7__RX_TEMP__MASK                       0xffff
#  define SRM_LINE_RX_TEMP_SCRATCH7__RX_TEMP__OFFSET                     0

#define SRM_RX_XFER_0__ADDRESS                      0x2969
#define SRM_RX_XFER_0__DEFAULT                      0x0
#define SRM_RX_XFER_0__ICOUNT                        3
#define SRM_RX_XFER_0__ISPAN                         0x800
#define SRM_RX_XFER_0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_XFER_0__ADDRESS)
#define SRM_RX_XFER_0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_XFER_0__ADDRESS)
#define SRM_RX_XFER_0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_XFER_0__ADDRESS, (data))
#define SRM_RX_XFER_0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_XFER_0__ADDRESS, (data), (mask))
#  define SRM_RX_XFER_0__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_XFER_0__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_XFER_0__DATA__READ(die, channel)         SRM_RX_XFER_0__DATA__GET(SRM_RX_XFER_0__READ(die, channel))
#  define SRM_RX_XFER_0__DATA__WRITE(die, channel, fdata) SRM_RX_XFER_0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_XFER_0__DATA__RMW(die, channel, fdata) SRM_RX_XFER_0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_XFER_0__DATA__MASK                       0xffff
#  define SRM_RX_XFER_0__DATA__OFFSET                     0

#define SRM_RX_XFER_1__ADDRESS                      0x296a
#define SRM_RX_XFER_1__DEFAULT                      0x0
#define SRM_RX_XFER_1__ICOUNT                        3
#define SRM_RX_XFER_1__ISPAN                         0x800
#define SRM_RX_XFER_1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_XFER_1__ADDRESS)
#define SRM_RX_XFER_1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_XFER_1__ADDRESS)
#define SRM_RX_XFER_1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_XFER_1__ADDRESS, (data))
#define SRM_RX_XFER_1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_XFER_1__ADDRESS, (data), (mask))
#  define SRM_RX_XFER_1__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_XFER_1__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_XFER_1__DATA__READ(die, channel)         SRM_RX_XFER_1__DATA__GET(SRM_RX_XFER_1__READ(die, channel))
#  define SRM_RX_XFER_1__DATA__WRITE(die, channel, fdata) SRM_RX_XFER_1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_XFER_1__DATA__RMW(die, channel, fdata) SRM_RX_XFER_1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_XFER_1__DATA__MASK                       0xffff
#  define SRM_RX_XFER_1__DATA__OFFSET                     0

#define SRM_RX_XFER_2__ADDRESS                      0x296b
#define SRM_RX_XFER_2__DEFAULT                      0x0
#define SRM_RX_XFER_2__ICOUNT                        3
#define SRM_RX_XFER_2__ISPAN                         0x800
#define SRM_RX_XFER_2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_XFER_2__ADDRESS)
#define SRM_RX_XFER_2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_XFER_2__ADDRESS)
#define SRM_RX_XFER_2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_XFER_2__ADDRESS, (data))
#define SRM_RX_XFER_2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_XFER_2__ADDRESS, (data), (mask))
#  define SRM_RX_XFER_2__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_XFER_2__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_XFER_2__DATA__READ(die, channel)         SRM_RX_XFER_2__DATA__GET(SRM_RX_XFER_2__READ(die, channel))
#  define SRM_RX_XFER_2__DATA__WRITE(die, channel, fdata) SRM_RX_XFER_2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_XFER_2__DATA__RMW(die, channel, fdata) SRM_RX_XFER_2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_XFER_2__DATA__MASK                       0xffff
#  define SRM_RX_XFER_2__DATA__OFFSET                     0

#define SRM_RX_XFER_3__ADDRESS                      0x296c
#define SRM_RX_XFER_3__DEFAULT                      0x0
#define SRM_RX_XFER_3__ICOUNT                        3
#define SRM_RX_XFER_3__ISPAN                         0x800
#define SRM_RX_XFER_3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_RX_XFER_3__ADDRESS)
#define SRM_RX_XFER_3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_RX_XFER_3__ADDRESS)
#define SRM_RX_XFER_3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_RX_XFER_3__ADDRESS, (data))
#define SRM_RX_XFER_3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_RX_XFER_3__ADDRESS, (data), (mask))
#  define SRM_RX_XFER_3__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_RX_XFER_3__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_RX_XFER_3__DATA__READ(die, channel)         SRM_RX_XFER_3__DATA__GET(SRM_RX_XFER_3__READ(die, channel))
#  define SRM_RX_XFER_3__DATA__WRITE(die, channel, fdata) SRM_RX_XFER_3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_XFER_3__DATA__RMW(die, channel, fdata) SRM_RX_XFER_3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_RX_XFER_3__DATA__MASK                       0xffff
#  define SRM_RX_XFER_3__DATA__OFFSET                     0

#define SRM_TX_RULES_0__ADDRESS                      0x4822
#define SRM_TX_RULES_0__DEFAULT                      0x0
#define SRM_TX_RULES_0__ICOUNT                        3
#define SRM_TX_RULES_0__ISPAN                         0x800
#define SRM_TX_RULES_0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_RULES_0__ADDRESS)
#define SRM_TX_RULES_0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_RULES_0__ADDRESS)
#define SRM_TX_RULES_0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_RULES_0__ADDRESS, (data))
#define SRM_TX_RULES_0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_RULES_0__ADDRESS, (data), (mask))
#  define SRM_TX_RULES_0__PRECODER_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_RULES_0__PRECODER_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_RULES_0__PRECODER_EN__READ(die, channel)         SRM_TX_RULES_0__PRECODER_EN__GET(SRM_TX_RULES_0__READ(die, channel))
#  define SRM_TX_RULES_0__PRECODER_EN__WRITE(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_RULES_0__PRECODER_EN__RMW(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_RULES_0__PRECODER_EN__MASK                       0x1
#  define SRM_TX_RULES_0__PRECODER_EN__OFFSET                     15
#  define SRM_TX_RULES_0__SUBRATE_RATIO__SET(rdata, fdata)         (((rdata) & 0x8fff) | (((uint32_t)(fdata) << 12) & 0x7000))
#  define SRM_TX_RULES_0__SUBRATE_RATIO__GET(rdata)                (((rdata) >> 12) & 0x7)
#  define SRM_TX_RULES_0__SUBRATE_RATIO__READ(die, channel)         SRM_TX_RULES_0__SUBRATE_RATIO__GET(SRM_TX_RULES_0__READ(die, channel))
#  define SRM_TX_RULES_0__SUBRATE_RATIO__WRITE(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x7000)
#  define SRM_TX_RULES_0__SUBRATE_RATIO__RMW(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x7000)
#  define SRM_TX_RULES_0__SUBRATE_RATIO__MASK                       0x7
#  define SRM_TX_RULES_0__SUBRATE_RATIO__OFFSET                     12
#  define SRM_TX_RULES_0__IEEE_DEMAP__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_TX_RULES_0__IEEE_DEMAP__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_TX_RULES_0__IEEE_DEMAP__READ(die, channel)         SRM_TX_RULES_0__IEEE_DEMAP__GET(SRM_TX_RULES_0__READ(die, channel))
#  define SRM_TX_RULES_0__IEEE_DEMAP__WRITE(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_TX_RULES_0__IEEE_DEMAP__RMW(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SRM_TX_RULES_0__IEEE_DEMAP__MASK                       0x1
#  define SRM_TX_RULES_0__IEEE_DEMAP__OFFSET                     11
#  define SRM_TX_RULES_0__SQUELCH_LOCK__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_TX_RULES_0__SQUELCH_LOCK__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_TX_RULES_0__SQUELCH_LOCK__READ(die, channel)         SRM_TX_RULES_0__SQUELCH_LOCK__GET(SRM_TX_RULES_0__READ(die, channel))
#  define SRM_TX_RULES_0__SQUELCH_LOCK__WRITE(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_TX_RULES_0__SQUELCH_LOCK__RMW(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SRM_TX_RULES_0__SQUELCH_LOCK__MASK                       0x1
#  define SRM_TX_RULES_0__SQUELCH_LOCK__OFFSET                     10
#  define SRM_TX_RULES_0__ENABLE__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SRM_TX_RULES_0__ENABLE__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SRM_TX_RULES_0__ENABLE__READ(die, channel)         SRM_TX_RULES_0__ENABLE__GET(SRM_TX_RULES_0__READ(die, channel))
#  define SRM_TX_RULES_0__ENABLE__WRITE(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_RULES_0__ENABLE__RMW(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SRM_TX_RULES_0__ENABLE__MASK                       0x1
#  define SRM_TX_RULES_0__ENABLE__OFFSET                     8
#  define SRM_TX_RULES_0__SRC__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SRM_TX_RULES_0__SRC__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SRM_TX_RULES_0__SRC__READ(die, channel)         SRM_TX_RULES_0__SRC__GET(SRM_TX_RULES_0__READ(die, channel))
#  define SRM_TX_RULES_0__SRC__WRITE(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SRM_TX_RULES_0__SRC__RMW(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SRM_TX_RULES_0__SRC__MASK                       0x7
#  define SRM_TX_RULES_0__SRC__OFFSET                     5
#  define SRM_TX_RULES_0__SIGNALLING__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_TX_RULES_0__SIGNALLING__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_TX_RULES_0__SIGNALLING__READ(die, channel)         SRM_TX_RULES_0__SIGNALLING__GET(SRM_TX_RULES_0__READ(die, channel))
#  define SRM_TX_RULES_0__SIGNALLING__WRITE(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_RULES_0__SIGNALLING__RMW(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SRM_TX_RULES_0__SIGNALLING__MASK                       0x1
#  define SRM_TX_RULES_0__SIGNALLING__OFFSET                     4
#  define SRM_TX_RULES_0__INVERT_CHAN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_TX_RULES_0__INVERT_CHAN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_TX_RULES_0__INVERT_CHAN__READ(die, channel)         SRM_TX_RULES_0__INVERT_CHAN__GET(SRM_TX_RULES_0__READ(die, channel))
#  define SRM_TX_RULES_0__INVERT_CHAN__WRITE(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_RULES_0__INVERT_CHAN__RMW(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_TX_RULES_0__INVERT_CHAN__MASK                       0x1
#  define SRM_TX_RULES_0__INVERT_CHAN__OFFSET                     3
#  define SRM_TX_RULES_0__GRAY_MAPPING__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_TX_RULES_0__GRAY_MAPPING__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_TX_RULES_0__GRAY_MAPPING__READ(die, channel)         SRM_TX_RULES_0__GRAY_MAPPING__GET(SRM_TX_RULES_0__READ(die, channel))
#  define SRM_TX_RULES_0__GRAY_MAPPING__WRITE(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_RULES_0__GRAY_MAPPING__RMW(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_TX_RULES_0__GRAY_MAPPING__MASK                       0x1
#  define SRM_TX_RULES_0__GRAY_MAPPING__OFFSET                     2
#  define SRM_TX_RULES_0__LUT_MODE__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_TX_RULES_0__LUT_MODE__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_TX_RULES_0__LUT_MODE__READ(die, channel)         SRM_TX_RULES_0__LUT_MODE__GET(SRM_TX_RULES_0__READ(die, channel))
#  define SRM_TX_RULES_0__LUT_MODE__WRITE(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SRM_TX_RULES_0__LUT_MODE__RMW(die, channel, fdata) SRM_TX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SRM_TX_RULES_0__LUT_MODE__MASK                       0x3
#  define SRM_TX_RULES_0__LUT_MODE__OFFSET                     0

#define SRM_TX_XFER_0__ADDRESS                      0x4823
#define SRM_TX_XFER_0__DEFAULT                      0x0
#define SRM_TX_XFER_0__ICOUNT                        3
#define SRM_TX_XFER_0__ISPAN                         0x800
#define SRM_TX_XFER_0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_XFER_0__ADDRESS)
#define SRM_TX_XFER_0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_XFER_0__ADDRESS)
#define SRM_TX_XFER_0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_XFER_0__ADDRESS, (data))
#define SRM_TX_XFER_0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_XFER_0__ADDRESS, (data), (mask))
#  define SRM_TX_XFER_0__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_XFER_0__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_XFER_0__DATA__READ(die, channel)         SRM_TX_XFER_0__DATA__GET(SRM_TX_XFER_0__READ(die, channel))
#  define SRM_TX_XFER_0__DATA__WRITE(die, channel, fdata) SRM_TX_XFER_0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_XFER_0__DATA__RMW(die, channel, fdata) SRM_TX_XFER_0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_XFER_0__DATA__MASK                       0xffff
#  define SRM_TX_XFER_0__DATA__OFFSET                     0

#define SRM_TX_XFER_1__ADDRESS                      0x4824
#define SRM_TX_XFER_1__DEFAULT                      0x0
#define SRM_TX_XFER_1__ICOUNT                        3
#define SRM_TX_XFER_1__ISPAN                         0x800
#define SRM_TX_XFER_1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_XFER_1__ADDRESS)
#define SRM_TX_XFER_1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_XFER_1__ADDRESS)
#define SRM_TX_XFER_1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_XFER_1__ADDRESS, (data))
#define SRM_TX_XFER_1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_XFER_1__ADDRESS, (data), (mask))
#  define SRM_TX_XFER_1__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_XFER_1__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_XFER_1__DATA__READ(die, channel)         SRM_TX_XFER_1__DATA__GET(SRM_TX_XFER_1__READ(die, channel))
#  define SRM_TX_XFER_1__DATA__WRITE(die, channel, fdata) SRM_TX_XFER_1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_XFER_1__DATA__RMW(die, channel, fdata) SRM_TX_XFER_1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_XFER_1__DATA__MASK                       0xffff
#  define SRM_TX_XFER_1__DATA__OFFSET                     0

#define SRM_TX_FIR_TAP_0__ADDRESS                      0x4825
#define SRM_TX_FIR_TAP_0__DEFAULT                      0x0
#define SRM_TX_FIR_TAP_0__ICOUNT                        3
#define SRM_TX_FIR_TAP_0__ISPAN                         0x800
#define SRM_TX_FIR_TAP_0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_FIR_TAP_0__ADDRESS)
#define SRM_TX_FIR_TAP_0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_FIR_TAP_0__ADDRESS)
#define SRM_TX_FIR_TAP_0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_FIR_TAP_0__ADDRESS, (data))
#define SRM_TX_FIR_TAP_0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_FIR_TAP_0__ADDRESS, (data), (mask))
#  define SRM_TX_FIR_TAP_0__FIR_TAP_0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_FIR_TAP_0__FIR_TAP_0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_FIR_TAP_0__FIR_TAP_0__READ(die, channel)         SRM_TX_FIR_TAP_0__FIR_TAP_0__GET(SRM_TX_FIR_TAP_0__READ(die, channel))
#  define SRM_TX_FIR_TAP_0__FIR_TAP_0__WRITE(die, channel, fdata) SRM_TX_FIR_TAP_0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_0__FIR_TAP_0__RMW(die, channel, fdata) SRM_TX_FIR_TAP_0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_0__FIR_TAP_0__MASK                       0xffff
#  define SRM_TX_FIR_TAP_0__FIR_TAP_0__OFFSET                     0

#define SRM_TX_FIR_TAP_1__ADDRESS                      0x4826
#define SRM_TX_FIR_TAP_1__DEFAULT                      0x0
#define SRM_TX_FIR_TAP_1__ICOUNT                        3
#define SRM_TX_FIR_TAP_1__ISPAN                         0x800
#define SRM_TX_FIR_TAP_1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_FIR_TAP_1__ADDRESS)
#define SRM_TX_FIR_TAP_1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_FIR_TAP_1__ADDRESS)
#define SRM_TX_FIR_TAP_1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_FIR_TAP_1__ADDRESS, (data))
#define SRM_TX_FIR_TAP_1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_FIR_TAP_1__ADDRESS, (data), (mask))
#  define SRM_TX_FIR_TAP_1__FIR_TAP_1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_FIR_TAP_1__FIR_TAP_1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_FIR_TAP_1__FIR_TAP_1__READ(die, channel)         SRM_TX_FIR_TAP_1__FIR_TAP_1__GET(SRM_TX_FIR_TAP_1__READ(die, channel))
#  define SRM_TX_FIR_TAP_1__FIR_TAP_1__WRITE(die, channel, fdata) SRM_TX_FIR_TAP_1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_1__FIR_TAP_1__RMW(die, channel, fdata) SRM_TX_FIR_TAP_1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_1__FIR_TAP_1__MASK                       0xffff
#  define SRM_TX_FIR_TAP_1__FIR_TAP_1__OFFSET                     0

#define SRM_TX_FIR_TAP_2__ADDRESS                      0x4827
#define SRM_TX_FIR_TAP_2__DEFAULT                      0x0
#define SRM_TX_FIR_TAP_2__ICOUNT                        3
#define SRM_TX_FIR_TAP_2__ISPAN                         0x800
#define SRM_TX_FIR_TAP_2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_FIR_TAP_2__ADDRESS)
#define SRM_TX_FIR_TAP_2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_FIR_TAP_2__ADDRESS)
#define SRM_TX_FIR_TAP_2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_FIR_TAP_2__ADDRESS, (data))
#define SRM_TX_FIR_TAP_2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_FIR_TAP_2__ADDRESS, (data), (mask))
#  define SRM_TX_FIR_TAP_2__FIR_TAP_2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_FIR_TAP_2__FIR_TAP_2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_FIR_TAP_2__FIR_TAP_2__READ(die, channel)         SRM_TX_FIR_TAP_2__FIR_TAP_2__GET(SRM_TX_FIR_TAP_2__READ(die, channel))
#  define SRM_TX_FIR_TAP_2__FIR_TAP_2__WRITE(die, channel, fdata) SRM_TX_FIR_TAP_2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_2__FIR_TAP_2__RMW(die, channel, fdata) SRM_TX_FIR_TAP_2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_2__FIR_TAP_2__MASK                       0xffff
#  define SRM_TX_FIR_TAP_2__FIR_TAP_2__OFFSET                     0

#define SRM_TX_FIR_TAP_3__ADDRESS                      0x4828
#define SRM_TX_FIR_TAP_3__DEFAULT                      0x0
#define SRM_TX_FIR_TAP_3__ICOUNT                        3
#define SRM_TX_FIR_TAP_3__ISPAN                         0x800
#define SRM_TX_FIR_TAP_3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_FIR_TAP_3__ADDRESS)
#define SRM_TX_FIR_TAP_3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_FIR_TAP_3__ADDRESS)
#define SRM_TX_FIR_TAP_3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_FIR_TAP_3__ADDRESS, (data))
#define SRM_TX_FIR_TAP_3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_FIR_TAP_3__ADDRESS, (data), (mask))
#  define SRM_TX_FIR_TAP_3__FIR_TAP_3__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_FIR_TAP_3__FIR_TAP_3__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_FIR_TAP_3__FIR_TAP_3__READ(die, channel)         SRM_TX_FIR_TAP_3__FIR_TAP_3__GET(SRM_TX_FIR_TAP_3__READ(die, channel))
#  define SRM_TX_FIR_TAP_3__FIR_TAP_3__WRITE(die, channel, fdata) SRM_TX_FIR_TAP_3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_3__FIR_TAP_3__RMW(die, channel, fdata) SRM_TX_FIR_TAP_3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_3__FIR_TAP_3__MASK                       0xffff
#  define SRM_TX_FIR_TAP_3__FIR_TAP_3__OFFSET                     0

#define SRM_TX_FIR_TAP_4__ADDRESS                      0x4829
#define SRM_TX_FIR_TAP_4__DEFAULT                      0x0
#define SRM_TX_FIR_TAP_4__ICOUNT                        3
#define SRM_TX_FIR_TAP_4__ISPAN                         0x800
#define SRM_TX_FIR_TAP_4__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_FIR_TAP_4__ADDRESS)
#define SRM_TX_FIR_TAP_4__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_FIR_TAP_4__ADDRESS)
#define SRM_TX_FIR_TAP_4__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_FIR_TAP_4__ADDRESS, (data))
#define SRM_TX_FIR_TAP_4__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_FIR_TAP_4__ADDRESS, (data), (mask))
#  define SRM_TX_FIR_TAP_4__FIR_TAP_4__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_FIR_TAP_4__FIR_TAP_4__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_FIR_TAP_4__FIR_TAP_4__READ(die, channel)         SRM_TX_FIR_TAP_4__FIR_TAP_4__GET(SRM_TX_FIR_TAP_4__READ(die, channel))
#  define SRM_TX_FIR_TAP_4__FIR_TAP_4__WRITE(die, channel, fdata) SRM_TX_FIR_TAP_4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_4__FIR_TAP_4__RMW(die, channel, fdata) SRM_TX_FIR_TAP_4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_4__FIR_TAP_4__MASK                       0xffff
#  define SRM_TX_FIR_TAP_4__FIR_TAP_4__OFFSET                     0

#define SRM_TX_FIR_TAP_5__ADDRESS                      0x482a
#define SRM_TX_FIR_TAP_5__DEFAULT                      0x0
#define SRM_TX_FIR_TAP_5__ICOUNT                        3
#define SRM_TX_FIR_TAP_5__ISPAN                         0x800
#define SRM_TX_FIR_TAP_5__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_FIR_TAP_5__ADDRESS)
#define SRM_TX_FIR_TAP_5__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_FIR_TAP_5__ADDRESS)
#define SRM_TX_FIR_TAP_5__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_FIR_TAP_5__ADDRESS, (data))
#define SRM_TX_FIR_TAP_5__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_FIR_TAP_5__ADDRESS, (data), (mask))
#  define SRM_TX_FIR_TAP_5__FIR_TAP_5__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_FIR_TAP_5__FIR_TAP_5__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_FIR_TAP_5__FIR_TAP_5__READ(die, channel)         SRM_TX_FIR_TAP_5__FIR_TAP_5__GET(SRM_TX_FIR_TAP_5__READ(die, channel))
#  define SRM_TX_FIR_TAP_5__FIR_TAP_5__WRITE(die, channel, fdata) SRM_TX_FIR_TAP_5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_5__FIR_TAP_5__RMW(die, channel, fdata) SRM_TX_FIR_TAP_5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_5__FIR_TAP_5__MASK                       0xffff
#  define SRM_TX_FIR_TAP_5__FIR_TAP_5__OFFSET                     0

#define SRM_TX_FIR_TAP_6__ADDRESS                      0x482b
#define SRM_TX_FIR_TAP_6__DEFAULT                      0x0
#define SRM_TX_FIR_TAP_6__ICOUNT                        3
#define SRM_TX_FIR_TAP_6__ISPAN                         0x800
#define SRM_TX_FIR_TAP_6__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_FIR_TAP_6__ADDRESS)
#define SRM_TX_FIR_TAP_6__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_FIR_TAP_6__ADDRESS)
#define SRM_TX_FIR_TAP_6__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_FIR_TAP_6__ADDRESS, (data))
#define SRM_TX_FIR_TAP_6__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_FIR_TAP_6__ADDRESS, (data), (mask))
#  define SRM_TX_FIR_TAP_6__FIR_TAP_6__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_FIR_TAP_6__FIR_TAP_6__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_FIR_TAP_6__FIR_TAP_6__READ(die, channel)         SRM_TX_FIR_TAP_6__FIR_TAP_6__GET(SRM_TX_FIR_TAP_6__READ(die, channel))
#  define SRM_TX_FIR_TAP_6__FIR_TAP_6__WRITE(die, channel, fdata) SRM_TX_FIR_TAP_6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_6__FIR_TAP_6__RMW(die, channel, fdata) SRM_TX_FIR_TAP_6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_FIR_TAP_6__FIR_TAP_6__MASK                       0xffff
#  define SRM_TX_FIR_TAP_6__FIR_TAP_6__OFFSET                     0

#define SRM_TX_INNER_EYE1__ADDRESS                      0x482c
#define SRM_TX_INNER_EYE1__DEFAULT                      0x0
#define SRM_TX_INNER_EYE1__ICOUNT                        3
#define SRM_TX_INNER_EYE1__ISPAN                         0x800
#define SRM_TX_INNER_EYE1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_INNER_EYE1__ADDRESS)
#define SRM_TX_INNER_EYE1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_INNER_EYE1__ADDRESS)
#define SRM_TX_INNER_EYE1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_INNER_EYE1__ADDRESS, (data))
#define SRM_TX_INNER_EYE1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_INNER_EYE1__ADDRESS, (data), (mask))
#  define SRM_TX_INNER_EYE1__INNER_EYE1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_INNER_EYE1__INNER_EYE1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_INNER_EYE1__INNER_EYE1__READ(die, channel)         SRM_TX_INNER_EYE1__INNER_EYE1__GET(SRM_TX_INNER_EYE1__READ(die, channel))
#  define SRM_TX_INNER_EYE1__INNER_EYE1__WRITE(die, channel, fdata) SRM_TX_INNER_EYE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_INNER_EYE1__INNER_EYE1__RMW(die, channel, fdata) SRM_TX_INNER_EYE1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_INNER_EYE1__INNER_EYE1__MASK                       0xffff
#  define SRM_TX_INNER_EYE1__INNER_EYE1__OFFSET                     0

#define SRM_TX_INNER_EYE2__ADDRESS                      0x482d
#define SRM_TX_INNER_EYE2__DEFAULT                      0x0
#define SRM_TX_INNER_EYE2__ICOUNT                        3
#define SRM_TX_INNER_EYE2__ISPAN                         0x800
#define SRM_TX_INNER_EYE2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_INNER_EYE2__ADDRESS)
#define SRM_TX_INNER_EYE2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_INNER_EYE2__ADDRESS)
#define SRM_TX_INNER_EYE2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_INNER_EYE2__ADDRESS, (data))
#define SRM_TX_INNER_EYE2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_INNER_EYE2__ADDRESS, (data), (mask))
#  define SRM_TX_INNER_EYE2__INNER_EYE2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_INNER_EYE2__INNER_EYE2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_INNER_EYE2__INNER_EYE2__READ(die, channel)         SRM_TX_INNER_EYE2__INNER_EYE2__GET(SRM_TX_INNER_EYE2__READ(die, channel))
#  define SRM_TX_INNER_EYE2__INNER_EYE2__WRITE(die, channel, fdata) SRM_TX_INNER_EYE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_INNER_EYE2__INNER_EYE2__RMW(die, channel, fdata) SRM_TX_INNER_EYE2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_INNER_EYE2__INNER_EYE2__MASK                       0xffff
#  define SRM_TX_INNER_EYE2__INNER_EYE2__OFFSET                     0

#define SRM_TX_FW_STATUS__ADDRESS                      0x482e
#define SRM_TX_FW_STATUS__DEFAULT                      0x0
#define SRM_TX_FW_STATUS__ICOUNT                        3
#define SRM_TX_FW_STATUS__ISPAN                         0x800
#define SRM_TX_FW_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_FW_STATUS__ADDRESS)
#define SRM_TX_FW_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_FW_STATUS__ADDRESS)
#define SRM_TX_FW_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_FW_STATUS__ADDRESS, (data))
#define SRM_TX_FW_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_FW_STATUS__ADDRESS, (data), (mask))
#  define SRM_TX_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TX_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TX_FW_STATUS__LOCKED__READ(die, channel)         SRM_TX_FW_STATUS__LOCKED__GET(SRM_TX_FW_STATUS__READ(die, channel))
#  define SRM_TX_FW_STATUS__LOCKED__WRITE(die, channel, fdata) SRM_TX_FW_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_FW_STATUS__LOCKED__RMW(die, channel, fdata) SRM_TX_FW_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SRM_TX_FW_STATUS__LOCKED__MASK                       0x1
#  define SRM_TX_FW_STATUS__LOCKED__OFFSET                     15
#  define SRM_TX_FW_STATUS__TX_INIT__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_TX_FW_STATUS__TX_INIT__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_TX_FW_STATUS__TX_INIT__READ(die, channel)         SRM_TX_FW_STATUS__TX_INIT__GET(SRM_TX_FW_STATUS__READ(die, channel))
#  define SRM_TX_FW_STATUS__TX_INIT__WRITE(die, channel, fdata) SRM_TX_FW_STATUS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_TX_FW_STATUS__TX_INIT__RMW(die, channel, fdata) SRM_TX_FW_STATUS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SRM_TX_FW_STATUS__TX_INIT__MASK                       0x1
#  define SRM_TX_FW_STATUS__TX_INIT__OFFSET                     14
#  define SRM_TX_FW_STATUS__PMD_STATE__SET(rdata, fdata)         (((rdata) & 0xc0ff) | (((uint32_t)(fdata) << 8) & 0x3f00))
#  define SRM_TX_FW_STATUS__PMD_STATE__GET(rdata)                (((rdata) >> 8) & 0x3f)
#  define SRM_TX_FW_STATUS__PMD_STATE__READ(die, channel)         SRM_TX_FW_STATUS__PMD_STATE__GET(SRM_TX_FW_STATUS__READ(die, channel))
#  define SRM_TX_FW_STATUS__PMD_STATE__WRITE(die, channel, fdata) SRM_TX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x3f00)
#  define SRM_TX_FW_STATUS__PMD_STATE__RMW(die, channel, fdata) SRM_TX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x3f00)
#  define SRM_TX_FW_STATUS__PMD_STATE__MASK                       0x3f
#  define SRM_TX_FW_STATUS__PMD_STATE__OFFSET                     8
#  define SRM_TX_FW_STATUS__RESET_COUNT__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_TX_FW_STATUS__RESET_COUNT__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_TX_FW_STATUS__RESET_COUNT__READ(die, channel)         SRM_TX_FW_STATUS__RESET_COUNT__GET(SRM_TX_FW_STATUS__READ(die, channel))
#  define SRM_TX_FW_STATUS__RESET_COUNT__WRITE(die, channel, fdata) SRM_TX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_TX_FW_STATUS__RESET_COUNT__RMW(die, channel, fdata) SRM_TX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_TX_FW_STATUS__RESET_COUNT__MASK                       0xff
#  define SRM_TX_FW_STATUS__RESET_COUNT__OFFSET                     0

#define SRM_TX_FIFO_COUNT__ADDRESS                      0x482f
#define SRM_TX_FIFO_COUNT__DEFAULT                      0x0
#define SRM_TX_FIFO_COUNT__ICOUNT                        3
#define SRM_TX_FIFO_COUNT__ISPAN                         0x800
#define SRM_TX_FIFO_COUNT__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_FIFO_COUNT__ADDRESS)
#define SRM_TX_FIFO_COUNT__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_FIFO_COUNT__ADDRESS)
#define SRM_TX_FIFO_COUNT__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_FIFO_COUNT__ADDRESS, (data))
#define SRM_TX_FIFO_COUNT__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_FIFO_COUNT__ADDRESS, (data), (mask))
#  define SRM_TX_FIFO_COUNT__FIFOB_COUNT__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_TX_FIFO_COUNT__FIFOB_COUNT__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_TX_FIFO_COUNT__FIFOB_COUNT__READ(die, channel)         SRM_TX_FIFO_COUNT__FIFOB_COUNT__GET(SRM_TX_FIFO_COUNT__READ(die, channel))
#  define SRM_TX_FIFO_COUNT__FIFOB_COUNT__WRITE(die, channel, fdata) SRM_TX_FIFO_COUNT__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_TX_FIFO_COUNT__FIFOB_COUNT__RMW(die, channel, fdata) SRM_TX_FIFO_COUNT__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SRM_TX_FIFO_COUNT__FIFOB_COUNT__MASK                       0xff
#  define SRM_TX_FIFO_COUNT__FIFOB_COUNT__OFFSET                     8
#  define SRM_TX_FIFO_COUNT__FIFOA_COUNT__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_TX_FIFO_COUNT__FIFOA_COUNT__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_TX_FIFO_COUNT__FIFOA_COUNT__READ(die, channel)         SRM_TX_FIFO_COUNT__FIFOA_COUNT__GET(SRM_TX_FIFO_COUNT__READ(die, channel))
#  define SRM_TX_FIFO_COUNT__FIFOA_COUNT__WRITE(die, channel, fdata) SRM_TX_FIFO_COUNT__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_TX_FIFO_COUNT__FIFOA_COUNT__RMW(die, channel, fdata) SRM_TX_FIFO_COUNT__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_TX_FIFO_COUNT__FIFOA_COUNT__MASK                       0xff
#  define SRM_TX_FIFO_COUNT__FIFOA_COUNT__OFFSET                     0

#define SRM_TX_XFER_2__ADDRESS                      0x4830
#define SRM_TX_XFER_2__DEFAULT                      0x0
#define SRM_TX_XFER_2__ICOUNT                        3
#define SRM_TX_XFER_2__ISPAN                         0x800
#define SRM_TX_XFER_2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_XFER_2__ADDRESS)
#define SRM_TX_XFER_2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_XFER_2__ADDRESS)
#define SRM_TX_XFER_2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_XFER_2__ADDRESS, (data))
#define SRM_TX_XFER_2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_XFER_2__ADDRESS, (data), (mask))
#  define SRM_TX_XFER_2__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_XFER_2__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_XFER_2__DATA__READ(die, channel)         SRM_TX_XFER_2__DATA__GET(SRM_TX_XFER_2__READ(die, channel))
#  define SRM_TX_XFER_2__DATA__WRITE(die, channel, fdata) SRM_TX_XFER_2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_XFER_2__DATA__RMW(die, channel, fdata) SRM_TX_XFER_2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_XFER_2__DATA__MASK                       0xffff
#  define SRM_TX_XFER_2__DATA__OFFSET                     0

#define SRM_TX_XFER_3__ADDRESS                      0x4831
#define SRM_TX_XFER_3__DEFAULT                      0x0
#define SRM_TX_XFER_3__ICOUNT                        3
#define SRM_TX_XFER_3__ISPAN                         0x800
#define SRM_TX_XFER_3__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_TX_XFER_3__ADDRESS)
#define SRM_TX_XFER_3__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_TX_XFER_3__ADDRESS)
#define SRM_TX_XFER_3__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_TX_XFER_3__ADDRESS, (data))
#define SRM_TX_XFER_3__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_TX_XFER_3__ADDRESS, (data), (mask))
#  define SRM_TX_XFER_3__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TX_XFER_3__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TX_XFER_3__DATA__READ(die, channel)         SRM_TX_XFER_3__DATA__GET(SRM_TX_XFER_3__READ(die, channel))
#  define SRM_TX_XFER_3__DATA__WRITE(die, channel, fdata) SRM_TX_XFER_3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_XFER_3__DATA__RMW(die, channel, fdata) SRM_TX_XFER_3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_TX_XFER_3__DATA__MASK                       0xffff
#  define SRM_TX_XFER_3__DATA__OFFSET                     0

#define SRM_MCU_SP1_UID__ADDRESS                      0xe050
#define SRM_MCU_SP1_UID__DEFAULT                      0x0
#define SRM_MCU_SP1_UID__READ(die)                  srm_reg_read(die, SRM_MCU_SP1_UID__ADDRESS)
#define SRM_MCU_SP1_UID__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SP1_UID__ADDRESS, (data))
#define SRM_MCU_SP1_UID__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SP1_UID__ADDRESS, (data), (mask))
#  define SRM_MCU_SP1_UID__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SP1_UID__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SP1_UID__VALUE__READ(die)                SRM_MCU_SP1_UID__VALUE__GET(SRM_MCU_SP1_UID__READ(die))
#  define SRM_MCU_SP1_UID__VALUE__WRITE(die, fdata)           SRM_MCU_SP1_UID__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SP1_UID__VALUE__RMW(die, fdata)           SRM_MCU_SP1_UID__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SP1_UID__VALUE__MASK                       0xffff
#  define SRM_MCU_SP1_UID__VALUE__OFFSET                     0

#define SRM_MCU_SP2_LOOP_COUNT__ADDRESS                      0xe051
#define SRM_MCU_SP2_LOOP_COUNT__DEFAULT                      0x0
#define SRM_MCU_SP2_LOOP_COUNT__READ(die)                  srm_reg_read(die, SRM_MCU_SP2_LOOP_COUNT__ADDRESS)
#define SRM_MCU_SP2_LOOP_COUNT__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SP2_LOOP_COUNT__ADDRESS, (data))
#define SRM_MCU_SP2_LOOP_COUNT__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SP2_LOOP_COUNT__ADDRESS, (data), (mask))
#  define SRM_MCU_SP2_LOOP_COUNT__COUNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SP2_LOOP_COUNT__COUNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SP2_LOOP_COUNT__COUNT__READ(die)                SRM_MCU_SP2_LOOP_COUNT__COUNT__GET(SRM_MCU_SP2_LOOP_COUNT__READ(die))
#  define SRM_MCU_SP2_LOOP_COUNT__COUNT__WRITE(die, fdata)           SRM_MCU_SP2_LOOP_COUNT__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SP2_LOOP_COUNT__COUNT__RMW(die, fdata)           SRM_MCU_SP2_LOOP_COUNT__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SP2_LOOP_COUNT__COUNT__MASK                       0xffff
#  define SRM_MCU_SP2_LOOP_COUNT__COUNT__OFFSET                     0

#define SRM_MCU_SP3_FW_INFO__ADDRESS                      0xe052
#define SRM_MCU_SP3_FW_INFO__DEFAULT                      0x0
#define SRM_MCU_SP3_FW_INFO__READ(die)                  srm_reg_read(die, SRM_MCU_SP3_FW_INFO__ADDRESS)
#define SRM_MCU_SP3_FW_INFO__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SP3_FW_INFO__ADDRESS, (data))
#define SRM_MCU_SP3_FW_INFO__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SP3_FW_INFO__ADDRESS, (data), (mask))
#  define SRM_MCU_SP3_FW_INFO__ADDRESS__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SP3_FW_INFO__ADDRESS__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SP3_FW_INFO__ADDRESS__READ(die)                SRM_MCU_SP3_FW_INFO__ADDRESS__GET(SRM_MCU_SP3_FW_INFO__READ(die))
#  define SRM_MCU_SP3_FW_INFO__ADDRESS__WRITE(die, fdata)           SRM_MCU_SP3_FW_INFO__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SP3_FW_INFO__ADDRESS__RMW(die, fdata)           SRM_MCU_SP3_FW_INFO__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SP3_FW_INFO__ADDRESS__MASK                       0xffff
#  define SRM_MCU_SP3_FW_INFO__ADDRESS__OFFSET                     0

#define SRM_MCU_SP4_FW_CFG0__ADDRESS                      0xe053
#define SRM_MCU_SP4_FW_CFG0__DEFAULT                      0x0
#define SRM_MCU_SP4_FW_CFG0__READ(die)                  srm_reg_read(die, SRM_MCU_SP4_FW_CFG0__ADDRESS)
#define SRM_MCU_SP4_FW_CFG0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SP4_FW_CFG0__ADDRESS, (data))
#define SRM_MCU_SP4_FW_CFG0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SP4_FW_CFG0__ADDRESS, (data), (mask))
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__READ(die)                SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__GET(SRM_MCU_SP4_FW_CFG0__READ(die))
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__WRITE(die, fdata)           SRM_MCU_SP4_FW_CFG0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__RMW(die, fdata)           SRM_MCU_SP4_FW_CFG0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__MASK                       0x1
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__OFFSET                     7
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__READ(die)                SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__GET(SRM_MCU_SP4_FW_CFG0__READ(die))
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__WRITE(die, fdata)           SRM_MCU_SP4_FW_CFG0__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__RMW(die, fdata)           SRM_MCU_SP4_FW_CFG0__RMW(die, (fdata)<<0, 0x7f)
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__MASK                       0x7f
#  define SRM_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__OFFSET                     0

#define SRM_MCU_SP5_TOP_STATE__ADDRESS                      0xe054
#define SRM_MCU_SP5_TOP_STATE__DEFAULT                      0x0
#define SRM_MCU_SP5_TOP_STATE__READ(die)                  srm_reg_read(die, SRM_MCU_SP5_TOP_STATE__ADDRESS)
#define SRM_MCU_SP5_TOP_STATE__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SP5_TOP_STATE__ADDRESS, (data))
#define SRM_MCU_SP5_TOP_STATE__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SP5_TOP_STATE__ADDRESS, (data), (mask))
#  define SRM_MCU_SP5_TOP_STATE__PLL_INIT__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_SP5_TOP_STATE__PLL_INIT__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_SP5_TOP_STATE__PLL_INIT__READ(die)                SRM_MCU_SP5_TOP_STATE__PLL_INIT__GET(SRM_MCU_SP5_TOP_STATE__READ(die))
#  define SRM_MCU_SP5_TOP_STATE__PLL_INIT__WRITE(die, fdata)           SRM_MCU_SP5_TOP_STATE__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_SP5_TOP_STATE__PLL_INIT__RMW(die, fdata)           SRM_MCU_SP5_TOP_STATE__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_SP5_TOP_STATE__PLL_INIT__MASK                       0x1
#  define SRM_MCU_SP5_TOP_STATE__PLL_INIT__OFFSET                     1
#  define SRM_MCU_SP5_TOP_STATE__CHIP_INIT__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_SP5_TOP_STATE__CHIP_INIT__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_SP5_TOP_STATE__CHIP_INIT__READ(die)                SRM_MCU_SP5_TOP_STATE__CHIP_INIT__GET(SRM_MCU_SP5_TOP_STATE__READ(die))
#  define SRM_MCU_SP5_TOP_STATE__CHIP_INIT__WRITE(die, fdata)           SRM_MCU_SP5_TOP_STATE__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_SP5_TOP_STATE__CHIP_INIT__RMW(die, fdata)           SRM_MCU_SP5_TOP_STATE__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_SP5_TOP_STATE__CHIP_INIT__MASK                       0x1
#  define SRM_MCU_SP5_TOP_STATE__CHIP_INIT__OFFSET                     0

#define SRM_MCU_SP6_FW_STATUS__ADDRESS                      0xe055
#define SRM_MCU_SP6_FW_STATUS__DEFAULT                      0x0
#define SRM_MCU_SP6_FW_STATUS__READ(die)                  srm_reg_read(die, SRM_MCU_SP6_FW_STATUS__ADDRESS)
#define SRM_MCU_SP6_FW_STATUS__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SP6_FW_STATUS__ADDRESS, (data))
#define SRM_MCU_SP6_FW_STATUS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SP6_FW_STATUS__ADDRESS, (data), (mask))
#  define SRM_MCU_SP6_FW_STATUS__RULES_VERSION__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_MCU_SP6_FW_STATUS__RULES_VERSION__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_MCU_SP6_FW_STATUS__RULES_VERSION__READ(die)                SRM_MCU_SP6_FW_STATUS__RULES_VERSION__GET(SRM_MCU_SP6_FW_STATUS__READ(die))
#  define SRM_MCU_SP6_FW_STATUS__RULES_VERSION__WRITE(die, fdata)           SRM_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_MCU_SP6_FW_STATUS__RULES_VERSION__RMW(die, fdata)           SRM_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_MCU_SP6_FW_STATUS__RULES_VERSION__MASK                       0xf
#  define SRM_MCU_SP6_FW_STATUS__RULES_VERSION__OFFSET                     12
#  define SRM_MCU_SP6_FW_STATUS__PACKAGE_TYPE__SET(rdata, fdata)         (((rdata) & 0xfc0f) | (((uint32_t)(fdata) << 4) & 0x3f0))
#  define SRM_MCU_SP6_FW_STATUS__PACKAGE_TYPE__GET(rdata)                (((rdata) >> 4) & 0x3f)
#  define SRM_MCU_SP6_FW_STATUS__PACKAGE_TYPE__READ(die)                SRM_MCU_SP6_FW_STATUS__PACKAGE_TYPE__GET(SRM_MCU_SP6_FW_STATUS__READ(die))
#  define SRM_MCU_SP6_FW_STATUS__PACKAGE_TYPE__WRITE(die, fdata)           SRM_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<4, 0x3f0)
#  define SRM_MCU_SP6_FW_STATUS__PACKAGE_TYPE__RMW(die, fdata)           SRM_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<4, 0x3f0)
#  define SRM_MCU_SP6_FW_STATUS__PACKAGE_TYPE__MASK                       0x3f
#  define SRM_MCU_SP6_FW_STATUS__PACKAGE_TYPE__OFFSET                     4
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__READ(die)                SRM_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__GET(SRM_MCU_SP6_FW_STATUS__READ(die))
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__WRITE(die, fdata)           SRM_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__RMW(die, fdata)           SRM_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__MASK                       0x1
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__OFFSET                     3
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT__READ(die)                SRM_MCU_SP6_FW_STATUS__INTERRUPT__GET(SRM_MCU_SP6_FW_STATUS__READ(die))
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT__WRITE(die, fdata)           SRM_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT__RMW(die, fdata)           SRM_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT__MASK                       0x1
#  define SRM_MCU_SP6_FW_STATUS__INTERRUPT__OFFSET                     2
#  define SRM_MCU_SP6_FW_STATUS__EXCEPTION__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_SP6_FW_STATUS__EXCEPTION__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_SP6_FW_STATUS__EXCEPTION__READ(die)                SRM_MCU_SP6_FW_STATUS__EXCEPTION__GET(SRM_MCU_SP6_FW_STATUS__READ(die))
#  define SRM_MCU_SP6_FW_STATUS__EXCEPTION__WRITE(die, fdata)           SRM_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_SP6_FW_STATUS__EXCEPTION__RMW(die, fdata)           SRM_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_SP6_FW_STATUS__EXCEPTION__MASK                       0x1
#  define SRM_MCU_SP6_FW_STATUS__EXCEPTION__OFFSET                     1
#  define SRM_MCU_SP6_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_SP6_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_SP6_FW_STATUS__LOCKED__READ(die)                SRM_MCU_SP6_FW_STATUS__LOCKED__GET(SRM_MCU_SP6_FW_STATUS__READ(die))
#  define SRM_MCU_SP6_FW_STATUS__LOCKED__WRITE(die, fdata)           SRM_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_SP6_FW_STATUS__LOCKED__RMW(die, fdata)           SRM_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_SP6_FW_STATUS__LOCKED__MASK                       0x1
#  define SRM_MCU_SP6_FW_STATUS__LOCKED__OFFSET                     0

#define SRM_MCU_SP7_WHIRL_CTRL__ADDRESS                      0xe056
#define SRM_MCU_SP7_WHIRL_CTRL__DEFAULT                      0x0
#define SRM_MCU_SP7_WHIRL_CTRL__READ(die)                  srm_reg_read(die, SRM_MCU_SP7_WHIRL_CTRL__ADDRESS)
#define SRM_MCU_SP7_WHIRL_CTRL__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SP7_WHIRL_CTRL__ADDRESS, (data))
#define SRM_MCU_SP7_WHIRL_CTRL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SP7_WHIRL_CTRL__ADDRESS, (data), (mask))
#  define SRM_MCU_SP7_WHIRL_CTRL__BUFFERS_TO_READ__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SRM_MCU_SP7_WHIRL_CTRL__BUFFERS_TO_READ__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SRM_MCU_SP7_WHIRL_CTRL__BUFFERS_TO_READ__READ(die)                SRM_MCU_SP7_WHIRL_CTRL__BUFFERS_TO_READ__GET(SRM_MCU_SP7_WHIRL_CTRL__READ(die))
#  define SRM_MCU_SP7_WHIRL_CTRL__BUFFERS_TO_READ__WRITE(die, fdata)           SRM_MCU_SP7_WHIRL_CTRL__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_MCU_SP7_WHIRL_CTRL__BUFFERS_TO_READ__RMW(die, fdata)           SRM_MCU_SP7_WHIRL_CTRL__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_MCU_SP7_WHIRL_CTRL__BUFFERS_TO_READ__MASK                       0xf
#  define SRM_MCU_SP7_WHIRL_CTRL__BUFFERS_TO_READ__OFFSET                     8
#  define SRM_MCU_SP7_WHIRL_CTRL__ACK__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_MCU_SP7_WHIRL_CTRL__ACK__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_MCU_SP7_WHIRL_CTRL__ACK__READ(die)                SRM_MCU_SP7_WHIRL_CTRL__ACK__GET(SRM_MCU_SP7_WHIRL_CTRL__READ(die))
#  define SRM_MCU_SP7_WHIRL_CTRL__ACK__WRITE(die, fdata)           SRM_MCU_SP7_WHIRL_CTRL__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_MCU_SP7_WHIRL_CTRL__ACK__RMW(die, fdata)           SRM_MCU_SP7_WHIRL_CTRL__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_MCU_SP7_WHIRL_CTRL__ACK__MASK                       0xf
#  define SRM_MCU_SP7_WHIRL_CTRL__ACK__OFFSET                     4
#  define SRM_MCU_SP7_WHIRL_CTRL__REQ__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_MCU_SP7_WHIRL_CTRL__REQ__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_MCU_SP7_WHIRL_CTRL__REQ__READ(die)                SRM_MCU_SP7_WHIRL_CTRL__REQ__GET(SRM_MCU_SP7_WHIRL_CTRL__READ(die))
#  define SRM_MCU_SP7_WHIRL_CTRL__REQ__WRITE(die, fdata)           SRM_MCU_SP7_WHIRL_CTRL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MCU_SP7_WHIRL_CTRL__REQ__RMW(die, fdata)           SRM_MCU_SP7_WHIRL_CTRL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MCU_SP7_WHIRL_CTRL__REQ__MASK                       0xf
#  define SRM_MCU_SP7_WHIRL_CTRL__REQ__OFFSET                     0

#define SRM_TMON_STATUS__ADDRESS                      0xe057
#define SRM_TMON_STATUS__DEFAULT                      0x0
#define SRM_TMON_STATUS__READ(die)                  srm_reg_read(die, SRM_TMON_STATUS__ADDRESS)
#define SRM_TMON_STATUS__WRITE(die, data)             srm_reg_write(die, SRM_TMON_STATUS__ADDRESS, (data))
#define SRM_TMON_STATUS__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TMON_STATUS__ADDRESS, (data), (mask))
#  define SRM_TMON_STATUS__TEMPERATURE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_TMON_STATUS__TEMPERATURE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_TMON_STATUS__TEMPERATURE__READ(die)                SRM_TMON_STATUS__TEMPERATURE__GET(SRM_TMON_STATUS__READ(die))
#  define SRM_TMON_STATUS__TEMPERATURE__WRITE(die, fdata)           SRM_TMON_STATUS__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TMON_STATUS__TEMPERATURE__RMW(die, fdata)           SRM_TMON_STATUS__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_TMON_STATUS__TEMPERATURE__MASK                       0xffff
#  define SRM_TMON_STATUS__TEMPERATURE__OFFSET                     0

#define SRM_MCU_SP9_SYNC_API__ADDRESS                      0xe058
#define SRM_MCU_SP9_SYNC_API__DEFAULT                      0x0
#define SRM_MCU_SP9_SYNC_API__READ(die)                  srm_reg_read(die, SRM_MCU_SP9_SYNC_API__ADDRESS)
#define SRM_MCU_SP9_SYNC_API__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SP9_SYNC_API__ADDRESS, (data))
#define SRM_MCU_SP9_SYNC_API__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SP9_SYNC_API__ADDRESS, (data), (mask))
#  define SRM_MCU_SP9_SYNC_API__MSG_API_LOCK__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_SP9_SYNC_API__MSG_API_LOCK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_SP9_SYNC_API__MSG_API_LOCK__READ(die)                SRM_MCU_SP9_SYNC_API__MSG_API_LOCK__GET(SRM_MCU_SP9_SYNC_API__READ(die))
#  define SRM_MCU_SP9_SYNC_API__MSG_API_LOCK__WRITE(die, fdata)           SRM_MCU_SP9_SYNC_API__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_SP9_SYNC_API__MSG_API_LOCK__RMW(die, fdata)           SRM_MCU_SP9_SYNC_API__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_SP9_SYNC_API__MSG_API_LOCK__MASK                       0x1
#  define SRM_MCU_SP9_SYNC_API__MSG_API_LOCK__OFFSET                     0

#define SRM_MCU_SP10_SYNC_FW__ADDRESS                      0xe059
#define SRM_MCU_SP10_SYNC_FW__DEFAULT                      0x0
#define SRM_MCU_SP10_SYNC_FW__READ(die)                  srm_reg_read(die, SRM_MCU_SP10_SYNC_FW__ADDRESS)
#define SRM_MCU_SP10_SYNC_FW__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SP10_SYNC_FW__ADDRESS, (data))
#define SRM_MCU_SP10_SYNC_FW__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SP10_SYNC_FW__ADDRESS, (data), (mask))
#  define SRM_MCU_SP10_SYNC_FW__MSG_FW_LOCK__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_SP10_SYNC_FW__MSG_FW_LOCK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_SP10_SYNC_FW__MSG_FW_LOCK__READ(die)                SRM_MCU_SP10_SYNC_FW__MSG_FW_LOCK__GET(SRM_MCU_SP10_SYNC_FW__READ(die))
#  define SRM_MCU_SP10_SYNC_FW__MSG_FW_LOCK__WRITE(die, fdata)           SRM_MCU_SP10_SYNC_FW__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_SP10_SYNC_FW__MSG_FW_LOCK__RMW(die, fdata)           SRM_MCU_SP10_SYNC_FW__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_SP10_SYNC_FW__MSG_FW_LOCK__MASK                       0x1
#  define SRM_MCU_SP10_SYNC_FW__MSG_FW_LOCK__OFFSET                     0

#define SRM_MCU_SP11_SYNC_TURN__ADDRESS                      0xe05a
#define SRM_MCU_SP11_SYNC_TURN__DEFAULT                      0x0
#define SRM_MCU_SP11_SYNC_TURN__READ(die)                  srm_reg_read(die, SRM_MCU_SP11_SYNC_TURN__ADDRESS)
#define SRM_MCU_SP11_SYNC_TURN__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SP11_SYNC_TURN__ADDRESS, (data))
#define SRM_MCU_SP11_SYNC_TURN__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SP11_SYNC_TURN__ADDRESS, (data), (mask))
#  define SRM_MCU_SP11_SYNC_TURN__MSG_TURN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_SP11_SYNC_TURN__MSG_TURN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_SP11_SYNC_TURN__MSG_TURN__READ(die)                SRM_MCU_SP11_SYNC_TURN__MSG_TURN__GET(SRM_MCU_SP11_SYNC_TURN__READ(die))
#  define SRM_MCU_SP11_SYNC_TURN__MSG_TURN__WRITE(die, fdata)           SRM_MCU_SP11_SYNC_TURN__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_SP11_SYNC_TURN__MSG_TURN__RMW(die, fdata)           SRM_MCU_SP11_SYNC_TURN__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_SP11_SYNC_TURN__MSG_TURN__MASK                       0x1
#  define SRM_MCU_SP11_SYNC_TURN__MSG_TURN__OFFSET                     0

#define SRM_MCU_SP12_MSG2_BUFF_ADDR__ADDRESS                      0xe05b
#define SRM_MCU_SP12_MSG2_BUFF_ADDR__DEFAULT                      0x0
#define SRM_MCU_SP12_MSG2_BUFF_ADDR__READ(die)                  srm_reg_read(die, SRM_MCU_SP12_MSG2_BUFF_ADDR__ADDRESS)
#define SRM_MCU_SP12_MSG2_BUFF_ADDR__WRITE(die, data)             srm_reg_write(die, SRM_MCU_SP12_MSG2_BUFF_ADDR__ADDRESS, (data))
#define SRM_MCU_SP12_MSG2_BUFF_ADDR__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_SP12_MSG2_BUFF_ADDR__ADDRESS, (data), (mask))
#  define SRM_MCU_SP12_MSG2_BUFF_ADDR__ADDR__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_SP12_MSG2_BUFF_ADDR__ADDR__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_SP12_MSG2_BUFF_ADDR__ADDR__READ(die)                SRM_MCU_SP12_MSG2_BUFF_ADDR__ADDR__GET(SRM_MCU_SP12_MSG2_BUFF_ADDR__READ(die))
#  define SRM_MCU_SP12_MSG2_BUFF_ADDR__ADDR__WRITE(die, fdata)           SRM_MCU_SP12_MSG2_BUFF_ADDR__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SP12_MSG2_BUFF_ADDR__ADDR__RMW(die, fdata)           SRM_MCU_SP12_MSG2_BUFF_ADDR__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_SP12_MSG2_BUFF_ADDR__ADDR__MASK                       0xffff
#  define SRM_MCU_SP12_MSG2_BUFF_ADDR__ADDR__OFFSET                     0

#define SRM_TMON_CTRL__ADDRESS                      0xe05e
#define SRM_TMON_CTRL__DEFAULT                      0x0
#define SRM_TMON_CTRL__READ(die)                  srm_reg_read(die, SRM_TMON_CTRL__ADDRESS)
#define SRM_TMON_CTRL__WRITE(die, data)             srm_reg_write(die, SRM_TMON_CTRL__ADDRESS, (data))
#define SRM_TMON_CTRL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_TMON_CTRL__ADDRESS, (data), (mask))
#  define SRM_TMON_CTRL__DISABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_TMON_CTRL__DISABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_TMON_CTRL__DISABLE__READ(die)                SRM_TMON_CTRL__DISABLE__GET(SRM_TMON_CTRL__READ(die))
#  define SRM_TMON_CTRL__DISABLE__WRITE(die, fdata)           SRM_TMON_CTRL__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_TMON_CTRL__DISABLE__RMW(die, fdata)           SRM_TMON_CTRL__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_TMON_CTRL__DISABLE__MASK                       0x1
#  define SRM_TMON_CTRL__DISABLE__OFFSET                     15
#  define SRM_TMON_CTRL__IADC_OVERRIDE_ENABLE__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_TMON_CTRL__IADC_OVERRIDE_ENABLE__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_TMON_CTRL__IADC_OVERRIDE_ENABLE__READ(die)                SRM_TMON_CTRL__IADC_OVERRIDE_ENABLE__GET(SRM_TMON_CTRL__READ(die))
#  define SRM_TMON_CTRL__IADC_OVERRIDE_ENABLE__WRITE(die, fdata)           SRM_TMON_CTRL__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_TMON_CTRL__IADC_OVERRIDE_ENABLE__RMW(die, fdata)           SRM_TMON_CTRL__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_TMON_CTRL__IADC_OVERRIDE_ENABLE__MASK                       0x1
#  define SRM_TMON_CTRL__IADC_OVERRIDE_ENABLE__OFFSET                     14
#  define SRM_TMON_CTRL__IADC_VAL__SET(rdata, fdata)         (((rdata) & 0xc7ff) | (((uint32_t)(fdata) << 11) & 0x3800))
#  define SRM_TMON_CTRL__IADC_VAL__GET(rdata)                (((rdata) >> 11) & 0x7)
#  define SRM_TMON_CTRL__IADC_VAL__READ(die)                SRM_TMON_CTRL__IADC_VAL__GET(SRM_TMON_CTRL__READ(die))
#  define SRM_TMON_CTRL__IADC_VAL__WRITE(die, fdata)           SRM_TMON_CTRL__RMW(die, (fdata)<<11, 0x3800)
#  define SRM_TMON_CTRL__IADC_VAL__RMW(die, fdata)           SRM_TMON_CTRL__RMW(die, (fdata)<<11, 0x3800)
#  define SRM_TMON_CTRL__IADC_VAL__MASK                       0x7
#  define SRM_TMON_CTRL__IADC_VAL__OFFSET                     11

#define SRM_MCU_ANLT_RULES_2__ADDRESS                      0xe063
#define SRM_MCU_ANLT_RULES_2__DEFAULT                      0x0
#define SRM_MCU_ANLT_RULES_2__READ(die)                  srm_reg_read(die, SRM_MCU_ANLT_RULES_2__ADDRESS)
#define SRM_MCU_ANLT_RULES_2__WRITE(die, data)             srm_reg_write(die, SRM_MCU_ANLT_RULES_2__ADDRESS, (data))
#define SRM_MCU_ANLT_RULES_2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_ANLT_RULES_2__ADDRESS, (data), (mask))
#  define SRM_MCU_ANLT_RULES_2__RX_V__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_ANLT_RULES_2__RX_V__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_ANLT_RULES_2__RX_V__READ(die)                SRM_MCU_ANLT_RULES_2__RX_V__GET(SRM_MCU_ANLT_RULES_2__READ(die))
#  define SRM_MCU_ANLT_RULES_2__RX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_2__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_2__RX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_2__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_2__RX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_2__RX_V__OFFSET                     15
#  define SRM_MCU_ANLT_RULES_2__RX_DIE__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_MCU_ANLT_RULES_2__RX_DIE__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_MCU_ANLT_RULES_2__RX_DIE__READ(die)                SRM_MCU_ANLT_RULES_2__RX_DIE__GET(SRM_MCU_ANLT_RULES_2__READ(die))
#  define SRM_MCU_ANLT_RULES_2__RX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_2__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_2__RX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_2__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_2__RX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_2__RX_DIE__OFFSET                     10
#  define SRM_MCU_ANLT_RULES_2__RX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_MCU_ANLT_RULES_2__RX_CHANNEL__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_MCU_ANLT_RULES_2__RX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_2__RX_CHANNEL__GET(SRM_MCU_ANLT_RULES_2__READ(die))
#  define SRM_MCU_ANLT_RULES_2__RX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_2__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_2__RX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_2__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_2__RX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_2__RX_CHANNEL__OFFSET                     8
#  define SRM_MCU_ANLT_RULES_2__TX_V__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_ANLT_RULES_2__TX_V__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_ANLT_RULES_2__TX_V__READ(die)                SRM_MCU_ANLT_RULES_2__TX_V__GET(SRM_MCU_ANLT_RULES_2__READ(die))
#  define SRM_MCU_ANLT_RULES_2__TX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_2__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_2__TX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_2__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_2__TX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_2__TX_V__OFFSET                     7
#  define SRM_MCU_ANLT_RULES_2__TX_DIE__SET(rdata, fdata)         (((rdata) & 0xff83) | (((uint32_t)(fdata) << 2) & 0x7c))
#  define SRM_MCU_ANLT_RULES_2__TX_DIE__GET(rdata)                (((rdata) >> 2) & 0x1f)
#  define SRM_MCU_ANLT_RULES_2__TX_DIE__READ(die)                SRM_MCU_ANLT_RULES_2__TX_DIE__GET(SRM_MCU_ANLT_RULES_2__READ(die))
#  define SRM_MCU_ANLT_RULES_2__TX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_2__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_2__TX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_2__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_2__TX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_2__TX_DIE__OFFSET                     2
#  define SRM_MCU_ANLT_RULES_2__TX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MCU_ANLT_RULES_2__TX_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MCU_ANLT_RULES_2__TX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_2__TX_CHANNEL__GET(SRM_MCU_ANLT_RULES_2__READ(die))
#  define SRM_MCU_ANLT_RULES_2__TX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_2__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_2__TX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_2__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_2__TX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_2__TX_CHANNEL__OFFSET                     0

#define SRM_MCU_ANLT_RULES_3__ADDRESS                      0xe064
#define SRM_MCU_ANLT_RULES_3__DEFAULT                      0x0
#define SRM_MCU_ANLT_RULES_3__READ(die)                  srm_reg_read(die, SRM_MCU_ANLT_RULES_3__ADDRESS)
#define SRM_MCU_ANLT_RULES_3__WRITE(die, data)             srm_reg_write(die, SRM_MCU_ANLT_RULES_3__ADDRESS, (data))
#define SRM_MCU_ANLT_RULES_3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_ANLT_RULES_3__ADDRESS, (data), (mask))
#  define SRM_MCU_ANLT_RULES_3__RX_V__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_ANLT_RULES_3__RX_V__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_ANLT_RULES_3__RX_V__READ(die)                SRM_MCU_ANLT_RULES_3__RX_V__GET(SRM_MCU_ANLT_RULES_3__READ(die))
#  define SRM_MCU_ANLT_RULES_3__RX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_3__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_3__RX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_3__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_3__RX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_3__RX_V__OFFSET                     15
#  define SRM_MCU_ANLT_RULES_3__RX_DIE__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_MCU_ANLT_RULES_3__RX_DIE__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_MCU_ANLT_RULES_3__RX_DIE__READ(die)                SRM_MCU_ANLT_RULES_3__RX_DIE__GET(SRM_MCU_ANLT_RULES_3__READ(die))
#  define SRM_MCU_ANLT_RULES_3__RX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_3__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_3__RX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_3__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_3__RX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_3__RX_DIE__OFFSET                     10
#  define SRM_MCU_ANLT_RULES_3__RX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_MCU_ANLT_RULES_3__RX_CHANNEL__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_MCU_ANLT_RULES_3__RX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_3__RX_CHANNEL__GET(SRM_MCU_ANLT_RULES_3__READ(die))
#  define SRM_MCU_ANLT_RULES_3__RX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_3__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_3__RX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_3__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_3__RX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_3__RX_CHANNEL__OFFSET                     8
#  define SRM_MCU_ANLT_RULES_3__TX_V__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_ANLT_RULES_3__TX_V__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_ANLT_RULES_3__TX_V__READ(die)                SRM_MCU_ANLT_RULES_3__TX_V__GET(SRM_MCU_ANLT_RULES_3__READ(die))
#  define SRM_MCU_ANLT_RULES_3__TX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_3__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_3__TX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_3__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_3__TX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_3__TX_V__OFFSET                     7
#  define SRM_MCU_ANLT_RULES_3__TX_DIE__SET(rdata, fdata)         (((rdata) & 0xff83) | (((uint32_t)(fdata) << 2) & 0x7c))
#  define SRM_MCU_ANLT_RULES_3__TX_DIE__GET(rdata)                (((rdata) >> 2) & 0x1f)
#  define SRM_MCU_ANLT_RULES_3__TX_DIE__READ(die)                SRM_MCU_ANLT_RULES_3__TX_DIE__GET(SRM_MCU_ANLT_RULES_3__READ(die))
#  define SRM_MCU_ANLT_RULES_3__TX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_3__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_3__TX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_3__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_3__TX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_3__TX_DIE__OFFSET                     2
#  define SRM_MCU_ANLT_RULES_3__TX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MCU_ANLT_RULES_3__TX_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MCU_ANLT_RULES_3__TX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_3__TX_CHANNEL__GET(SRM_MCU_ANLT_RULES_3__READ(die))
#  define SRM_MCU_ANLT_RULES_3__TX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_3__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_3__TX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_3__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_3__TX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_3__TX_CHANNEL__OFFSET                     0

#define SRM_MCU_ANLT_RULES_4__ADDRESS                      0xe065
#define SRM_MCU_ANLT_RULES_4__DEFAULT                      0x0
#define SRM_MCU_ANLT_RULES_4__READ(die)                  srm_reg_read(die, SRM_MCU_ANLT_RULES_4__ADDRESS)
#define SRM_MCU_ANLT_RULES_4__WRITE(die, data)             srm_reg_write(die, SRM_MCU_ANLT_RULES_4__ADDRESS, (data))
#define SRM_MCU_ANLT_RULES_4__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_ANLT_RULES_4__ADDRESS, (data), (mask))
#  define SRM_MCU_ANLT_RULES_4__RX_V__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_ANLT_RULES_4__RX_V__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_ANLT_RULES_4__RX_V__READ(die)                SRM_MCU_ANLT_RULES_4__RX_V__GET(SRM_MCU_ANLT_RULES_4__READ(die))
#  define SRM_MCU_ANLT_RULES_4__RX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_4__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_4__RX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_4__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_4__RX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_4__RX_V__OFFSET                     15
#  define SRM_MCU_ANLT_RULES_4__RX_DIE__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_MCU_ANLT_RULES_4__RX_DIE__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_MCU_ANLT_RULES_4__RX_DIE__READ(die)                SRM_MCU_ANLT_RULES_4__RX_DIE__GET(SRM_MCU_ANLT_RULES_4__READ(die))
#  define SRM_MCU_ANLT_RULES_4__RX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_4__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_4__RX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_4__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_4__RX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_4__RX_DIE__OFFSET                     10
#  define SRM_MCU_ANLT_RULES_4__RX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_MCU_ANLT_RULES_4__RX_CHANNEL__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_MCU_ANLT_RULES_4__RX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_4__RX_CHANNEL__GET(SRM_MCU_ANLT_RULES_4__READ(die))
#  define SRM_MCU_ANLT_RULES_4__RX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_4__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_4__RX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_4__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_4__RX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_4__RX_CHANNEL__OFFSET                     8
#  define SRM_MCU_ANLT_RULES_4__TX_V__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_ANLT_RULES_4__TX_V__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_ANLT_RULES_4__TX_V__READ(die)                SRM_MCU_ANLT_RULES_4__TX_V__GET(SRM_MCU_ANLT_RULES_4__READ(die))
#  define SRM_MCU_ANLT_RULES_4__TX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_4__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_4__TX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_4__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_4__TX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_4__TX_V__OFFSET                     7
#  define SRM_MCU_ANLT_RULES_4__TX_DIE__SET(rdata, fdata)         (((rdata) & 0xff83) | (((uint32_t)(fdata) << 2) & 0x7c))
#  define SRM_MCU_ANLT_RULES_4__TX_DIE__GET(rdata)                (((rdata) >> 2) & 0x1f)
#  define SRM_MCU_ANLT_RULES_4__TX_DIE__READ(die)                SRM_MCU_ANLT_RULES_4__TX_DIE__GET(SRM_MCU_ANLT_RULES_4__READ(die))
#  define SRM_MCU_ANLT_RULES_4__TX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_4__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_4__TX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_4__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_4__TX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_4__TX_DIE__OFFSET                     2
#  define SRM_MCU_ANLT_RULES_4__TX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MCU_ANLT_RULES_4__TX_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MCU_ANLT_RULES_4__TX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_4__TX_CHANNEL__GET(SRM_MCU_ANLT_RULES_4__READ(die))
#  define SRM_MCU_ANLT_RULES_4__TX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_4__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_4__TX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_4__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_4__TX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_4__TX_CHANNEL__OFFSET                     0

#define SRM_MCU_ANLT_RULES_5__ADDRESS                      0xe066
#define SRM_MCU_ANLT_RULES_5__DEFAULT                      0x0
#define SRM_MCU_ANLT_RULES_5__READ(die)                  srm_reg_read(die, SRM_MCU_ANLT_RULES_5__ADDRESS)
#define SRM_MCU_ANLT_RULES_5__WRITE(die, data)             srm_reg_write(die, SRM_MCU_ANLT_RULES_5__ADDRESS, (data))
#define SRM_MCU_ANLT_RULES_5__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_ANLT_RULES_5__ADDRESS, (data), (mask))
#  define SRM_MCU_ANLT_RULES_5__RX_V__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_ANLT_RULES_5__RX_V__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_ANLT_RULES_5__RX_V__READ(die)                SRM_MCU_ANLT_RULES_5__RX_V__GET(SRM_MCU_ANLT_RULES_5__READ(die))
#  define SRM_MCU_ANLT_RULES_5__RX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_5__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_5__RX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_5__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_5__RX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_5__RX_V__OFFSET                     15
#  define SRM_MCU_ANLT_RULES_5__RX_DIE__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_MCU_ANLT_RULES_5__RX_DIE__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_MCU_ANLT_RULES_5__RX_DIE__READ(die)                SRM_MCU_ANLT_RULES_5__RX_DIE__GET(SRM_MCU_ANLT_RULES_5__READ(die))
#  define SRM_MCU_ANLT_RULES_5__RX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_5__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_5__RX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_5__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_5__RX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_5__RX_DIE__OFFSET                     10
#  define SRM_MCU_ANLT_RULES_5__RX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_MCU_ANLT_RULES_5__RX_CHANNEL__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_MCU_ANLT_RULES_5__RX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_5__RX_CHANNEL__GET(SRM_MCU_ANLT_RULES_5__READ(die))
#  define SRM_MCU_ANLT_RULES_5__RX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_5__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_5__RX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_5__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_5__RX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_5__RX_CHANNEL__OFFSET                     8
#  define SRM_MCU_ANLT_RULES_5__TX_V__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_ANLT_RULES_5__TX_V__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_ANLT_RULES_5__TX_V__READ(die)                SRM_MCU_ANLT_RULES_5__TX_V__GET(SRM_MCU_ANLT_RULES_5__READ(die))
#  define SRM_MCU_ANLT_RULES_5__TX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_5__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_5__TX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_5__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_5__TX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_5__TX_V__OFFSET                     7
#  define SRM_MCU_ANLT_RULES_5__TX_DIE__SET(rdata, fdata)         (((rdata) & 0xff83) | (((uint32_t)(fdata) << 2) & 0x7c))
#  define SRM_MCU_ANLT_RULES_5__TX_DIE__GET(rdata)                (((rdata) >> 2) & 0x1f)
#  define SRM_MCU_ANLT_RULES_5__TX_DIE__READ(die)                SRM_MCU_ANLT_RULES_5__TX_DIE__GET(SRM_MCU_ANLT_RULES_5__READ(die))
#  define SRM_MCU_ANLT_RULES_5__TX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_5__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_5__TX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_5__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_5__TX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_5__TX_DIE__OFFSET                     2
#  define SRM_MCU_ANLT_RULES_5__TX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MCU_ANLT_RULES_5__TX_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MCU_ANLT_RULES_5__TX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_5__TX_CHANNEL__GET(SRM_MCU_ANLT_RULES_5__READ(die))
#  define SRM_MCU_ANLT_RULES_5__TX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_5__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_5__TX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_5__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_5__TX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_5__TX_CHANNEL__OFFSET                     0

#define SRM_MCU_ANLT_RULES_0__ADDRESS                      0xe067
#define SRM_MCU_ANLT_RULES_0__DEFAULT                      0x0
#define SRM_MCU_ANLT_RULES_0__READ(die)                  srm_reg_read(die, SRM_MCU_ANLT_RULES_0__ADDRESS)
#define SRM_MCU_ANLT_RULES_0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_ANLT_RULES_0__ADDRESS, (data))
#define SRM_MCU_ANLT_RULES_0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_ANLT_RULES_0__ADDRESS, (data), (mask))
#  define SRM_MCU_ANLT_RULES_0__RX_V__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_ANLT_RULES_0__RX_V__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_ANLT_RULES_0__RX_V__READ(die)                SRM_MCU_ANLT_RULES_0__RX_V__GET(SRM_MCU_ANLT_RULES_0__READ(die))
#  define SRM_MCU_ANLT_RULES_0__RX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_0__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_0__RX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_0__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_0__RX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_0__RX_V__OFFSET                     15
#  define SRM_MCU_ANLT_RULES_0__RX_DIE__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_MCU_ANLT_RULES_0__RX_DIE__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_MCU_ANLT_RULES_0__RX_DIE__READ(die)                SRM_MCU_ANLT_RULES_0__RX_DIE__GET(SRM_MCU_ANLT_RULES_0__READ(die))
#  define SRM_MCU_ANLT_RULES_0__RX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_0__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_0__RX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_0__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_0__RX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_0__RX_DIE__OFFSET                     10
#  define SRM_MCU_ANLT_RULES_0__RX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_MCU_ANLT_RULES_0__RX_CHANNEL__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_MCU_ANLT_RULES_0__RX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_0__RX_CHANNEL__GET(SRM_MCU_ANLT_RULES_0__READ(die))
#  define SRM_MCU_ANLT_RULES_0__RX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_0__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_0__RX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_0__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_0__RX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_0__RX_CHANNEL__OFFSET                     8
#  define SRM_MCU_ANLT_RULES_0__NUM_FOLLOWERS__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_ANLT_RULES_0__NUM_FOLLOWERS__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_ANLT_RULES_0__NUM_FOLLOWERS__READ(die)                SRM_MCU_ANLT_RULES_0__NUM_FOLLOWERS__GET(SRM_MCU_ANLT_RULES_0__READ(die))
#  define SRM_MCU_ANLT_RULES_0__NUM_FOLLOWERS__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_0__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_ANLT_RULES_0__NUM_FOLLOWERS__RMW(die, fdata)           SRM_MCU_ANLT_RULES_0__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_ANLT_RULES_0__NUM_FOLLOWERS__MASK                       0xff
#  define SRM_MCU_ANLT_RULES_0__NUM_FOLLOWERS__OFFSET                     0

#define SRM_MCU_ANLT_RULES_1__ADDRESS                      0xe068
#define SRM_MCU_ANLT_RULES_1__DEFAULT                      0x0
#define SRM_MCU_ANLT_RULES_1__READ(die)                  srm_reg_read(die, SRM_MCU_ANLT_RULES_1__ADDRESS)
#define SRM_MCU_ANLT_RULES_1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_ANLT_RULES_1__ADDRESS, (data))
#define SRM_MCU_ANLT_RULES_1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_ANLT_RULES_1__ADDRESS, (data), (mask))
#  define SRM_MCU_ANLT_RULES_1__AN_TX_LEADER_MASK__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_MCU_ANLT_RULES_1__AN_TX_LEADER_MASK__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_MCU_ANLT_RULES_1__AN_TX_LEADER_MASK__READ(die)                SRM_MCU_ANLT_RULES_1__AN_TX_LEADER_MASK__GET(SRM_MCU_ANLT_RULES_1__READ(die))
#  define SRM_MCU_ANLT_RULES_1__AN_TX_LEADER_MASK__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_1__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_MCU_ANLT_RULES_1__AN_TX_LEADER_MASK__RMW(die, fdata)           SRM_MCU_ANLT_RULES_1__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_MCU_ANLT_RULES_1__AN_TX_LEADER_MASK__MASK                       0xf
#  define SRM_MCU_ANLT_RULES_1__AN_TX_LEADER_MASK__OFFSET                     12
#  define SRM_MCU_ANLT_RULES_1__AN_RX_LEADER_MASK__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SRM_MCU_ANLT_RULES_1__AN_RX_LEADER_MASK__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SRM_MCU_ANLT_RULES_1__AN_RX_LEADER_MASK__READ(die)                SRM_MCU_ANLT_RULES_1__AN_RX_LEADER_MASK__GET(SRM_MCU_ANLT_RULES_1__READ(die))
#  define SRM_MCU_ANLT_RULES_1__AN_RX_LEADER_MASK__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_1__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_MCU_ANLT_RULES_1__AN_RX_LEADER_MASK__RMW(die, fdata)           SRM_MCU_ANLT_RULES_1__RMW(die, (fdata)<<8, 0xf00)
#  define SRM_MCU_ANLT_RULES_1__AN_RX_LEADER_MASK__MASK                       0xf
#  define SRM_MCU_ANLT_RULES_1__AN_RX_LEADER_MASK__OFFSET                     8
#  define SRM_MCU_ANLT_RULES_1__AN_TX_MASK__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SRM_MCU_ANLT_RULES_1__AN_TX_MASK__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SRM_MCU_ANLT_RULES_1__AN_TX_MASK__READ(die)                SRM_MCU_ANLT_RULES_1__AN_TX_MASK__GET(SRM_MCU_ANLT_RULES_1__READ(die))
#  define SRM_MCU_ANLT_RULES_1__AN_TX_MASK__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_1__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_MCU_ANLT_RULES_1__AN_TX_MASK__RMW(die, fdata)           SRM_MCU_ANLT_RULES_1__RMW(die, (fdata)<<4, 0xf0)
#  define SRM_MCU_ANLT_RULES_1__AN_TX_MASK__MASK                       0xf
#  define SRM_MCU_ANLT_RULES_1__AN_TX_MASK__OFFSET                     4
#  define SRM_MCU_ANLT_RULES_1__AN_RX_MASK__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_MCU_ANLT_RULES_1__AN_RX_MASK__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_MCU_ANLT_RULES_1__AN_RX_MASK__READ(die)                SRM_MCU_ANLT_RULES_1__AN_RX_MASK__GET(SRM_MCU_ANLT_RULES_1__READ(die))
#  define SRM_MCU_ANLT_RULES_1__AN_RX_MASK__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_1__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MCU_ANLT_RULES_1__AN_RX_MASK__RMW(die, fdata)           SRM_MCU_ANLT_RULES_1__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MCU_ANLT_RULES_1__AN_RX_MASK__MASK                       0xf
#  define SRM_MCU_ANLT_RULES_1__AN_RX_MASK__OFFSET                     0

#define SRM_MCU_ANLT_RULES_10__ADDRESS                      0xe069
#define SRM_MCU_ANLT_RULES_10__DEFAULT                      0x0
#define SRM_MCU_ANLT_RULES_10__READ(die)                  srm_reg_read(die, SRM_MCU_ANLT_RULES_10__ADDRESS)
#define SRM_MCU_ANLT_RULES_10__WRITE(die, data)             srm_reg_write(die, SRM_MCU_ANLT_RULES_10__ADDRESS, (data))
#define SRM_MCU_ANLT_RULES_10__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_ANLT_RULES_10__ADDRESS, (data), (mask))
#  define SRM_MCU_ANLT_RULES_10__LLFEC_REQ__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_ANLT_RULES_10__LLFEC_REQ__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_ANLT_RULES_10__LLFEC_REQ__READ(die)                SRM_MCU_ANLT_RULES_10__LLFEC_REQ__GET(SRM_MCU_ANLT_RULES_10__READ(die))
#  define SRM_MCU_ANLT_RULES_10__LLFEC_REQ__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_10__LLFEC_REQ__RMW(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_10__LLFEC_REQ__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_10__LLFEC_REQ__OFFSET                     15
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF3__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF3__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF3__READ(die)                SRM_MCU_ANLT_RULES_10__LLFEC_LF3__GET(SRM_MCU_ANLT_RULES_10__READ(die))
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF3__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF3__RMW(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<14, 0x4000)
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF3__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF3__OFFSET                     14
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF2__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF2__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF2__READ(die)                SRM_MCU_ANLT_RULES_10__LLFEC_LF2__GET(SRM_MCU_ANLT_RULES_10__READ(die))
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF2__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<13, 0x2000)
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF2__RMW(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<13, 0x2000)
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF2__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF2__OFFSET                     13
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF1__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF1__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF1__READ(die)                SRM_MCU_ANLT_RULES_10__LLFEC_LF1__GET(SRM_MCU_ANLT_RULES_10__READ(die))
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF1__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF1__RMW(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF1__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_10__LLFEC_LF1__OFFSET                     12
#  define SRM_MCU_ANLT_RULES_10__ADVANCED0__SET(rdata, fdata)         (((rdata) & 0xf003) | (((uint32_t)(fdata) << 2) & 0xffc))
#  define SRM_MCU_ANLT_RULES_10__ADVANCED0__GET(rdata)                (((rdata) >> 2) & 0x3ff)
#  define SRM_MCU_ANLT_RULES_10__ADVANCED0__READ(die)                SRM_MCU_ANLT_RULES_10__ADVANCED0__GET(SRM_MCU_ANLT_RULES_10__READ(die))
#  define SRM_MCU_ANLT_RULES_10__ADVANCED0__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<2, 0xffc)
#  define SRM_MCU_ANLT_RULES_10__ADVANCED0__RMW(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<2, 0xffc)
#  define SRM_MCU_ANLT_RULES_10__ADVANCED0__MASK                       0x3ff
#  define SRM_MCU_ANLT_RULES_10__ADVANCED0__OFFSET                     2
#  define SRM_MCU_ANLT_RULES_10__NONCE_CHK_DISABLE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_ANLT_RULES_10__NONCE_CHK_DISABLE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_ANLT_RULES_10__NONCE_CHK_DISABLE__READ(die)                SRM_MCU_ANLT_RULES_10__NONCE_CHK_DISABLE__GET(SRM_MCU_ANLT_RULES_10__READ(die))
#  define SRM_MCU_ANLT_RULES_10__NONCE_CHK_DISABLE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_ANLT_RULES_10__NONCE_CHK_DISABLE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_ANLT_RULES_10__NONCE_CHK_DISABLE__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_10__NONCE_CHK_DISABLE__OFFSET                     1
#  define SRM_MCU_ANLT_RULES_10__LT_TIMER_DISABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_ANLT_RULES_10__LT_TIMER_DISABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_ANLT_RULES_10__LT_TIMER_DISABLE__READ(die)                SRM_MCU_ANLT_RULES_10__LT_TIMER_DISABLE__GET(SRM_MCU_ANLT_RULES_10__READ(die))
#  define SRM_MCU_ANLT_RULES_10__LT_TIMER_DISABLE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_ANLT_RULES_10__LT_TIMER_DISABLE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_10__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_ANLT_RULES_10__LT_TIMER_DISABLE__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_10__LT_TIMER_DISABLE__OFFSET                     0

#define SRM_MCU_AN_RULES_0__ADDRESS                      0xe06a
#define SRM_MCU_AN_RULES_0__DEFAULT                      0x0
#define SRM_MCU_AN_RULES_0__READ(die)                  srm_reg_read(die, SRM_MCU_AN_RULES_0__ADDRESS)
#define SRM_MCU_AN_RULES_0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_AN_RULES_0__ADDRESS, (data))
#define SRM_MCU_AN_RULES_0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_AN_RULES_0__ADDRESS, (data), (mask))
#  define SRM_MCU_AN_RULES_0__AN_5G_ADVT__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SRM_MCU_AN_RULES_0__AN_5G_ADVT__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SRM_MCU_AN_RULES_0__AN_5G_ADVT__READ(die)                SRM_MCU_AN_RULES_0__AN_5G_ADVT__GET(SRM_MCU_AN_RULES_0__READ(die))
#  define SRM_MCU_AN_RULES_0__AN_5G_ADVT__WRITE(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_AN_RULES_0__AN_5G_ADVT__RMW(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<12, 0x1000)
#  define SRM_MCU_AN_RULES_0__AN_5G_ADVT__MASK                       0x1
#  define SRM_MCU_AN_RULES_0__AN_5G_ADVT__OFFSET                     12
#  define SRM_MCU_AN_RULES_0__AN_2_5G_ADVT__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SRM_MCU_AN_RULES_0__AN_2_5G_ADVT__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SRM_MCU_AN_RULES_0__AN_2_5G_ADVT__READ(die)                SRM_MCU_AN_RULES_0__AN_2_5G_ADVT__GET(SRM_MCU_AN_RULES_0__READ(die))
#  define SRM_MCU_AN_RULES_0__AN_2_5G_ADVT__WRITE(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_AN_RULES_0__AN_2_5G_ADVT__RMW(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<11, 0x800)
#  define SRM_MCU_AN_RULES_0__AN_2_5G_ADVT__MASK                       0x1
#  define SRM_MCU_AN_RULES_0__AN_2_5G_ADVT__OFFSET                     11
#  define SRM_MCU_AN_RULES_0__AN_1_25G_ADVT__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SRM_MCU_AN_RULES_0__AN_1_25G_ADVT__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SRM_MCU_AN_RULES_0__AN_1_25G_ADVT__READ(die)                SRM_MCU_AN_RULES_0__AN_1_25G_ADVT__GET(SRM_MCU_AN_RULES_0__READ(die))
#  define SRM_MCU_AN_RULES_0__AN_1_25G_ADVT__WRITE(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_AN_RULES_0__AN_1_25G_ADVT__RMW(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<10, 0x400)
#  define SRM_MCU_AN_RULES_0__AN_1_25G_ADVT__MASK                       0x1
#  define SRM_MCU_AN_RULES_0__AN_1_25G_ADVT__OFFSET                     10
#  define SRM_MCU_AN_RULES_0__AN_PAUSE_CAP__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_MCU_AN_RULES_0__AN_PAUSE_CAP__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_MCU_AN_RULES_0__AN_PAUSE_CAP__READ(die)                SRM_MCU_AN_RULES_0__AN_PAUSE_CAP__GET(SRM_MCU_AN_RULES_0__READ(die))
#  define SRM_MCU_AN_RULES_0__AN_PAUSE_CAP__WRITE(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_AN_RULES_0__AN_PAUSE_CAP__RMW(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_AN_RULES_0__AN_PAUSE_CAP__MASK                       0x3
#  define SRM_MCU_AN_RULES_0__AN_PAUSE_CAP__OFFSET                     8
#  define SRM_MCU_AN_RULES_0__AN_PORT_SHUT__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_AN_RULES_0__AN_PORT_SHUT__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_AN_RULES_0__AN_PORT_SHUT__READ(die)                SRM_MCU_AN_RULES_0__AN_PORT_SHUT__GET(SRM_MCU_AN_RULES_0__READ(die))
#  define SRM_MCU_AN_RULES_0__AN_PORT_SHUT__WRITE(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_AN_RULES_0__AN_PORT_SHUT__RMW(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_AN_RULES_0__AN_PORT_SHUT__MASK                       0x1
#  define SRM_MCU_AN_RULES_0__AN_PORT_SHUT__OFFSET                     7
#  define SRM_MCU_AN_RULES_0__AN_REMOTE_FAULT__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_MCU_AN_RULES_0__AN_REMOTE_FAULT__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_MCU_AN_RULES_0__AN_REMOTE_FAULT__READ(die)                SRM_MCU_AN_RULES_0__AN_REMOTE_FAULT__GET(SRM_MCU_AN_RULES_0__READ(die))
#  define SRM_MCU_AN_RULES_0__AN_REMOTE_FAULT__WRITE(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<6, 0x40)
#  define SRM_MCU_AN_RULES_0__AN_REMOTE_FAULT__RMW(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<6, 0x40)
#  define SRM_MCU_AN_RULES_0__AN_REMOTE_FAULT__MASK                       0x1
#  define SRM_MCU_AN_RULES_0__AN_REMOTE_FAULT__OFFSET                     6
#  define SRM_MCU_AN_RULES_0__AN_MODE__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SRM_MCU_AN_RULES_0__AN_MODE__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SRM_MCU_AN_RULES_0__AN_MODE__READ(die)                SRM_MCU_AN_RULES_0__AN_MODE__GET(SRM_MCU_AN_RULES_0__READ(die))
#  define SRM_MCU_AN_RULES_0__AN_MODE__WRITE(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<4, 0x30)
#  define SRM_MCU_AN_RULES_0__AN_MODE__RMW(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<4, 0x30)
#  define SRM_MCU_AN_RULES_0__AN_MODE__MASK                       0x3
#  define SRM_MCU_AN_RULES_0__AN_MODE__OFFSET                     4
#  define SRM_MCU_AN_RULES_0__AN_MODE_PAN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MCU_AN_RULES_0__AN_MODE_PAN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MCU_AN_RULES_0__AN_MODE_PAN__READ(die)                SRM_MCU_AN_RULES_0__AN_MODE_PAN__GET(SRM_MCU_AN_RULES_0__READ(die))
#  define SRM_MCU_AN_RULES_0__AN_MODE_PAN__WRITE(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_AN_RULES_0__AN_MODE_PAN__RMW(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_AN_RULES_0__AN_MODE_PAN__MASK                       0x1
#  define SRM_MCU_AN_RULES_0__AN_MODE_PAN__OFFSET                     3
#  define SRM_MCU_AN_RULES_0__AN_PROMISC__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_AN_RULES_0__AN_PROMISC__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_AN_RULES_0__AN_PROMISC__READ(die)                SRM_MCU_AN_RULES_0__AN_PROMISC__GET(SRM_MCU_AN_RULES_0__READ(die))
#  define SRM_MCU_AN_RULES_0__AN_PROMISC__WRITE(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_AN_RULES_0__AN_PROMISC__RMW(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_AN_RULES_0__AN_PROMISC__MASK                       0x1
#  define SRM_MCU_AN_RULES_0__AN_PROMISC__OFFSET                     2
#  define SRM_MCU_AN_RULES_0__AN_PROBE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_AN_RULES_0__AN_PROBE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_AN_RULES_0__AN_PROBE__READ(die)                SRM_MCU_AN_RULES_0__AN_PROBE__GET(SRM_MCU_AN_RULES_0__READ(die))
#  define SRM_MCU_AN_RULES_0__AN_PROBE__WRITE(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_AN_RULES_0__AN_PROBE__RMW(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_AN_RULES_0__AN_PROBE__MASK                       0x1
#  define SRM_MCU_AN_RULES_0__AN_PROBE__OFFSET                     1
#  define SRM_MCU_AN_RULES_0__AN_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_AN_RULES_0__AN_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_AN_RULES_0__AN_EN__READ(die)                SRM_MCU_AN_RULES_0__AN_EN__GET(SRM_MCU_AN_RULES_0__READ(die))
#  define SRM_MCU_AN_RULES_0__AN_EN__WRITE(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_AN_RULES_0__AN_EN__RMW(die, fdata)           SRM_MCU_AN_RULES_0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_AN_RULES_0__AN_EN__MASK                       0x1
#  define SRM_MCU_AN_RULES_0__AN_EN__OFFSET                     0

#define SRM_MCU_AN_RULES_1__ADDRESS                      0xe06b
#define SRM_MCU_AN_RULES_1__DEFAULT                      0x0
#define SRM_MCU_AN_RULES_1__READ(die)                  srm_reg_read(die, SRM_MCU_AN_RULES_1__ADDRESS)
#define SRM_MCU_AN_RULES_1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_AN_RULES_1__ADDRESS, (data))
#define SRM_MCU_AN_RULES_1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_AN_RULES_1__ADDRESS, (data), (mask))
#  define SRM_MCU_AN_RULES_1__AN_RETRY_THRESH__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_AN_RULES_1__AN_RETRY_THRESH__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_AN_RULES_1__AN_RETRY_THRESH__READ(die)                SRM_MCU_AN_RULES_1__AN_RETRY_THRESH__GET(SRM_MCU_AN_RULES_1__READ(die))
#  define SRM_MCU_AN_RULES_1__AN_RETRY_THRESH__WRITE(die, fdata)           SRM_MCU_AN_RULES_1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_AN_RULES_1__AN_RETRY_THRESH__RMW(die, fdata)           SRM_MCU_AN_RULES_1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_AN_RULES_1__AN_RETRY_THRESH__MASK                       0xffff
#  define SRM_MCU_AN_RULES_1__AN_RETRY_THRESH__OFFSET                     0

#define SRM_MCU_AN_RULES_2__ADDRESS                      0xe06c
#define SRM_MCU_AN_RULES_2__DEFAULT                      0x0
#define SRM_MCU_AN_RULES_2__READ(die)                  srm_reg_read(die, SRM_MCU_AN_RULES_2__ADDRESS)
#define SRM_MCU_AN_RULES_2__WRITE(die, data)             srm_reg_write(die, SRM_MCU_AN_RULES_2__ADDRESS, (data))
#define SRM_MCU_AN_RULES_2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_AN_RULES_2__ADDRESS, (data), (mask))
#  define SRM_MCU_AN_RULES_2__AN_LINK_TIME_BUDGET__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_AN_RULES_2__AN_LINK_TIME_BUDGET__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_AN_RULES_2__AN_LINK_TIME_BUDGET__READ(die)                SRM_MCU_AN_RULES_2__AN_LINK_TIME_BUDGET__GET(SRM_MCU_AN_RULES_2__READ(die))
#  define SRM_MCU_AN_RULES_2__AN_LINK_TIME_BUDGET__WRITE(die, fdata)           SRM_MCU_AN_RULES_2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_AN_RULES_2__AN_LINK_TIME_BUDGET__RMW(die, fdata)           SRM_MCU_AN_RULES_2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_AN_RULES_2__AN_LINK_TIME_BUDGET__MASK                       0xffff
#  define SRM_MCU_AN_RULES_2__AN_LINK_TIME_BUDGET__OFFSET                     0

#define SRM_MCU_ANLT_RULES_6__ADDRESS                      0xe06d
#define SRM_MCU_ANLT_RULES_6__DEFAULT                      0x0
#define SRM_MCU_ANLT_RULES_6__READ(die)                  srm_reg_read(die, SRM_MCU_ANLT_RULES_6__ADDRESS)
#define SRM_MCU_ANLT_RULES_6__WRITE(die, data)             srm_reg_write(die, SRM_MCU_ANLT_RULES_6__ADDRESS, (data))
#define SRM_MCU_ANLT_RULES_6__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_ANLT_RULES_6__ADDRESS, (data), (mask))
#  define SRM_MCU_ANLT_RULES_6__RX_V__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_ANLT_RULES_6__RX_V__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_ANLT_RULES_6__RX_V__READ(die)                SRM_MCU_ANLT_RULES_6__RX_V__GET(SRM_MCU_ANLT_RULES_6__READ(die))
#  define SRM_MCU_ANLT_RULES_6__RX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_6__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_6__RX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_6__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_6__RX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_6__RX_V__OFFSET                     15
#  define SRM_MCU_ANLT_RULES_6__RX_DIE__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_MCU_ANLT_RULES_6__RX_DIE__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_MCU_ANLT_RULES_6__RX_DIE__READ(die)                SRM_MCU_ANLT_RULES_6__RX_DIE__GET(SRM_MCU_ANLT_RULES_6__READ(die))
#  define SRM_MCU_ANLT_RULES_6__RX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_6__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_6__RX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_6__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_6__RX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_6__RX_DIE__OFFSET                     10
#  define SRM_MCU_ANLT_RULES_6__RX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_MCU_ANLT_RULES_6__RX_CHANNEL__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_MCU_ANLT_RULES_6__RX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_6__RX_CHANNEL__GET(SRM_MCU_ANLT_RULES_6__READ(die))
#  define SRM_MCU_ANLT_RULES_6__RX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_6__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_6__RX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_6__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_6__RX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_6__RX_CHANNEL__OFFSET                     8
#  define SRM_MCU_ANLT_RULES_6__TX_V__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_ANLT_RULES_6__TX_V__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_ANLT_RULES_6__TX_V__READ(die)                SRM_MCU_ANLT_RULES_6__TX_V__GET(SRM_MCU_ANLT_RULES_6__READ(die))
#  define SRM_MCU_ANLT_RULES_6__TX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_6__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_6__TX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_6__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_6__TX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_6__TX_V__OFFSET                     7
#  define SRM_MCU_ANLT_RULES_6__TX_DIE__SET(rdata, fdata)         (((rdata) & 0xff83) | (((uint32_t)(fdata) << 2) & 0x7c))
#  define SRM_MCU_ANLT_RULES_6__TX_DIE__GET(rdata)                (((rdata) >> 2) & 0x1f)
#  define SRM_MCU_ANLT_RULES_6__TX_DIE__READ(die)                SRM_MCU_ANLT_RULES_6__TX_DIE__GET(SRM_MCU_ANLT_RULES_6__READ(die))
#  define SRM_MCU_ANLT_RULES_6__TX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_6__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_6__TX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_6__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_6__TX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_6__TX_DIE__OFFSET                     2
#  define SRM_MCU_ANLT_RULES_6__TX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MCU_ANLT_RULES_6__TX_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MCU_ANLT_RULES_6__TX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_6__TX_CHANNEL__GET(SRM_MCU_ANLT_RULES_6__READ(die))
#  define SRM_MCU_ANLT_RULES_6__TX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_6__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_6__TX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_6__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_6__TX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_6__TX_CHANNEL__OFFSET                     0

#define SRM_MCU_ANLT_RULES_7__ADDRESS                      0xe06e
#define SRM_MCU_ANLT_RULES_7__DEFAULT                      0x0
#define SRM_MCU_ANLT_RULES_7__READ(die)                  srm_reg_read(die, SRM_MCU_ANLT_RULES_7__ADDRESS)
#define SRM_MCU_ANLT_RULES_7__WRITE(die, data)             srm_reg_write(die, SRM_MCU_ANLT_RULES_7__ADDRESS, (data))
#define SRM_MCU_ANLT_RULES_7__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_ANLT_RULES_7__ADDRESS, (data), (mask))
#  define SRM_MCU_ANLT_RULES_7__RX_V__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_ANLT_RULES_7__RX_V__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_ANLT_RULES_7__RX_V__READ(die)                SRM_MCU_ANLT_RULES_7__RX_V__GET(SRM_MCU_ANLT_RULES_7__READ(die))
#  define SRM_MCU_ANLT_RULES_7__RX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_7__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_7__RX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_7__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_7__RX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_7__RX_V__OFFSET                     15
#  define SRM_MCU_ANLT_RULES_7__RX_DIE__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_MCU_ANLT_RULES_7__RX_DIE__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_MCU_ANLT_RULES_7__RX_DIE__READ(die)                SRM_MCU_ANLT_RULES_7__RX_DIE__GET(SRM_MCU_ANLT_RULES_7__READ(die))
#  define SRM_MCU_ANLT_RULES_7__RX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_7__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_7__RX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_7__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_7__RX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_7__RX_DIE__OFFSET                     10
#  define SRM_MCU_ANLT_RULES_7__RX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_MCU_ANLT_RULES_7__RX_CHANNEL__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_MCU_ANLT_RULES_7__RX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_7__RX_CHANNEL__GET(SRM_MCU_ANLT_RULES_7__READ(die))
#  define SRM_MCU_ANLT_RULES_7__RX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_7__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_7__RX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_7__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_7__RX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_7__RX_CHANNEL__OFFSET                     8
#  define SRM_MCU_ANLT_RULES_7__TX_V__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_ANLT_RULES_7__TX_V__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_ANLT_RULES_7__TX_V__READ(die)                SRM_MCU_ANLT_RULES_7__TX_V__GET(SRM_MCU_ANLT_RULES_7__READ(die))
#  define SRM_MCU_ANLT_RULES_7__TX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_7__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_7__TX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_7__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_7__TX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_7__TX_V__OFFSET                     7
#  define SRM_MCU_ANLT_RULES_7__TX_DIE__SET(rdata, fdata)         (((rdata) & 0xff83) | (((uint32_t)(fdata) << 2) & 0x7c))
#  define SRM_MCU_ANLT_RULES_7__TX_DIE__GET(rdata)                (((rdata) >> 2) & 0x1f)
#  define SRM_MCU_ANLT_RULES_7__TX_DIE__READ(die)                SRM_MCU_ANLT_RULES_7__TX_DIE__GET(SRM_MCU_ANLT_RULES_7__READ(die))
#  define SRM_MCU_ANLT_RULES_7__TX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_7__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_7__TX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_7__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_7__TX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_7__TX_DIE__OFFSET                     2
#  define SRM_MCU_ANLT_RULES_7__TX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MCU_ANLT_RULES_7__TX_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MCU_ANLT_RULES_7__TX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_7__TX_CHANNEL__GET(SRM_MCU_ANLT_RULES_7__READ(die))
#  define SRM_MCU_ANLT_RULES_7__TX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_7__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_7__TX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_7__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_7__TX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_7__TX_CHANNEL__OFFSET                     0

#define SRM_MCU_ANLT_RULES_8__ADDRESS                      0xe06f
#define SRM_MCU_ANLT_RULES_8__DEFAULT                      0x0
#define SRM_MCU_ANLT_RULES_8__READ(die)                  srm_reg_read(die, SRM_MCU_ANLT_RULES_8__ADDRESS)
#define SRM_MCU_ANLT_RULES_8__WRITE(die, data)             srm_reg_write(die, SRM_MCU_ANLT_RULES_8__ADDRESS, (data))
#define SRM_MCU_ANLT_RULES_8__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_ANLT_RULES_8__ADDRESS, (data), (mask))
#  define SRM_MCU_ANLT_RULES_8__RX_V__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_ANLT_RULES_8__RX_V__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_ANLT_RULES_8__RX_V__READ(die)                SRM_MCU_ANLT_RULES_8__RX_V__GET(SRM_MCU_ANLT_RULES_8__READ(die))
#  define SRM_MCU_ANLT_RULES_8__RX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_8__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_8__RX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_8__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_8__RX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_8__RX_V__OFFSET                     15
#  define SRM_MCU_ANLT_RULES_8__RX_DIE__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_MCU_ANLT_RULES_8__RX_DIE__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_MCU_ANLT_RULES_8__RX_DIE__READ(die)                SRM_MCU_ANLT_RULES_8__RX_DIE__GET(SRM_MCU_ANLT_RULES_8__READ(die))
#  define SRM_MCU_ANLT_RULES_8__RX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_8__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_8__RX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_8__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_8__RX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_8__RX_DIE__OFFSET                     10
#  define SRM_MCU_ANLT_RULES_8__RX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_MCU_ANLT_RULES_8__RX_CHANNEL__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_MCU_ANLT_RULES_8__RX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_8__RX_CHANNEL__GET(SRM_MCU_ANLT_RULES_8__READ(die))
#  define SRM_MCU_ANLT_RULES_8__RX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_8__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_8__RX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_8__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_8__RX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_8__RX_CHANNEL__OFFSET                     8
#  define SRM_MCU_ANLT_RULES_8__TX_V__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_ANLT_RULES_8__TX_V__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_ANLT_RULES_8__TX_V__READ(die)                SRM_MCU_ANLT_RULES_8__TX_V__GET(SRM_MCU_ANLT_RULES_8__READ(die))
#  define SRM_MCU_ANLT_RULES_8__TX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_8__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_8__TX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_8__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_8__TX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_8__TX_V__OFFSET                     7
#  define SRM_MCU_ANLT_RULES_8__TX_DIE__SET(rdata, fdata)         (((rdata) & 0xff83) | (((uint32_t)(fdata) << 2) & 0x7c))
#  define SRM_MCU_ANLT_RULES_8__TX_DIE__GET(rdata)                (((rdata) >> 2) & 0x1f)
#  define SRM_MCU_ANLT_RULES_8__TX_DIE__READ(die)                SRM_MCU_ANLT_RULES_8__TX_DIE__GET(SRM_MCU_ANLT_RULES_8__READ(die))
#  define SRM_MCU_ANLT_RULES_8__TX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_8__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_8__TX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_8__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_8__TX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_8__TX_DIE__OFFSET                     2
#  define SRM_MCU_ANLT_RULES_8__TX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MCU_ANLT_RULES_8__TX_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MCU_ANLT_RULES_8__TX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_8__TX_CHANNEL__GET(SRM_MCU_ANLT_RULES_8__READ(die))
#  define SRM_MCU_ANLT_RULES_8__TX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_8__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_8__TX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_8__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_8__TX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_8__TX_CHANNEL__OFFSET                     0

#define SRM_MCU_ANLT_RULES_9__ADDRESS                      0xe070
#define SRM_MCU_ANLT_RULES_9__DEFAULT                      0x0
#define SRM_MCU_ANLT_RULES_9__READ(die)                  srm_reg_read(die, SRM_MCU_ANLT_RULES_9__ADDRESS)
#define SRM_MCU_ANLT_RULES_9__WRITE(die, data)             srm_reg_write(die, SRM_MCU_ANLT_RULES_9__ADDRESS, (data))
#define SRM_MCU_ANLT_RULES_9__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_ANLT_RULES_9__ADDRESS, (data), (mask))
#  define SRM_MCU_ANLT_RULES_9__RX_V__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SRM_MCU_ANLT_RULES_9__RX_V__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SRM_MCU_ANLT_RULES_9__RX_V__READ(die)                SRM_MCU_ANLT_RULES_9__RX_V__GET(SRM_MCU_ANLT_RULES_9__READ(die))
#  define SRM_MCU_ANLT_RULES_9__RX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_9__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_9__RX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_9__RMW(die, (fdata)<<15, 0x8000)
#  define SRM_MCU_ANLT_RULES_9__RX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_9__RX_V__OFFSET                     15
#  define SRM_MCU_ANLT_RULES_9__RX_DIE__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SRM_MCU_ANLT_RULES_9__RX_DIE__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SRM_MCU_ANLT_RULES_9__RX_DIE__READ(die)                SRM_MCU_ANLT_RULES_9__RX_DIE__GET(SRM_MCU_ANLT_RULES_9__READ(die))
#  define SRM_MCU_ANLT_RULES_9__RX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_9__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_9__RX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_9__RMW(die, (fdata)<<10, 0x7c00)
#  define SRM_MCU_ANLT_RULES_9__RX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_9__RX_DIE__OFFSET                     10
#  define SRM_MCU_ANLT_RULES_9__RX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SRM_MCU_ANLT_RULES_9__RX_CHANNEL__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SRM_MCU_ANLT_RULES_9__RX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_9__RX_CHANNEL__GET(SRM_MCU_ANLT_RULES_9__READ(die))
#  define SRM_MCU_ANLT_RULES_9__RX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_9__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_9__RX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_9__RMW(die, (fdata)<<8, 0x300)
#  define SRM_MCU_ANLT_RULES_9__RX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_9__RX_CHANNEL__OFFSET                     8
#  define SRM_MCU_ANLT_RULES_9__TX_V__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_ANLT_RULES_9__TX_V__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_ANLT_RULES_9__TX_V__READ(die)                SRM_MCU_ANLT_RULES_9__TX_V__GET(SRM_MCU_ANLT_RULES_9__READ(die))
#  define SRM_MCU_ANLT_RULES_9__TX_V__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_9__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_9__TX_V__RMW(die, fdata)           SRM_MCU_ANLT_RULES_9__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_ANLT_RULES_9__TX_V__MASK                       0x1
#  define SRM_MCU_ANLT_RULES_9__TX_V__OFFSET                     7
#  define SRM_MCU_ANLT_RULES_9__TX_DIE__SET(rdata, fdata)         (((rdata) & 0xff83) | (((uint32_t)(fdata) << 2) & 0x7c))
#  define SRM_MCU_ANLT_RULES_9__TX_DIE__GET(rdata)                (((rdata) >> 2) & 0x1f)
#  define SRM_MCU_ANLT_RULES_9__TX_DIE__READ(die)                SRM_MCU_ANLT_RULES_9__TX_DIE__GET(SRM_MCU_ANLT_RULES_9__READ(die))
#  define SRM_MCU_ANLT_RULES_9__TX_DIE__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_9__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_9__TX_DIE__RMW(die, fdata)           SRM_MCU_ANLT_RULES_9__RMW(die, (fdata)<<2, 0x7c)
#  define SRM_MCU_ANLT_RULES_9__TX_DIE__MASK                       0x1f
#  define SRM_MCU_ANLT_RULES_9__TX_DIE__OFFSET                     2
#  define SRM_MCU_ANLT_RULES_9__TX_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MCU_ANLT_RULES_9__TX_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MCU_ANLT_RULES_9__TX_CHANNEL__READ(die)                SRM_MCU_ANLT_RULES_9__TX_CHANNEL__GET(SRM_MCU_ANLT_RULES_9__READ(die))
#  define SRM_MCU_ANLT_RULES_9__TX_CHANNEL__WRITE(die, fdata)           SRM_MCU_ANLT_RULES_9__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_9__TX_CHANNEL__RMW(die, fdata)           SRM_MCU_ANLT_RULES_9__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_ANLT_RULES_9__TX_CHANNEL__MASK                       0x3
#  define SRM_MCU_ANLT_RULES_9__TX_CHANNEL__OFFSET                     0

#define SRM_MCU_AN_RULES_CAP_0__ADDRESS                      0xe071
#define SRM_MCU_AN_RULES_CAP_0__DEFAULT                      0x0
#define SRM_MCU_AN_RULES_CAP_0__READ(die)                  srm_reg_read(die, SRM_MCU_AN_RULES_CAP_0__ADDRESS)
#define SRM_MCU_AN_RULES_CAP_0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_AN_RULES_CAP_0__ADDRESS, (data))
#define SRM_MCU_AN_RULES_CAP_0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_AN_RULES_CAP_0__ADDRESS, (data), (mask))
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY0__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY0__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY0__READ(die)                SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY0__GET(SRM_MCU_AN_RULES_CAP_0__READ(die))
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY0__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_0__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY0__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_0__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY0__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY0__OFFSET                     8
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY1__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY1__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY1__READ(die)                SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY1__GET(SRM_MCU_AN_RULES_CAP_0__READ(die))
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY1__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_0__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY1__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_0__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY1__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_0__AN_CAPABILITY1__OFFSET                     0

#define SRM_MCU_AN_RULES_CAP_1__ADDRESS                      0xe072
#define SRM_MCU_AN_RULES_CAP_1__DEFAULT                      0x0
#define SRM_MCU_AN_RULES_CAP_1__READ(die)                  srm_reg_read(die, SRM_MCU_AN_RULES_CAP_1__ADDRESS)
#define SRM_MCU_AN_RULES_CAP_1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_AN_RULES_CAP_1__ADDRESS, (data))
#define SRM_MCU_AN_RULES_CAP_1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_AN_RULES_CAP_1__ADDRESS, (data), (mask))
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY2__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY2__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY2__READ(die)                SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY2__GET(SRM_MCU_AN_RULES_CAP_1__READ(die))
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY2__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_1__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY2__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_1__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY2__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY2__OFFSET                     8
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY3__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY3__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY3__READ(die)                SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY3__GET(SRM_MCU_AN_RULES_CAP_1__READ(die))
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY3__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_1__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY3__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_1__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY3__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_1__AN_CAPABILITY3__OFFSET                     0

#define SRM_MCU_AN_RULES_CAP_2__ADDRESS                      0xe073
#define SRM_MCU_AN_RULES_CAP_2__DEFAULT                      0x0
#define SRM_MCU_AN_RULES_CAP_2__READ(die)                  srm_reg_read(die, SRM_MCU_AN_RULES_CAP_2__ADDRESS)
#define SRM_MCU_AN_RULES_CAP_2__WRITE(die, data)             srm_reg_write(die, SRM_MCU_AN_RULES_CAP_2__ADDRESS, (data))
#define SRM_MCU_AN_RULES_CAP_2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_AN_RULES_CAP_2__ADDRESS, (data), (mask))
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY5__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY5__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY5__READ(die)                SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY5__GET(SRM_MCU_AN_RULES_CAP_2__READ(die))
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY5__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_2__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY5__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_2__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY5__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY5__OFFSET                     8
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY6__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY6__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY6__READ(die)                SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY6__GET(SRM_MCU_AN_RULES_CAP_2__READ(die))
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY6__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_2__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY6__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_2__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY6__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_2__AN_CAPABILITY6__OFFSET                     0

#define SRM_MCU_AN_RULES_CAP_3__ADDRESS                      0xe074
#define SRM_MCU_AN_RULES_CAP_3__DEFAULT                      0x0
#define SRM_MCU_AN_RULES_CAP_3__READ(die)                  srm_reg_read(die, SRM_MCU_AN_RULES_CAP_3__ADDRESS)
#define SRM_MCU_AN_RULES_CAP_3__WRITE(die, data)             srm_reg_write(die, SRM_MCU_AN_RULES_CAP_3__ADDRESS, (data))
#define SRM_MCU_AN_RULES_CAP_3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_AN_RULES_CAP_3__ADDRESS, (data), (mask))
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY7__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY7__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY7__READ(die)                SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY7__GET(SRM_MCU_AN_RULES_CAP_3__READ(die))
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY7__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_3__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY7__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_3__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY7__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY7__OFFSET                     8
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY8__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY8__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY8__READ(die)                SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY8__GET(SRM_MCU_AN_RULES_CAP_3__READ(die))
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY8__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_3__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY8__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_3__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY8__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_3__AN_CAPABILITY8__OFFSET                     0

#define SRM_MCU_AN_RULES_CAP_4__ADDRESS                      0xe075
#define SRM_MCU_AN_RULES_CAP_4__DEFAULT                      0x0
#define SRM_MCU_AN_RULES_CAP_4__READ(die)                  srm_reg_read(die, SRM_MCU_AN_RULES_CAP_4__ADDRESS)
#define SRM_MCU_AN_RULES_CAP_4__WRITE(die, data)             srm_reg_write(die, SRM_MCU_AN_RULES_CAP_4__ADDRESS, (data))
#define SRM_MCU_AN_RULES_CAP_4__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_AN_RULES_CAP_4__ADDRESS, (data), (mask))
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY9__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY9__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY9__READ(die)                SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY9__GET(SRM_MCU_AN_RULES_CAP_4__READ(die))
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY9__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_4__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY9__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_4__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY9__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY9__OFFSET                     8
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY10__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY10__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY10__READ(die)                SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY10__GET(SRM_MCU_AN_RULES_CAP_4__READ(die))
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY10__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_4__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY10__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_4__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY10__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_4__AN_CAPABILITY10__OFFSET                     0

#define SRM_MCU_AN_RULES_CAP_5__ADDRESS                      0xe076
#define SRM_MCU_AN_RULES_CAP_5__DEFAULT                      0x0
#define SRM_MCU_AN_RULES_CAP_5__READ(die)                  srm_reg_read(die, SRM_MCU_AN_RULES_CAP_5__ADDRESS)
#define SRM_MCU_AN_RULES_CAP_5__WRITE(die, data)             srm_reg_write(die, SRM_MCU_AN_RULES_CAP_5__ADDRESS, (data))
#define SRM_MCU_AN_RULES_CAP_5__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_AN_RULES_CAP_5__ADDRESS, (data), (mask))
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY11__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY11__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY11__READ(die)                SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY11__GET(SRM_MCU_AN_RULES_CAP_5__READ(die))
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY11__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_5__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY11__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_5__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY11__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY11__OFFSET                     8
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY12__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY12__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY12__READ(die)                SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY12__GET(SRM_MCU_AN_RULES_CAP_5__READ(die))
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY12__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_5__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY12__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_5__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY12__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_5__AN_CAPABILITY12__OFFSET                     0

#define SRM_MCU_AN_RULES_CAP_6__ADDRESS                      0xe077
#define SRM_MCU_AN_RULES_CAP_6__DEFAULT                      0x0
#define SRM_MCU_AN_RULES_CAP_6__READ(die)                  srm_reg_read(die, SRM_MCU_AN_RULES_CAP_6__ADDRESS)
#define SRM_MCU_AN_RULES_CAP_6__WRITE(die, data)             srm_reg_write(die, SRM_MCU_AN_RULES_CAP_6__ADDRESS, (data))
#define SRM_MCU_AN_RULES_CAP_6__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_AN_RULES_CAP_6__ADDRESS, (data), (mask))
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY13__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY13__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY13__READ(die)                SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY13__GET(SRM_MCU_AN_RULES_CAP_6__READ(die))
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY13__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_6__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY13__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_6__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY13__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY13__OFFSET                     8
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY14__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY14__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY14__READ(die)                SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY14__GET(SRM_MCU_AN_RULES_CAP_6__READ(die))
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY14__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_6__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY14__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_6__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY14__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_6__AN_CAPABILITY14__OFFSET                     0

#define SRM_MCU_AN_RULES_CAP_7__ADDRESS                      0xe078
#define SRM_MCU_AN_RULES_CAP_7__DEFAULT                      0x0
#define SRM_MCU_AN_RULES_CAP_7__READ(die)                  srm_reg_read(die, SRM_MCU_AN_RULES_CAP_7__ADDRESS)
#define SRM_MCU_AN_RULES_CAP_7__WRITE(die, data)             srm_reg_write(die, SRM_MCU_AN_RULES_CAP_7__ADDRESS, (data))
#define SRM_MCU_AN_RULES_CAP_7__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_AN_RULES_CAP_7__ADDRESS, (data), (mask))
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY15__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY15__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY15__READ(die)                SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY15__GET(SRM_MCU_AN_RULES_CAP_7__READ(die))
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY15__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_7__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY15__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_7__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY15__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY15__OFFSET                     8
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY16__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY16__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY16__READ(die)                SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY16__GET(SRM_MCU_AN_RULES_CAP_7__READ(die))
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY16__WRITE(die, fdata)           SRM_MCU_AN_RULES_CAP_7__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY16__RMW(die, fdata)           SRM_MCU_AN_RULES_CAP_7__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY16__MASK                       0xff
#  define SRM_MCU_AN_RULES_CAP_7__AN_CAPABILITY16__OFFSET                     0

#define SRM_MCU_LT_RULES_0__ADDRESS                      0xe07d
#define SRM_MCU_LT_RULES_0__DEFAULT                      0x0
#define SRM_MCU_LT_RULES_0__READ(die)                  srm_reg_read(die, SRM_MCU_LT_RULES_0__ADDRESS)
#define SRM_MCU_LT_RULES_0__WRITE(die, data)             srm_reg_write(die, SRM_MCU_LT_RULES_0__ADDRESS, (data))
#define SRM_MCU_LT_RULES_0__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_LT_RULES_0__ADDRESS, (data), (mask))
#  define SRM_MCU_LT_RULES_0__LT_ALGORITHM__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SRM_MCU_LT_RULES_0__LT_ALGORITHM__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SRM_MCU_LT_RULES_0__LT_ALGORITHM__READ(die)                SRM_MCU_LT_RULES_0__LT_ALGORITHM__GET(SRM_MCU_LT_RULES_0__READ(die))
#  define SRM_MCU_LT_RULES_0__LT_ALGORITHM__WRITE(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_LT_RULES_0__LT_ALGORITHM__RMW(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<8, 0xff00)
#  define SRM_MCU_LT_RULES_0__LT_ALGORITHM__MASK                       0xff
#  define SRM_MCU_LT_RULES_0__LT_ALGORITHM__OFFSET                     8
#  define SRM_MCU_LT_RULES_0__LT_AUTO_INVERT__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SRM_MCU_LT_RULES_0__LT_AUTO_INVERT__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SRM_MCU_LT_RULES_0__LT_AUTO_INVERT__READ(die)                SRM_MCU_LT_RULES_0__LT_AUTO_INVERT__GET(SRM_MCU_LT_RULES_0__READ(die))
#  define SRM_MCU_LT_RULES_0__LT_AUTO_INVERT__WRITE(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_LT_RULES_0__LT_AUTO_INVERT__RMW(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<7, 0x80)
#  define SRM_MCU_LT_RULES_0__LT_AUTO_INVERT__MASK                       0x1
#  define SRM_MCU_LT_RULES_0__LT_AUTO_INVERT__OFFSET                     7
#  define SRM_MCU_LT_RULES_0__LT_BYPASS_FIR_WALK__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SRM_MCU_LT_RULES_0__LT_BYPASS_FIR_WALK__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SRM_MCU_LT_RULES_0__LT_BYPASS_FIR_WALK__READ(die)                SRM_MCU_LT_RULES_0__LT_BYPASS_FIR_WALK__GET(SRM_MCU_LT_RULES_0__READ(die))
#  define SRM_MCU_LT_RULES_0__LT_BYPASS_FIR_WALK__WRITE(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<6, 0x40)
#  define SRM_MCU_LT_RULES_0__LT_BYPASS_FIR_WALK__RMW(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<6, 0x40)
#  define SRM_MCU_LT_RULES_0__LT_BYPASS_FIR_WALK__MASK                       0x1
#  define SRM_MCU_LT_RULES_0__LT_BYPASS_FIR_WALK__OFFSET                     6
#  define SRM_MCU_LT_RULES_0__LT_HONOR_IEEE_LINK_TIME__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SRM_MCU_LT_RULES_0__LT_HONOR_IEEE_LINK_TIME__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SRM_MCU_LT_RULES_0__LT_HONOR_IEEE_LINK_TIME__READ(die)                SRM_MCU_LT_RULES_0__LT_HONOR_IEEE_LINK_TIME__GET(SRM_MCU_LT_RULES_0__READ(die))
#  define SRM_MCU_LT_RULES_0__LT_HONOR_IEEE_LINK_TIME__WRITE(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<5, 0x20)
#  define SRM_MCU_LT_RULES_0__LT_HONOR_IEEE_LINK_TIME__RMW(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<5, 0x20)
#  define SRM_MCU_LT_RULES_0__LT_HONOR_IEEE_LINK_TIME__MASK                       0x1
#  define SRM_MCU_LT_RULES_0__LT_HONOR_IEEE_LINK_TIME__OFFSET                     5
#  define SRM_MCU_LT_RULES_0__LT_CTLE_CACHE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SRM_MCU_LT_RULES_0__LT_CTLE_CACHE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SRM_MCU_LT_RULES_0__LT_CTLE_CACHE__READ(die)                SRM_MCU_LT_RULES_0__LT_CTLE_CACHE__GET(SRM_MCU_LT_RULES_0__READ(die))
#  define SRM_MCU_LT_RULES_0__LT_CTLE_CACHE__WRITE(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_LT_RULES_0__LT_CTLE_CACHE__RMW(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<4, 0x10)
#  define SRM_MCU_LT_RULES_0__LT_CTLE_CACHE__MASK                       0x1
#  define SRM_MCU_LT_RULES_0__LT_CTLE_CACHE__OFFSET                     4
#  define SRM_MCU_LT_RULES_0__LT_CTLE_TUNE__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_MCU_LT_RULES_0__LT_CTLE_TUNE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_MCU_LT_RULES_0__LT_CTLE_TUNE__READ(die)                SRM_MCU_LT_RULES_0__LT_CTLE_TUNE__GET(SRM_MCU_LT_RULES_0__READ(die))
#  define SRM_MCU_LT_RULES_0__LT_CTLE_TUNE__WRITE(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_LT_RULES_0__LT_CTLE_TUNE__RMW(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<3, 0x8)
#  define SRM_MCU_LT_RULES_0__LT_CTLE_TUNE__MASK                       0x1
#  define SRM_MCU_LT_RULES_0__LT_CTLE_TUNE__OFFSET                     3
#  define SRM_MCU_LT_RULES_0__LT_CLK_SOURCE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_MCU_LT_RULES_0__LT_CLK_SOURCE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_MCU_LT_RULES_0__LT_CLK_SOURCE__READ(die)                SRM_MCU_LT_RULES_0__LT_CLK_SOURCE__GET(SRM_MCU_LT_RULES_0__READ(die))
#  define SRM_MCU_LT_RULES_0__LT_CLK_SOURCE__WRITE(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_LT_RULES_0__LT_CLK_SOURCE__RMW(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<2, 0x4)
#  define SRM_MCU_LT_RULES_0__LT_CLK_SOURCE__MASK                       0x1
#  define SRM_MCU_LT_RULES_0__LT_CLK_SOURCE__OFFSET                     2
#  define SRM_MCU_LT_RULES_0__LT_TUNE_TERM__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_MCU_LT_RULES_0__LT_TUNE_TERM__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_MCU_LT_RULES_0__LT_TUNE_TERM__READ(die)                SRM_MCU_LT_RULES_0__LT_TUNE_TERM__GET(SRM_MCU_LT_RULES_0__READ(die))
#  define SRM_MCU_LT_RULES_0__LT_TUNE_TERM__WRITE(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_LT_RULES_0__LT_TUNE_TERM__RMW(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<1, 0x2)
#  define SRM_MCU_LT_RULES_0__LT_TUNE_TERM__MASK                       0x1
#  define SRM_MCU_LT_RULES_0__LT_TUNE_TERM__OFFSET                     1
#  define SRM_MCU_LT_RULES_0__LT_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_MCU_LT_RULES_0__LT_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_MCU_LT_RULES_0__LT_EN__READ(die)                SRM_MCU_LT_RULES_0__LT_EN__GET(SRM_MCU_LT_RULES_0__READ(die))
#  define SRM_MCU_LT_RULES_0__LT_EN__WRITE(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_LT_RULES_0__LT_EN__RMW(die, fdata)           SRM_MCU_LT_RULES_0__RMW(die, (fdata)<<0, 0x1)
#  define SRM_MCU_LT_RULES_0__LT_EN__MASK                       0x1
#  define SRM_MCU_LT_RULES_0__LT_EN__OFFSET                     0

#define SRM_MCU_LT_RULES_1__ADDRESS                      0xe07e
#define SRM_MCU_LT_RULES_1__DEFAULT                      0x0
#define SRM_MCU_LT_RULES_1__READ(die)                  srm_reg_read(die, SRM_MCU_LT_RULES_1__ADDRESS)
#define SRM_MCU_LT_RULES_1__WRITE(die, data)             srm_reg_write(die, SRM_MCU_LT_RULES_1__ADDRESS, (data))
#define SRM_MCU_LT_RULES_1__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_LT_RULES_1__ADDRESS, (data), (mask))
#  define SRM_MCU_LT_RULES_1__LT_RETRY_THRESH__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_LT_RULES_1__LT_RETRY_THRESH__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_LT_RULES_1__LT_RETRY_THRESH__READ(die)                SRM_MCU_LT_RULES_1__LT_RETRY_THRESH__GET(SRM_MCU_LT_RULES_1__READ(die))
#  define SRM_MCU_LT_RULES_1__LT_RETRY_THRESH__WRITE(die, fdata)           SRM_MCU_LT_RULES_1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_LT_RULES_1__LT_RETRY_THRESH__RMW(die, fdata)           SRM_MCU_LT_RULES_1__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_LT_RULES_1__LT_RETRY_THRESH__MASK                       0xffff
#  define SRM_MCU_LT_RULES_1__LT_RETRY_THRESH__OFFSET                     0

#define SRM_MCU_LT_RULES_2__ADDRESS                      0xe07f
#define SRM_MCU_LT_RULES_2__DEFAULT                      0x0
#define SRM_MCU_LT_RULES_2__READ(die)                  srm_reg_read(die, SRM_MCU_LT_RULES_2__ADDRESS)
#define SRM_MCU_LT_RULES_2__WRITE(die, data)             srm_reg_write(die, SRM_MCU_LT_RULES_2__ADDRESS, (data))
#define SRM_MCU_LT_RULES_2__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_LT_RULES_2__ADDRESS, (data), (mask))
#  define SRM_MCU_LT_RULES_2__LT_TARGET_SNR__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_LT_RULES_2__LT_TARGET_SNR__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_LT_RULES_2__LT_TARGET_SNR__READ(die)                SRM_MCU_LT_RULES_2__LT_TARGET_SNR__GET(SRM_MCU_LT_RULES_2__READ(die))
#  define SRM_MCU_LT_RULES_2__LT_TARGET_SNR__WRITE(die, fdata)           SRM_MCU_LT_RULES_2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_LT_RULES_2__LT_TARGET_SNR__RMW(die, fdata)           SRM_MCU_LT_RULES_2__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_LT_RULES_2__LT_TARGET_SNR__MASK                       0xffff
#  define SRM_MCU_LT_RULES_2__LT_TARGET_SNR__OFFSET                     0

#define SRM_MCU_LT_RULES_3__ADDRESS                      0xe080
#define SRM_MCU_LT_RULES_3__DEFAULT                      0x0
#define SRM_MCU_LT_RULES_3__READ(die)                  srm_reg_read(die, SRM_MCU_LT_RULES_3__ADDRESS)
#define SRM_MCU_LT_RULES_3__WRITE(die, data)             srm_reg_write(die, SRM_MCU_LT_RULES_3__ADDRESS, (data))
#define SRM_MCU_LT_RULES_3__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_LT_RULES_3__ADDRESS, (data), (mask))
#  define SRM_MCU_LT_RULES_3__LT_EXTENDED_LINK_TIME__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_LT_RULES_3__LT_EXTENDED_LINK_TIME__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_LT_RULES_3__LT_EXTENDED_LINK_TIME__READ(die)                SRM_MCU_LT_RULES_3__LT_EXTENDED_LINK_TIME__GET(SRM_MCU_LT_RULES_3__READ(die))
#  define SRM_MCU_LT_RULES_3__LT_EXTENDED_LINK_TIME__WRITE(die, fdata)           SRM_MCU_LT_RULES_3__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_LT_RULES_3__LT_EXTENDED_LINK_TIME__RMW(die, fdata)           SRM_MCU_LT_RULES_3__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_LT_RULES_3__LT_EXTENDED_LINK_TIME__MASK                       0xffff
#  define SRM_MCU_LT_RULES_3__LT_EXTENDED_LINK_TIME__OFFSET                     0

#define SRM_MCU_LT_RULES_4__ADDRESS                      0xe083
#define SRM_MCU_LT_RULES_4__DEFAULT                      0x0
#define SRM_MCU_LT_RULES_4__READ(die)                  srm_reg_read(die, SRM_MCU_LT_RULES_4__ADDRESS)
#define SRM_MCU_LT_RULES_4__WRITE(die, data)             srm_reg_write(die, SRM_MCU_LT_RULES_4__ADDRESS, (data))
#define SRM_MCU_LT_RULES_4__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_LT_RULES_4__ADDRESS, (data), (mask))
#  define SRM_MCU_LT_RULES_4__LT_ALGO_CYCLE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_LT_RULES_4__LT_ALGO_CYCLE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_LT_RULES_4__LT_ALGO_CYCLE__READ(die)                SRM_MCU_LT_RULES_4__LT_ALGO_CYCLE__GET(SRM_MCU_LT_RULES_4__READ(die))
#  define SRM_MCU_LT_RULES_4__LT_ALGO_CYCLE__WRITE(die, fdata)           SRM_MCU_LT_RULES_4__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_LT_RULES_4__LT_ALGO_CYCLE__RMW(die, fdata)           SRM_MCU_LT_RULES_4__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_LT_RULES_4__LT_ALGO_CYCLE__MASK                       0xffff
#  define SRM_MCU_LT_RULES_4__LT_ALGO_CYCLE__OFFSET                     0

#define SRM_MCU_LT_RULES_5__ADDRESS                      0xe084
#define SRM_MCU_LT_RULES_5__DEFAULT                      0x0
#define SRM_MCU_LT_RULES_5__READ(die)                  srm_reg_read(die, SRM_MCU_LT_RULES_5__ADDRESS)
#define SRM_MCU_LT_RULES_5__WRITE(die, data)             srm_reg_write(die, SRM_MCU_LT_RULES_5__ADDRESS, (data))
#define SRM_MCU_LT_RULES_5__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_LT_RULES_5__ADDRESS, (data), (mask))
#  define SRM_MCU_LT_RULES_5__LT_AUTO_RX_PRECODE_THRESH__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_MCU_LT_RULES_5__LT_AUTO_RX_PRECODE_THRESH__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_MCU_LT_RULES_5__LT_AUTO_RX_PRECODE_THRESH__READ(die)                SRM_MCU_LT_RULES_5__LT_AUTO_RX_PRECODE_THRESH__GET(SRM_MCU_LT_RULES_5__READ(die))
#  define SRM_MCU_LT_RULES_5__LT_AUTO_RX_PRECODE_THRESH__WRITE(die, fdata)           SRM_MCU_LT_RULES_5__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_LT_RULES_5__LT_AUTO_RX_PRECODE_THRESH__RMW(die, fdata)           SRM_MCU_LT_RULES_5__RMW(die, (fdata)<<0, 0xff)
#  define SRM_MCU_LT_RULES_5__LT_AUTO_RX_PRECODE_THRESH__MASK                       0xff
#  define SRM_MCU_LT_RULES_5__LT_AUTO_RX_PRECODE_THRESH__OFFSET                     0

#define SRM_MCU_LT_RULES_6__ADDRESS                      0xe07c
#define SRM_MCU_LT_RULES_6__DEFAULT                      0x0
#define SRM_MCU_LT_RULES_6__READ(die)                  srm_reg_read(die, SRM_MCU_LT_RULES_6__ADDRESS)
#define SRM_MCU_LT_RULES_6__WRITE(die, data)             srm_reg_write(die, SRM_MCU_LT_RULES_6__ADDRESS, (data))
#define SRM_MCU_LT_RULES_6__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_LT_RULES_6__ADDRESS, (data), (mask))
#  define SRM_MCU_LT_RULES_6__LT_CL136_PRESET_TYPE__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SRM_MCU_LT_RULES_6__LT_CL136_PRESET_TYPE__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SRM_MCU_LT_RULES_6__LT_CL136_PRESET_TYPE__READ(die)                SRM_MCU_LT_RULES_6__LT_CL136_PRESET_TYPE__GET(SRM_MCU_LT_RULES_6__READ(die))
#  define SRM_MCU_LT_RULES_6__LT_CL136_PRESET_TYPE__WRITE(die, fdata)           SRM_MCU_LT_RULES_6__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_LT_RULES_6__LT_CL136_PRESET_TYPE__RMW(die, fdata)           SRM_MCU_LT_RULES_6__RMW(die, (fdata)<<0, 0x3)
#  define SRM_MCU_LT_RULES_6__LT_CL136_PRESET_TYPE__MASK                       0x3
#  define SRM_MCU_LT_RULES_6__LT_CL136_PRESET_TYPE__OFFSET                     0

#define SRM_MCU_FIRMWARE_REV0_OVL__ADDRESS                      0xe045
#define SRM_MCU_FIRMWARE_REV0_OVL__DEFAULT                      0x0
#define SRM_MCU_FIRMWARE_REV0_OVL__READ(die)                  srm_reg_read(die, SRM_MCU_FIRMWARE_REV0_OVL__ADDRESS)
#define SRM_MCU_FIRMWARE_REV0_OVL__WRITE(die, data)             srm_reg_write(die, SRM_MCU_FIRMWARE_REV0_OVL__ADDRESS, (data))
#define SRM_MCU_FIRMWARE_REV0_OVL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_FIRMWARE_REV0_OVL__ADDRESS, (data), (mask))
#  define SRM_MCU_FIRMWARE_REV0_OVL__BUILD__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_FIRMWARE_REV0_OVL__BUILD__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_FIRMWARE_REV0_OVL__BUILD__READ(die)                SRM_MCU_FIRMWARE_REV0_OVL__BUILD__GET(SRM_MCU_FIRMWARE_REV0_OVL__READ(die))
#  define SRM_MCU_FIRMWARE_REV0_OVL__BUILD__WRITE(die, fdata)           SRM_MCU_FIRMWARE_REV0_OVL__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_FIRMWARE_REV0_OVL__BUILD__RMW(die, fdata)           SRM_MCU_FIRMWARE_REV0_OVL__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_FIRMWARE_REV0_OVL__BUILD__MASK                       0xffff
#  define SRM_MCU_FIRMWARE_REV0_OVL__BUILD__OFFSET                     0

#define SRM_MCU_FIRMWARE_REV1_OVL__ADDRESS                      0xe046
#define SRM_MCU_FIRMWARE_REV1_OVL__DEFAULT                      0x0
#define SRM_MCU_FIRMWARE_REV1_OVL__READ(die)                  srm_reg_read(die, SRM_MCU_FIRMWARE_REV1_OVL__ADDRESS)
#define SRM_MCU_FIRMWARE_REV1_OVL__WRITE(die, data)             srm_reg_write(die, SRM_MCU_FIRMWARE_REV1_OVL__ADDRESS, (data))
#define SRM_MCU_FIRMWARE_REV1_OVL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_FIRMWARE_REV1_OVL__ADDRESS, (data), (mask))
#  define SRM_MCU_FIRMWARE_REV1_OVL__MAJOR__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_MCU_FIRMWARE_REV1_OVL__MAJOR__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_MCU_FIRMWARE_REV1_OVL__MAJOR__READ(die)                SRM_MCU_FIRMWARE_REV1_OVL__MAJOR__GET(SRM_MCU_FIRMWARE_REV1_OVL__READ(die))
#  define SRM_MCU_FIRMWARE_REV1_OVL__MAJOR__WRITE(die, fdata)           SRM_MCU_FIRMWARE_REV1_OVL__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_MCU_FIRMWARE_REV1_OVL__MAJOR__RMW(die, fdata)           SRM_MCU_FIRMWARE_REV1_OVL__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_MCU_FIRMWARE_REV1_OVL__MAJOR__MASK                       0xf
#  define SRM_MCU_FIRMWARE_REV1_OVL__MAJOR__OFFSET                     12
#  define SRM_MCU_FIRMWARE_REV1_OVL__MINOR__SET(rdata, fdata)         (((rdata) & 0xf00f) | (((uint32_t)(fdata) << 4) & 0xff0))
#  define SRM_MCU_FIRMWARE_REV1_OVL__MINOR__GET(rdata)                (((rdata) >> 4) & 0xff)
#  define SRM_MCU_FIRMWARE_REV1_OVL__MINOR__READ(die)                SRM_MCU_FIRMWARE_REV1_OVL__MINOR__GET(SRM_MCU_FIRMWARE_REV1_OVL__READ(die))
#  define SRM_MCU_FIRMWARE_REV1_OVL__MINOR__WRITE(die, fdata)           SRM_MCU_FIRMWARE_REV1_OVL__RMW(die, (fdata)<<4, 0xff0)
#  define SRM_MCU_FIRMWARE_REV1_OVL__MINOR__RMW(die, fdata)           SRM_MCU_FIRMWARE_REV1_OVL__RMW(die, (fdata)<<4, 0xff0)
#  define SRM_MCU_FIRMWARE_REV1_OVL__MINOR__MASK                       0xff
#  define SRM_MCU_FIRMWARE_REV1_OVL__MINOR__OFFSET                     4
#  define SRM_MCU_FIRMWARE_REV1_OVL__REVISION__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_MCU_FIRMWARE_REV1_OVL__REVISION__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_MCU_FIRMWARE_REV1_OVL__REVISION__READ(die)                SRM_MCU_FIRMWARE_REV1_OVL__REVISION__GET(SRM_MCU_FIRMWARE_REV1_OVL__READ(die))
#  define SRM_MCU_FIRMWARE_REV1_OVL__REVISION__WRITE(die, fdata)           SRM_MCU_FIRMWARE_REV1_OVL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MCU_FIRMWARE_REV1_OVL__REVISION__RMW(die, fdata)           SRM_MCU_FIRMWARE_REV1_OVL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MCU_FIRMWARE_REV1_OVL__REVISION__MASK                       0xf
#  define SRM_MCU_FIRMWARE_REV1_OVL__REVISION__OFFSET                     0

#define SRM_MCU_API_INFO0_OVL__ADDRESS                      0xe04b
#define SRM_MCU_API_INFO0_OVL__DEFAULT                      0x0
#define SRM_MCU_API_INFO0_OVL__READ(die)                  srm_reg_read(die, SRM_MCU_API_INFO0_OVL__ADDRESS)
#define SRM_MCU_API_INFO0_OVL__WRITE(die, data)             srm_reg_write(die, SRM_MCU_API_INFO0_OVL__ADDRESS, (data))
#define SRM_MCU_API_INFO0_OVL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_API_INFO0_OVL__ADDRESS, (data), (mask))
#  define SRM_MCU_API_INFO0_OVL__BUILD__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_MCU_API_INFO0_OVL__BUILD__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_MCU_API_INFO0_OVL__BUILD__READ(die)                SRM_MCU_API_INFO0_OVL__BUILD__GET(SRM_MCU_API_INFO0_OVL__READ(die))
#  define SRM_MCU_API_INFO0_OVL__BUILD__WRITE(die, fdata)           SRM_MCU_API_INFO0_OVL__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_API_INFO0_OVL__BUILD__RMW(die, fdata)           SRM_MCU_API_INFO0_OVL__RMW(die, (fdata)<<0, 0xffff)
#  define SRM_MCU_API_INFO0_OVL__BUILD__MASK                       0xffff
#  define SRM_MCU_API_INFO0_OVL__BUILD__OFFSET                     0

#define SRM_MCU_API_INFO1_OVL__ADDRESS                      0xe04c
#define SRM_MCU_API_INFO1_OVL__DEFAULT                      0x0
#define SRM_MCU_API_INFO1_OVL__READ(die)                  srm_reg_read(die, SRM_MCU_API_INFO1_OVL__ADDRESS)
#define SRM_MCU_API_INFO1_OVL__WRITE(die, data)             srm_reg_write(die, SRM_MCU_API_INFO1_OVL__ADDRESS, (data))
#define SRM_MCU_API_INFO1_OVL__RMW(die, data, mask)         srm_reg_rmw(die, SRM_MCU_API_INFO1_OVL__ADDRESS, (data), (mask))
#  define SRM_MCU_API_INFO1_OVL__MAJOR__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SRM_MCU_API_INFO1_OVL__MAJOR__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SRM_MCU_API_INFO1_OVL__MAJOR__READ(die)                SRM_MCU_API_INFO1_OVL__MAJOR__GET(SRM_MCU_API_INFO1_OVL__READ(die))
#  define SRM_MCU_API_INFO1_OVL__MAJOR__WRITE(die, fdata)           SRM_MCU_API_INFO1_OVL__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_MCU_API_INFO1_OVL__MAJOR__RMW(die, fdata)           SRM_MCU_API_INFO1_OVL__RMW(die, (fdata)<<12, 0xf000)
#  define SRM_MCU_API_INFO1_OVL__MAJOR__MASK                       0xf
#  define SRM_MCU_API_INFO1_OVL__MAJOR__OFFSET                     12
#  define SRM_MCU_API_INFO1_OVL__MINOR__SET(rdata, fdata)         (((rdata) & 0xf00f) | (((uint32_t)(fdata) << 4) & 0xff0))
#  define SRM_MCU_API_INFO1_OVL__MINOR__GET(rdata)                (((rdata) >> 4) & 0xff)
#  define SRM_MCU_API_INFO1_OVL__MINOR__READ(die)                SRM_MCU_API_INFO1_OVL__MINOR__GET(SRM_MCU_API_INFO1_OVL__READ(die))
#  define SRM_MCU_API_INFO1_OVL__MINOR__WRITE(die, fdata)           SRM_MCU_API_INFO1_OVL__RMW(die, (fdata)<<4, 0xff0)
#  define SRM_MCU_API_INFO1_OVL__MINOR__RMW(die, fdata)           SRM_MCU_API_INFO1_OVL__RMW(die, (fdata)<<4, 0xff0)
#  define SRM_MCU_API_INFO1_OVL__MINOR__MASK                       0xff
#  define SRM_MCU_API_INFO1_OVL__MINOR__OFFSET                     4
#  define SRM_MCU_API_INFO1_OVL__REVISION__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_MCU_API_INFO1_OVL__REVISION__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_MCU_API_INFO1_OVL__REVISION__READ(die)                SRM_MCU_API_INFO1_OVL__REVISION__GET(SRM_MCU_API_INFO1_OVL__READ(die))
#  define SRM_MCU_API_INFO1_OVL__REVISION__WRITE(die, fdata)           SRM_MCU_API_INFO1_OVL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MCU_API_INFO1_OVL__REVISION__RMW(die, fdata)           SRM_MCU_API_INFO1_OVL__RMW(die, (fdata)<<0, 0xf)
#  define SRM_MCU_API_INFO1_OVL__REVISION__MASK                       0xf
#  define SRM_MCU_API_INFO1_OVL__REVISION__OFFSET                     0

#define SRM_ANLT_CTRL0__ADDRESS                      0x498e
#define SRM_ANLT_CTRL0__DEFAULT                      0x0
#define SRM_ANLT_CTRL0__ICOUNT                        3
#define SRM_ANLT_CTRL0__ISPAN                         0x800
#define SRM_ANLT_CTRL0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_ANLT_CTRL0__ADDRESS)
#define SRM_ANLT_CTRL0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_ANLT_CTRL0__ADDRESS)
#define SRM_ANLT_CTRL0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_ANLT_CTRL0__ADDRESS, (data))
#define SRM_ANLT_CTRL0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_ANLT_CTRL0__ADDRESS, (data), (mask))
#  define SRM_ANLT_CTRL0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_ANLT_CTRL0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_ANLT_CTRL0__VALUE__READ(die, channel)         SRM_ANLT_CTRL0__VALUE__GET(SRM_ANLT_CTRL0__READ(die, channel))
#  define SRM_ANLT_CTRL0__VALUE__WRITE(die, channel, fdata) SRM_ANLT_CTRL0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_ANLT_CTRL0__VALUE__RMW(die, channel, fdata) SRM_ANLT_CTRL0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_ANLT_CTRL0__VALUE__MASK                       0xffff
#  define SRM_ANLT_CTRL0__VALUE__OFFSET                     0

#define SRM_ANLT_CTRL1__ADDRESS                      0x498f
#define SRM_ANLT_CTRL1__DEFAULT                      0x0
#define SRM_ANLT_CTRL1__ICOUNT                        3
#define SRM_ANLT_CTRL1__ISPAN                         0x800
#define SRM_ANLT_CTRL1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_ANLT_CTRL1__ADDRESS)
#define SRM_ANLT_CTRL1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_ANLT_CTRL1__ADDRESS)
#define SRM_ANLT_CTRL1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_ANLT_CTRL1__ADDRESS, (data))
#define SRM_ANLT_CTRL1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_ANLT_CTRL1__ADDRESS, (data), (mask))
#  define SRM_ANLT_CTRL1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_ANLT_CTRL1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_ANLT_CTRL1__VALUE__READ(die, channel)         SRM_ANLT_CTRL1__VALUE__GET(SRM_ANLT_CTRL1__READ(die, channel))
#  define SRM_ANLT_CTRL1__VALUE__WRITE(die, channel, fdata) SRM_ANLT_CTRL1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_ANLT_CTRL1__VALUE__RMW(die, channel, fdata) SRM_ANLT_CTRL1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_ANLT_CTRL1__VALUE__MASK                       0xffff
#  define SRM_ANLT_CTRL1__VALUE__OFFSET                     0

#define SRM_ANLT_BCST_EMU_MASTER_STAT__ADDRESS                      0x295f
#define SRM_ANLT_BCST_EMU_MASTER_STAT__DEFAULT                      0x0
#define SRM_ANLT_BCST_EMU_MASTER_STAT__ICOUNT                        3
#define SRM_ANLT_BCST_EMU_MASTER_STAT__ISPAN                         0x800
#define SRM_ANLT_BCST_EMU_MASTER_STAT__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_ANLT_BCST_EMU_MASTER_STAT__ADDRESS)
#define SRM_ANLT_BCST_EMU_MASTER_STAT__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_ANLT_BCST_EMU_MASTER_STAT__ADDRESS)
#define SRM_ANLT_BCST_EMU_MASTER_STAT__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_ANLT_BCST_EMU_MASTER_STAT__ADDRESS, (data))
#define SRM_ANLT_BCST_EMU_MASTER_STAT__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_ANLT_BCST_EMU_MASTER_STAT__ADDRESS, (data), (mask))
#  define SRM_ANLT_BCST_EMU_MASTER_STAT__OCCP__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SRM_ANLT_BCST_EMU_MASTER_STAT__OCCP__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SRM_ANLT_BCST_EMU_MASTER_STAT__OCCP__READ(die, channel)         SRM_ANLT_BCST_EMU_MASTER_STAT__OCCP__GET(SRM_ANLT_BCST_EMU_MASTER_STAT__READ(die, channel))
#  define SRM_ANLT_BCST_EMU_MASTER_STAT__OCCP__WRITE(die, channel, fdata) SRM_ANLT_BCST_EMU_MASTER_STAT__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_ANLT_BCST_EMU_MASTER_STAT__OCCP__RMW(die, channel, fdata) SRM_ANLT_BCST_EMU_MASTER_STAT__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SRM_ANLT_BCST_EMU_MASTER_STAT__OCCP__MASK                       0xf
#  define SRM_ANLT_BCST_EMU_MASTER_STAT__OCCP__OFFSET                     0

#define SRM_LT_MSG_LT_STATUS_RX_OVRD__ADDRESS                      0x2960
#define SRM_LT_MSG_LT_STATUS_RX_OVRD__DEFAULT                      0x0
#define SRM_LT_MSG_LT_STATUS_RX_OVRD__ICOUNT                        3
#define SRM_LT_MSG_LT_STATUS_RX_OVRD__ISPAN                         0x800
#define SRM_LT_MSG_LT_STATUS_RX_OVRD__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_LT_MSG_LT_STATUS_RX_OVRD__ADDRESS)
#define SRM_LT_MSG_LT_STATUS_RX_OVRD__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_LT_MSG_LT_STATUS_RX_OVRD__ADDRESS)
#define SRM_LT_MSG_LT_STATUS_RX_OVRD__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_LT_MSG_LT_STATUS_RX_OVRD__ADDRESS, (data))
#define SRM_LT_MSG_LT_STATUS_RX_OVRD__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_LT_MSG_LT_STATUS_RX_OVRD__ADDRESS, (data), (mask))
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR_OVRD__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR_OVRD__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR_OVRD__READ(die, channel)         SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR_OVRD__GET(SRM_LT_MSG_LT_STATUS_RX_OVRD__READ(die, channel))
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR_OVRD__WRITE(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX_OVRD__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR_OVRD__RMW(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX_OVRD__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR_OVRD__MASK                       0x3
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR_OVRD__OFFSET                     14
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE_OVRD__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE_OVRD__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE_OVRD__READ(die, channel)         SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE_OVRD__GET(SRM_LT_MSG_LT_STATUS_RX_OVRD__READ(die, channel))
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE_OVRD__WRITE(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX_OVRD__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE_OVRD__RMW(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX_OVRD__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE_OVRD__MASK                       0x3
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE_OVRD__OFFSET                     12
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR__READ(die, channel)         SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR__GET(SRM_LT_MSG_LT_STATUS_RX_OVRD__READ(die, channel))
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR__WRITE(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX_OVRD__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR__RMW(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX_OVRD__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR__MASK                       0x1
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__ERR__OFFSET                     1
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE__READ(die, channel)         SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE__GET(SRM_LT_MSG_LT_STATUS_RX_OVRD__READ(die, channel))
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE__WRITE(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX_OVRD__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE__RMW(die, channel, fdata) SRM_LT_MSG_LT_STATUS_RX_OVRD__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE__MASK                       0x1
#  define SRM_LT_MSG_LT_STATUS_RX_OVRD__LT_DONE__OFFSET                     0

#define SRM_AN_STATUS__ADDRESS                      0x2a56
#define SRM_AN_STATUS__DEFAULT                      0x0
#define SRM_AN_STATUS__ICOUNT                        3
#define SRM_AN_STATUS__ISPAN                         0x800
#define SRM_AN_STATUS__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_AN_STATUS__ADDRESS)
#define SRM_AN_STATUS__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_AN_STATUS__ADDRESS)
#define SRM_AN_STATUS__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_AN_STATUS__ADDRESS, (data))
#define SRM_AN_STATUS__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_AN_STATUS__ADDRESS, (data), (mask))
#  define SRM_AN_STATUS__AN_PAGE_TYPE__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SRM_AN_STATUS__AN_PAGE_TYPE__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SRM_AN_STATUS__AN_PAGE_TYPE__READ(die, channel)         SRM_AN_STATUS__AN_PAGE_TYPE__GET(SRM_AN_STATUS__READ(die, channel))
#  define SRM_AN_STATUS__AN_PAGE_TYPE__WRITE(die, channel, fdata) SRM_AN_STATUS__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SRM_AN_STATUS__AN_PAGE_TYPE__RMW(die, channel, fdata) SRM_AN_STATUS__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SRM_AN_STATUS__AN_PAGE_TYPE__MASK                       0x3
#  define SRM_AN_STATUS__AN_PAGE_TYPE__OFFSET                     14
#  define SRM_AN_STATUS__AN_LP_AUTONEG_ABLE__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SRM_AN_STATUS__AN_LP_AUTONEG_ABLE__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SRM_AN_STATUS__AN_LP_AUTONEG_ABLE__READ(die, channel)         SRM_AN_STATUS__AN_LP_AUTONEG_ABLE__GET(SRM_AN_STATUS__READ(die, channel))
#  define SRM_AN_STATUS__AN_LP_AUTONEG_ABLE__WRITE(die, channel, fdata) SRM_AN_STATUS__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_AN_STATUS__AN_LP_AUTONEG_ABLE__RMW(die, channel, fdata) SRM_AN_STATUS__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SRM_AN_STATUS__AN_LP_AUTONEG_ABLE__MASK                       0x1
#  define SRM_AN_STATUS__AN_LP_AUTONEG_ABLE__OFFSET                     13
#  define SRM_AN_STATUS__AN_STATUS__SET(rdata, fdata)         (((rdata) & 0xe3ff) | (((uint32_t)(fdata) << 10) & 0x1c00))
#  define SRM_AN_STATUS__AN_STATUS__GET(rdata)                (((rdata) >> 10) & 0x7)
#  define SRM_AN_STATUS__AN_STATUS__READ(die, channel)         SRM_AN_STATUS__AN_STATUS__GET(SRM_AN_STATUS__READ(die, channel))
#  define SRM_AN_STATUS__AN_STATUS__WRITE(die, channel, fdata) SRM_AN_STATUS__RMW(die, (channel), (fdata)<<10, 0x1c00)
#  define SRM_AN_STATUS__AN_STATUS__RMW(die, channel, fdata) SRM_AN_STATUS__RMW(die, (channel), (fdata)<<10, 0x1c00)
#  define SRM_AN_STATUS__AN_STATUS__MASK                       0x7
#  define SRM_AN_STATUS__AN_STATUS__OFFSET                     10
#  define SRM_AN_STATUS__AN_HCD_RATE__SET(rdata, fdata)         (((rdata) & 0xfc1f) | (((uint32_t)(fdata) << 5) & 0x3e0))
#  define SRM_AN_STATUS__AN_HCD_RATE__GET(rdata)                (((rdata) >> 5) & 0x1f)
#  define SRM_AN_STATUS__AN_HCD_RATE__READ(die, channel)         SRM_AN_STATUS__AN_HCD_RATE__GET(SRM_AN_STATUS__READ(die, channel))
#  define SRM_AN_STATUS__AN_HCD_RATE__WRITE(die, channel, fdata) SRM_AN_STATUS__RMW(die, (channel), (fdata)<<5, 0x3e0)
#  define SRM_AN_STATUS__AN_HCD_RATE__RMW(die, channel, fdata) SRM_AN_STATUS__RMW(die, (channel), (fdata)<<5, 0x3e0)
#  define SRM_AN_STATUS__AN_HCD_RATE__MASK                       0x1f
#  define SRM_AN_STATUS__AN_HCD_RATE__OFFSET                     5
#  define SRM_AN_STATUS__AN_FEC__SET(rdata, fdata)         (((rdata) & 0xffe3) | (((uint32_t)(fdata) << 2) & 0x1c))
#  define SRM_AN_STATUS__AN_FEC__GET(rdata)                (((rdata) >> 2) & 0x7)
#  define SRM_AN_STATUS__AN_FEC__READ(die, channel)         SRM_AN_STATUS__AN_FEC__GET(SRM_AN_STATUS__READ(die, channel))
#  define SRM_AN_STATUS__AN_FEC__WRITE(die, channel, fdata) SRM_AN_STATUS__RMW(die, (channel), (fdata)<<2, 0x1c)
#  define SRM_AN_STATUS__AN_FEC__RMW(die, channel, fdata) SRM_AN_STATUS__RMW(die, (channel), (fdata)<<2, 0x1c)
#  define SRM_AN_STATUS__AN_FEC__MASK                       0x7
#  define SRM_AN_STATUS__AN_FEC__OFFSET                     2

#define SRM_AN_STATUS_2__ADDRESS                      0x498c
#define SRM_AN_STATUS_2__DEFAULT                      0x0
#define SRM_AN_STATUS_2__ICOUNT                        3
#define SRM_AN_STATUS_2__ISPAN                         0x800
#define SRM_AN_STATUS_2__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_AN_STATUS_2__ADDRESS)
#define SRM_AN_STATUS_2__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_AN_STATUS_2__ADDRESS)
#define SRM_AN_STATUS_2__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_AN_STATUS_2__ADDRESS, (data))
#define SRM_AN_STATUS_2__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_AN_STATUS_2__ADDRESS, (data), (mask))
#  define SRM_AN_STATUS_2__AN_ACK_NONCE_MATCH__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SRM_AN_STATUS_2__AN_ACK_NONCE_MATCH__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SRM_AN_STATUS_2__AN_ACK_NONCE_MATCH__READ(die, channel)         SRM_AN_STATUS_2__AN_ACK_NONCE_MATCH__GET(SRM_AN_STATUS_2__READ(die, channel))
#  define SRM_AN_STATUS_2__AN_ACK_NONCE_MATCH__WRITE(die, channel, fdata) SRM_AN_STATUS_2__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_AN_STATUS_2__AN_ACK_NONCE_MATCH__RMW(die, channel, fdata) SRM_AN_STATUS_2__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SRM_AN_STATUS_2__AN_ACK_NONCE_MATCH__MASK                       0x1
#  define SRM_AN_STATUS_2__AN_ACK_NONCE_MATCH__OFFSET                     3
#  define SRM_AN_STATUS_2__AN_ABILITY_MATCH__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SRM_AN_STATUS_2__AN_ABILITY_MATCH__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SRM_AN_STATUS_2__AN_ABILITY_MATCH__READ(die, channel)         SRM_AN_STATUS_2__AN_ABILITY_MATCH__GET(SRM_AN_STATUS_2__READ(die, channel))
#  define SRM_AN_STATUS_2__AN_ABILITY_MATCH__WRITE(die, channel, fdata) SRM_AN_STATUS_2__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_AN_STATUS_2__AN_ABILITY_MATCH__RMW(die, channel, fdata) SRM_AN_STATUS_2__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SRM_AN_STATUS_2__AN_ABILITY_MATCH__MASK                       0x1
#  define SRM_AN_STATUS_2__AN_ABILITY_MATCH__OFFSET                     2
#  define SRM_AN_STATUS_2__AN_CONSISTENCY_MATCH__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SRM_AN_STATUS_2__AN_CONSISTENCY_MATCH__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SRM_AN_STATUS_2__AN_CONSISTENCY_MATCH__READ(die, channel)         SRM_AN_STATUS_2__AN_CONSISTENCY_MATCH__GET(SRM_AN_STATUS_2__READ(die, channel))
#  define SRM_AN_STATUS_2__AN_CONSISTENCY_MATCH__WRITE(die, channel, fdata) SRM_AN_STATUS_2__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_AN_STATUS_2__AN_CONSISTENCY_MATCH__RMW(die, channel, fdata) SRM_AN_STATUS_2__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SRM_AN_STATUS_2__AN_CONSISTENCY_MATCH__MASK                       0x1
#  define SRM_AN_STATUS_2__AN_CONSISTENCY_MATCH__OFFSET                     1
#  define SRM_AN_STATUS_2__AN_ACK_MATCH__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SRM_AN_STATUS_2__AN_ACK_MATCH__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SRM_AN_STATUS_2__AN_ACK_MATCH__READ(die, channel)         SRM_AN_STATUS_2__AN_ACK_MATCH__GET(SRM_AN_STATUS_2__READ(die, channel))
#  define SRM_AN_STATUS_2__AN_ACK_MATCH__WRITE(die, channel, fdata) SRM_AN_STATUS_2__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_AN_STATUS_2__AN_ACK_MATCH__RMW(die, channel, fdata) SRM_AN_STATUS_2__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SRM_AN_STATUS_2__AN_ACK_MATCH__MASK                       0x1
#  define SRM_AN_STATUS_2__AN_ACK_MATCH__OFFSET                     0

#define SRM_ANLT_TSTAMP0__ADDRESS                      0x2a8c
#define SRM_ANLT_TSTAMP0__DEFAULT                      0x0
#define SRM_ANLT_TSTAMP0__ICOUNT                        3
#define SRM_ANLT_TSTAMP0__ISPAN                         0x800
#define SRM_ANLT_TSTAMP0__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_ANLT_TSTAMP0__ADDRESS)
#define SRM_ANLT_TSTAMP0__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_ANLT_TSTAMP0__ADDRESS)
#define SRM_ANLT_TSTAMP0__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_ANLT_TSTAMP0__ADDRESS, (data))
#define SRM_ANLT_TSTAMP0__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_ANLT_TSTAMP0__ADDRESS, (data), (mask))
#  define SRM_ANLT_TSTAMP0__CTRL__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SRM_ANLT_TSTAMP0__CTRL__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SRM_ANLT_TSTAMP0__CTRL__READ(die, channel)         SRM_ANLT_TSTAMP0__CTRL__GET(SRM_ANLT_TSTAMP0__READ(die, channel))
#  define SRM_ANLT_TSTAMP0__CTRL__WRITE(die, channel, fdata) SRM_ANLT_TSTAMP0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_ANLT_TSTAMP0__CTRL__RMW(die, channel, fdata) SRM_ANLT_TSTAMP0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SRM_ANLT_TSTAMP0__CTRL__MASK                       0xff
#  define SRM_ANLT_TSTAMP0__CTRL__OFFSET                     0

#define SRM_ANLT_TSTAMP1__ADDRESS                      0x2a8d
#define SRM_ANLT_TSTAMP1__DEFAULT                      0x0
#define SRM_ANLT_TSTAMP1__ICOUNT                        3
#define SRM_ANLT_TSTAMP1__ISPAN                         0x800
#define SRM_ANLT_TSTAMP1__IADDR(die, channel)           srm_reg_channel_addr(die, channel, SRM_ANLT_TSTAMP1__ADDRESS)
#define SRM_ANLT_TSTAMP1__READ(die, channel)            srm_reg_channel_read(die,   (channel), SRM_ANLT_TSTAMP1__ADDRESS)
#define SRM_ANLT_TSTAMP1__WRITE(die, channel, data)     srm_reg_channel_write(die,  (channel), SRM_ANLT_TSTAMP1__ADDRESS, (data))
#define SRM_ANLT_TSTAMP1__RMW(die, channel, data, mask) srm_reg_channel_rmw(die,    (channel), SRM_ANLT_TSTAMP1__ADDRESS, (data), (mask))
#  define SRM_ANLT_TSTAMP1__LIFETIME__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SRM_ANLT_TSTAMP1__LIFETIME__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SRM_ANLT_TSTAMP1__LIFETIME__READ(die, channel)         SRM_ANLT_TSTAMP1__LIFETIME__GET(SRM_ANLT_TSTAMP1__READ(die, channel))
#  define SRM_ANLT_TSTAMP1__LIFETIME__WRITE(die, channel, fdata) SRM_ANLT_TSTAMP1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_ANLT_TSTAMP1__LIFETIME__RMW(die, channel, fdata) SRM_ANLT_TSTAMP1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SRM_ANLT_TSTAMP1__LIFETIME__MASK                       0xffff
#  define SRM_ANLT_TSTAMP1__LIFETIME__OFFSET                     0


#ifdef __cplusplus
} // closing brace for extern "C"
#endif

#endif // __SRM_REGISTERS_H__
