library-name hw_tables

# avoid adding enable_shared_from_this as base class in serialization code
skip-base-class std::enable_shared_from_this

# prevent creation of forward declaration for bit_vector_dynamic_storage
# since it causes cereal to find 2 serialization methods for bit_vector_dynamic_storage
skip-class silicon_one::bit_vector_dynamic_storage

# no need to serialize operator classes or classes used for function return value only
skip-class silicon_one::key_less_operator
skip-class silicon_one::lpm_core_tcam_allocator::tcam_cell_location_less_operator
skip-class silicon_one::lpm_core_tcam_allocator::tcam_cell_location_hash_function
skip-class silicon_one::bucketing_tree::find_subtree_ret_data
skip-class silicon_one::tcam_entry_desc

# manually serialize structs with pointers to iterators
manual-field silicon_one::lpm_hbm_cache_manager::m_bucket_hw_index_to_hotness_group
skip-field silicon_one::lpm_hbm_cache_manager::bucket_hotness_data::hotness_group_it
skip-field silicon_one::lpm_hw_index_doubles_allocator::m_dummy_list_it # should be just default-constructed
manual-field silicon_one::lpm_hw_index_doubles_allocator::m_hw_indexes_state
skip-field silicon_one::lpm_hw_index_doubles_allocator::hw_index_state::free_list_iterator # restored when restoring m_hw_indexes_state
skip-field silicon_one::lpm_hw_index_doubles_allocator_pacific::m_dummy_list_it # should be just default-constructed
manual-field silicon_one::lpm_hw_index_doubles_allocator_pacific::m_hw_indexes_state
skip-field silicon_one::lpm_hw_index_doubles_allocator_pacific::hw_index_state::free_list_iterator # restored when restoring m_hw_indexes_state
skip-field silicon_one::bucketing_tree::m_nodes_to_rebucket

# adding implementation of serialization functions for boost::blank
%{
#include <cereal/types/boost_variant.hpp> // needed for supporting serialization of boost::variant
namespace cereal {
    template <class Archive> static void save(Archive&, const boost::blank&) {}
    template <class Archive> static void load(Archive&, boost::blank&) {}
}
%}

# lpm_device_simulator is test-only class, no need to be serialized
# in addition, it contains std::function callbacks which are not serializable.
skip-class silicon_one::lpm_device_simulator
skip-class silicon_one::lpm_device_simulator::mem_properties
skip-class silicon_one::lpm_device_simulator::l2_mems_struct
skip-class silicon_one::lpm_device_simulator::lpm_core_context

##########################################################
### TODO: need to clean up all the following!          ###
### final configurations should be above this comment! ###
##########################################################
