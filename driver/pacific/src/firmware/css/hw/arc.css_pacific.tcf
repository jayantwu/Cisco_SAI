<?xml version="1.0" encoding="UTF-8"?>
<config_list>
  <tool_config version="1.0.48" mwdt_version="K-2015.06" />
  <configuration name="BCRs" filename="bcr_contents.txt">
    <string><![CDATA[
	0x4	0x42		IDENTITY
	0x18	0x80000000	AUX_DCCM
	0x60	0x2		BCR_VER
	0x68	0x10		VECBASE_AC_BUILD
	0x6e	0x102		RF_BUILD
	0x72	0x16104		D_CACHE_BUILD
	0x74	0x504		DCCM_BUILD
	0x75	0x10104		TIMER_BUILD
	0x77	0x26104		I_CACHE_BUILD
	0x78	0x504		ICCM_BUILD
	0x7b	0x20106		MULTIPLY_BUILD
	0x7e	0x2		MINMAX_BUILD
	0x7f	0x303		BARREL_BUILD
	0xc1	0x2047402	ISA_CONFIG
	0xc5	0x2		STACK_REGION_BUILD
	0xf1	0x101		CORE_CONFIG
	0xf3	0x1010201	IRQ_BUILD
	0x208	0x10000000	AUX_ICCM
]]></string>
  </configuration>
  <configuration name="mw_compiler" filename="compile.arg">
    <string><![CDATA[
	-arcv2em
	-core2
	-HL
	-Xcode_density
	-Xmpy_option=wlh1
	-Xshift_assist
	-Xbarrel_shifter
	-Xtimer0
	-Xstack_check
	-Hccm
]]></string>
  </configuration>
  <configuration name="mw_debugger" filename="iss_config.arg">
    <string><![CDATA[
	-arcv2em 
	-core2 
	-rgf_num_banks=1 
	-rgf_num_wr_ports=2 
	-Xcode_density 
	-turbo_boost 
	-Xmpy_option=wlh1 
	-Xshift_assist 
	-Xbarrel_shifter 
	-Xtimer0 
	-Xtimer0_level=1 
	-Xstack_check 
	-interrupts=2 
	-interrupt_priorities=2 
	-ext_interrupts=1 
	-interrupt_base=0x0 
	-dcache=32768,32,2,a 
	-dcache_feature=0 
	-icache=32768,32,2,a 
	-icache_feature=0 
	-dccm_size=0x2000
	-dccm_base=0x8000_0000
	-iccm0_size=0x2000
	-iccm0_base=0x1000_0000
	-memext=0x0000_0000,0x20000
	-memext=0x0100_0000,0x20000
]]></string>
  </configuration>
  <configuration name="nSIM" filename="nsim.props">
    <string><![CDATA[
	nsim_isa_family=av2em
	nsim_isa_core=2
	arcver=0x42
	nsim_isa_rgf_num_banks=1
	nsim_isa_rgf_num_regs=32
	nsim_isa_rgf_num_wr_ports=2
	nsim_isa_big_endian=0
	nsim_isa_lpc_size=32
	nsim_isa_pc_size=32
	nsim_isa_addr_size=32
	nsim_isa_code_density_option=2
	nsim_isa_turbo_boost=1
	nsim_isa_bitscan_option=0
	nsim_isa_mpy_option=2
	nsim_isa_shift_option=3
	nsim_isa_enable_timer_0=1
	nsim_isa_timer_0_int_level=1
	nsim_isa_stack_checking=1
	nsim_isa_number_of_interrupts=2
	nsim_isa_number_of_levels=2
	nsim_isa_number_of_external_interrupts=1
	nsim_isa_intvbase_preset=0x0
	dcache=32768,32,2,a
	nsim_isa_dc_feature_level=0
	icache=32768,32,2,a
	nsim_isa_ic_feature_level=0
	dccm_size=0x2000
	dccm_base=0x8000_0000
	iccm0_size=0x2000
	iccm0_base=0x1000_0000
]]></string>
  </configuration>
  <configuration name="IDE" filename="ide.props">
    <string><![CDATA[
	processor.family=4
	processor.core_version=2
	processor.family_name=arcv2em
	processor.rgf_num_banks=1
	processor.rgf_num_wr_ports=2
	processor.endian=little
	processor.lpc_size=32
	processor.pc_size=32
	processor.addr_size=32
	processor.Xcode_density=1
	processor.Xmpy_option=wlh1
	processor.Xshift_assist=1
	processor.Xbarrel_shifter=1
	processor.Xtimer0=1
	processor.Xtimer0_level=1
	processor.Xstack_check=1
	processor.interrupts=2
	processor.interrupt_priorities=2
	processor.ext_interrupts=1
	processor.interrupt_base=0x0
	processor.dcache.size=32768
	processor.dcache.line_size=32
	processor.dcache.ways=2
	processor.dcache_feature=0
	processor.icache.size=32768
	processor.icache.line_size=32
	processor.icache.ways=2
	processor.icache_feature=0
	processor.dccm_size=0x2000
	processor.dccm_base=0x8000_0000
	processor.Hccm=1
	processor.iccm0_size=0x2000
	processor.iccm0_base=0x1000_0000
]]></string>
  </configuration>
  <configuration name="architect" filename="architect.txt">
    <string><![CDATA[
######## project_css_arc_core_without_dmi --- com.arc.templates.project.Empty.1_0 ########

# BuildHTMLDocs --- Creates custom HTML documentation in the 'docs' directory.
-build_html_docs true

# BuildSoftware --- Creates software under the Software directory.
-build_software false

# BuildTestCode --- Creates test source code under the 'tests' directory.
-build_test_code true

# BuildScripts --- Creates synthesis scripts and configuration files, which are required for hierarchy generation.
-build_scripts true

# BuildHDL --- Creates the behavioural and synthesisable HDL source code.
-build_hdl true

# CompileTestCode --- Compiles and assembles the test code.
-compile_test_code false

# GenerateStructuralHDL --- Generate the necessary structural HDL
-generate_structural_hdl true

# CompileForHDLSimulation --- Compile the HDL ready for simulation, using the selected Simulator.
-compile_hdl_for_simulation true

# BuildXCAM --- 
# When true, build the XCAM cycle accurate model from HDL.
# This happens only when the VTOC component (in the XCAM library) has been added to the design.
# 
-build_xcam true

# RunARCsyn --- Synthesize design using ARCsyn
-run_arcsyn false

# RunSEIF --- Run Synopsys Embedit Integrator Flow to generate configured memory instances
-run_seif false

# RunARCrams --- Run ARCrams on the current build, this will stitch in vendor supplied RAM models and update the synthesis and simulation environment to use the models.
-run_arcrams false

# RunARCformal --- Formal Verification using ARCformal
-run_arcformal false

# RunARCpower --- Run the Power Analysis using RTL simulation to derive the activity
-run_arcpower false

# compile_nsim_user_extensions --- Build nSIM extensions for any APEX components in the current design using their C Models.
-compile_nsim_user_extension false

# compile_translated_nsim_extensions --- Converts APEX extensions from Verilog to C++ and compiles the model for nSIM.
-compile_translated_nsim_extensions false


######## System --- com.arc.hardware.System.1_0 ########

# Create System
-create com.arc.hardware.System.1_0 System

# Testbench --- 
# Only the rascal testbench is supported, and is required by ARCtest.
# 	
-testbench rascal

# SynthesisLevel --- 
# Sets the top level module name for synthesis.  
# 
# If not using core_sys: for single-core designs, cpu_isle is used; for multicore designs, archipelago is used.
# 	
-synthesislevel cpu_isle/archipelago

# GateLevelSim --- When selected the gate level sim test code and scripts would be installed to run ARCgatesim
-gatesim true

# UserLibraryName --- The name for your HDL library
-library_name user

# OPTION_SimulatorName --- The name of the simulator you wish to use
-simulator vcs

# sim64 --- When selected, the 64-bit version of the simulator is used.  Be sure you have the 64-bit-capable simulator installed  and $ARCHITECT_ROOT/lib/linux_x86_64/ added to your LD_LIBRARY_PATH.
# The setting of this option affects the content of the generated makefile_interface_*_verilog, where * is the simulator name.
-sim64 true

# verilog_2001 --- Enable Verilog 2001 file-io syntax (if false: use pli)
-verilog_2001 true


######## ARCv2EM CCT --- cct.1_0 ########

# Create ARCv2EM CCT
-create cct.1_0 "System.ARCv2EM CCT"

# cct --- 
# 	Option used to add a CCT to the design for command-line builds
# 	Without this architect can't add this component to a build
# 	via a cmdline -create command.  
# 	with old scripts.
# 	
-cct true

# no_hostlink --- 
# This prevents the inclusion of the hostlink library when compiling
# C or C++ programs.  The resultant executable, if it contains printfs,
# will print to an internal fixed buffer __mwwrite_buf.  
# Other hostlink operations that require debugger assistance, such as file
# opens, will fail.
# 
# Hostlink references incur memory cycles at unpredictable times and 
# so can perturb cycle-timing results.  Without hostlink,
# the debugger will not in any way interfere with the target while it is running.  
# Therefore this option is useful for simulation in which you want precisely the
# same cycle timing to occur each time you run, or for accurate power consumption results.
# 	
-cct_no_hostlink false


######## BusFabric --- com.arc.hardware.ARCv2MSS.BusFabric.1_0 ########

# Create BusFabric
-create com.arc.hardware.ARCv2MSS.BusFabric.1_0 System.BusFabric

# alb_mss_fab_def_div2ref --- This specifies the clock division factor at reset. It is used for mss clock controller to generate mss fabric clock, and the value N means mss fabric is running at (1/N) x ref_clk.
-alb_mss_fab_def_div2ref 1

# alb_mss_fab_perf_transparent --- If true then there is no latency penalty cost in BusFabric for memory access transaction.
-alb_mss_fab_perf_transparent true

# alb_mss_fab_lat --- This specifies the maximum latency in the master latency units.
-alb_mss_fab_lat 0

# alb_mss_fab_def_lat --- This specifies the latency after reset for the master latency units.
-alb_mss_fab_def_lat 0

# alb_mss_ccm_base --- This specifies the base address at which the ICCM and DCCM DMIs will be placed in the memory map. The address should be divided by 4KB i.e. do not specify the lower 12 bits of the address.
-alb_mss_ccm_base 262144


######## CPUisle --- com.arc.hardware.CPU_isle.1_0 ########

# Create CPUisle
-create com.arc.hardware.CPU_isle.1_0 System.CPUisle

# unique_name --- verilog module modifier prefix
-unique_name css_arc_

# ArcNum --- The processor number as read back in the ARCNUM field of the IDENTITY register.
-arc_num 0

# instances --- 
# The number of instantiations of this core.
# 
-instances 1

# CPUFloorplan --- Floorplan giving relative placement of the RAMs  for the given configuration of ARCv2HS or ARCv2EM in this CPUisle
-cpu_floorplan create

# userCPUFloorplanPath --- Pathname of user floorplan for the CPU when using a hierarchical implementation
-usercpufloorplan_path ""

# pinLocationConstraintsFile --- Pathname+filename of the physical pin location constraints file or just "side1" (all pins on l.h.s) or "side2" (pins on top only) or "side3" (pins on r.h.s. only) or "side4" (pins on bottom only) to get a template file generated
-pin_location_constraints_file ""


######## ARCv2EM --- com.arc.hardware.ARCv2EM.1_0 ########

# Create ARCv2EM
-create com.arc.hardware.ARCv2EM.1_0 System.CPUisle.ARCv2EM

# arcv2em --- Description to follow
-arcv2em true

# def_div2ref --- This specifies the clock division factor at reset. It is used for mss clock controller to generate core clock, and the value N means core is running at (1/N) x ref_clk.
-def_div2ref 1

# addr_size --- This defines the address bus width (in bits).
-addr_size 32

# pc_size --- This defines the program counter (in bits).
-pc_size 32

# lpc_size --- This defines the size of the loop counter (in bits).
-lpc_size 32

# halt_on_reset --- This defines whether the core is halted initially on reset.
-halt_on_reset true

# byte_order --- This defines the endianness of the core.
-byte_order little

# code_density_option --- This reduces the size of program memory by adding instructions that condense commonly used instruction patterns with some marginal increase in processor gate count. The added instructions are ENTER_S, LEAVE_S, JLI_S, BI, BIH.
-code_density_option true

# bitscan_option --- This adds instructions for efficient search of bits within a 32 bit word, including normalize (NORM, NORMH, NORMW) and find first or last set bit (FFS, FLS) instructions.
-bitscan_option false

# shift_option --- The Shift ISA option adds variable and multi-length shift rotation instructions:  (0) No shift/rotation instructions (1) ASR16, ASR8, LSR8, LSL8, ROL8, ROR8 (2) ASRM, ASLM, LSRM, RORM (3) ASR16, ASR8, LSR8, LSL8, ROL8, ROR8, ASRM, ASLM, LSRM, RORM
-shift_option 3

# swap_option --- This adds two instructions used to swap half-words or bytes in a 32b word. Useful for converting between little to big endianess and vice-versa.
-swap_option false

# div_rem_option --- The DIV/REM option adds non-blocking multi-cycle implementation of integer divide/remainder functions. Added instructions are DIV, DIVU (integer divide), REM and REMU (integer divide remainder).radix2 takes 33 cycles.  radix4_enhanced takes 3 to 19 cycles per operation.
-div_rem_option none

# mpy_option --- The Multiplier ISA option allows selection between several multiplier configurations to tradeoff performance with silicon area.
# For select multiply options, when the DIV/REM option is also selected, some datapath resources will be shared between the multiply and divide pipeline to minimize total area.
# 
# Cycle count (16-bit, lower 32-bit or upper 32-bit) for the different configurations is as follows:
# <pre>
# 
# option  16/L32/U32  Instructions
# ------  ----------  ---------------------
#       
# none	  -/-/-     None
# wlh1	  1/1/1     MPYW/U, MPY/U, MPYH/U
# wlh2	  2/2/2     MPYW/U, MPY/U, MPYH/U
# wlh3	  2/3/3     MPYW/U, MPY/U, MPYH/U
# wlh4	  2/4/5     MPYW/U, MPY/U, MPYH/U
# wlh5	  5/9/9     MPYW/U, MPY/U, MPYH/U
# </pre>
# 
-mpy_option wlh1

# code_protection --- The ARC EM architecture divides the memory into 16 regions, which can be protected individually.  This feature adds a 16-bit input to the processor core, one bit per region. When the protect bit is set, the processor disables any load or store to the corresponding region.  An attempt to access a protected region raises an EV_ProtV exception.
-code_protection false

# stack_checking --- Stack checking is a mechanism for checking stack accesses and raising an exception when a stack overflow or underflow is detected.
-stack_checking true

# unaligned_option --- This enables unaligned loads and stores.
-unaligned_option false

# intvbase_preset --- This sets the interrupt vector base configuration register, VECBASE_AC_BUILD. The vector base address is aligned to a 1KB boundary, so the required address value should be divided by 1K (i.e. do not include the lower 10 bits). On reset, this register is loaded into the interrupt vector base address register, INT_VECTOR_BASE.
-intvbase_preset 0

# rgf_impl --- This defines whether the register file is implemented using flip-flops, or with a hard macro.
-rgf_impl flip_flops

# rgf_num_regs --- This defines the size (in 32b register) of the processor register file.
-rgf_num_regs 32

# rgf_wr_ports --- This defines the number of write ports on the register file.
-rgf_wr_ports 2

# rgf_num_banks --- Dual register banks are useful if Fast IRQ has been configured, but may be selected even if not.
-rgf_num_banks 1

# rgf_banked_regs --- This selects the number of registers that are replicated in the second register-file bank.
-rgf_banked_regs 32

# turbo_boost --- This enables the Turbo Boost synthesis option. By enabling this option, the achievable clock frequency is increased, but at the cost of an additional cycle latency on branch instructions.
-turbo_boost true

# infer_alu_adder --- infer: datapath is described as behavioral code: A + B
# instantiate: datapath is instantiated as a detailed multi-stage code of a carry-lookahead adder.  It is generally preferable to use the infer option and add directives for your target synthesizer. 
-infer_alu_adder infer

# infer_mpy_wtree --- infer: datapath is described as behavioral code: A * B (applies to only wlh3, wlh4 and wlh5 designs)
# instantiate: datapath is instantiated as a detailed multi-stage code of a Wallace Tree multiplier It is generally preferable to use the infer option and add directives for your target synthesizer. 
-infer_mpy_wtree instantiate

# power_domains --- Adds three separate power domains to the core, and propagates power-gate control signals to the top level of the core. Also generates UPF constraints and commands in the low-power scripts
-power_domains false

# dvfs --- Adds logic to the core to allow dynamic controlling of voltage and frequency and propagates the associated control signals to the top level of core
-dvfs false

# voltage_domains --- Creates a voltage  domain split between RAM and std cell parts to support Ultra Low Voltage on cells and generates UPF constraints
-voltage_domains false

# mem_bus_option --- The core supports three bus protocols for accessing external memory: AHB & AHB-Lite. AHB-Lite-single means instruction fetch and data access share a single AHB-Lite port. AHB-Lite-dual means separate AHB-Lite port for each initiator.
-mem_bus_option AHB

# mem_bus_reg_interface --- Specifies whether the memory bus interface is registered.
-mem_bus_reg_interface true

# has_dmp_peripheral --- This option enables the redirection of load/store accesses to one segment (1/16) of the addressable space to a dedicated peripheral bus. This offers high system integration and reduces overall system cost.
-has_dmp_peripheral false

# per_bus_option --- The core supports one bus protocol for accessing the peripheral space, when enabled: AHB-Lite.
-per_bus_option AHB-Lite

# per_bus_reg_interface --- Specifies whether the peripheral bus interface is registered.
-per_bus_reg_interface false

# clock_gating --- This enables the insertion of architectural clock gate elements in the design. By enabling this option, the clocks to various parts of the design will be disabled when the logic they drive is not in use to save power.
-clock_gating true

# prot_pipelined --- Check the box if CCM memories are configured for ECC, and you want single-bit errors to be corrected, written back to memory, and re-fetched. When unchecked, single bit errors are corrected when read from memory, but the offending memory location itself is not corrected with a writeback
-prot_pipelined true


######## DCCM --- com.arc.hardware.DCCM.1_0 ########

# Create DCCM
-create com.arc.hardware.DCCM.1_0 System.CPUisle.ARCv2EM.DCCM

# dccm_size --- This defines the size of the Data Closely Coupled Memory (DCCM) in bytes
-dccm_size 8192

# dccm_interleave --- Split DCCM into even/odd memory banks.
-dccm_interleave false

# dccm_dmi --- This enables external access through a DMI (direct memory interface) port.
-dccm_dmi false


######## Data Cache --- com.arc.hardware.Data_Cache.1_0 ########

# Create Data Cache
-create com.arc.hardware.Data_Cache.1_0 "System.CPUisle.ARCv2EM.Data Cache"

# dc_size --- This defines the total size of the Data Cache in bytes.
-dc_size 32768

# dc_ways --- This defines the number of cache ways.
-dc_ways 2

# dc_bsize --- This defines the cache line length in bytes.
-dc_bsize 32

# dc_feature_level --- Feature Level, indicates locking and debug feature level  00 = Basic cache, with no locking or debug features  01 = Lock and flush features supported  10 = Lock, flush and advanced debug features supported  11 = Reserved
-dc_feature_level 0

# dc_uncached_region --- Enable an uncached region defined by aux reg
-dc_uncached_region false


######## Debug Interface --- com.arc.hardware.Debug_Interface.1_0 ########

# Create Debug Interface
-create com.arc.hardware.Debug_Interface.1_0 "System.CPUisle.ARCv2EM.Debug Interface"

######## ICCM0 --- com.arc.hardware.ICCM0.1_0 ########

# Create ICCM0
-create com.arc.hardware.ICCM0.1_0 System.CPUisle.ARCv2EM.ICCM0

# iccm0_size --- This defines the size of ICCM0 in bytes.This ICCM has 0 wait states.
-iccm0_size 8192

# iccm0_base --- Sets the initial memory region assignment for ICCM0
-iccm0_base 1

# iccm0_wide --- Creates ICCM0 as 64b memory to reduce accesses.
-iccm0_wide false

# iccm0_dmi --- This enables external access through a DMI (direct memory interface) port.
-iccm0_dmi false


######## Instruction Cache --- com.arc.hardware.Instruction_Cache.1_0 ########

# Create Instruction Cache
-create com.arc.hardware.Instruction_Cache.1_0 "System.CPUisle.ARCv2EM.Instruction Cache"

# ic_size --- This defines the total size of the instruction cache in bytes.
-ic_size 32768

# ic_ways --- This defines the number of cache ways
-ic_ways 2

# ic_bsize --- This defines the cache line length in bytes.
-ic_bsize 32

# ic_disable_on_reset --- The instruction cache may be enabled immediately after reset, depending on this option.  If this option is enabled, the last cache operation is set to failed, and the direct cache-RAM access is enabled.  Furthermore, the instruction cache is invalidated  all cache lines are invalidated and unlocked, and the tag RAM is cleared.
-ic_disable_on_reset false

# ic_feature_level --- This defines the feature level of the cache.
-ic_feature_level 0

# ic_pwr_opt_level --- This selects power-optimization options in the micro-architecture of the instruction cache.
-ic_pwr_opt_level 0


######## Interrupt Controller --- com.arc.hardware.Interrupt_Controller.1_0 ########

# Create Interrupt Controller
-create com.arc.hardware.Interrupt_Controller.1_0 "System.CPUisle.ARCv2EM.Interrupt Controller"

# number_of_interrupts --- This is the total number of interrupts available to the core.  Some interrupts are allocated statically to a specific interrupt line (for example, timer interrupts).  For more information on Interrupt and register-file options, see DesignWare ARCv2 ISA Programmers Reference Manual.
-number_of_interrupts 2

# number_of_levels --- Priority levels in the interrupt controller.
-number_of_levels 2

# external_interrupts --- This is the total number of interrupt pins available for external system components.  This parameter must be less than the total number of interrupts.
-external_interrupts 1

# firq_option --- This enables the fast-interrupts option, (priority level 0 interrupts), which uses an alternate register bank (if configured) instead of saving the context to memory.
-firq_option false


######## JTAG Interface --- com.arc.hardware.JTAG_Interface.1_0 ########

# Create JTAG Interface
-create com.arc.hardware.JTAG_Interface.1_0 "System.CPUisle.ARCv2EM.JTAG Interface"

######## Timer 0 --- com.arc.hardware.Timer_0.1_0 ########

# Create Timer 0
-create com.arc.hardware.Timer_0.1_0 "System.CPUisle.ARCv2EM.Timer 0"

# timer_0_int_level --- This sets the interrupt level (and implicitly the priority: level 0 is highest) of timer 0.
-timer_0_int_level 1


######## ClkCtrl --- com.arc.hardware.ARCv2MSS.ClkCtrl.1_0 ########

# Create ClkCtrl
-create com.arc.hardware.ARCv2MSS.ClkCtrl.1_0 System.ClkCtrl

# alb_mss_clkctrl_base_addr --- This specifies the clock controller base address in the memory map, divided by 4KB i.e. do not specify the lower 12 bits of the address.
-alb_mss_clkctrl_base_addr 786432

# alb_mss_clkctrl_bypass_mode --- If true then all clock dividers/gaters in the clock controller are bypassed, clock ratio is not supported and the division options/registers are overriden
-alb_mss_clkctrl_bypass_mode false


######## Implementation --- com.arc.hardware.implementation.1_0 ########

# Create Implementation
-create com.arc.hardware.implementation.1_0 System.Implementation

# ClockSpeed --- Target clock speed of the system
-clock_speed 200

# DDR2_clk_Ratio --- DDR2 Clock Vs System Clock Ratio
# 2x
# 3x
# 4x
-ddr2_clk_ratio 3x

# ClockSkew --- The clock skew for the system
-clock_skew 0.2

# HoldMargin --- Margin for hold time checks
-hold_margin 0.05

# Floorplan --- Floorplan definition for relative placement of  RAMs (at CPU-level) or the placement of the rams and CPU hard cores (at multicore level)
-floorplan em6_gp

# JTAGFrequency --- Select the frequency of the JTAG clock Tck (in MHz).
# 
# The JTAG clock speed has to be less than 1/2 of the cpu clock otherwise the signals on the BVCI interface are not guaranteed to be valid.
# 
# NOTE: The RTL simulations will work when the JTAG clock frequency is set to half the CPU clock, however this may not be the case when simulating at gate level due to delays on the IO pads.
# 
# The default is set to 10 MHz so that there is no conflict when simulating with an ARCangel3 at 30MHz. (30 > 10*2)
# 
# The speed of simulation can be greatly increased by using a faster JTAG clock, but a dependency will warn if it exceeds 1/2 of the cpu clock.
# 
-jtag_tclk 10

# execution_trace_level --- 
# This traces committed instructions as they execute, and gathers statistics
# visible in the debugger for counting instructions & cycle delays.
# At the "stats" level ony the statistics are gathered and no trace is printed.
# "file" is equivalent to "full", but the results go to a trace .txt file instead.
# 
-execution_trace_level stats

# generate_ipxact --- 
# Generate ipxact.xml file describing the CPUisle or archipelago frontier
# 
-generate_ipxact false

# ipxact_relative_path_names --- 
# Use relative path names for Verilog files in the ipxact.
# Otherwise, absolute path names are used.
# 
-ipxact_relative_path_names true

# optional_encryption --- 
# When selected, encrypted RTL output is generated.
# 	
-optional_encryption false

# ignore_encrypt_license --- 
# When selected, pretend the encryption license is missing.  For testing.
# 	
-ignore_encrypt_license false

# ignore_clear_license --- 
# When selected, pretend the cleartest license is missing.  For testing.
# 	
-ignore_clear_license false


######## SRAMCtrl --- com.arc.hardware.ARCv2MSS.SRAMCtrl.1_0 ########

# Create SRAMCtrl
-create com.arc.hardware.ARCv2MSS.SRAMCtrl.1_0 System.SRAMCtrl

# alb_mss_mem_base_addr --- This specifies the memory controller base address in the memory map, divided by 4KB i.e. do not specify the lower 12 bits of the address.
-alb_mss_mem_base_addr 0

# alb_mss_mem_lat --- This specifies the maximum latency in the memory latency unit.
-alb_mss_mem_lat 0

# alb_mss_mem_def_lat --- This specifies the latency after reset for the memory latency unit.
-alb_mss_mem_def_lat 0

# alb_mss_mem_size --- This specifies size of the SRAM.
-alb_mss_mem_size 64KB

# alb_mss_mem_is_default_slave --- If true then all transactions without destination will be routed here.
-alb_mss_mem_is_default_slave true


######## Tool Configuration --- cgen.1_0 ########

# Create Tool Configuration
-create cgen.1_0 "System.Tool Configuration"

# mwdt_version --- Selects the MetaWare version to be used with the TCF file.
# Change from the default to an older or newer toolset version if you want the TCF file to be used with an older or newer version of the MetaWare tools.
-mwdt_version K-2015.06

# code_base_addr --- 
# The base address to assign to the executable code segment in the linker command file when there is no ICCM in the build.  This value is ignored when there is an ICCM.
# 
-code_base_addr 0

# data_base_addr --- 
# The base address to assign to the data segment in the linker command file when the data is not being mapped to a DCCM.  This value is ignored when the data segment is mapped to a DCCM, as in that case the base address of the DCCM memory is used.
# 
# A value of 0xffffffff means that the data segment will not be mapped to any specific address.
# 
-data_base_addr 4294967295


]]></string>
  </configuration>
  <configuration name="assembler_defines" filename="core_config.s">
    <string><![CDATA[
.ifndef __core_config_s
	.define __core_config_s, 1
	.define	core_config_cir_identity,0x0000_0042
	.define	core_config_cir_identity_chipid,0
	.define	core_config_cir_identity_arcnum,0
	.define	core_config_cir_identity_arcver,66
	.define	core_config_cir_identity_family,4
	.define	core_config_cir_identity_corever,2
	.define	core_config_cir_aux_dccm,0x8000_0000
	.define	core_config_bcr_bcr_ver,0x0000_0002
	.define	core_config_bcr_bcr_ver_version,2
	.define	core_config_bcr_vecbase_ac_build,0x0000_0010
	.define	core_config_bcr_rf_build,0x0000_0102
	.define	core_config_bcr_rf_build_version,2
	.define	core_config_bcr_rf_build_e,0
	.define	core_config_bcr_rf_build_b,0
	.define	core_config_bcr_rf_build_d,0
	.define	core_config_bcr_rf_build_r,0
	.define	core_config_bcr_rf_build_p,1
	.define	core_config_bcr_d_cache_build,0x0001_6104
	.define	core_config_bcr_d_cache_build_version,4
	.define	core_config_bcr_d_cache_build_assoc,1
	.define	core_config_bcr_d_cache_build_capacity,6
	.define	core_config_bcr_d_cache_build_bsize,1
	.define	core_config_bcr_d_cache_build_fl,0
	.define	core_config_bcr_d_cache_build_ioc,0
	.define	core_config_bcr_d_cache_build_cp,0
	.define	core_config_bcr_d_cache_build_u,0
	.define	core_config_bcr_d_cache_build_cycles,0
	.define	core_config_bcr_dccm_build,0x0000_0504
	.define	core_config_bcr_dccm_build_cycles,0
	.define	core_config_bcr_dccm_build_interleave,0
	.define	core_config_bcr_dccm_build_size1,0
	.define	core_config_bcr_dccm_build_size0,5
	.define	core_config_bcr_dccm_build_version,4
	.define	core_config_bcr_timer_build,0x0001_0104
	.define	core_config_bcr_timer_build_p1,0
	.define	core_config_bcr_timer_build_p0,1
	.define	core_config_bcr_timer_build_rtc,0
	.define	core_config_bcr_timer_build_rtsc_ver,1
	.define	core_config_bcr_timer_build_rtsc,0
	.define	core_config_bcr_timer_build_t0,1
	.define	core_config_bcr_timer_build_t1,0
	.define	core_config_bcr_timer_build_version,4
	.define	core_config_bcr_i_cache_build,0x0002_6104
	.define	core_config_bcr_i_cache_build_assoc,1
	.define	core_config_bcr_i_cache_build_version,4
	.define	core_config_bcr_i_cache_build_capacity,6
	.define	core_config_bcr_i_cache_build_bsize,2
	.define	core_config_bcr_i_cache_build_fl,0
	.define	core_config_bcr_i_cache_build_d,0
	.define	core_config_bcr_iccm_build,0x0000_0504
	.define	core_config_bcr_iccm_build_iccm1_size1,0
	.define	core_config_bcr_iccm_build_iccm0_size1,0
	.define	core_config_bcr_iccm_build_iccm1_size0,0
	.define	core_config_bcr_iccm_build_iccm0_size0,5
	.define	core_config_bcr_iccm_build_version,4
	.define	core_config_bcr_multiply_build,0x0002_0106
	.define	core_config_bcr_multiply_build_version16x16,2
	.define	core_config_bcr_multiply_build_dsp,0
	.define	core_config_bcr_multiply_build_cyc,0
	.define	core_config_bcr_multiply_build_type,1
	.define	core_config_bcr_multiply_build_version32x32,6
	.define	core_config_bcr_minmax_build,0x0000_0002
	.define	core_config_bcr_minmax_build_version,2
	.define	core_config_bcr_barrel_build,0x0000_0303
	.define	core_config_bcr_barrel_build_version,3
	.define	core_config_bcr_barrel_build_shift_option,3
	.define	core_config_bcr_isa_config,0x0204_7402
	.define	core_config_bcr_isa_config_d,0
	.define	core_config_bcr_isa_config_c,2
	.define	core_config_bcr_isa_config_l,0
	.define	core_config_bcr_isa_config_n,0
	.define	core_config_bcr_isa_config_a,0
	.define	core_config_bcr_isa_config_b,0
	.define	core_config_bcr_isa_config_addr_size,4
	.define	core_config_bcr_isa_config_lpc_size,7
	.define	core_config_bcr_isa_config_pc_size,4
	.define	core_config_bcr_isa_config_version,2
	.define	core_config_bcr_stack_region_build,0x0000_0002
	.define	core_config_bcr_core_config,0x0000_0101
	.define	core_config_bcr_core_config_turbo_boost,1
	.define	core_config_bcr_core_config_version,1
	.define	core_config_bcr_irq_build,0x0101_0201
	.define	core_config_bcr_irq_build_raz,0
	.define	core_config_bcr_irq_build_f,0
	.define	core_config_bcr_irq_build_p,1
	.define	core_config_bcr_irq_build_exts,1
	.define	core_config_bcr_irq_build_irqs,2
	.define	core_config_bcr_irq_build_version,1
	.define	core_config_cir_aux_iccm,0x1000_0000
	.define	core_config_family,4
	.define	core_config_core_version,2
	.define	core_config_family_name,"arcv2em"
	.define	core_config_rgf_num_banks,1
	.define	core_config_rgf_num_wr_ports,2
	.define	core_config_endian,"little"
	.define	core_config_lpc_size,32
	.define	core_config_pc_size,32
	.define	core_config_addr_size,32
	.define	core_config_code_density,1
	.define	core_config_turbo_boost,1
	.define	core_config_mpy_option,"wlh1"
	.define	core_config_shift_assist,1
	.define	core_config_barrel_shifter,1
	.define	core_config_timer0,1
	.define	core_config_timer0_level,1
	.define	core_config_timer0_vector,16
	.define	core_config_stack_check,1
	.define	core_config_interrupts_present,1
	.define	core_config_interrupts_number,2
	.define	core_config_interrupts_priorities,2
	.define	core_config_interrupts_externals,1
	.define	core_config_interrupts,2
	.define	core_config_interrupt_priorities,2
	.define	core_config_ext_interrupts,1
	.define	core_config_interrupts_base,0x0
	.define	core_config_dcache_present,1
	.define	core_config_dcache_size,32768
	.define	core_config_dcache_line_size,32
	.define	core_config_dcache_ways,2
	.define	core_config_dcache_feature,0
	.define	core_config_icache_present,1
	.define	core_config_icache_size,32768
	.define	core_config_icache_line_size,32
	.define	core_config_icache_ways,2
	.define	core_config_icache_feature,0
	.define	core_config_iccm_present,1
	.define	core_config_iccm0_present,1
	.define	core_config_iccm_size,8192
	.define	core_config_iccm0_size,8192
	.define	core_config_iccm_base,0x1000_0000
	.define	core_config_iccm0_base,0x1000_0000
.endif ; __core_config_s

]]></string>
  </configuration>
  <configuration name="C_defines" filename="core_config.h">
    <string><![CDATA[
#ifndef __core_config_h
	#define __core_config_h  1
	#define	core_config_cir_identity	0x0000_0042
	#define	core_config_cir_identity_chipid	0
	#define	core_config_cir_identity_arcnum	0
	#define	core_config_cir_identity_arcver	66
	#define	core_config_cir_identity_family	4
	#define	core_config_cir_identity_corever	2
	#define	core_config_cir_aux_dccm	0x8000_0000
	#define	core_config_bcr_bcr_ver	0x0000_0002
	#define	core_config_bcr_bcr_ver_version	2
	#define	core_config_bcr_vecbase_ac_build	0x0000_0010
	#define	core_config_bcr_rf_build	0x0000_0102
	#define	core_config_bcr_rf_build_version	2
	#define	core_config_bcr_rf_build_e	0
	#define	core_config_bcr_rf_build_b	0
	#define	core_config_bcr_rf_build_d	0
	#define	core_config_bcr_rf_build_r	0
	#define	core_config_bcr_rf_build_p	1
	#define	core_config_bcr_d_cache_build	0x0001_6104
	#define	core_config_bcr_d_cache_build_version	4
	#define	core_config_bcr_d_cache_build_assoc	1
	#define	core_config_bcr_d_cache_build_capacity	6
	#define	core_config_bcr_d_cache_build_bsize	1
	#define	core_config_bcr_d_cache_build_fl	0
	#define	core_config_bcr_d_cache_build_ioc	0
	#define	core_config_bcr_d_cache_build_cp	0
	#define	core_config_bcr_d_cache_build_u	0
	#define	core_config_bcr_d_cache_build_cycles	0
	#define	core_config_bcr_dccm_build	0x0000_0504
	#define	core_config_bcr_dccm_build_cycles	0
	#define	core_config_bcr_dccm_build_interleave	0
	#define	core_config_bcr_dccm_build_size1	0
	#define	core_config_bcr_dccm_build_size0	5
	#define	core_config_bcr_dccm_build_version	4
	#define	core_config_bcr_timer_build	0x0001_0104
	#define	core_config_bcr_timer_build_p1	0
	#define	core_config_bcr_timer_build_p0	1
	#define	core_config_bcr_timer_build_rtc	0
	#define	core_config_bcr_timer_build_rtsc_ver	1
	#define	core_config_bcr_timer_build_rtsc	0
	#define	core_config_bcr_timer_build_t0	1
	#define	core_config_bcr_timer_build_t1	0
	#define	core_config_bcr_timer_build_version	4
	#define	core_config_bcr_i_cache_build	0x0002_6104
	#define	core_config_bcr_i_cache_build_assoc	1
	#define	core_config_bcr_i_cache_build_version	4
	#define	core_config_bcr_i_cache_build_capacity	6
	#define	core_config_bcr_i_cache_build_bsize	2
	#define	core_config_bcr_i_cache_build_fl	0
	#define	core_config_bcr_i_cache_build_d	0
	#define	core_config_bcr_iccm_build	0x0000_0504
	#define	core_config_bcr_iccm_build_iccm1_size1	0
	#define	core_config_bcr_iccm_build_iccm0_size1	0
	#define	core_config_bcr_iccm_build_iccm1_size0	0
	#define	core_config_bcr_iccm_build_iccm0_size0	5
	#define	core_config_bcr_iccm_build_version	4
	#define	core_config_bcr_multiply_build	0x0002_0106
	#define	core_config_bcr_multiply_build_version16x16	2
	#define	core_config_bcr_multiply_build_dsp	0
	#define	core_config_bcr_multiply_build_cyc	0
	#define	core_config_bcr_multiply_build_type	1
	#define	core_config_bcr_multiply_build_version32x32	6
	#define	core_config_bcr_minmax_build	0x0000_0002
	#define	core_config_bcr_minmax_build_version	2
	#define	core_config_bcr_barrel_build	0x0000_0303
	#define	core_config_bcr_barrel_build_version	3
	#define	core_config_bcr_barrel_build_shift_option	3
	#define	core_config_bcr_isa_config	0x0204_7402
	#define	core_config_bcr_isa_config_d	0
	#define	core_config_bcr_isa_config_c	2
	#define	core_config_bcr_isa_config_l	0
	#define	core_config_bcr_isa_config_n	0
	#define	core_config_bcr_isa_config_a	0
	#define	core_config_bcr_isa_config_b	0
	#define	core_config_bcr_isa_config_addr_size	4
	#define	core_config_bcr_isa_config_lpc_size	7
	#define	core_config_bcr_isa_config_pc_size	4
	#define	core_config_bcr_isa_config_version	2
	#define	core_config_bcr_stack_region_build	0x0000_0002
	#define	core_config_bcr_core_config	0x0000_0101
	#define	core_config_bcr_core_config_turbo_boost	1
	#define	core_config_bcr_core_config_version	1
	#define	core_config_bcr_irq_build	0x0101_0201
	#define	core_config_bcr_irq_build_raz	0
	#define	core_config_bcr_irq_build_f	0
	#define	core_config_bcr_irq_build_p	1
	#define	core_config_bcr_irq_build_exts	1
	#define	core_config_bcr_irq_build_irqs	2
	#define	core_config_bcr_irq_build_version	1
	#define	core_config_cir_aux_iccm	0x1000_0000
	#define	core_config_family	4
	#define	core_config_core_version	2
	#define	core_config_family_name	"arcv2em"
	#define	core_config_rgf_num_banks	1
	#define	core_config_rgf_num_wr_ports	2
	#define	core_config_endian	"little"
	#define	core_config_lpc_size	32
	#define	core_config_pc_size	32
	#define	core_config_addr_size	32
	#define	core_config_code_density	1
	#define	core_config_turbo_boost	1
	#define	core_config_mpy_option	"wlh1"
	#define	core_config_shift_assist	1
	#define	core_config_barrel_shifter	1
	#define	core_config_timer0	1
	#define	core_config_timer0_level	1
	#define	core_config_timer0_vector	16
	#define	core_config_stack_check	1
	#define	core_config_interrupts_present	1
	#define	core_config_interrupts_number	2
	#define	core_config_interrupts_priorities	2
	#define	core_config_interrupts_externals	1
	#define	core_config_interrupts	2
	#define	core_config_interrupt_priorities	2
	#define	core_config_ext_interrupts	1
	#define	core_config_interrupts_base	0x0
	#define	core_config_dcache_present	1
	#define	core_config_dcache_size	32768
	#define	core_config_dcache_line_size	32
	#define	core_config_dcache_ways	2
	#define	core_config_dcache_feature	0
	#define	core_config_icache_present	1
	#define	core_config_icache_size	32768
	#define	core_config_icache_line_size	32
	#define	core_config_icache_ways	2
	#define	core_config_icache_feature	0
	#define	core_config_iccm_present	1
	#define	core_config_iccm0_present	1
	#define	core_config_iccm_size	8192
	#define	core_config_iccm0_size	8192
	#define	core_config_iccm_base	0x1000_0000
	#define	core_config_iccm0_base	0x1000_0000
#endif /* __core_config_h */

]]></string>
  </configuration>
  <configuration name="core" filename="core.props">
    <string><![CDATA[
	core_config.cir.identity=0x0000_0042
	core_config.cir.identity.chipid=0
	core_config.cir.identity.arcnum=0
	core_config.cir.identity.arcver=66
	core_config.cir.identity.family=4
	core_config.cir.identity.corever=2
	core_config.cir.aux_dccm=0x8000_0000
	core_config.bcr.bcr_ver=0x0000_0002
	core_config.bcr.bcr_ver.version=2
	core_config.bcr.vecbase_ac_build=0x0000_0010
	core_config.bcr.rf_build=0x0000_0102
	core_config.bcr.rf_build.version=2
	core_config.bcr.rf_build.e=0
	core_config.bcr.rf_build.b=0
	core_config.bcr.rf_build.d=0
	core_config.bcr.rf_build.r=0
	core_config.bcr.rf_build.p=1
	core_config.bcr.d_cache_build=0x0001_6104
	core_config.bcr.d_cache_build.version=4
	core_config.bcr.d_cache_build.assoc=1
	core_config.bcr.d_cache_build.capacity=6
	core_config.bcr.d_cache_build.bsize=1
	core_config.bcr.d_cache_build.fl=0
	core_config.bcr.d_cache_build.ioc=0
	core_config.bcr.d_cache_build.cp=0
	core_config.bcr.d_cache_build.u=0
	core_config.bcr.d_cache_build.cycles=0
	core_config.bcr.dccm_build=0x0000_0504
	core_config.bcr.dccm_build.cycles=0
	core_config.bcr.dccm_build.interleave=0
	core_config.bcr.dccm_build.size1=0
	core_config.bcr.dccm_build.size0=5
	core_config.bcr.dccm_build.version=4
	core_config.bcr.timer_build=0x0001_0104
	core_config.bcr.timer_build.p1=0
	core_config.bcr.timer_build.p0=1
	core_config.bcr.timer_build.rtc=0
	core_config.bcr.timer_build.rtsc_ver=1
	core_config.bcr.timer_build.rtsc=0
	core_config.bcr.timer_build.t0=1
	core_config.bcr.timer_build.t1=0
	core_config.bcr.timer_build.version=4
	core_config.bcr.i_cache_build=0x0002_6104
	core_config.bcr.i_cache_build.assoc=1
	core_config.bcr.i_cache_build.version=4
	core_config.bcr.i_cache_build.capacity=6
	core_config.bcr.i_cache_build.bsize=2
	core_config.bcr.i_cache_build.fl=0
	core_config.bcr.i_cache_build.d=0
	core_config.bcr.iccm_build=0x0000_0504
	core_config.bcr.iccm_build.iccm1_size1=0
	core_config.bcr.iccm_build.iccm0_size1=0
	core_config.bcr.iccm_build.iccm1_size0=0
	core_config.bcr.iccm_build.iccm0_size0=5
	core_config.bcr.iccm_build.version=4
	core_config.bcr.multiply_build=0x0002_0106
	core_config.bcr.multiply_build.version16x16=2
	core_config.bcr.multiply_build.dsp=0
	core_config.bcr.multiply_build.cyc=0
	core_config.bcr.multiply_build.type=1
	core_config.bcr.multiply_build.version32x32=6
	core_config.bcr.minmax_build=0x0000_0002
	core_config.bcr.minmax_build.version=2
	core_config.bcr.barrel_build=0x0000_0303
	core_config.bcr.barrel_build.version=3
	core_config.bcr.barrel_build.shift_option=3
	core_config.bcr.isa_config=0x0204_7402
	core_config.bcr.isa_config.d=0
	core_config.bcr.isa_config.c=2
	core_config.bcr.isa_config.l=0
	core_config.bcr.isa_config.n=0
	core_config.bcr.isa_config.a=0
	core_config.bcr.isa_config.b=0
	core_config.bcr.isa_config.addr_size=4
	core_config.bcr.isa_config.lpc_size=7
	core_config.bcr.isa_config.pc_size=4
	core_config.bcr.isa_config.version=2
	core_config.bcr.stack_region_build=0x0000_0002
	core_config.bcr.core_config=0x0000_0101
	core_config.bcr.core_config.turbo_boost=1
	core_config.bcr.core_config.version=1
	core_config.bcr.irq_build=0x0101_0201
	core_config.bcr.irq_build.raz=0
	core_config.bcr.irq_build.f=0
	core_config.bcr.irq_build.p=1
	core_config.bcr.irq_build.exts=1
	core_config.bcr.irq_build.irqs=2
	core_config.bcr.irq_build.version=1
	core_config.cir.aux_iccm=0x1000_0000
	core_config.family=4
	core_config.core_version=2
	core_config.family_name=arcv2em
	core_config.rgf_num_banks=1
	core_config.rgf_num_wr_ports=2
	core_config.endian=little
	core_config.lpc_size=32
	core_config.pc_size=32
	core_config.addr_size=32
	core_config.code_density=1
	core_config.turbo_boost=1
	core_config.mpy_option=wlh1
	core_config.shift_assist=1
	core_config.barrel_shifter=1
	core_config.timer0=1
	core_config.timer0_level=1
	core_config.timer0.vector=16
	core_config.stack_check=1
	core_config.interrupts.present=1
	core_config.interrupts.number=2
	core_config.interrupts.priorities=2
	core_config.interrupts.externals=1
	core_config.interrupts=2
	core_config.interrupt_priorities=2
	core_config.ext_interrupts=1
	core_config.interrupts.base=0x0
	core_config.dcache.present=1
	core_config.dcache.size=32768
	core_config.dcache.line_size=32
	core_config.dcache.ways=2
	core_config.dcache_feature=0
	core_config.icache.present=1
	core_config.icache.size=32768
	core_config.icache.line_size=32
	core_config.icache.ways=2
	core_config.icache_feature=0
	core_config.iccm.present=1
	core_config.iccm0.present=1
	core_config.iccm.size=8192
	core_config.iccm0.size=8192
	core_config.iccm.base=0x1000_0000
	core_config.iccm0.base=0x1000_0000
]]></string>
  </configuration>
  <configuration name="gcc_compiler" filename="gcc.arg">
    <string><![CDATA[
	-mcpu=arcem
	-mlittle-endian
	-mcode-density
	-mno-div-rem
	-mno-swap
	-mno-norm
	-mmpy-option=2
	-mbarrel-shifter
	--param l1-cache-size=32768
	--param l1-cache-line-size=32
]]></string>
  </configuration>
  <configuration name="linker_command_file" filename="link_cmd.txt">
    <string><![CDATA[
# SYSTEM memory regions indicate where external memory might be located.
#   The TCF has no specific knowledge of whether SYSTEM regions contain 
#   external memory or not.
# CCMWRAP memory regions indicate unusable portions of the address space
#   due to CCM memory wrapping into upper addresses beyond its size

MEMORY {
    # 256K for instructions
    SYSTEM0 : ORIGIN = 0x0000_0000, LENGTH = 0x0004_0000
    # 256K for ARC scratch data in CSS shared system memory
    SCRATCH : ORIGIN = 0x0004_0000, LENGTH = 0x0004_0000
    # 1.5 MB remaining not used by ARCs, see css_memory_layout.h
    UNUSED  : ORIGIN = 0x0080_0000, LENGTH = 0x0018_0000

    # 8K internal ICCM memory
    ICCM0   : ORIGIN = 0x1000_0000, LENGTH = 0x0000_2000
    CCMWRAP0: ORIGIN = 0x1000_2000, LENGTH = 0x0fff_e000

    # 8K internal DCCM memory
    DCCM    : ORIGIN = 0x8000_0000, LENGTH = 0x0000_2000
    CCMWRAP1: ORIGIN = 0x8000_2000, LENGTH = 0x0fff_e000
}

SECTIONS {
    GROUP : {
        // shared vector table, instructions and literals
        .vectors? (TEXT): {}
        .text? : { *('.text$crt*') }
        * (TEXT): {}
        * (LIT): {}
    } > SYSTEM0

    GROUP : {
        // static data, globals and heap
        .sdata?: {}
        .sbss?: {}
        * (DATA): {}
        * (BSS): {}
        .heap? ALIGN(4) SIZE(DEFINED _HEAPSIZE?_HEAPSIZE:4096): {}
        } > ICCM0

    GROUP : {
        // stack
        .stack NOLOAD ALIGN(4) SIZE(DEFINED _STACKSIZE?_STACKSIZE:8192): {}
    } > DCCM
}

# These sections will be initialize early at runtime to copy initial values
# of static and globals into the ICCM because of compile option -Hcrt_initcopy.
INITDATA .sdata, .sbss, .rodata_in_data

]]></string>
  </configuration>
  <configuration name="gnu_linker_command_file" filename="memory.x">
    <string><![CDATA[
MEMORY {
    SYSTEM0  : ORIGIN = 0x00000000, LENGTH = 0x10000000
    ICCM0    : ORIGIN = 0x10000000, LENGTH = 0x00002000
    CCMWRAP0 : ORIGIN = 0x10002000, LENGTH = 0x0fffe000
    SYSTEM1  : ORIGIN = 0x20000000, LENGTH = 0x60000000
    DCCM     : ORIGIN = 0x80000000, LENGTH = 0x00002000
    CCMWRAP1 : ORIGIN = 0x80002000, LENGTH = 0x0fffe000
    SYSTEM2  : ORIGIN = 0x90000000, LENGTH = 0x70000000
    }
REGION_ALIAS("startup", ICCM0)
REGION_ALIAS("text", ICCM0)
REGION_ALIAS("data", DCCM)
REGION_ALIAS("sdata", DCCM)
PROVIDE (__stack_top = (0x80001fff & -4 ));
PROVIDE (__end_heap =  (0x10001fff ));
]]></string>
  </configuration>
  <configuration name="apex_header" filename="apexextensions.h">
    <string><![CDATA[

/* **** DO NOT EDIT - this file is generated by ARChitect2 ****
 *
 * Description: Header file declaring the compiler extensions for apex components 
 */

#ifndef _apexextensions_H_
#define _apexextensions_H_



#endif


]]></string>
  </configuration>
  <configuration name="apex_assembly" filename="apexextensions.s">
    <string><![CDATA[

; Assembler directives for eia extensions in this design

]]></string>
  </configuration>
</config_list>

